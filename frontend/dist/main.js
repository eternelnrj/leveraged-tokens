(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
module.exports={
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "quantity",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "quantity",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "1": "/home/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/ERC20.sol",
    "2": "/home/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/IERC20.sol",
    "3": "/home/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/extensions/IERC20Metadata.sol",
    "4": "/home/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/Context.sol",
    "7": "contracts/LeveragedTrading.sol"
  },
  "ast": {
    "absolutePath": "contracts/LeveragedTrading.sol",
    "exportedSymbols": {
      "AggregatorV3Interface": [
        1786
      ],
      "BTCDOWN": [
        124
      ],
      "BTCUP": [
        80
      ],
      "Context": [
        1807
      ],
      "ERC20": [
        1428
      ],
      "IERC20": [
        36
      ],
      "LeveragedTrading": [
        778
      ],
      "Ownable": [
        882
      ],
      "SafeMath": [
        1740
      ]
    },
    "id": 779,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:7"
      },
      {
        "absolutePath": "/home/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 779,
        "sourceUnit": 1429,
        "src": "57:68:7",
        "symbolAliases": [
          {
            "foreign": {
              "id": 2,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "65:5:7",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/alex/.brownie/packages/smartcontractkit/chainlink@1.3.0/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 779,
        "sourceUnit": 1787,
        "src": "126:76:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 779,
        "sourceUnit": 1741,
        "src": "203:57:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 6,
        "nodeType": "ImportDirective",
        "scope": 779,
        "sourceUnit": 883,
        "src": "261:52:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 36,
        "linearizedBaseContracts": [
          36
        ],
        "name": "IERC20",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "a9059cbb",
            "id": 15,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 15,
                  "src": "357:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "357:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 15,
                  "src": "376:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "376:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "356:35:7"
            },
            "returnParameters": {
              "id": 14,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 15,
                  "src": "410:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 12,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "410:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "409:6:7"
            },
            "scope": 36,
            "src": "339:77:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "23b872dd",
            "id": 26,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 22,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 26,
                  "src": "443:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "443:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 26,
                  "src": "459:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "459:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 26,
                  "src": "478:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "478:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "442:51:7"
            },
            "returnParameters": {
              "id": 25,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 26,
                  "src": "512:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 23,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "512:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "511:6:7"
            },
            "scope": 36,
            "src": "421:97:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "095ea7b3",
            "id": 35,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 35,
                  "src": "540:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "540:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 35,
                  "src": "557:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "557:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "539:33:7"
            },
            "returnParameters": {
              "id": 34,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 35,
                  "src": "591:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "591:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "590:6:7"
            },
            "scope": 36,
            "src": "523:74:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 779,
        "src": "316:283:7"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 37,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1428,
              "src": "619:5:7"
            },
            "id": 38,
            "nodeType": "InheritanceSpecifier",
            "src": "619:5:7"
          }
        ],
        "contractDependencies": [
          1428,
          1807,
          1885,
          1910
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 80,
        "linearizedBaseContracts": [
          80,
          1428,
          1910,
          1885,
          1807
        ],
        "name": "BTCUP",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 45,
              "nodeType": "Block",
              "src": "674:7:7",
              "statements": []
            },
            "id": 46,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "426974636f696e205570",
                    "id": 41,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "651:12:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_9cbc1d0721872492c3eae100dd6a7dad3b4b199dc4e72a46010b2b1c98a11964",
                      "typeString": "literal_string \"Bitcoin Up\""
                    },
                    "value": "Bitcoin Up"
                  },
                  {
                    "hexValue": "4254435550",
                    "id": 42,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "665:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_f92903022a172a42cae03bdc1621474c2ab6bc2b8980d8251e05283c61f8c975",
                      "typeString": "literal_string \"BTCUP\""
                    },
                    "value": "BTCUP"
                  }
                ],
                "id": 43,
                "modifierName": {
                  "id": 40,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1428,
                  "src": "645:5:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "645:28:7"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "642:2:7"
            },
            "returnParameters": {
              "id": 44,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "674:0:7"
            },
            "scope": 80,
            "src": "631:50:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 57,
              "nodeType": "Block",
              "src": "726:43:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 52,
                          "name": "tx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -26,
                          "src": "742:2:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_transaction",
                            "typeString": "tx"
                          }
                        },
                        "id": 53,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "origin",
                        "nodeType": "MemberAccess",
                        "src": "742:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 54,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "753:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 51,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1288,
                      "src": "736:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 55,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "736:26:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 56,
                  "nodeType": "ExpressionStatement",
                  "src": "736:26:7"
                }
              ]
            },
            "functionSelector": "a0712d68",
            "id": 58,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 49,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nodeType": "VariableDeclaration",
                  "scope": 58,
                  "src": "701:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "701:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "700:18:7"
            },
            "returnParameters": {
              "id": 50,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "726:0:7"
            },
            "scope": 80,
            "src": "687:82:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 69,
              "nodeType": "Block",
              "src": "814:43:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 64,
                          "name": "tx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -26,
                          "src": "830:2:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_transaction",
                            "typeString": "tx"
                          }
                        },
                        "id": 65,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "origin",
                        "nodeType": "MemberAccess",
                        "src": "830:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 66,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60,
                        "src": "841:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 63,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1360,
                      "src": "824:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "824:26:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68,
                  "nodeType": "ExpressionStatement",
                  "src": "824:26:7"
                }
              ]
            },
            "functionSelector": "42966c68",
            "id": 70,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 61,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "789:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "789:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "788:18:7"
            },
            "returnParameters": {
              "id": 62,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "814:0:7"
            },
            "scope": 80,
            "src": "775:82:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              957
            ],
            "body": {
              "id": 78,
              "nodeType": "Block",
              "src": "920:25:7",
              "statements": [
                {
                  "expression": {
                    "hexValue": "36",
                    "id": 76,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "937:1:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_6_by_1",
                      "typeString": "int_const 6"
                    },
                    "value": "6"
                  },
                  "functionReturnParameters": 75,
                  "id": 77,
                  "nodeType": "Return",
                  "src": "930:8:7"
                }
              ]
            },
            "functionSelector": "313ce567",
            "id": 79,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 72,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "895:8:7"
            },
            "parameters": {
              "id": 71,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "880:2:7"
            },
            "returnParameters": {
              "id": 75,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 79,
                  "src": "913:5:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 73,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "913:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "912:7:7"
            },
            "scope": 80,
            "src": "863:82:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 779,
        "src": "601:346:7"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 81,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1428,
              "src": "969:5:7"
            },
            "id": 82,
            "nodeType": "InheritanceSpecifier",
            "src": "969:5:7"
          }
        ],
        "contractDependencies": [
          1428,
          1807,
          1885,
          1910
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 124,
        "linearizedBaseContracts": [
          124,
          1428,
          1910,
          1885,
          1807
        ],
        "name": "BTCDOWN",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 89,
              "nodeType": "Block",
              "src": "1028:7:7",
              "statements": []
            },
            "id": 90,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "426974636f696e20446f776e",
                    "id": 85,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1001:14:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_165fe89d7acd7320260d3007f731660e2a452d2e9dbef2c2e44ee15c6b8bc1ec",
                      "typeString": "literal_string \"Bitcoin Down\""
                    },
                    "value": "Bitcoin Down"
                  },
                  {
                    "hexValue": "425443444f574e",
                    "id": 86,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1017:9:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_72f3d7098f717fcc170dbb6c7dad0b9049f1ed825e03177180edf7a0240d28f2",
                      "typeString": "literal_string \"BTCDOWN\""
                    },
                    "value": "BTCDOWN"
                  }
                ],
                "id": 87,
                "modifierName": {
                  "id": 84,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1428,
                  "src": "995:5:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "995:32:7"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 83,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "992:2:7"
            },
            "returnParameters": {
              "id": 88,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1028:0:7"
            },
            "scope": 124,
            "src": "981:54:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 101,
              "nodeType": "Block",
              "src": "1080:43:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 96,
                          "name": "tx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -26,
                          "src": "1096:2:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_transaction",
                            "typeString": "tx"
                          }
                        },
                        "id": 97,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "origin",
                        "nodeType": "MemberAccess",
                        "src": "1096:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 98,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92,
                        "src": "1107:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 95,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1288,
                      "src": "1090:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 99,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1090:26:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100,
                  "nodeType": "ExpressionStatement",
                  "src": "1090:26:7"
                }
              ]
            },
            "functionSelector": "a0712d68",
            "id": 102,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 93,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 92,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nodeType": "VariableDeclaration",
                  "scope": 102,
                  "src": "1055:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 91,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1055:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1054:18:7"
            },
            "returnParameters": {
              "id": 94,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1080:0:7"
            },
            "scope": 124,
            "src": "1041:82:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 113,
              "nodeType": "Block",
              "src": "1168:43:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 108,
                          "name": "tx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -26,
                          "src": "1184:2:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_transaction",
                            "typeString": "tx"
                          }
                        },
                        "id": 109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "origin",
                        "nodeType": "MemberAccess",
                        "src": "1184:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 110,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 104,
                        "src": "1195:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 107,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1360,
                      "src": "1178:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1178:26:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 112,
                  "nodeType": "ExpressionStatement",
                  "src": "1178:26:7"
                }
              ]
            },
            "functionSelector": "42966c68",
            "id": 114,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 105,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 104,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nodeType": "VariableDeclaration",
                  "scope": 114,
                  "src": "1143:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 103,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1143:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1142:18:7"
            },
            "returnParameters": {
              "id": 106,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1168:0:7"
            },
            "scope": 124,
            "src": "1129:82:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              957
            ],
            "body": {
              "id": 122,
              "nodeType": "Block",
              "src": "1274:25:7",
              "statements": [
                {
                  "expression": {
                    "hexValue": "36",
                    "id": 120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1291:1:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_6_by_1",
                      "typeString": "int_const 6"
                    },
                    "value": "6"
                  },
                  "functionReturnParameters": 119,
                  "id": 121,
                  "nodeType": "Return",
                  "src": "1284:8:7"
                }
              ]
            },
            "functionSelector": "313ce567",
            "id": 123,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 116,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1249:8:7"
            },
            "parameters": {
              "id": 115,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1234:2:7"
            },
            "returnParameters": {
              "id": 119,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 118,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 123,
                  "src": "1267:5:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 117,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1267:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1266:7:7"
            },
            "scope": 124,
            "src": "1217:82:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 779,
        "src": "949:352:7"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 125,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 882,
              "src": "1332:7:7"
            },
            "id": 126,
            "nodeType": "InheritanceSpecifier",
            "src": "1332:7:7"
          }
        ],
        "contractDependencies": [
          80,
          124,
          882,
          1807
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 778,
        "linearizedBaseContracts": [
          778,
          882,
          1807
        ],
        "name": "LeveragedTrading",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 129,
            "libraryName": {
              "id": 127,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1740,
              "src": "1352:8:7"
            },
            "nodeType": "UsingForDirective",
            "src": "1346:27:7",
            "typeName": {
              "id": 128,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1365:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "f0156e8a",
            "id": 134,
            "mutability": "mutable",
            "name": "priceBtcUp",
            "nodeType": "VariableDeclaration",
            "scope": 778,
            "src": "1379:35:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 130,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1379:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_1000000_by_1",
                "typeString": "int_const 1000000"
              },
              "id": 133,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "3130",
                "id": 131,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1407:2:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10_by_1",
                  "typeString": "int_const 10"
                },
                "value": "10"
              },
              "nodeType": "BinaryOperation",
              "operator": "**",
              "rightExpression": {
                "hexValue": "36",
                "id": 132,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1413:1:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_6_by_1",
                  "typeString": "int_const 6"
                },
                "value": "6"
              },
              "src": "1407:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000_by_1",
                "typeString": "int_const 1000000"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0c3e5343",
            "id": 139,
            "mutability": "mutable",
            "name": "priceBtcDown",
            "nodeType": "VariableDeclaration",
            "scope": 778,
            "src": "1420:37:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 135,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1420:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_1000000_by_1",
                "typeString": "int_const 1000000"
              },
              "id": 138,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "3130",
                "id": 136,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1450:2:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10_by_1",
                  "typeString": "int_const 10"
                },
                "value": "10"
              },
              "nodeType": "BinaryOperation",
              "operator": "**",
              "rightExpression": {
                "hexValue": "36",
                "id": 137,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1456:1:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_6_by_1",
                  "typeString": "int_const 6"
                },
                "value": "6"
              },
              "src": "1450:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000_by_1",
                "typeString": "int_const 1000000"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "dde7be2c",
            "id": 142,
            "mutability": "mutable",
            "name": "collateralBtcUp",
            "nodeType": "VariableDeclaration",
            "scope": 778,
            "src": "1485:34:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 140,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1485:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 141,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1518:1:7",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "14d7c6d2",
            "id": 145,
            "mutability": "mutable",
            "name": "collateralBtcDown",
            "nodeType": "VariableDeclaration",
            "scope": 778,
            "src": "1547:36:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 143,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1547:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 144,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1582:1:7",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0034b9cc",
            "id": 148,
            "mutability": "mutable",
            "name": "amountBtcUp",
            "nodeType": "VariableDeclaration",
            "scope": 778,
            "src": "1590:30:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 146,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1590:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 147,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1619:1:7",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b75cbe0b",
            "id": 151,
            "mutability": "mutable",
            "name": "amountBtcDown",
            "nodeType": "VariableDeclaration",
            "scope": 778,
            "src": "1650:32:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 149,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1650:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 150,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1681:1:7",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f4352c57",
            "id": 154,
            "mutability": "mutable",
            "name": "lastBtcPrice",
            "nodeType": "VariableDeclaration",
            "scope": 778,
            "src": "1711:31:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 152,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1711:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 153,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1741:1:7",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3074fff7",
            "id": 157,
            "mutability": "mutable",
            "name": "poolIsInitiated",
            "nodeType": "VariableDeclaration",
            "scope": 778,
            "src": "1792:35:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 155,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1792:4:7",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 156,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1822:5:7",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 160,
            "mutability": "mutable",
            "name": "addressUsdc",
            "nodeType": "VariableDeclaration",
            "scope": 778,
            "src": "1834:64:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 158,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1834:7:7",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307862376134463345393039374330386441303935313762356142383737463761393137323234656465",
              "id": 159,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1856:42:7",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xb7a4F3E9097C08dA09517b5aB877F7a917224ede"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 163,
            "mutability": "mutable",
            "name": "addressBtcUSDFeed",
            "nodeType": "VariableDeclaration",
            "scope": 778,
            "src": "1964:71:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 161,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1964:7:7",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307836313335623133333235626643344230303237384234616243356532306262636532443635383065",
              "id": 162,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1993:42:7",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x6135b13325bfC4B00278B4abC5e20bbce2D6580e"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 170,
            "mutability": "mutable",
            "name": "btcUp",
            "nodeType": "VariableDeclaration",
            "scope": 778,
            "src": "2110:25:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_BTCUP_$80",
              "typeString": "contract BTCUP"
            },
            "typeName": {
              "id": 165,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 164,
                "name": "BTCUP",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 80,
                "src": "2110:5:7"
              },
              "referencedDeclaration": 80,
              "src": "2110:5:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BTCUP_$80",
                "typeString": "contract BTCUP"
              }
            },
            "value": {
              "arguments": [],
              "expression": {
                "argumentTypes": [],
                "id": 168,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "nodeType": "NewExpression",
                "src": "2124:9:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_BTCUP_$80_$",
                  "typeString": "function () returns (contract BTCUP)"
                },
                "typeName": {
                  "id": 167,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 166,
                    "name": "BTCUP",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 80,
                    "src": "2128:5:7"
                  },
                  "referencedDeclaration": 80,
                  "src": "2128:5:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_BTCUP_$80",
                    "typeString": "contract BTCUP"
                  }
                }
              },
              "id": 169,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2124:11:7",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BTCUP_$80",
                "typeString": "contract BTCUP"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 177,
            "mutability": "mutable",
            "name": "btcDown",
            "nodeType": "VariableDeclaration",
            "scope": 778,
            "src": "2141:31:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_BTCDOWN_$124",
              "typeString": "contract BTCDOWN"
            },
            "typeName": {
              "id": 172,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 171,
                "name": "BTCDOWN",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 124,
                "src": "2141:7:7"
              },
              "referencedDeclaration": 124,
              "src": "2141:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BTCDOWN_$124",
                "typeString": "contract BTCDOWN"
              }
            },
            "value": {
              "arguments": [],
              "expression": {
                "argumentTypes": [],
                "id": 175,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "nodeType": "NewExpression",
                "src": "2159:11:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_BTCDOWN_$124_$",
                  "typeString": "function () returns (contract BTCDOWN)"
                },
                "typeName": {
                  "id": 174,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 173,
                    "name": "BTCDOWN",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 124,
                    "src": "2163:7:7"
                  },
                  "referencedDeclaration": 124,
                  "src": "2163:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_BTCDOWN_$124",
                    "typeString": "contract BTCDOWN"
                  }
                }
              },
              "id": 176,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2159:13:7",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BTCDOWN_$124",
                "typeString": "contract BTCDOWN"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 208,
              "nodeType": "Block",
              "src": "2239:191:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2257:16:7",
                        "subExpression": {
                          "id": 185,
                          "name": "poolIsInitiated",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 157,
                          "src": "2258:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520706f6f6c2077617320616c726561647920696e697469617465642e",
                        "id": 187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2275:33:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_580e872a0bf3ae438081ad6284342a647742aae71fdfc53b8a10245734a22e81",
                          "typeString": "literal_string \"The pool was already initiated.\""
                        },
                        "value": "The pool was already initiated."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_580e872a0bf3ae438081ad6284342a647742aae71fdfc53b8a10245734a22e81",
                          "typeString": "literal_string \"The pool was already initiated.\""
                        }
                      ],
                      "id": 184,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2249:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2249:60:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 189,
                  "nodeType": "ExpressionStatement",
                  "src": "2249:60:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "32",
                            "id": 193,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2346:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            }
                          ],
                          "expression": {
                            "id": 191,
                            "name": "amountUsdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 179,
                            "src": "2331:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 192,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1649,
                          "src": "2331:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2331:17:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 190,
                      "name": "issueBtcUp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 276,
                      "src": "2320:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2320:29:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 196,
                  "nodeType": "ExpressionStatement",
                  "src": "2320:29:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "32",
                            "id": 200,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2387:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            }
                          ],
                          "expression": {
                            "id": 198,
                            "name": "amountUsdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 179,
                            "src": "2372:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 199,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1649,
                          "src": "2372:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2372:17:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 197,
                      "name": "issueBtcDown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 343,
                      "src": "2359:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2359:31:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 203,
                  "nodeType": "ExpressionStatement",
                  "src": "2359:31:7"
                },
                {
                  "expression": {
                    "id": 206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 204,
                      "name": "poolIsInitiated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 157,
                      "src": "2401:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 205,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2419:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2401:22:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 207,
                  "nodeType": "ExpressionStatement",
                  "src": "2401:22:7"
                }
              ]
            },
            "functionSelector": "9b3075a1",
            "id": 209,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 182,
                "modifierName": {
                  "id": 181,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 825,
                  "src": "2229:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "2229:9:7"
              }
            ],
            "name": "initiatePool",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 179,
                  "mutability": "mutable",
                  "name": "amountUsdc",
                  "nodeType": "VariableDeclaration",
                  "scope": 209,
                  "src": "2202:18:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 178,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2202:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2201:20:7"
            },
            "returnParameters": {
              "id": 183,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2239:0:7"
            },
            "scope": 778,
            "src": "2180:250:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 275,
              "nodeType": "Block",
              "src": "2483:486:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 214,
                      "name": "rebalanceLeveragedTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 535,
                      "src": "2493:24:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2493:26:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 216,
                  "nodeType": "ExpressionStatement",
                  "src": "2493:26:7"
                },
                {
                  "expression": {
                    "id": 220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 217,
                      "name": "priceBtcUp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 134,
                      "src": "2538:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 218,
                        "name": "getBtcUpPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 604,
                        "src": "2551:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 219,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2551:15:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2538:28:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 221,
                  "nodeType": "ExpressionStatement",
                  "src": "2538:28:7"
                },
                {
                  "assignments": [
                    223
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 223,
                      "mutability": "mutable",
                      "name": "amountLeveragedTokens",
                      "nodeType": "VariableDeclaration",
                      "scope": 275,
                      "src": "2576:29:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 222,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2576:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 233,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 231,
                        "name": "priceBtcUp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 134,
                        "src": "2636:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_1000000_by_1",
                              "typeString": "int_const 1000000"
                            },
                            "id": 228,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 226,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2623:2:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "hexValue": "36",
                              "id": 227,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2629:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_6_by_1",
                                "typeString": "int_const 6"
                              },
                              "value": "6"
                            },
                            "src": "2623:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000_by_1",
                              "typeString": "int_const 1000000"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1000000_by_1",
                              "typeString": "int_const 1000000"
                            }
                          ],
                          "expression": {
                            "id": 224,
                            "name": "amountUsdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 211,
                            "src": "2608:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 225,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1634,
                          "src": "2608:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2608:23:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 230,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1649,
                      "src": "2608:27:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2608:39:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2576:71:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 237,
                        "name": "amountLeveragedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 223,
                        "src": "2669:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 234,
                        "name": "btcUp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 170,
                        "src": "2658:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BTCUP_$80",
                          "typeString": "contract BTCUP"
                        }
                      },
                      "id": 236,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 58,
                      "src": "2658:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2658:33:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 239,
                  "nodeType": "ExpressionStatement",
                  "src": "2658:33:7"
                },
                {
                  "expression": {
                    "id": 245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 240,
                      "name": "amountBtcUp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 148,
                      "src": "2701:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 243,
                          "name": "amountLeveragedTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 223,
                          "src": "2731:21:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 241,
                          "name": "amountBtcUp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 148,
                          "src": "2715:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1604,
                        "src": "2715:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 244,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2715:38:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2701:52:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 246,
                  "nodeType": "ExpressionStatement",
                  "src": "2701:52:7"
                },
                {
                  "expression": {
                    "id": 252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 247,
                      "name": "collateralBtcUp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 142,
                      "src": "2763:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 250,
                          "name": "amountUsdc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 211,
                          "src": "2801:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 248,
                          "name": "collateralBtcUp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 142,
                          "src": "2781:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1604,
                        "src": "2781:19:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 251,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2781:31:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2763:49:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 253,
                  "nodeType": "ExpressionStatement",
                  "src": "2763:49:7"
                },
                {
                  "assignments": [
                    256
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 256,
                      "mutability": "mutable",
                      "name": "usdc",
                      "nodeType": "VariableDeclaration",
                      "scope": 275,
                      "src": "2823:11:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$36",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 255,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 254,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 36,
                          "src": "2823:6:7"
                        },
                        "referencedDeclaration": 36,
                        "src": "2823:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$36",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 260,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 258,
                        "name": "addressUsdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 160,
                        "src": "2844:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 257,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "2837:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$36_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2837:19:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$36",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2823:33:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 264,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2892:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 265,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2892:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 268,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "2912:4:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LeveragedTrading_$778",
                                  "typeString": "contract LeveragedTrading"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LeveragedTrading_$778",
                                  "typeString": "contract LeveragedTrading"
                                }
                              ],
                              "id": 267,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2904:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 266,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2904:7:7",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 269,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2904:13:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 270,
                            "name": "amountUsdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 211,
                            "src": "2919:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 262,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 256,
                            "src": "2874:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$36",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 263,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 26,
                          "src": "2874:17:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2874:56:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520646f6e2774206861766520656e6f75676820555344432e",
                        "id": 272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2932:29:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fa81e2605579e88471722381a01380eff7db3c869a8b4d6c5142c052f717215d",
                          "typeString": "literal_string \"You don't have enough USDC.\""
                        },
                        "value": "You don't have enough USDC."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fa81e2605579e88471722381a01380eff7db3c869a8b4d6c5142c052f717215d",
                          "typeString": "literal_string \"You don't have enough USDC.\""
                        }
                      ],
                      "id": 261,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2866:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2866:96:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 274,
                  "nodeType": "ExpressionStatement",
                  "src": "2866:96:7"
                }
              ]
            },
            "functionSelector": "f530c04a",
            "id": 276,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "issueBtcUp",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 212,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 211,
                  "mutability": "mutable",
                  "name": "amountUsdc",
                  "nodeType": "VariableDeclaration",
                  "scope": 276,
                  "src": "2456:18:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 210,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2456:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2455:20:7"
            },
            "returnParameters": {
              "id": 213,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2483:0:7"
            },
            "scope": 778,
            "src": "2436:533:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 342,
              "nodeType": "Block",
              "src": "3024:502:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 281,
                      "name": "rebalanceLeveragedTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 535,
                      "src": "3034:24:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3034:26:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 283,
                  "nodeType": "ExpressionStatement",
                  "src": "3034:26:7"
                },
                {
                  "expression": {
                    "id": 287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 284,
                      "name": "priceBtcDown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 139,
                      "src": "3079:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 285,
                        "name": "getBtcDownPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 625,
                        "src": "3094:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 286,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3094:17:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3079:32:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 288,
                  "nodeType": "ExpressionStatement",
                  "src": "3079:32:7"
                },
                {
                  "assignments": [
                    290
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 290,
                      "mutability": "mutable",
                      "name": "amountLeveragedTokens",
                      "nodeType": "VariableDeclaration",
                      "scope": 342,
                      "src": "3121:29:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 289,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3121:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 300,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 298,
                        "name": "priceBtcDown",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 139,
                        "src": "3181:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_1000000_by_1",
                              "typeString": "int_const 1000000"
                            },
                            "id": 295,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 293,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3168:2:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "hexValue": "36",
                              "id": 294,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3174:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_6_by_1",
                                "typeString": "int_const 6"
                              },
                              "value": "6"
                            },
                            "src": "3168:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000_by_1",
                              "typeString": "int_const 1000000"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1000000_by_1",
                              "typeString": "int_const 1000000"
                            }
                          ],
                          "expression": {
                            "id": 291,
                            "name": "amountUsdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 278,
                            "src": "3153:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 292,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1634,
                          "src": "3153:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3153:23:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 297,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1649,
                      "src": "3153:27:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3153:41:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3121:73:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 304,
                        "name": "amountLeveragedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 290,
                        "src": "3218:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 301,
                        "name": "btcDown",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 177,
                        "src": "3205:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BTCDOWN_$124",
                          "typeString": "contract BTCDOWN"
                        }
                      },
                      "id": 303,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 102,
                      "src": "3205:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3205:35:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 306,
                  "nodeType": "ExpressionStatement",
                  "src": "3205:35:7"
                },
                {
                  "expression": {
                    "id": 312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 307,
                      "name": "amountBtcDown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 151,
                      "src": "3250:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 310,
                          "name": "amountLeveragedTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 290,
                          "src": "3284:21:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 308,
                          "name": "amountBtcDown",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 151,
                          "src": "3266:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 309,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1604,
                        "src": "3266:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 311,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3266:40:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3250:56:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 313,
                  "nodeType": "ExpressionStatement",
                  "src": "3250:56:7"
                },
                {
                  "expression": {
                    "id": 319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 314,
                      "name": "collateralBtcDown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 145,
                      "src": "3316:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 317,
                          "name": "amountUsdc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 278,
                          "src": "3358:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 315,
                          "name": "collateralBtcDown",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 145,
                          "src": "3336:17:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1604,
                        "src": "3336:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 318,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3336:33:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3316:53:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 320,
                  "nodeType": "ExpressionStatement",
                  "src": "3316:53:7"
                },
                {
                  "assignments": [
                    323
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 323,
                      "mutability": "mutable",
                      "name": "usdc",
                      "nodeType": "VariableDeclaration",
                      "scope": 342,
                      "src": "3380:11:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$36",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 322,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 321,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 36,
                          "src": "3380:6:7"
                        },
                        "referencedDeclaration": 36,
                        "src": "3380:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$36",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 327,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 325,
                        "name": "addressUsdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 160,
                        "src": "3401:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 324,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "3394:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$36_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3394:19:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$36",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3380:33:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 331,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3449:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 332,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3449:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 335,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "3469:4:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LeveragedTrading_$778",
                                  "typeString": "contract LeveragedTrading"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LeveragedTrading_$778",
                                  "typeString": "contract LeveragedTrading"
                                }
                              ],
                              "id": 334,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3461:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 333,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3461:7:7",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 336,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3461:13:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 337,
                            "name": "amountUsdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 278,
                            "src": "3476:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 329,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 323,
                            "src": "3431:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$36",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 26,
                          "src": "3431:17:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3431:56:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520646f6e2774206861766520656e6f75676820555344432e",
                        "id": 339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3489:29:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fa81e2605579e88471722381a01380eff7db3c869a8b4d6c5142c052f717215d",
                          "typeString": "literal_string \"You don't have enough USDC.\""
                        },
                        "value": "You don't have enough USDC."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fa81e2605579e88471722381a01380eff7db3c869a8b4d6c5142c052f717215d",
                          "typeString": "literal_string \"You don't have enough USDC.\""
                        }
                      ],
                      "id": 328,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3423:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3423:96:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 341,
                  "nodeType": "ExpressionStatement",
                  "src": "3423:96:7"
                }
              ]
            },
            "functionSelector": "c46d4f09",
            "id": 343,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "issueBtcDown",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 279,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 278,
                  "mutability": "mutable",
                  "name": "amountUsdc",
                  "nodeType": "VariableDeclaration",
                  "scope": 343,
                  "src": "2997:18:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 277,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2997:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2996:20:7"
            },
            "returnParameters": {
              "id": 280,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3024:0:7"
            },
            "scope": 778,
            "src": "2975:551:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 405,
              "nodeType": "Block",
              "src": "3591:457:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 348,
                      "name": "rebalanceLeveragedTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 535,
                      "src": "3601:24:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3601:26:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 350,
                  "nodeType": "ExpressionStatement",
                  "src": "3601:26:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 354,
                        "name": "amountLeveragedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 345,
                        "src": "3648:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 351,
                        "name": "btcUp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 170,
                        "src": "3637:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BTCUP_$80",
                          "typeString": "contract BTCUP"
                        }
                      },
                      "id": 353,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 70,
                      "src": "3637:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3637:33:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 356,
                  "nodeType": "ExpressionStatement",
                  "src": "3637:33:7"
                },
                {
                  "expression": {
                    "id": 360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 357,
                      "name": "priceBtcUp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 134,
                      "src": "3681:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 358,
                        "name": "getBtcUpPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 604,
                        "src": "3694:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 359,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3694:15:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3681:28:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 361,
                  "nodeType": "ExpressionStatement",
                  "src": "3681:28:7"
                },
                {
                  "assignments": [
                    363
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 363,
                      "mutability": "mutable",
                      "name": "amountUsdc",
                      "nodeType": "VariableDeclaration",
                      "scope": 405,
                      "src": "3719:18:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 362,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3719:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 373,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        },
                        "id": 371,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3130",
                          "id": 369,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3782:2:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "hexValue": "36",
                          "id": 370,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3788:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_6_by_1",
                            "typeString": "int_const 6"
                          },
                          "value": "6"
                        },
                        "src": "3782:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 366,
                            "name": "priceBtcUp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 134,
                            "src": "3766:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 364,
                            "name": "amountLeveragedTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 345,
                            "src": "3740:21:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1634,
                          "src": "3740:25:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3740:37:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 368,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1649,
                      "src": "3740:41:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3740:50:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3719:71:7"
                },
                {
                  "expression": {
                    "id": 379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 374,
                      "name": "amountBtcUp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 148,
                      "src": "3801:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 377,
                          "name": "amountLeveragedTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 345,
                          "src": "3831:21:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 375,
                          "name": "amountBtcUp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 148,
                          "src": "3815:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1619,
                        "src": "3815:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 378,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3815:38:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3801:52:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 380,
                  "nodeType": "ExpressionStatement",
                  "src": "3801:52:7"
                },
                {
                  "expression": {
                    "id": 386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 381,
                      "name": "collateralBtcUp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 142,
                      "src": "3863:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 384,
                          "name": "amountUsdc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 363,
                          "src": "3901:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 382,
                          "name": "collateralBtcUp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 142,
                          "src": "3881:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 383,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1619,
                        "src": "3881:19:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 385,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3881:31:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3863:49:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 387,
                  "nodeType": "ExpressionStatement",
                  "src": "3863:49:7"
                },
                {
                  "assignments": [
                    390
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 390,
                      "mutability": "mutable",
                      "name": "usdc",
                      "nodeType": "VariableDeclaration",
                      "scope": 405,
                      "src": "3923:11:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$36",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 389,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 388,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 36,
                          "src": "3923:6:7"
                        },
                        "referencedDeclaration": 36,
                        "src": "3923:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$36",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 394,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 392,
                        "name": "addressUsdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 160,
                        "src": "3944:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 391,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "3937:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$36_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3937:19:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$36",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3923:33:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 398,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3988:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 399,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3988:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 400,
                            "name": "amountUsdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 363,
                            "src": "4000:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 396,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 390,
                            "src": "3974:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$36",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 397,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 15,
                          "src": "3974:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 401,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3974:37:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f756768207573646320617661696c61626c65",
                        "id": 402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4013:27:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_11e0d42ca67e4d2b1a22b36c1afaf70b8acf7fd68b23b01ee92fff5e749db362",
                          "typeString": "literal_string \"Not enough usdc available\""
                        },
                        "value": "Not enough usdc available"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_11e0d42ca67e4d2b1a22b36c1afaf70b8acf7fd68b23b01ee92fff5e749db362",
                          "typeString": "literal_string \"Not enough usdc available\""
                        }
                      ],
                      "id": 395,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3966:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3966:75:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 404,
                  "nodeType": "ExpressionStatement",
                  "src": "3966:75:7"
                }
              ]
            },
            "functionSelector": "d1ee539d",
            "id": 406,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redeemBtcUp",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 346,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 345,
                  "mutability": "mutable",
                  "name": "amountLeveragedTokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 406,
                  "src": "3553:29:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 344,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3553:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3552:31:7"
            },
            "returnParameters": {
              "id": 347,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3591:0:7"
            },
            "scope": 778,
            "src": "3532:516:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 468,
              "nodeType": "Block",
              "src": "4115:483:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 411,
                      "name": "rebalanceLeveragedTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 535,
                      "src": "4125:24:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4125:26:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 413,
                  "nodeType": "ExpressionStatement",
                  "src": "4125:26:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 417,
                        "name": "amountLeveragedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 408,
                        "src": "4174:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 414,
                        "name": "btcDown",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 177,
                        "src": "4161:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BTCDOWN_$124",
                          "typeString": "contract BTCDOWN"
                        }
                      },
                      "id": 416,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 114,
                      "src": "4161:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4161:35:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 419,
                  "nodeType": "ExpressionStatement",
                  "src": "4161:35:7"
                },
                {
                  "expression": {
                    "id": 423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 420,
                      "name": "priceBtcDown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 139,
                      "src": "4207:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 421,
                        "name": "getBtcDownPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 625,
                        "src": "4222:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 422,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4222:17:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4207:32:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 424,
                  "nodeType": "ExpressionStatement",
                  "src": "4207:32:7"
                },
                {
                  "assignments": [
                    426
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 426,
                      "mutability": "mutable",
                      "name": "amountUsdc",
                      "nodeType": "VariableDeclaration",
                      "scope": 468,
                      "src": "4249:18:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 425,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4249:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 436,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        },
                        "id": 434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3130",
                          "id": 432,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4314:2:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "hexValue": "36",
                          "id": 433,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4320:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_6_by_1",
                            "typeString": "int_const 6"
                          },
                          "value": "6"
                        },
                        "src": "4314:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 429,
                            "name": "priceBtcDown",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 139,
                            "src": "4296:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 427,
                            "name": "amountLeveragedTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 408,
                            "src": "4270:21:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 428,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1634,
                          "src": "4270:25:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4270:39:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 431,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1649,
                      "src": "4270:43:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4270:52:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4249:73:7"
                },
                {
                  "expression": {
                    "id": 442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 437,
                      "name": "amountBtcDown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 151,
                      "src": "4341:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 440,
                          "name": "amountLeveragedTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 408,
                          "src": "4375:21:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 438,
                          "name": "amountBtcDown",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 151,
                          "src": "4357:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1619,
                        "src": "4357:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 441,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4357:40:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4341:56:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 443,
                  "nodeType": "ExpressionStatement",
                  "src": "4341:56:7"
                },
                {
                  "expression": {
                    "id": 449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 444,
                      "name": "collateralBtcDown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 145,
                      "src": "4407:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 447,
                          "name": "amountUsdc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 426,
                          "src": "4449:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 445,
                          "name": "collateralBtcDown",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 145,
                          "src": "4427:17:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1619,
                        "src": "4427:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 448,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4427:33:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4407:53:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 450,
                  "nodeType": "ExpressionStatement",
                  "src": "4407:53:7"
                },
                {
                  "assignments": [
                    453
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 453,
                      "mutability": "mutable",
                      "name": "usdc",
                      "nodeType": "VariableDeclaration",
                      "scope": 468,
                      "src": "4471:11:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$36",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 452,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 451,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 36,
                          "src": "4471:6:7"
                        },
                        "referencedDeclaration": 36,
                        "src": "4471:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$36",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 457,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 455,
                        "name": "addressUsdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 160,
                        "src": "4492:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 454,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "4485:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$36_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4485:19:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$36",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4471:33:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 461,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4536:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 462,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4536:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 463,
                            "name": "amountUsdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 426,
                            "src": "4549:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 459,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 453,
                            "src": "4522:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$36",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 460,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 15,
                          "src": "4522:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4522:38:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f756768207573646320617661696c61626c65",
                        "id": 465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4562:27:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_11e0d42ca67e4d2b1a22b36c1afaf70b8acf7fd68b23b01ee92fff5e749db362",
                          "typeString": "literal_string \"Not enough usdc available\""
                        },
                        "value": "Not enough usdc available"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_11e0d42ca67e4d2b1a22b36c1afaf70b8acf7fd68b23b01ee92fff5e749db362",
                          "typeString": "literal_string \"Not enough usdc available\""
                        }
                      ],
                      "id": 458,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4514:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4514:76:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 467,
                  "nodeType": "ExpressionStatement",
                  "src": "4514:76:7"
                }
              ]
            },
            "functionSelector": "a14274e8",
            "id": 469,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redeemBtcDown",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 409,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 408,
                  "mutability": "mutable",
                  "name": "amountLeveragedTokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 469,
                  "src": "4077:29:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 407,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4077:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4076:31:7"
            },
            "returnParameters": {
              "id": 410,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4115:0:7"
            },
            "scope": 778,
            "src": "4054:544:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 534,
              "nodeType": "Block",
              "src": "4647:611:7",
              "statements": [
                {
                  "assignments": [
                    473
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 473,
                      "mutability": "mutable",
                      "name": "btcPrice",
                      "nodeType": "VariableDeclaration",
                      "scope": 534,
                      "src": "4657:16:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 472,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4657:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 476,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 474,
                      "name": "getBtcPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 649,
                      "src": "4676:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4676:13:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4657:32:7"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 479,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 477,
                            "name": "collateralBtcUp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 142,
                            "src": "4704:15:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 478,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4722:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4704:19:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 480,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4703:21:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 483,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 481,
                            "name": "collateralBtcDown",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 145,
                            "src": "4729:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 482,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4749:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4729:21:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 484,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4728:23:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4703:48:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 529,
                  "nodeType": "IfStatement",
                  "src": "4699:519:7",
                  "trueBody": {
                    "id": 528,
                    "nodeType": "Block",
                    "src": "4753:465:7",
                    "statements": [
                      {
                        "assignments": [
                          487
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 487,
                            "mutability": "mutable",
                            "name": "rebalanceAmount",
                            "nodeType": "VariableDeclaration",
                            "scope": 528,
                            "src": "4767:23:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 486,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4767:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 491,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 489,
                              "name": "btcPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 473,
                              "src": "4812:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 488,
                            "name": "getRebalanceAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 583,
                            "src": "4793:18:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view returns (uint256)"
                            }
                          },
                          "id": 490,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4793:28:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4767:54:7"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          },
                          "id": 496,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 493,
                                "name": "btcPrice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 473,
                                "src": "4847:8:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 492,
                              "name": "getSign",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 554,
                              "src": "4839:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_int256_$",
                                "typeString": "function (uint256) view returns (int256)"
                              }
                            },
                            "id": 494,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4839:17:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 495,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4859:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4839:21:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 526,
                          "nodeType": "Block",
                          "src": "5044:163:7",
                          "statements": [
                            {
                              "expression": {
                                "id": 517,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 512,
                                  "name": "collateralBtcUp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 142,
                                  "src": "5062:15:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 515,
                                      "name": "rebalanceAmount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 487,
                                      "src": "5100:15:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 513,
                                      "name": "collateralBtcUp",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 142,
                                      "src": "5080:15:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 514,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sub",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1619,
                                    "src": "5080:19:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 516,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5080:36:7",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5062:54:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 518,
                              "nodeType": "ExpressionStatement",
                              "src": "5062:54:7"
                            },
                            {
                              "expression": {
                                "id": 524,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 519,
                                  "name": "collateralBtcDown",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 145,
                                  "src": "5134:17:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 522,
                                      "name": "rebalanceAmount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 487,
                                      "src": "5176:15:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 520,
                                      "name": "collateralBtcDown",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 145,
                                      "src": "5154:17:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 521,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "add",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1604,
                                    "src": "5154:21:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 523,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5154:38:7",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5134:58:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 525,
                              "nodeType": "ExpressionStatement",
                              "src": "5134:58:7"
                            }
                          ]
                        },
                        "id": 527,
                        "nodeType": "IfStatement",
                        "src": "4835:372:7",
                        "trueBody": {
                          "id": 511,
                          "nodeType": "Block",
                          "src": "4862:163:7",
                          "statements": [
                            {
                              "expression": {
                                "id": 502,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 497,
                                  "name": "collateralBtcUp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 142,
                                  "src": "4880:15:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 500,
                                      "name": "rebalanceAmount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 487,
                                      "src": "4918:15:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 498,
                                      "name": "collateralBtcUp",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 142,
                                      "src": "4898:15:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 499,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "add",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1604,
                                    "src": "4898:19:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 501,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4898:36:7",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4880:54:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 503,
                              "nodeType": "ExpressionStatement",
                              "src": "4880:54:7"
                            },
                            {
                              "expression": {
                                "id": 509,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 504,
                                  "name": "collateralBtcDown",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 145,
                                  "src": "4952:17:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 507,
                                      "name": "rebalanceAmount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 487,
                                      "src": "4994:15:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 505,
                                      "name": "collateralBtcDown",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 145,
                                      "src": "4972:17:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 506,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sub",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1619,
                                    "src": "4972:21:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 508,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4972:38:7",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4952:58:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 510,
                              "nodeType": "ExpressionStatement",
                              "src": "4952:58:7"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 532,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 530,
                      "name": "lastBtcPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 154,
                      "src": "5228:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 531,
                      "name": "btcPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 473,
                      "src": "5243:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5228:23:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 533,
                  "nodeType": "ExpressionStatement",
                  "src": "5228:23:7"
                }
              ]
            },
            "functionSelector": "6e5d6615",
            "id": 535,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "rebalanceLeveragedTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 470,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4637:2:7"
            },
            "returnParameters": {
              "id": 471,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4647:0:7"
            },
            "scope": 778,
            "src": "4604:654:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 553,
              "nodeType": "Block",
              "src": "5500:126:7",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 542,
                      "name": "btcPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 537,
                      "src": "5514:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 543,
                      "name": "lastBtcPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 154,
                      "src": "5525:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5514:23:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 551,
                    "nodeType": "Block",
                    "src": "5586:34:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 549,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "-",
                          "prefix": true,
                          "src": "5607:2:7",
                          "subExpression": {
                            "hexValue": "31",
                            "id": 548,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5608:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_minus_1_by_1",
                            "typeString": "int_const -1"
                          }
                        },
                        "functionReturnParameters": 541,
                        "id": 550,
                        "nodeType": "Return",
                        "src": "5600:9:7"
                      }
                    ]
                  },
                  "id": 552,
                  "nodeType": "IfStatement",
                  "src": "5510:110:7",
                  "trueBody": {
                    "id": 547,
                    "nodeType": "Block",
                    "src": "5539:33:7",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "31",
                          "id": 545,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5560:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "functionReturnParameters": 541,
                        "id": 546,
                        "nodeType": "Return",
                        "src": "5553:8:7"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 554,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSign",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 538,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 537,
                  "mutability": "mutable",
                  "name": "btcPrice",
                  "nodeType": "VariableDeclaration",
                  "scope": 554,
                  "src": "5452:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 536,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5452:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5451:18:7"
            },
            "returnParameters": {
              "id": 541,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 540,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 554,
                  "src": "5493:6:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 539,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5493:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5492:8:7"
            },
            "scope": 778,
            "src": "5435:191:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 582,
              "nodeType": "Block",
              "src": "5710:147:7",
              "statements": [
                {
                  "assignments": [
                    562
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 562,
                      "mutability": "mutable",
                      "name": "priceDiff",
                      "nodeType": "VariableDeclaration",
                      "scope": 582,
                      "src": "5720:17:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 561,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5720:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 566,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 564,
                        "name": "priceBtc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 556,
                        "src": "5753:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 563,
                      "name": "getPriceDiff",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 753,
                      "src": "5740:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5740:22:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5720:42:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        },
                        "id": 579,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3130",
                          "id": 577,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5842:2:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "hexValue": "36",
                          "id": 578,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5848:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_6_by_1",
                            "typeString": "int_const 6"
                          },
                          "value": "6"
                        },
                        "src": "5842:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 573,
                                "name": "priceDiff",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 562,
                                "src": "5826:9:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 572,
                              "name": "L",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 709,
                              "src": "5824:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256) pure returns (uint256)"
                              }
                            },
                            "id": 574,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5824:12:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 568,
                                "name": "collateralBtcUp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 142,
                                "src": "5784:15:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 569,
                                "name": "collateralBtcDown",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 145,
                                "src": "5801:17:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 567,
                              "name": "min",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 666,
                              "src": "5780:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 570,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5780:39:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 571,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1634,
                          "src": "5780:43:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 575,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5780:57:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 576,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1649,
                      "src": "5780:61:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5780:70:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 560,
                  "id": 581,
                  "nodeType": "Return",
                  "src": "5773:77:7"
                }
              ]
            },
            "id": 583,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRebalanceAmount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 557,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 556,
                  "mutability": "mutable",
                  "name": "priceBtc",
                  "nodeType": "VariableDeclaration",
                  "scope": 583,
                  "src": "5661:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 555,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5661:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5660:18:7"
            },
            "returnParameters": {
              "id": 560,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 559,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 583,
                  "src": "5702:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 558,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5702:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5701:9:7"
            },
            "scope": 778,
            "src": "5633:224:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 603,
              "nodeType": "Block",
              "src": "5948:102:7",
              "statements": [
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 590,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 588,
                        "name": "amountBtcUp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 148,
                        "src": "5965:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 589,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5980:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "5965:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "arguments": [
                        {
                          "id": 599,
                          "name": "amountBtcUp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 148,
                          "src": "6031:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              },
                              "id": 596,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 594,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6018:2:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "36",
                                "id": 595,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6024:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_6_by_1",
                                  "typeString": "int_const 6"
                                },
                                "value": "6"
                              },
                              "src": "6018:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              }
                            ],
                            "expression": {
                              "id": 592,
                              "name": "collateralBtcUp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 142,
                              "src": "5998:15:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 593,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1634,
                            "src": "5998:19:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 597,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5998:28:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 598,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1649,
                        "src": "5998:32:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 600,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5998:45:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "5965:78:7",
                    "trueExpression": {
                      "id": 591,
                      "name": "priceBtcUp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 134,
                      "src": "5985:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 587,
                  "id": 602,
                  "nodeType": "Return",
                  "src": "5958:85:7"
                }
              ]
            },
            "functionSelector": "f06847d6",
            "id": 604,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBtcUpPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 584,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5915:2:7"
            },
            "returnParameters": {
              "id": 587,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 586,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 604,
                  "src": "5939:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 585,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5939:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5938:9:7"
            },
            "scope": 778,
            "src": "5893:157:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 624,
              "nodeType": "Block",
              "src": "6145:122:7",
              "statements": [
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 611,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 609,
                        "name": "amountBtcDown",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 151,
                        "src": "6174:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 610,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6191:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "6174:18:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "arguments": [
                        {
                          "id": 620,
                          "name": "amountBtcDown",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 151,
                          "src": "6246:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              },
                              "id": 617,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 615,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6233:2:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "36",
                                "id": 616,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6239:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_6_by_1",
                                  "typeString": "int_const 6"
                                },
                                "value": "6"
                              },
                              "src": "6233:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              }
                            ],
                            "expression": {
                              "id": 613,
                              "name": "collateralBtcDown",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 145,
                              "src": "6211:17:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 614,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1634,
                            "src": "6211:21:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 618,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6211:30:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 619,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1649,
                        "src": "6211:34:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 621,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6211:49:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 622,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "6174:86:7",
                    "trueExpression": {
                      "id": 612,
                      "name": "priceBtcDown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 139,
                      "src": "6196:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 608,
                  "id": 623,
                  "nodeType": "Return",
                  "src": "6167:93:7"
                }
              ]
            },
            "functionSelector": "81c2b29b",
            "id": 625,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBtcDownPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 605,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6112:2:7"
            },
            "returnParameters": {
              "id": 608,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 607,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 625,
                  "src": "6136:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 606,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6136:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6135:9:7"
            },
            "scope": 778,
            "src": "6088:179:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 648,
              "nodeType": "Block",
              "src": "6372:264:7",
              "statements": [
                {
                  "assignments": [
                    632
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 632,
                      "mutability": "mutable",
                      "name": "priceFeed",
                      "nodeType": "VariableDeclaration",
                      "scope": 648,
                      "src": "6382:31:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$1786",
                        "typeString": "contract AggregatorV3Interface"
                      },
                      "typeName": {
                        "id": 631,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 630,
                          "name": "AggregatorV3Interface",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1786,
                          "src": "6382:21:7"
                        },
                        "referencedDeclaration": 1786,
                        "src": "6382:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$1786",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 636,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 634,
                        "name": "addressBtcUSDFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 163,
                        "src": "6438:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 633,
                      "name": "AggregatorV3Interface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1786,
                      "src": "6416:21:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$1786_$",
                        "typeString": "type(contract AggregatorV3Interface)"
                      }
                    },
                    "id": 635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6416:40:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$1786",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6382:74:7"
                },
                {
                  "assignments": [
                    null,
                    638,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 638,
                      "mutability": "mutable",
                      "name": "answer",
                      "nodeType": "VariableDeclaration",
                      "scope": 648,
                      "src": "6468:13:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 637,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6468:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null
                  ],
                  "id": 642,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 639,
                        "name": "priceFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 632,
                        "src": "6488:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$1786",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 640,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1785,
                      "src": "6488:25:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6488:27:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6466:49:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 645,
                        "name": "answer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 638,
                        "src": "6542:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 644,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "6534:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 643,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6534:7:7",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6534:15:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 629,
                  "id": 647,
                  "nodeType": "Return",
                  "src": "6527:22:7"
                }
              ]
            },
            "functionSelector": "3a3610bc",
            "id": 649,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBtcPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 626,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6339:2:7"
            },
            "returnParameters": {
              "id": 629,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 628,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 649,
                  "src": "6363:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 627,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6363:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6362:9:7"
            },
            "scope": 778,
            "src": "6319:317:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 665,
              "nodeType": "Block",
              "src": "6713:38:7",
              "statements": [
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 660,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 658,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 651,
                        "src": "6730:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<=",
                      "rightExpression": {
                        "id": 659,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 653,
                        "src": "6735:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6730:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 662,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 653,
                      "src": "6743:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "6730:14:7",
                    "trueExpression": {
                      "id": 661,
                      "name": "a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 651,
                      "src": "6739:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 657,
                  "id": 664,
                  "nodeType": "Return",
                  "src": "6723:21:7"
                }
              ]
            },
            "id": 666,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "min",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 654,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 651,
                  "mutability": "mutable",
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 666,
                  "src": "6659:9:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 650,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6659:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 653,
                  "mutability": "mutable",
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 666,
                  "src": "6670:9:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 652,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6670:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6658:22:7"
            },
            "returnParameters": {
              "id": 657,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 656,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 666,
                  "src": "6704:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 655,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6704:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6703:9:7"
            },
            "scope": 778,
            "src": "6646:105:7",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 708,
              "nodeType": "Block",
              "src": "6811:171:7",
              "statements": [
                {
                  "assignments": [
                    674
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 674,
                      "mutability": "mutable",
                      "name": "denom",
                      "nodeType": "VariableDeclaration",
                      "scope": 708,
                      "src": "6847:13:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 673,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6847:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 693,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 688,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 684,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "39",
                          "id": 675,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6863:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_9_by_1",
                            "typeString": "int_const 9"
                          },
                          "value": "9"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 682,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 678,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 676,
                                  "name": "x",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 668,
                                  "src": "6868:1:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "hexValue": "32",
                                  "id": 677,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6873:1:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "src": "6868:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_rational_1000000_by_1",
                                  "typeString": "int_const 1000000"
                                },
                                "id": 681,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "3130",
                                  "id": 679,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6877:2:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10_by_1",
                                    "typeString": "int_const 10"
                                  },
                                  "value": "10"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "hexValue": "36",
                                  "id": 680,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6883:1:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_6_by_1",
                                    "typeString": "int_const 6"
                                  },
                                  "value": "6"
                                },
                                "src": "6877:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000_by_1",
                                  "typeString": "int_const 1000000"
                                }
                              },
                              "src": "6868:16:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 683,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "6867:18:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6863:22:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 687,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "33",
                          "id": 685,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6889:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "id": 686,
                          "name": "x",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 668,
                          "src": "6893:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6889:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6863:31:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_rational_1000000_by_1",
                        "typeString": "int_const 1000000"
                      },
                      "id": 691,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3130",
                        "id": 689,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6897:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "hexValue": "36",
                        "id": 690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6903:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        },
                        "value": "6"
                      },
                      "src": "6897:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000_by_1",
                        "typeString": "int_const 1000000"
                      }
                    },
                    "src": "6863:41:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6847:57:7"
                },
                {
                  "assignments": [
                    695
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 695,
                      "mutability": "mutable",
                      "name": "num",
                      "nodeType": "VariableDeclaration",
                      "scope": 708,
                      "src": "6914:11:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 694,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6914:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 699,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_rational_1000000000000_by_1",
                      "typeString": "int_const 1000000000000"
                    },
                    "id": 698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3130",
                      "id": 696,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6928:2:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "hexValue": "3132",
                      "id": 697,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6934:2:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_12_by_1",
                        "typeString": "int_const 12"
                      },
                      "value": "12"
                    },
                    "src": "6928:8:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000000_by_1",
                      "typeString": "int_const 1000000000000"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6914:22:7"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 706,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_rational_1000000_by_1",
                        "typeString": "int_const 1000000"
                      },
                      "id": 702,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3130",
                        "id": 700,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6954:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "hexValue": "36",
                        "id": 701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6960:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        },
                        "value": "6"
                      },
                      "src": "6954:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000_by_1",
                        "typeString": "int_const 1000000"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 705,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 703,
                        "name": "num",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 695,
                        "src": "6964:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "id": 704,
                        "name": "denom",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 674,
                        "src": "6970:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6964:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6954:21:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 672,
                  "id": 707,
                  "nodeType": "Return",
                  "src": "6947:28:7"
                }
              ]
            },
            "id": 709,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "L",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 669,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 668,
                  "mutability": "mutable",
                  "name": "x",
                  "nodeType": "VariableDeclaration",
                  "scope": 709,
                  "src": "6768:9:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 667,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6768:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6767:11:7"
            },
            "returnParameters": {
              "id": 672,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 671,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 709,
                  "src": "6802:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 670,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6802:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6801:9:7"
            },
            "scope": 778,
            "src": "6757:225:7",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 752,
              "nodeType": "Block",
              "src": "7060:246:7",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 716,
                      "name": "btcPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 711,
                      "src": "7091:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 717,
                      "name": "lastBtcPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 154,
                      "src": "7102:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7091:23:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 750,
                    "nodeType": "Block",
                    "src": "7215:84:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              },
                              "id": 747,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 745,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7280:2:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "36",
                                "id": 746,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7286:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_6_by_1",
                                  "typeString": "int_const 6"
                                },
                                "value": "6"
                              },
                              "src": "7280:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 742,
                                  "name": "btcPrice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 711,
                                  "src": "7266:8:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_rational_1000000_by_1",
                                        "typeString": "int_const 1000000"
                                      },
                                      "id": 739,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "hexValue": "3130",
                                        "id": 737,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7253:2:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_10_by_1",
                                          "typeString": "int_const 10"
                                        },
                                        "value": "10"
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "**",
                                      "rightExpression": {
                                        "hexValue": "36",
                                        "id": 738,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7259:1:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_6_by_1",
                                          "typeString": "int_const 6"
                                        },
                                        "value": "6"
                                      },
                                      "src": "7253:7:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1000000_by_1",
                                        "typeString": "int_const 1000000"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_1000000_by_1",
                                        "typeString": "int_const 1000000"
                                      }
                                    ],
                                    "expression": {
                                      "id": 735,
                                      "name": "lastBtcPrice",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 154,
                                      "src": "7236:12:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 736,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1634,
                                    "src": "7236:16:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 740,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7236:25:7",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 741,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1649,
                                "src": "7236:29:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 743,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7236:39:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 744,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1619,
                            "src": "7236:43:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 748,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7236:52:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 715,
                        "id": 749,
                        "nodeType": "Return",
                        "src": "7229:59:7"
                      }
                    ]
                  },
                  "id": 751,
                  "nodeType": "IfStatement",
                  "src": "7087:212:7",
                  "trueBody": {
                    "id": 734,
                    "nodeType": "Block",
                    "src": "7116:84:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              },
                              "id": 731,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 729,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7181:2:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "36",
                                "id": 730,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7187:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_6_by_1",
                                  "typeString": "int_const 6"
                                },
                                "value": "6"
                              },
                              "src": "7181:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 726,
                                  "name": "lastBtcPrice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 154,
                                  "src": "7163:12:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_rational_1000000_by_1",
                                        "typeString": "int_const 1000000"
                                      },
                                      "id": 723,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "hexValue": "3130",
                                        "id": 721,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7150:2:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_10_by_1",
                                          "typeString": "int_const 10"
                                        },
                                        "value": "10"
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "**",
                                      "rightExpression": {
                                        "hexValue": "36",
                                        "id": 722,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7156:1:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_6_by_1",
                                          "typeString": "int_const 6"
                                        },
                                        "value": "6"
                                      },
                                      "src": "7150:7:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1000000_by_1",
                                        "typeString": "int_const 1000000"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_1000000_by_1",
                                        "typeString": "int_const 1000000"
                                      }
                                    ],
                                    "expression": {
                                      "id": 719,
                                      "name": "btcPrice",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 711,
                                      "src": "7137:8:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 720,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1634,
                                    "src": "7137:12:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 724,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7137:21:7",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 725,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1649,
                                "src": "7137:25:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 727,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7137:39:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 728,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1619,
                            "src": "7137:43:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 732,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7137:52:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 715,
                        "id": 733,
                        "nodeType": "Return",
                        "src": "7130:59:7"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 753,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPriceDiff",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 712,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 711,
                  "mutability": "mutable",
                  "name": "btcPrice",
                  "nodeType": "VariableDeclaration",
                  "scope": 753,
                  "src": "7010:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 710,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7010:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7009:18:7"
            },
            "returnParameters": {
              "id": 715,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 714,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 753,
                  "src": "7051:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 713,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7051:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7050:9:7"
            },
            "scope": 778,
            "src": "6988:318:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 764,
              "nodeType": "Block",
              "src": "7368:51:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 760,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7401:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7401:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 758,
                        "name": "btcUp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 170,
                        "src": "7385:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BTCUP_$80",
                          "typeString": "contract BTCUP"
                        }
                      },
                      "id": 759,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 981,
                      "src": "7385:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7385:27:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 757,
                  "id": 763,
                  "nodeType": "Return",
                  "src": "7378:34:7"
                }
              ]
            },
            "functionSelector": "157d0129",
            "id": 765,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBtcupBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 754,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7336:2:7"
            },
            "returnParameters": {
              "id": 757,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 756,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 765,
                  "src": "7359:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 755,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7359:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7358:9:7"
            },
            "scope": 778,
            "src": "7312:107:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 776,
              "nodeType": "Block",
              "src": "7483:53:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 772,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7518:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 773,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7518:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 770,
                        "name": "btcDown",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 177,
                        "src": "7500:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BTCDOWN_$124",
                          "typeString": "contract BTCDOWN"
                        }
                      },
                      "id": 771,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 981,
                      "src": "7500:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7500:29:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 769,
                  "id": 775,
                  "nodeType": "Return",
                  "src": "7493:36:7"
                }
              ]
            },
            "functionSelector": "c7e3b124",
            "id": 777,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBtcdownBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 766,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7451:2:7"
            },
            "returnParameters": {
              "id": 769,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 768,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 777,
                  "src": "7474:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 767,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7474:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7473:9:7"
            },
            "scope": 778,
            "src": "7425:111:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 779,
        "src": "1303:6236:7"
      }
    ],
    "src": "32:7509:7"
  },
  "bytecode": "60806040523480156200001157600080fd5b50604080518082018252600c81526b2134ba31b7b4b7102237bbb760a11b602080830191825283518085019094526007845266212a21a227aba760c91b908401528151919291620000659160039162000084565b5080516200007b90600490602084019062000084565b50505062000167565b82805462000092906200012a565b90600052602060002090601f016020900481019282620000b6576000855562000101565b82601f10620000d157805160ff191683800117855562000101565b8280016001018555821562000101579182015b8281111562000101578251825591602001919060010190620000e4565b506200010f92915062000113565b5090565b5b808211156200010f576000815560010162000114565b6002810460018216806200013f57607f821691505b602082108114156200016157634e487b7160e01b600052602260045260246000fd5b50919050565b610cce80620001776000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806342966c681161008c578063a0712d6811610066578063a0712d6814610192578063a457c2d7146101a5578063a9059cbb146101b8578063dd62ed3e146101cb576100cf565b806342966c681461016257806370a082311461017757806395d89b411461018a576100cf565b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461011257806323b872dd14610127578063313ce5671461013a578063395093511461014f575b600080fd5b6100dc6101de565b6040516100e99190610913565b60405180910390f35b6101056101003660046108c7565b610270565b6040516100e99190610908565b61011a61028d565b6040516100e99190610c01565b61010561013536600461088c565b610293565b61014261032c565b6040516100e99190610c0a565b61010561015d3660046108c7565b610331565b6101756101703660046108f0565b610385565b005b61011a610185366004610839565b610392565b6100dc6103b1565b6101756101a03660046108f0565b6103c0565b6101056101b33660046108c7565b6103ca565b6101056101c63660046108c7565b610443565b61011a6101d936600461085a565b610457565b6060600380546101ed90610c47565b80601f016020809104026020016040519081016040528092919081815260200182805461021990610c47565b80156102665780601f1061023b57610100808354040283529160200191610266565b820191906000526020600020905b81548152906001019060200180831161024957829003601f168201915b5050505050905090565b600061028461027d610482565b8484610486565b50600192915050565b60025490565b60006102a084848461053a565b6001600160a01b0384166000908152600160205260408120816102c1610482565b6001600160a01b03166001600160a01b031681526020019081526020016000205490508281101561030d5760405162461bcd60e51b815260040161030490610a73565b60405180910390fd5b61032185610319610482565b858403610486565b506001949350505050565b600690565b600061028461033e610482565b84846001600061034c610482565b6001600160a01b03908116825260208083019390935260409182016000908120918b16815292529020546103809190610c18565b610486565b61038f3282610664565b50565b6001600160a01b0381166000908152602081905260409020545b919050565b6060600480546101ed90610c47565b61038f3282610756565b600080600160006103d9610482565b6001600160a01b03908116825260208083019390935260409182016000908120918816815292529020549050828110156104255760405162461bcd60e51b815260040161030490610b85565b610439610430610482565b85858403610486565b5060019392505050565b6000610284610450610482565b848461053a565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166104ac5760405162461bcd60e51b815260040161030490610b41565b6001600160a01b0382166104d25760405162461bcd60e51b8152600401610304906109eb565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061052d908590610c01565b60405180910390a3505050565b6001600160a01b0383166105605760405162461bcd60e51b815260040161030490610afc565b6001600160a01b0382166105865760405162461bcd60e51b815260040161030490610966565b610591838383610751565b6001600160a01b038316600090815260208190526040902054818110156105ca5760405162461bcd60e51b815260040161030490610a2d565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610601908490610c18565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161064b9190610c01565b60405180910390a361065e848484610751565b50505050565b6001600160a01b03821661068a5760405162461bcd60e51b815260040161030490610abb565b61069682600083610751565b6001600160a01b038216600090815260208190526040902054818110156106cf5760405162461bcd60e51b8152600401610304906109a9565b6001600160a01b03831660009081526020819052604081208383039055600280548492906106fe908490610c30565b90915550506040516000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610741908690610c01565b60405180910390a3610751836000845b505050565b6001600160a01b03821661077c5760405162461bcd60e51b815260040161030490610bca565b61078860008383610751565b806002600082825461079a9190610c18565b90915550506001600160a01b038216600090815260208190526040812080548392906107c7908490610c18565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061080a908590610c01565b60405180910390a361081e60008383610751565b5050565b80356001600160a01b03811681146103ac57600080fd5b60006020828403121561084a578081fd5b61085382610822565b9392505050565b6000806040838503121561086c578081fd5b61087583610822565b915061088360208401610822565b90509250929050565b6000806000606084860312156108a0578081fd5b6108a984610822565b92506108b760208501610822565b9150604084013590509250925092565b600080604083850312156108d9578182fd5b6108e283610822565b946020939093013593505050565b600060208284031215610901578081fd5b5035919050565b901515815260200190565b6000602080835283518082850152825b8181101561093f57858101830151858201604001528201610923565b818111156109505783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526022908201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604082015261636560f01b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b60208082526028908201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616040820152676c6c6f77616e636560c01b606082015260800190565b60208082526021908201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736040820152607360f81b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604082015264207a65726f60d81b606082015260800190565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b60ff91909116815260200190565b60008219821115610c2b57610c2b610c82565b500190565b600082821015610c4257610c42610c82565b500390565b600281046001821680610c5b57607f821691505b60208210811415610c7c57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220b5d5cd953e1bf162f8b700eebe777107e3a180fc7935fdf9c14e656b2bcd4ace64736f6c63430008000033",
  "bytecodeSha1": "08f51ad49160d4abaa5b3c324d03f5f2670dcaa6",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.0+commit.c7dfd78e"
  },
  "contractName": "BTCDOWN",
  "coverageMap": {
    "branches": {
      "1": {
        "ERC20._approve": {
          "47": [
            10083,
            10102,
            true
          ],
          "48": [
            10161,
            10182,
            true
          ]
        },
        "ERC20._burn": {
          "52": [
            9036,
            9057,
            true
          ],
          "53": [
            9227,
            9251,
            true
          ]
        },
        "ERC20._mint": {
          "54": [
            8327,
            8348,
            true
          ]
        },
        "ERC20._transfer": {
          "49": [
            7390,
            7410,
            true
          ],
          "50": [
            7470,
            7493,
            true
          ],
          "51": [
            7661,
            7684,
            true
          ]
        },
        "ERC20.decreaseAllowance": {
          "46": [
            6564,
            6599,
            true
          ]
        },
        "ERC20.transferFrom": {
          "45": [
            5081,
            5107,
            true
          ]
        }
      },
      "2": {},
      "3": {},
      "4": {},
      "7": {}
    },
    "statements": {
      "1": {
        "ERC20._approve": {
          "20": [
            10075,
            10143
          ],
          "21": [
            10153,
            10221
          ],
          "22": [
            10232,
            10268
          ],
          "23": [
            10278,
            10315
          ]
        },
        "ERC20._burn": {
          "32": [
            9028,
            9095
          ],
          "33": [
            9106,
            9155
          ],
          "34": [
            9219,
            9290
          ],
          "35": [
            9324,
            9368
          ],
          "36": [
            9388,
            9410
          ],
          "37": [
            9421,
            9463
          ],
          "38": [
            9474,
            9522
          ]
        },
        "ERC20._mint": {
          "39": [
            8319,
            8384
          ],
          "40": [
            8395,
            8444
          ],
          "41": [
            8455,
            8477
          ],
          "42": [
            8487,
            8515
          ],
          "43": [
            8525,
            8567
          ],
          "44": [
            8578,
            8626
          ]
        },
        "ERC20._transfer": {
          "24": [
            7382,
            7452
          ],
          "25": [
            7462,
            7533
          ],
          "26": [
            7544,
            7591
          ],
          "27": [
            7653,
            7727
          ],
          "28": [
            7761,
            7803
          ],
          "29": [
            7823,
            7853
          ],
          "30": [
            7864,
            7904
          ],
          "31": [
            7915,
            7961
          ]
        },
        "ERC20.allowance": {
          "18": [
            3992,
            4026
          ]
        },
        "ERC20.approve": {
          "1": [
            4270,
            4309
          ],
          "2": [
            4319,
            4330
          ]
        },
        "ERC20.balanceOf": {
          "11": [
            3419,
            3444
          ]
        },
        "ERC20.decreaseAllowance": {
          "14": [
            6556,
            6641
          ],
          "15": [
            6675,
            6742
          ],
          "16": [
            6763,
            6774
          ]
        },
        "ERC20.increaseAllowance": {
          "9": [
            5781,
            5861
          ]
        },
        "ERC20.name": {
          "0": [
            2153,
            2165
          ]
        },
        "ERC20.symbol": {
          "12": [
            2366,
            2380
          ]
        },
        "ERC20.totalSupply": {
          "3": [
            3242,
            3261
          ]
        },
        "ERC20.transfer": {
          "17": [
            3756,
            3798
          ]
        },
        "ERC20.transferFrom": {
          "4": [
            4956,
            4992
          ],
          "5": [
            5073,
            5152
          ],
          "6": [
            5186,
            5243
          ],
          "7": [
            5264,
            5275
          ]
        }
      },
      "2": {},
      "3": {},
      "4": {
        "Context._msgSender": {
          "19": [
            658,
            675
          ]
        }
      },
      "7": {
        "BTCDOWN.burn": {
          "10": [
            1178,
            1204
          ]
        },
        "BTCDOWN.decimals": {
          "8": [
            1284,
            1292
          ]
        },
        "BTCDOWN.mint": {
          "13": [
            1090,
            1116
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.2.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/ERC20",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/IERC20Metadata"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c806342966c681161008c578063a0712d6811610066578063a0712d6814610192578063a457c2d7146101a5578063a9059cbb146101b8578063dd62ed3e146101cb576100cf565b806342966c681461016257806370a082311461017757806395d89b411461018a576100cf565b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461011257806323b872dd14610127578063313ce5671461013a578063395093511461014f575b600080fd5b6100dc6101de565b6040516100e99190610913565b60405180910390f35b6101056101003660046108c7565b610270565b6040516100e99190610908565b61011a61028d565b6040516100e99190610c01565b61010561013536600461088c565b610293565b61014261032c565b6040516100e99190610c0a565b61010561015d3660046108c7565b610331565b6101756101703660046108f0565b610385565b005b61011a610185366004610839565b610392565b6100dc6103b1565b6101756101a03660046108f0565b6103c0565b6101056101b33660046108c7565b6103ca565b6101056101c63660046108c7565b610443565b61011a6101d936600461085a565b610457565b6060600380546101ed90610c47565b80601f016020809104026020016040519081016040528092919081815260200182805461021990610c47565b80156102665780601f1061023b57610100808354040283529160200191610266565b820191906000526020600020905b81548152906001019060200180831161024957829003601f168201915b5050505050905090565b600061028461027d610482565b8484610486565b50600192915050565b60025490565b60006102a084848461053a565b6001600160a01b0384166000908152600160205260408120816102c1610482565b6001600160a01b03166001600160a01b031681526020019081526020016000205490508281101561030d5760405162461bcd60e51b815260040161030490610a73565b60405180910390fd5b61032185610319610482565b858403610486565b506001949350505050565b600690565b600061028461033e610482565b84846001600061034c610482565b6001600160a01b03908116825260208083019390935260409182016000908120918b16815292529020546103809190610c18565b610486565b61038f3282610664565b50565b6001600160a01b0381166000908152602081905260409020545b919050565b6060600480546101ed90610c47565b61038f3282610756565b600080600160006103d9610482565b6001600160a01b03908116825260208083019390935260409182016000908120918816815292529020549050828110156104255760405162461bcd60e51b815260040161030490610b85565b610439610430610482565b85858403610486565b5060019392505050565b6000610284610450610482565b848461053a565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166104ac5760405162461bcd60e51b815260040161030490610b41565b6001600160a01b0382166104d25760405162461bcd60e51b8152600401610304906109eb565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061052d908590610c01565b60405180910390a3505050565b6001600160a01b0383166105605760405162461bcd60e51b815260040161030490610afc565b6001600160a01b0382166105865760405162461bcd60e51b815260040161030490610966565b610591838383610751565b6001600160a01b038316600090815260208190526040902054818110156105ca5760405162461bcd60e51b815260040161030490610a2d565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610601908490610c18565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161064b9190610c01565b60405180910390a361065e848484610751565b50505050565b6001600160a01b03821661068a5760405162461bcd60e51b815260040161030490610abb565b61069682600083610751565b6001600160a01b038216600090815260208190526040902054818110156106cf5760405162461bcd60e51b8152600401610304906109a9565b6001600160a01b03831660009081526020819052604081208383039055600280548492906106fe908490610c30565b90915550506040516000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610741908690610c01565b60405180910390a3610751836000845b505050565b6001600160a01b03821661077c5760405162461bcd60e51b815260040161030490610bca565b61078860008383610751565b806002600082825461079a9190610c18565b90915550506001600160a01b038216600090815260208190526040812080548392906107c7908490610c18565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061080a908590610c01565b60405180910390a361081e60008383610751565b5050565b80356001600160a01b03811681146103ac57600080fd5b60006020828403121561084a578081fd5b61085382610822565b9392505050565b6000806040838503121561086c578081fd5b61087583610822565b915061088360208401610822565b90509250929050565b6000806000606084860312156108a0578081fd5b6108a984610822565b92506108b760208501610822565b9150604084013590509250925092565b600080604083850312156108d9578182fd5b6108e283610822565b946020939093013593505050565b600060208284031215610901578081fd5b5035919050565b901515815260200190565b6000602080835283518082850152825b8181101561093f57858101830151858201604001528201610923565b818111156109505783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526022908201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604082015261636560f01b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b60208082526028908201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616040820152676c6c6f77616e636560c01b606082015260800190565b60208082526021908201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736040820152607360f81b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604082015264207a65726f60d81b606082015260800190565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b60ff91909116815260200190565b60008219821115610c2b57610c2b610c82565b500190565b600082821015610c4257610c42610c82565b500390565b600281046001821680610c5b57607f821691505b60208210811415610c7c57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220b5d5cd953e1bf162f8b700eebe777107e3a180fc7935fdf9c14e656b2bcd4ace64736f6c63430008000033",
  "deployedSourceMap": "949:352:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:98:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4171:166;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3162:106::-;;;:::i;:::-;;;;;;;:::i;4804:478::-;;;;;;:::i;:::-;;:::i;1217:82:7:-;;;:::i;:::-;;;;;;;:::i;5677:212:1:-;;;;;;:::i;:::-;;:::i;1129:82:7:-;;;;;;:::i;:::-;;:::i;:::-;;3326:125:1;;;;;;:::i;:::-;;:::i;2285:102::-;;;:::i;1041:82:7:-;;;;;;:::i;:::-;;:::i;6376:405:1:-;;;;;;:::i;:::-;;:::i;3654:172::-;;;;;;:::i;:::-;;:::i;3884:149::-;;;;;;:::i;:::-;;:::i;2074:98::-;2128:13;2160:5;2153:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:98;:::o;4171:166::-;4254:4;4270:39;4279:12;:10;:12::i;:::-;4293:7;4302:6;4270:8;:39::i;:::-;-1:-1:-1;4326:4:1;4171:166;;;;:::o;3162:106::-;3249:12;;3162:106;:::o;4804:478::-;4940:4;4956:36;4966:6;4974:9;4985:6;4956:9;:36::i;:::-;-1:-1:-1;;;;;5030:19:1;;5003:24;5030:19;;;-1:-1:-1;5030:19:1;;;;;5003:24;5050:12;:10;:12::i;:::-;-1:-1:-1;;;;;5030:33:1;;;;;;;;;;;;-1:-1:-1;5030:33:1;;;-1:-1:-1;5081:26:1;;;;5073:79;;;;-1:-1:-1;;;5073:79:1;;;;;;;:::i;:::-;;;;;;;;;5186:57;5195:6;5203:12;:10;:12::i;:::-;5236:6;5217:16;:25;5186:8;:57::i;:::-;-1:-1:-1;5271:4:1;;4804:478;-1:-1:-1;;;;4804:478:1:o;1217:82:7:-;1291:1;1217:82;:::o;5677:212:1:-;5765:4;5781:80;5790:12;:10;:12::i;:::-;5804:7;5850:10;5813:11;:25;5825:12;:10;:12::i;:::-;-1:-1:-1;;;;;5813:25:1;;;;;;;;;;;;;;;;;-1:-1:-1;5813:25:1;;;:34;;;;;;;;;;:47;;;;:::i;:::-;5781:8;:80::i;1129:82:7:-;1178:26;1184:9;1195:8;1178:5;:26::i;:::-;1129:82;:::o;3326:125:1:-;-1:-1:-1;;;;;3426:18:1;;3400:7;3426:18;;;;;;;;;;;3326:125;;;;:::o;2285:102::-;2341:13;2373:7;2366:14;;;;;:::i;1041:82:7:-;1090:26;1096:9;1107:8;1090:5;:26::i;6376:405:1:-;6469:4;6485:24;6512:11;:25;6524:12;:10;:12::i;:::-;-1:-1:-1;;;;;6512:25:1;;;;;;;;;;;;;;;;;-1:-1:-1;6512:25:1;;;:34;;;;;;;;;;;-1:-1:-1;6564:35:1;;;;6556:85;;;;-1:-1:-1;;;6556:85:1;;;;;;;:::i;:::-;6675:67;6684:12;:10;:12::i;:::-;6698:7;6726:15;6707:16;:34;6675:8;:67::i;:::-;-1:-1:-1;6770:4:1;;6376:405;-1:-1:-1;;;6376:405:1:o;3654:172::-;3740:4;3756:42;3766:12;:10;:12::i;:::-;3780:9;3791:6;3756:9;:42::i;3884:149::-;-1:-1:-1;;;;;3999:18:1;;;3973:7;3999:18;;;-1:-1:-1;3999:18:1;;;;;;;;:27;;;;;;;;;;;;;3884:149::o;586:96:4:-;665:10;586:96;:::o;9952:370:1:-;-1:-1:-1;;;;;10083:19:1;;10075:68;;;;-1:-1:-1;;;10075:68:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;10161:21:1;;10153:68;;;;-1:-1:-1;;;10153:68:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;10232:18:1;;;;;;;-1:-1:-1;10232:18:1;;;;;;;;:27;;;;;;;;;;;;;;:36;;;10283:32;;;;;10232:36;;10283:32;:::i;:::-;;;;;;;;9952:370;;;:::o;7255:713::-;-1:-1:-1;;;;;7390:20:1;;7382:70;;;;-1:-1:-1;;;7382:70:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;7470:23:1;;7462:71;;;;-1:-1:-1;;;7462:71:1;;;;;;;:::i;:::-;7544:47;7565:6;7573:9;7584:6;7544:20;:47::i;:::-;-1:-1:-1;;;;;7626:17:1;;7602:21;7626:17;;;;;;;;;;;7661:23;;;;7653:74;;;;-1:-1:-1;;;7653:74:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;7761:17:1;;;:9;:17;;;;;;;;;;;7781:22;;;7761:42;;7823:20;;;;;;;;:30;;7781:22;;7761:9;7823:30;;7781:22;;7823:30;:::i;:::-;;;;-1:-1:-1;;7869:35:1;;-1:-1:-1;;;;;7869:35:1;;;;;;;;;;;;7897:6;;7869:35;:::i;:::-;;;;;;;;7915:46;7935:6;7943:9;7954:6;7915:19;:46::i;:::-;7255:713;;;;:::o;8953:576::-;-1:-1:-1;;;;;9036:21:1;;9028:67;;;;-1:-1:-1;;;9028:67:1;;;;;;;:::i;:::-;9106:49;9127:7;9144:1;9148:6;9106:20;:49::i;:::-;-1:-1:-1;;;;;9191:18:1;;9166:22;9191:18;;;;;;;;;;;9227:24;;;;9219:71;;;;-1:-1:-1;;;9219:71:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;9324:18:1;;:9;:18;;;;;;;;;;9345:23;;;9324:44;;9388:12;:22;;9345:23;;9324:9;9388:22;;9345:23;;9388:22;:::i;:::-;;;;-1:-1:-1;;9426:37:1;;9452:1;;-1:-1:-1;;;;;9426:37:1;;;;;;;9456:6;;9426:37;:::i;:::-;;;;;;;;9474:48;9494:7;9511:1;9515:6;9474:48;8953:576;;;:::o;8244:389::-;-1:-1:-1;;;;;8327:21:1;;8319:65;;;;-1:-1:-1;;;8319:65:1;;;;;;;:::i;:::-;8395:49;8424:1;8428:7;8437:6;8395:20;:49::i;:::-;8471:6;8455:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8487:18:1;;:9;:18;;;;;;;;;;:28;;8509:6;;8487:9;:28;;8509:6;;8487:28;:::i;:::-;;;;-1:-1:-1;;8530:37:1;;-1:-1:-1;;;;;8530:37:1;;;8547:1;;8530:37;;;;8560:6;;8530:37;:::i;:::-;;;;;;;;8578:48;8606:1;8610:7;8619:6;8578:19;:48::i;:::-;8244:389;;:::o;14:175:8:-;84:20;;-1:-1:-1;;;;;133:31:8;;123:42;;113:2;;179:1;176;169:12;194:198;;306:2;294:9;285:7;281:23;277:32;274:2;;;327:6;319;312:22;274:2;355:31;376:9;355:31;:::i;:::-;345:41;264:128;-1:-1:-1;;;264:128:8:o;397:274::-;;;526:2;514:9;505:7;501:23;497:32;494:2;;;547:6;539;532:22;494:2;575:31;596:9;575:31;:::i;:::-;565:41;;625:40;661:2;650:9;646:18;625:40;:::i;:::-;615:50;;484:187;;;;;:::o;676:342::-;;;;822:2;810:9;801:7;797:23;793:32;790:2;;;843:6;835;828:22;790:2;871:31;892:9;871:31;:::i;:::-;861:41;;921:40;957:2;946:9;942:18;921:40;:::i;:::-;911:50;;1008:2;997:9;993:18;980:32;970:42;;780:238;;;;;:::o;1023:266::-;;;1152:2;1140:9;1131:7;1127:23;1123:32;1120:2;;;1173:6;1165;1158:22;1120:2;1201:31;1222:9;1201:31;:::i;:::-;1191:41;1279:2;1264:18;;;;1251:32;;-1:-1:-1;;;1110:179:8:o;1294:190::-;;1406:2;1394:9;1385:7;1381:23;1377:32;1374:2;;;1427:6;1419;1412:22;1374:2;-1:-1:-1;1455:23:8;;1364:120;-1:-1:-1;1364:120:8:o;1489:187::-;1654:14;;1647:22;1629:41;;1617:2;1602:18;;1584:92::o;1681:603::-;;1822:2;1851;1840:9;1833:21;1883:6;1877:13;1926:6;1921:2;1910:9;1906:18;1899:34;1951:4;1964:140;1978:6;1975:1;1972:13;1964:140;;;2073:14;;;2069:23;;2063:30;2039:17;;;2058:2;2035:26;2028:66;1993:10;;1964:140;;;2122:6;2119:1;2116:13;2113:2;;;2192:4;2187:2;2178:6;2167:9;2163:22;2159:31;2152:45;2113:2;-1:-1:-1;2268:2:8;2247:15;-1:-1:-1;;2243:29:8;2228:45;;;;2275:2;2224:54;;1802:482;-1:-1:-1;;;1802:482:8:o;2289:399::-;2491:2;2473:21;;;2530:2;2510:18;;;2503:30;2569:34;2564:2;2549:18;;2542:62;-1:-1:-1;;;2635:2:8;2620:18;;2613:33;2678:3;2663:19;;2463:225::o;2693:398::-;2895:2;2877:21;;;2934:2;2914:18;;;2907:30;2973:34;2968:2;2953:18;;2946:62;-1:-1:-1;;;3039:2:8;3024:18;;3017:32;3081:3;3066:19;;2867:224::o;3096:398::-;3298:2;3280:21;;;3337:2;3317:18;;;3310:30;3376:34;3371:2;3356:18;;3349:62;-1:-1:-1;;;3442:2:8;3427:18;;3420:32;3484:3;3469:19;;3270:224::o;3499:402::-;3701:2;3683:21;;;3740:2;3720:18;;;3713:30;3779:34;3774:2;3759:18;;3752:62;-1:-1:-1;;;3845:2:8;3830:18;;3823:36;3891:3;3876:19;;3673:228::o;3906:404::-;4108:2;4090:21;;;4147:2;4127:18;;;4120:30;4186:34;4181:2;4166:18;;4159:62;-1:-1:-1;;;4252:2:8;4237:18;;4230:38;4300:3;4285:19;;4080:230::o;4315:397::-;4517:2;4499:21;;;4556:2;4536:18;;;4529:30;4595:34;4590:2;4575:18;;4568:62;-1:-1:-1;;;4661:2:8;4646:18;;4639:31;4702:3;4687:19;;4489:223::o;4717:401::-;4919:2;4901:21;;;4958:2;4938:18;;;4931:30;4997:34;4992:2;4977:18;;4970:62;-1:-1:-1;;;5063:2:8;5048:18;;5041:35;5108:3;5093:19;;4891:227::o;5123:400::-;5325:2;5307:21;;;5364:2;5344:18;;;5337:30;5403:34;5398:2;5383:18;;5376:62;-1:-1:-1;;;5469:2:8;5454:18;;5447:34;5513:3;5498:19;;5297:226::o;5528:401::-;5730:2;5712:21;;;5769:2;5749:18;;;5742:30;5808:34;5803:2;5788:18;;5781:62;-1:-1:-1;;;5874:2:8;5859:18;;5852:35;5919:3;5904:19;;5702:227::o;5934:355::-;6136:2;6118:21;;;6175:2;6155:18;;;6148:30;6214:33;6209:2;6194:18;;6187:61;6280:2;6265:18;;6108:181::o;6294:177::-;6440:25;;;6428:2;6413:18;;6395:76::o;6476:184::-;6648:4;6636:17;;;;6618:36;;6606:2;6591:18;;6573:87::o;6665:128::-;;6736:1;6732:6;6729:1;6726:13;6723:2;;;6742:18;;:::i;:::-;-1:-1:-1;6778:9:8;;6713:80::o;6798:125::-;;6866:1;6863;6860:8;6857:2;;;6871:18;;:::i;:::-;-1:-1:-1;6908:9:8;;6847:76::o;6928:380::-;7013:1;7003:12;;7060:1;7050:12;;;7071:2;;7125:4;7117:6;7113:17;7103:27;;7071:2;7178;7170:6;7167:14;7147:18;7144:38;7141:2;;;7224:10;7219:3;7215:20;7212:1;7205:31;7259:4;7256:1;7249:15;7287:4;7284:1;7277:15;7141:2;;6983:325;;;:::o;7313:127::-;7374:10;7369:3;7365:20;7362:1;7355:31;7405:4;7402:1;7395:15;7429:4;7426:1;7419:15",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "offset": [
    949,
    1301
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x42966C68 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA0712D68 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1B8 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1CB JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x42966C68 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x18A JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x112 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x13A JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x14F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH2 0x1DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x913 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x105 PUSH2 0x100 CALLDATASIZE PUSH1 0x4 PUSH2 0x8C7 JUMP JUMPDEST PUSH2 0x270 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x908 JUMP JUMPDEST PUSH2 0x11A PUSH2 0x28D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0xC01 JUMP JUMPDEST PUSH2 0x105 PUSH2 0x135 CALLDATASIZE PUSH1 0x4 PUSH2 0x88C JUMP JUMPDEST PUSH2 0x293 JUMP JUMPDEST PUSH2 0x142 PUSH2 0x32C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0xC0A JUMP JUMPDEST PUSH2 0x105 PUSH2 0x15D CALLDATASIZE PUSH1 0x4 PUSH2 0x8C7 JUMP JUMPDEST PUSH2 0x331 JUMP JUMPDEST PUSH2 0x175 PUSH2 0x170 CALLDATASIZE PUSH1 0x4 PUSH2 0x8F0 JUMP JUMPDEST PUSH2 0x385 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11A PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0x839 JUMP JUMPDEST PUSH2 0x392 JUMP JUMPDEST PUSH2 0xDC PUSH2 0x3B1 JUMP JUMPDEST PUSH2 0x175 PUSH2 0x1A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x8F0 JUMP JUMPDEST PUSH2 0x3C0 JUMP JUMPDEST PUSH2 0x105 PUSH2 0x1B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x8C7 JUMP JUMPDEST PUSH2 0x3CA JUMP JUMPDEST PUSH2 0x105 PUSH2 0x1C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x8C7 JUMP JUMPDEST PUSH2 0x443 JUMP JUMPDEST PUSH2 0x11A PUSH2 0x1D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x85A JUMP JUMPDEST PUSH2 0x457 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1ED SWAP1 PUSH2 0xC47 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x219 SWAP1 PUSH2 0xC47 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x266 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x23B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x266 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x249 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x284 PUSH2 0x27D PUSH2 0x482 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x486 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A0 DUP5 DUP5 DUP5 PUSH2 0x53A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 PUSH2 0x2C1 PUSH2 0x482 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x30D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x304 SWAP1 PUSH2 0xA73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x321 DUP6 PUSH2 0x319 PUSH2 0x482 JUMP JUMPDEST DUP6 DUP5 SUB PUSH2 0x486 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x284 PUSH2 0x33E PUSH2 0x482 JUMP JUMPDEST DUP5 DUP5 PUSH1 0x1 PUSH1 0x0 PUSH2 0x34C PUSH2 0x482 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP12 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x380 SWAP2 SWAP1 PUSH2 0xC18 JUMP JUMPDEST PUSH2 0x486 JUMP JUMPDEST PUSH2 0x38F ORIGIN DUP3 PUSH2 0x664 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1ED SWAP1 PUSH2 0xC47 JUMP JUMPDEST PUSH2 0x38F ORIGIN DUP3 PUSH2 0x756 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x3D9 PUSH2 0x482 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP9 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x425 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x304 SWAP1 PUSH2 0xB85 JUMP JUMPDEST PUSH2 0x439 PUSH2 0x430 PUSH2 0x482 JUMP JUMPDEST DUP6 DUP6 DUP5 SUB PUSH2 0x486 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x284 PUSH2 0x450 PUSH2 0x482 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x53A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x4AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x304 SWAP1 PUSH2 0xB41 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x304 SWAP1 PUSH2 0x9EB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x52D SWAP1 DUP6 SWAP1 PUSH2 0xC01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x560 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x304 SWAP1 PUSH2 0xAFC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x586 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x304 SWAP1 PUSH2 0x966 JUMP JUMPDEST PUSH2 0x591 DUP4 DUP4 DUP4 PUSH2 0x751 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x5CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x304 SWAP1 PUSH2 0xA2D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x601 SWAP1 DUP5 SWAP1 PUSH2 0xC18 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x64B SWAP2 SWAP1 PUSH2 0xC01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x65E DUP5 DUP5 DUP5 PUSH2 0x751 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x68A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x304 SWAP1 PUSH2 0xABB JUMP JUMPDEST PUSH2 0x696 DUP3 PUSH1 0x0 DUP4 PUSH2 0x751 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x6CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x304 SWAP1 PUSH2 0x9A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 DUP4 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6FE SWAP1 DUP5 SWAP1 PUSH2 0xC30 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x741 SWAP1 DUP7 SWAP1 PUSH2 0xC01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x751 DUP4 PUSH1 0x0 DUP5 JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x77C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x304 SWAP1 PUSH2 0xBCA JUMP JUMPDEST PUSH2 0x788 PUSH1 0x0 DUP4 DUP4 PUSH2 0x751 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x79A SWAP2 SWAP1 PUSH2 0xC18 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x7C7 SWAP1 DUP5 SWAP1 PUSH2 0xC18 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x80A SWAP1 DUP6 SWAP1 PUSH2 0xC01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x81E PUSH1 0x0 DUP4 DUP4 PUSH2 0x751 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x84A JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x853 DUP3 PUSH2 0x822 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x86C JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x875 DUP4 PUSH2 0x822 JUMP JUMPDEST SWAP2 POP PUSH2 0x883 PUSH1 0x20 DUP5 ADD PUSH2 0x822 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x8A0 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x8A9 DUP5 PUSH2 0x822 JUMP JUMPDEST SWAP3 POP PUSH2 0x8B7 PUSH1 0x20 DUP6 ADD PUSH2 0x822 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8D9 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x8E2 DUP4 PUSH2 0x822 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x901 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x93F JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x923 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x950 JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xC2B JUMPI PUSH2 0xC2B PUSH2 0xC82 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xC42 JUMPI PUSH2 0xC42 PUSH2 0xC82 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xC5B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xC7C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB5 0xD5 0xCD SWAP6 RETURNDATACOPY SHL CALL PUSH3 0xF8B700 0xEE 0xBE PUSH24 0x7107E3A180FC7935FDF9C14E656B2BCD4ACE64736F6C6343 STOP ADDMOD STOP STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        949,
        1301
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "6": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "8": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "12": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "DUP1",
      "path": "7"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "REVERT",
      "path": "7"
    },
    "16": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "17": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "POP",
      "path": "7"
    },
    "18": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "21": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "LT",
      "path": "7"
    },
    "22": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xCF"
    },
    "25": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "26": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "CALLDATALOAD",
      "path": "7"
    },
    "29": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "SHR",
      "path": "7"
    },
    "32": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "DUP1",
      "path": "7"
    },
    "33": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x42966C68"
    },
    "38": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "GT",
      "path": "7"
    },
    "39": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x8C"
    },
    "42": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "43": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "DUP1",
      "path": "7"
    },
    "44": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xA0712D68"
    },
    "49": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "GT",
      "path": "7"
    },
    "50": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x66"
    },
    "53": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "54": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "DUP1",
      "path": "7"
    },
    "55": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xA0712D68"
    },
    "60": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "EQ",
      "path": "7"
    },
    "61": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x192"
    },
    "64": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "65": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "DUP1",
      "path": "7"
    },
    "66": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xA457C2D7"
    },
    "71": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "EQ",
      "path": "7"
    },
    "72": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1A5"
    },
    "75": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "76": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "DUP1",
      "path": "7"
    },
    "77": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xA9059CBB"
    },
    "82": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "EQ",
      "path": "7"
    },
    "83": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1B8"
    },
    "86": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "87": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "DUP1",
      "path": "7"
    },
    "88": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xDD62ED3E"
    },
    "93": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "EQ",
      "path": "7"
    },
    "94": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1CB"
    },
    "97": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "98": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xCF"
    },
    "101": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "JUMP",
      "path": "7"
    },
    "102": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "103": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "DUP1",
      "path": "7"
    },
    "104": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x42966C68"
    },
    "109": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "EQ",
      "path": "7"
    },
    "110": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x162"
    },
    "113": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "114": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "DUP1",
      "path": "7"
    },
    "115": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x70A08231"
    },
    "120": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "EQ",
      "path": "7"
    },
    "121": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x177"
    },
    "124": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "125": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "DUP1",
      "path": "7"
    },
    "126": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x95D89B41"
    },
    "131": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "EQ",
      "path": "7"
    },
    "132": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x18A"
    },
    "135": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "136": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xCF"
    },
    "139": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "JUMP",
      "path": "7"
    },
    "140": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "141": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "DUP1",
      "path": "7"
    },
    "142": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x6FDDE03"
    },
    "147": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "EQ",
      "path": "7"
    },
    "148": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xD4"
    },
    "151": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "152": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "DUP1",
      "path": "7"
    },
    "153": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x95EA7B3"
    },
    "158": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "EQ",
      "path": "7"
    },
    "159": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xF2"
    },
    "162": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "163": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "DUP1",
      "path": "7"
    },
    "164": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x18160DDD"
    },
    "169": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "EQ",
      "path": "7"
    },
    "170": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x112"
    },
    "173": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "174": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "DUP1",
      "path": "7"
    },
    "175": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x23B872DD"
    },
    "180": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "EQ",
      "path": "7"
    },
    "181": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x127"
    },
    "184": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "185": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "DUP1",
      "path": "7"
    },
    "186": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x313CE567"
    },
    "191": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "EQ",
      "path": "7"
    },
    "192": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x13A"
    },
    "195": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "196": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "DUP1",
      "path": "7"
    },
    "197": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x39509351"
    },
    "202": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "EQ",
      "path": "7"
    },
    "203": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x14F"
    },
    "206": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "207": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "208": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "210": {
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "DUP1",
      "path": "7"
    },
    "211": {
      "first_revert": true,
      "fn": null,
      "offset": [
        949,
        1301
      ],
      "op": "REVERT",
      "path": "7"
    },
    "212": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "213": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDC"
    },
    "216": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1DE"
    },
    "219": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2074,
        2172
      ],
      "op": "JUMP",
      "path": "1"
    },
    "220": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "221": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "223": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "224": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE9"
    },
    "227": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "228": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "229": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x913"
    },
    "232": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2074,
        2172
      ],
      "op": "JUMP",
      "path": "1"
    },
    "233": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "234": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "236": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "237": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "DUP1",
      "path": "1"
    },
    "238": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "239": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "SUB",
      "path": "1"
    },
    "240": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "241": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "RETURN",
      "path": "1"
    },
    "242": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "243": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x105"
    },
    "246": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "249": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "250": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "252": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8C7"
    },
    "255": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4171,
        4337
      ],
      "op": "JUMP",
      "path": "1"
    },
    "256": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "257": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x270"
    },
    "260": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4171,
        4337
      ],
      "op": "JUMP",
      "path": "1"
    },
    "261": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "262": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "264": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "265": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE9"
    },
    "268": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "269": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "270": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x908"
    },
    "273": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4171,
        4337
      ],
      "op": "JUMP",
      "path": "1"
    },
    "274": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3162,
        3268
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "275": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3162,
        3268
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x11A"
    },
    "278": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3162,
        3268
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x28D"
    },
    "281": {
      "fn": "ERC20.totalSupply",
      "jump": "i",
      "offset": [
        3162,
        3268
      ],
      "op": "JUMP",
      "path": "1"
    },
    "282": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3162,
        3268
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "283": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3162,
        3268
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "285": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3162,
        3268
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "286": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3162,
        3268
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE9"
    },
    "289": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3162,
        3268
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "290": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3162,
        3268
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "291": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3162,
        3268
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC01"
    },
    "294": {
      "fn": "ERC20.totalSupply",
      "jump": "i",
      "offset": [
        3162,
        3268
      ],
      "op": "JUMP",
      "path": "1"
    },
    "295": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4804,
        5282
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "296": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4804,
        5282
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x105"
    },
    "299": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4804,
        5282
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x135"
    },
    "302": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4804,
        5282
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "303": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4804,
        5282
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "305": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4804,
        5282
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x88C"
    },
    "308": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        4804,
        5282
      ],
      "op": "JUMP",
      "path": "1"
    },
    "309": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4804,
        5282
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "310": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4804,
        5282
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x293"
    },
    "313": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        4804,
        5282
      ],
      "op": "JUMP",
      "path": "1"
    },
    "314": {
      "fn": "BTCDOWN.decimals",
      "offset": [
        1217,
        1299
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "315": {
      "fn": "BTCDOWN.decimals",
      "offset": [
        1217,
        1299
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x142"
    },
    "318": {
      "fn": "BTCDOWN.decimals",
      "offset": [
        1217,
        1299
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x32C"
    },
    "321": {
      "fn": "BTCDOWN.decimals",
      "jump": "i",
      "offset": [
        1217,
        1299
      ],
      "op": "JUMP",
      "path": "7"
    },
    "322": {
      "fn": "BTCDOWN.decimals",
      "offset": [
        1217,
        1299
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "323": {
      "fn": "BTCDOWN.decimals",
      "offset": [
        1217,
        1299
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "325": {
      "fn": "BTCDOWN.decimals",
      "offset": [
        1217,
        1299
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "326": {
      "fn": "BTCDOWN.decimals",
      "offset": [
        1217,
        1299
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE9"
    },
    "329": {
      "fn": "BTCDOWN.decimals",
      "offset": [
        1217,
        1299
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "330": {
      "fn": "BTCDOWN.decimals",
      "offset": [
        1217,
        1299
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "331": {
      "fn": "BTCDOWN.decimals",
      "offset": [
        1217,
        1299
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC0A"
    },
    "334": {
      "fn": "BTCDOWN.decimals",
      "jump": "i",
      "offset": [
        1217,
        1299
      ],
      "op": "JUMP",
      "path": "7"
    },
    "335": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5677,
        5889
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "336": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5677,
        5889
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x105"
    },
    "339": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5677,
        5889
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x15D"
    },
    "342": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5677,
        5889
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "343": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5677,
        5889
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "345": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5677,
        5889
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8C7"
    },
    "348": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5677,
        5889
      ],
      "op": "JUMP",
      "path": "1"
    },
    "349": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5677,
        5889
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "350": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5677,
        5889
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x331"
    },
    "353": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5677,
        5889
      ],
      "op": "JUMP",
      "path": "1"
    },
    "354": {
      "fn": "BTCDOWN.burn",
      "offset": [
        1129,
        1211
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "355": {
      "fn": "BTCDOWN.burn",
      "offset": [
        1129,
        1211
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x175"
    },
    "358": {
      "fn": "BTCDOWN.burn",
      "offset": [
        1129,
        1211
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x170"
    },
    "361": {
      "fn": "BTCDOWN.burn",
      "offset": [
        1129,
        1211
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "362": {
      "fn": "BTCDOWN.burn",
      "offset": [
        1129,
        1211
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "364": {
      "fn": "BTCDOWN.burn",
      "offset": [
        1129,
        1211
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x8F0"
    },
    "367": {
      "fn": "BTCDOWN.burn",
      "jump": "i",
      "offset": [
        1129,
        1211
      ],
      "op": "JUMP",
      "path": "7"
    },
    "368": {
      "fn": "BTCDOWN.burn",
      "offset": [
        1129,
        1211
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "369": {
      "fn": "BTCDOWN.burn",
      "offset": [
        1129,
        1211
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x385"
    },
    "372": {
      "fn": "BTCDOWN.burn",
      "jump": "i",
      "offset": [
        1129,
        1211
      ],
      "op": "JUMP",
      "path": "7"
    },
    "373": {
      "fn": "BTCDOWN.burn",
      "offset": [
        1129,
        1211
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "374": {
      "fn": "BTCDOWN.burn",
      "offset": [
        1129,
        1211
      ],
      "op": "STOP",
      "path": "7"
    },
    "375": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3326,
        3451
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "376": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3326,
        3451
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x11A"
    },
    "379": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3326,
        3451
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x185"
    },
    "382": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3326,
        3451
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "383": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3326,
        3451
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "385": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3326,
        3451
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x839"
    },
    "388": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        3326,
        3451
      ],
      "op": "JUMP",
      "path": "1"
    },
    "389": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3326,
        3451
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "390": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3326,
        3451
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x392"
    },
    "393": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        3326,
        3451
      ],
      "op": "JUMP",
      "path": "1"
    },
    "394": {
      "fn": "ERC20.symbol",
      "offset": [
        2285,
        2387
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "395": {
      "fn": "ERC20.symbol",
      "offset": [
        2285,
        2387
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDC"
    },
    "398": {
      "fn": "ERC20.symbol",
      "offset": [
        2285,
        2387
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3B1"
    },
    "401": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2285,
        2387
      ],
      "op": "JUMP",
      "path": "1"
    },
    "402": {
      "fn": "BTCDOWN.mint",
      "offset": [
        1041,
        1123
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "403": {
      "fn": "BTCDOWN.mint",
      "offset": [
        1041,
        1123
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x175"
    },
    "406": {
      "fn": "BTCDOWN.mint",
      "offset": [
        1041,
        1123
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1A0"
    },
    "409": {
      "fn": "BTCDOWN.mint",
      "offset": [
        1041,
        1123
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "410": {
      "fn": "BTCDOWN.mint",
      "offset": [
        1041,
        1123
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "412": {
      "fn": "BTCDOWN.mint",
      "offset": [
        1041,
        1123
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x8F0"
    },
    "415": {
      "fn": "BTCDOWN.mint",
      "jump": "i",
      "offset": [
        1041,
        1123
      ],
      "op": "JUMP",
      "path": "7"
    },
    "416": {
      "fn": "BTCDOWN.mint",
      "offset": [
        1041,
        1123
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "417": {
      "fn": "BTCDOWN.mint",
      "offset": [
        1041,
        1123
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3C0"
    },
    "420": {
      "fn": "BTCDOWN.mint",
      "jump": "i",
      "offset": [
        1041,
        1123
      ],
      "op": "JUMP",
      "path": "7"
    },
    "421": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6376,
        6781
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "422": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6376,
        6781
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x105"
    },
    "425": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6376,
        6781
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1B3"
    },
    "428": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6376,
        6781
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "429": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6376,
        6781
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "431": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6376,
        6781
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8C7"
    },
    "434": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6376,
        6781
      ],
      "op": "JUMP",
      "path": "1"
    },
    "435": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6376,
        6781
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "436": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6376,
        6781
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CA"
    },
    "439": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6376,
        6781
      ],
      "op": "JUMP",
      "path": "1"
    },
    "440": {
      "fn": "ERC20.transfer",
      "offset": [
        3654,
        3826
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "441": {
      "fn": "ERC20.transfer",
      "offset": [
        3654,
        3826
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x105"
    },
    "444": {
      "fn": "ERC20.transfer",
      "offset": [
        3654,
        3826
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1C6"
    },
    "447": {
      "fn": "ERC20.transfer",
      "offset": [
        3654,
        3826
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "448": {
      "fn": "ERC20.transfer",
      "offset": [
        3654,
        3826
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "450": {
      "fn": "ERC20.transfer",
      "offset": [
        3654,
        3826
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8C7"
    },
    "453": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3654,
        3826
      ],
      "op": "JUMP",
      "path": "1"
    },
    "454": {
      "fn": "ERC20.transfer",
      "offset": [
        3654,
        3826
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "455": {
      "fn": "ERC20.transfer",
      "offset": [
        3654,
        3826
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x443"
    },
    "458": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3654,
        3826
      ],
      "op": "JUMP",
      "path": "1"
    },
    "459": {
      "fn": "ERC20.allowance",
      "offset": [
        3884,
        4033
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "460": {
      "fn": "ERC20.allowance",
      "offset": [
        3884,
        4033
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x11A"
    },
    "463": {
      "fn": "ERC20.allowance",
      "offset": [
        3884,
        4033
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1D9"
    },
    "466": {
      "fn": "ERC20.allowance",
      "offset": [
        3884,
        4033
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "467": {
      "fn": "ERC20.allowance",
      "offset": [
        3884,
        4033
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "469": {
      "fn": "ERC20.allowance",
      "offset": [
        3884,
        4033
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x85A"
    },
    "472": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        3884,
        4033
      ],
      "op": "JUMP",
      "path": "1"
    },
    "473": {
      "fn": "ERC20.allowance",
      "offset": [
        3884,
        4033
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "474": {
      "fn": "ERC20.allowance",
      "offset": [
        3884,
        4033
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x457"
    },
    "477": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        3884,
        4033
      ],
      "op": "JUMP",
      "path": "1"
    },
    "478": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "479": {
      "fn": "ERC20.name",
      "offset": [
        2128,
        2141
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "481": {
      "fn": "ERC20.name",
      "offset": [
        2160,
        2165
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 0,
      "value": "0x3"
    },
    "483": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP1",
      "path": "1"
    },
    "484": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "485": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1ED"
    },
    "488": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "489": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC47"
    },
    "492": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2153,
        2165
      ],
      "op": "JUMP",
      "path": "1"
    },
    "493": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "494": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP1",
      "path": "1"
    },
    "495": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "497": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "ADD",
      "path": "1"
    },
    "498": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "500": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP1",
      "path": "1"
    },
    "501": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "502": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DIV",
      "path": "1"
    },
    "503": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "MUL",
      "path": "1"
    },
    "504": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "506": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "ADD",
      "path": "1"
    },
    "507": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "509": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "510": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "511": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP2",
      "path": "1"
    },
    "512": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "ADD",
      "path": "1"
    },
    "513": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "515": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "516": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP1",
      "path": "1"
    },
    "517": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "518": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "519": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "520": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP2",
      "path": "1"
    },
    "521": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP2",
      "path": "1"
    },
    "522": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "523": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "525": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "ADD",
      "path": "1"
    },
    "526": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP3",
      "path": "1"
    },
    "527": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP1",
      "path": "1"
    },
    "528": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "529": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x219"
    },
    "532": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "533": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC47"
    },
    "536": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2153,
        2165
      ],
      "op": "JUMP",
      "path": "1"
    },
    "537": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "538": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP1",
      "path": "1"
    },
    "539": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "540": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x266"
    },
    "543": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "544": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP1",
      "path": "1"
    },
    "545": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "547": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "LT",
      "path": "1"
    },
    "548": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x23B"
    },
    "551": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "552": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "555": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP1",
      "path": "1"
    },
    "556": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP4",
      "path": "1"
    },
    "557": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "558": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DIV",
      "path": "1"
    },
    "559": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "MUL",
      "path": "1"
    },
    "560": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP4",
      "path": "1"
    },
    "561": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "562": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "563": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "565": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "ADD",
      "path": "1"
    },
    "566": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "567": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x266"
    },
    "570": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "JUMP",
      "path": "1"
    },
    "571": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "572": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP3",
      "path": "1"
    },
    "573": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "ADD",
      "path": "1"
    },
    "574": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "575": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "576": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "578": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "579": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "581": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "583": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "584": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "585": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "586": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP2",
      "path": "1"
    },
    "587": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "588": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP2",
      "path": "1"
    },
    "589": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "590": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "591": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "593": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "ADD",
      "path": "1"
    },
    "594": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "595": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "597": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "ADD",
      "path": "1"
    },
    "598": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP1",
      "path": "1"
    },
    "599": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP4",
      "path": "1"
    },
    "600": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "GT",
      "path": "1"
    },
    "601": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x249"
    },
    "604": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "605": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP3",
      "path": "1"
    },
    "606": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "607": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SUB",
      "path": "1"
    },
    "608": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "610": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "AND",
      "path": "1"
    },
    "611": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP3",
      "path": "1"
    },
    "612": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "ADD",
      "path": "1"
    },
    "613": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "614": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "615": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "POP",
      "path": "1"
    },
    "616": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "POP",
      "path": "1"
    },
    "617": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "POP",
      "path": "1"
    },
    "618": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "POP",
      "path": "1"
    },
    "619": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "POP",
      "path": "1"
    },
    "620": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "621": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "POP",
      "path": "1"
    },
    "622": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "623": {
      "fn": "ERC20.name",
      "jump": "o",
      "offset": [
        2074,
        2172
      ],
      "op": "JUMP",
      "path": "1"
    },
    "624": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "625": {
      "fn": "ERC20.approve",
      "offset": [
        4254,
        4258
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "627": {
      "fn": "ERC20.approve",
      "offset": [
        4270,
        4309
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 1,
      "value": "0x284"
    },
    "630": {
      "fn": "ERC20.approve",
      "offset": [
        4279,
        4291
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x27D"
    },
    "633": {
      "fn": "ERC20.approve",
      "offset": [
        4279,
        4289
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x482"
    },
    "636": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4279,
        4291
      ],
      "op": "JUMP",
      "path": "1"
    },
    "637": {
      "fn": "ERC20.approve",
      "offset": [
        4279,
        4291
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "638": {
      "fn": "ERC20.approve",
      "offset": [
        4293,
        4300
      ],
      "op": "DUP5",
      "path": "1"
    },
    "639": {
      "fn": "ERC20.approve",
      "offset": [
        4302,
        4308
      ],
      "op": "DUP5",
      "path": "1"
    },
    "640": {
      "fn": "ERC20.approve",
      "offset": [
        4270,
        4278
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x486"
    },
    "643": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4270,
        4309
      ],
      "op": "JUMP",
      "path": "1"
    },
    "644": {
      "fn": "ERC20.approve",
      "offset": [
        4270,
        4309
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "645": {
      "op": "POP"
    },
    "646": {
      "fn": "ERC20.approve",
      "offset": [
        4326,
        4330
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 2,
      "value": "0x1"
    },
    "648": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "649": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "650": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "POP",
      "path": "1"
    },
    "651": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "POP",
      "path": "1"
    },
    "652": {
      "fn": "ERC20.approve",
      "jump": "o",
      "offset": [
        4171,
        4337
      ],
      "op": "JUMP",
      "path": "1"
    },
    "653": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3162,
        3268
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "654": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3249,
        3261
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 3,
      "value": "0x2"
    },
    "656": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3249,
        3261
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "657": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3162,
        3268
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "658": {
      "fn": "ERC20.totalSupply",
      "jump": "o",
      "offset": [
        3162,
        3268
      ],
      "op": "JUMP",
      "path": "1"
    },
    "659": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4804,
        5282
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "660": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4940,
        4944
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "662": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4956,
        4992
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 4,
      "value": "0x2A0"
    },
    "665": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4966,
        4972
      ],
      "op": "DUP5",
      "path": "1"
    },
    "666": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4974,
        4983
      ],
      "op": "DUP5",
      "path": "1"
    },
    "667": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4985,
        4991
      ],
      "op": "DUP5",
      "path": "1"
    },
    "668": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4956,
        4965
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x53A"
    },
    "671": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        4956,
        4992
      ],
      "op": "JUMP",
      "path": "1"
    },
    "672": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4956,
        4992
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "673": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "675": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "677": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "679": {
      "op": "SHL"
    },
    "680": {
      "op": "SUB"
    },
    "681": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5049
      ],
      "op": "DUP5",
      "path": "1"
    },
    "682": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5049
      ],
      "op": "AND",
      "path": "1"
    },
    "683": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5003,
        5027
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "685": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5049
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "686": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5049
      ],
      "op": "DUP2",
      "path": "1"
    },
    "687": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5049
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "688": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "690": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5049
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "692": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5049
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "693": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5049
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "695": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5049
      ],
      "op": "DUP2",
      "path": "1"
    },
    "696": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5049
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "697": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5003,
        5027
      ],
      "op": "DUP2",
      "path": "1"
    },
    "698": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5050,
        5062
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2C1"
    },
    "701": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5050,
        5060
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x482"
    },
    "704": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5050,
        5062
      ],
      "op": "JUMP",
      "path": "1"
    },
    "705": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5050,
        5062
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "706": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "708": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "710": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "712": {
      "op": "SHL"
    },
    "713": {
      "op": "SUB"
    },
    "714": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5063
      ],
      "op": "AND",
      "path": "1"
    },
    "715": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5063
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "717": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5063
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "719": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5063
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "721": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5063
      ],
      "op": "SHL",
      "path": "1"
    },
    "722": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5063
      ],
      "op": "SUB",
      "path": "1"
    },
    "723": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5063
      ],
      "op": "AND",
      "path": "1"
    },
    "724": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5063
      ],
      "op": "DUP2",
      "path": "1"
    },
    "725": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5063
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "726": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5063
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "728": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5063
      ],
      "op": "ADD",
      "path": "1"
    },
    "729": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5063
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "730": {
      "op": "DUP2"
    },
    "731": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5063
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "732": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5063
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "734": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5063
      ],
      "op": "ADD",
      "path": "1"
    },
    "735": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "737": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5081,
        5107
      ],
      "op": "KECCAK256",
      "path": "1",
      "statement": 5
    },
    "738": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5081,
        5107
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "739": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5081,
        5107
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "740": {
      "branch": 45,
      "fn": "ERC20.transferFrom",
      "offset": [
        5081,
        5107
      ],
      "op": "POP",
      "path": "1"
    },
    "741": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "DUP3",
      "path": "1"
    },
    "742": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "DUP2",
      "path": "1"
    },
    "743": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "LT",
      "path": "1"
    },
    "744": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "745": {
      "op": "PUSH2",
      "value": "0x30D"
    },
    "748": {
      "op": "JUMPI"
    },
    "749": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "751": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "752": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x461BCD"
    },
    "756": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE5"
    },
    "758": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "SHL",
      "path": "1"
    },
    "759": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "DUP2",
      "path": "1"
    },
    "760": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "761": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "763": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5073,
        5152
      ],
      "op": "ADD",
      "path": "1"
    },
    "764": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x304"
    },
    "767": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "768": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA73"
    },
    "771": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "JUMP",
      "path": "1"
    },
    "772": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "773": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "775": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "776": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "DUP1",
      "path": "1"
    },
    "777": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "778": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5186,
        5243
      ],
      "op": "SUB",
      "path": "1",
      "statement": 6
    },
    "779": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5195,
        5201
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "780": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5203,
        5215
      ],
      "op": "REVERT",
      "path": "1"
    },
    "781": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5203,
        5213
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "782": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5203,
        5215
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x321"
    },
    "785": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5203,
        5215
      ],
      "op": "DUP6",
      "path": "1"
    },
    "786": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5236,
        5242
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x319"
    },
    "789": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5217,
        5233
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x482"
    },
    "792": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5217,
        5242
      ],
      "op": "JUMP",
      "path": "1"
    },
    "793": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5186,
        5194
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "794": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5186,
        5243
      ],
      "op": "DUP6",
      "path": "1"
    },
    "795": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5186,
        5243
      ],
      "op": "DUP5",
      "path": "1"
    },
    "796": {
      "op": "SUB"
    },
    "797": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5271,
        5275
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 7,
      "value": "0x486"
    },
    "800": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5271,
        5275
      ],
      "op": "JUMP",
      "path": "1"
    },
    "801": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4804,
        5282
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "802": {
      "op": "POP"
    },
    "803": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "805": {
      "op": "SWAP5"
    },
    "806": {
      "op": "SWAP4"
    },
    "807": {
      "fn": "ERC20.transferFrom",
      "jump": "o",
      "offset": [
        4804,
        5282
      ],
      "op": "POP",
      "path": "1"
    },
    "808": {
      "fn": "BTCDOWN.decimals",
      "offset": [
        1217,
        1299
      ],
      "op": "POP",
      "path": "7"
    },
    "809": {
      "fn": "BTCDOWN.decimals",
      "offset": [
        1291,
        1292
      ],
      "op": "POP",
      "path": "7",
      "statement": 8
    },
    "810": {
      "fn": "BTCDOWN.decimals",
      "offset": [
        1217,
        1299
      ],
      "op": "POP",
      "path": "7"
    },
    "811": {
      "fn": "BTCDOWN.decimals",
      "jump": "o",
      "offset": [
        1217,
        1299
      ],
      "op": "JUMP",
      "path": "7"
    },
    "812": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5677,
        5889
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "813": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5765,
        5769
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x6"
    },
    "815": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5781,
        5861
      ],
      "op": "SWAP1",
      "path": "1",
      "statement": 9
    },
    "816": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5790,
        5802
      ],
      "op": "JUMP",
      "path": "1"
    },
    "817": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5790,
        5800
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "818": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5790,
        5802
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "820": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5790,
        5802
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x284"
    },
    "823": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5804,
        5811
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x33E"
    },
    "826": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5850,
        5860
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x482"
    },
    "829": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5824
      ],
      "op": "JUMP",
      "path": "1"
    },
    "830": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "831": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5825,
        5837
      ],
      "op": "DUP5",
      "path": "1"
    },
    "832": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5825,
        5835
      ],
      "op": "DUP5",
      "path": "1"
    },
    "833": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5825,
        5837
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "835": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5825,
        5837
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "837": {
      "op": "PUSH2",
      "value": "0x34C"
    },
    "840": {
      "op": "PUSH2",
      "value": "0x482"
    },
    "843": {
      "op": "JUMP"
    },
    "844": {
      "op": "JUMPDEST"
    },
    "845": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "847": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "849": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "851": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "SHL",
      "path": "1"
    },
    "852": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "SUB",
      "path": "1"
    },
    "853": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "854": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "DUP2",
      "path": "1"
    },
    "855": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "AND",
      "path": "1"
    },
    "856": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "DUP3",
      "path": "1"
    },
    "857": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "858": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "860": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "DUP1",
      "path": "1"
    },
    "861": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "DUP4",
      "path": "1"
    },
    "862": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "ADD",
      "path": "1"
    },
    "863": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "864": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "865": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "866": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "867": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "869": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "870": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "DUP3",
      "path": "1"
    },
    "871": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "ADD",
      "path": "1"
    },
    "872": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5847
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "874": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5847
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "875": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5847
      ],
      "op": "DUP2",
      "path": "1"
    },
    "876": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5847
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "877": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5847
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "878": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5847
      ],
      "op": "DUP12",
      "path": "1"
    },
    "879": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5847
      ],
      "op": "AND",
      "path": "1"
    },
    "880": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5847
      ],
      "op": "DUP2",
      "path": "1"
    },
    "881": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5847
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "882": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5847
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "883": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5860
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "884": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5860
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "885": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5860
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "886": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5860
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "887": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5813,
        5860
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x380"
    },
    "890": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5860
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "891": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5781,
        5789
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "892": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5781,
        5861
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC18"
    },
    "895": {
      "fn": "BTCDOWN.burn",
      "offset": [
        1129,
        1211
      ],
      "op": "JUMP",
      "path": "7"
    },
    "896": {
      "fn": "BTCDOWN.burn",
      "offset": [
        1178,
        1204
      ],
      "op": "JUMPDEST",
      "path": "7",
      "statement": 10
    },
    "897": {
      "fn": "BTCDOWN.burn",
      "offset": [
        1184,
        1193
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x486"
    },
    "900": {
      "fn": "BTCDOWN.burn",
      "offset": [
        1195,
        1203
      ],
      "op": "JUMP",
      "path": "7"
    },
    "901": {
      "fn": "BTCDOWN.burn",
      "offset": [
        1178,
        1183
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "902": {
      "fn": "BTCDOWN.burn",
      "jump": "i",
      "offset": [
        1178,
        1204
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x38F"
    },
    "905": {
      "fn": "BTCDOWN.burn",
      "offset": [
        1178,
        1204
      ],
      "op": "ORIGIN",
      "path": "7"
    },
    "906": {
      "fn": "BTCDOWN.burn",
      "offset": [
        1129,
        1211
      ],
      "op": "DUP3",
      "path": "7"
    },
    "907": {
      "fn": "BTCDOWN.burn",
      "jump": "o",
      "offset": [
        1129,
        1211
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x664"
    },
    "910": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3326,
        3451
      ],
      "op": "JUMP",
      "path": "1"
    },
    "911": {
      "op": "JUMPDEST"
    },
    "912": {
      "op": "POP"
    },
    "913": {
      "op": "JUMP"
    },
    "914": {
      "op": "JUMPDEST"
    },
    "915": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "917": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 11,
      "value": "0x1"
    },
    "919": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "921": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3400,
        3407
      ],
      "op": "SHL",
      "path": "1"
    },
    "922": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "SUB",
      "path": "1"
    },
    "923": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "DUP2",
      "path": "1"
    },
    "924": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "AND",
      "path": "1"
    },
    "925": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "927": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "928": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "DUP2",
      "path": "1"
    },
    "929": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "930": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "932": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "DUP2",
      "path": "1"
    },
    "933": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "934": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "935": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3326,
        3451
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "937": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3326,
        3451
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "938": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3326,
        3451
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "939": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3326,
        3451
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "940": {
      "fn": "ERC20.balanceOf",
      "jump": "o",
      "offset": [
        3326,
        3451
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "941": {
      "fn": "ERC20.symbol",
      "offset": [
        2285,
        2387
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "942": {
      "fn": "ERC20.symbol",
      "offset": [
        2341,
        2354
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "943": {
      "fn": "ERC20.symbol",
      "offset": [
        2373,
        2380
      ],
      "op": "POP",
      "path": "1",
      "statement": 12
    },
    "944": {
      "fn": "ERC20.symbol",
      "offset": [
        2366,
        2380
      ],
      "op": "JUMP",
      "path": "1"
    },
    "945": {
      "fn": "ERC20.symbol",
      "offset": [
        2366,
        2380
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "946": {
      "fn": "ERC20.symbol",
      "offset": [
        2366,
        2380
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "948": {
      "fn": "ERC20.symbol",
      "offset": [
        2366,
        2380
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "950": {
      "fn": "ERC20.symbol",
      "offset": [
        2366,
        2380
      ],
      "op": "DUP1",
      "path": "1"
    },
    "951": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2366,
        2380
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "952": {
      "fn": "BTCDOWN.mint",
      "offset": [
        1041,
        1123
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1ED"
    },
    "955": {
      "fn": "BTCDOWN.mint",
      "offset": [
        1090,
        1116
      ],
      "op": "SWAP1",
      "path": "7",
      "statement": 13
    },
    "956": {
      "fn": "BTCDOWN.mint",
      "offset": [
        1096,
        1105
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC47"
    },
    "959": {
      "fn": "BTCDOWN.mint",
      "offset": [
        1107,
        1115
      ],
      "op": "JUMP",
      "path": "7"
    },
    "960": {
      "fn": "BTCDOWN.mint",
      "offset": [
        1090,
        1095
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "961": {
      "fn": "BTCDOWN.mint",
      "jump": "i",
      "offset": [
        1090,
        1116
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x38F"
    },
    "964": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6376,
        6781
      ],
      "op": "ORIGIN",
      "path": "1"
    },
    "965": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6469,
        6473
      ],
      "op": "DUP3",
      "path": "1"
    },
    "966": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6485,
        6509
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x756"
    },
    "969": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6523
      ],
      "op": "JUMP",
      "path": "1"
    },
    "970": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "971": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6524,
        6536
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "973": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6524,
        6534
      ],
      "op": "DUP1",
      "path": "1"
    },
    "974": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6524,
        6536
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "976": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6524,
        6536
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "978": {
      "op": "PUSH2",
      "value": "0x3D9"
    },
    "981": {
      "op": "PUSH2",
      "value": "0x482"
    },
    "984": {
      "op": "JUMP"
    },
    "985": {
      "op": "JUMPDEST"
    },
    "986": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "988": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "990": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "992": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "SHL",
      "path": "1"
    },
    "993": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "SUB",
      "path": "1"
    },
    "994": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "995": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "DUP2",
      "path": "1"
    },
    "996": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "AND",
      "path": "1"
    },
    "997": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "DUP3",
      "path": "1"
    },
    "998": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "999": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1001": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1002": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1003": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "ADD",
      "path": "1"
    },
    "1004": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1005": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1006": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1007": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1008": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1010": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1011": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1012": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "ADD",
      "path": "1"
    },
    "1013": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6546
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1015": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6546
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1016": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6546
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1017": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6546
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1018": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6546
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1019": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6546
      ],
      "op": "DUP9",
      "path": "1"
    },
    "1020": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6546
      ],
      "op": "AND",
      "path": "1"
    },
    "1021": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6546
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1022": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6546
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1023": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6546
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1024": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6546
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1025": {
      "op": "SWAP1"
    },
    "1026": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6564,
        6599
      ],
      "op": "KECCAK256",
      "path": "1",
      "statement": 14
    },
    "1027": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6564,
        6599
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1028": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6564,
        6599
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1029": {
      "branch": 46,
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6564,
        6599
      ],
      "op": "POP",
      "path": "1"
    },
    "1030": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6556,
        6641
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1031": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6556,
        6641
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1032": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6556,
        6641
      ],
      "op": "LT",
      "path": "1"
    },
    "1033": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6556,
        6641
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1034": {
      "op": "PUSH2",
      "value": "0x425"
    },
    "1037": {
      "op": "JUMPI"
    },
    "1038": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1040": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6556,
        6641
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1041": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6556,
        6641
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x461BCD"
    },
    "1045": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6556,
        6641
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE5"
    },
    "1047": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6556,
        6641
      ],
      "op": "SHL",
      "path": "1"
    },
    "1048": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6556,
        6641
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1049": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6556,
        6641
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1050": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6556,
        6641
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1052": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6556,
        6641
      ],
      "op": "ADD",
      "path": "1"
    },
    "1053": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6556,
        6641
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x304"
    },
    "1056": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6675,
        6742
      ],
      "op": "SWAP1",
      "path": "1",
      "statement": 15
    },
    "1057": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6684,
        6696
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB85"
    },
    "1060": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6684,
        6694
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1061": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6684,
        6696
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1062": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6684,
        6696
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x439"
    },
    "1065": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6698,
        6705
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x430"
    },
    "1068": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6726,
        6741
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x482"
    },
    "1071": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6707,
        6723
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1072": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6707,
        6741
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1073": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6675,
        6683
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1074": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6675,
        6742
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1075": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6675,
        6742
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1076": {
      "op": "SUB"
    },
    "1077": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6774
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 16,
      "value": "0x486"
    },
    "1080": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6774
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1081": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6376,
        6781
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1082": {
      "op": "POP"
    },
    "1083": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1085": {
      "op": "SWAP4"
    },
    "1086": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "o",
      "offset": [
        6376,
        6781
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1087": {
      "fn": "ERC20.transfer",
      "offset": [
        3654,
        3826
      ],
      "op": "POP",
      "path": "1"
    },
    "1088": {
      "fn": "ERC20.transfer",
      "offset": [
        3740,
        3744
      ],
      "op": "POP",
      "path": "1"
    },
    "1089": {
      "fn": "ERC20.transfer",
      "offset": [
        3756,
        3798
      ],
      "op": "POP",
      "path": "1",
      "statement": 17
    },
    "1090": {
      "fn": "ERC20.transfer",
      "offset": [
        3766,
        3778
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1091": {
      "fn": "ERC20.transfer",
      "offset": [
        3766,
        3776
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1092": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3766,
        3778
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1094": {
      "fn": "ERC20.transfer",
      "offset": [
        3766,
        3778
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x284"
    },
    "1097": {
      "fn": "ERC20.transfer",
      "offset": [
        3780,
        3789
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x450"
    },
    "1100": {
      "fn": "ERC20.transfer",
      "offset": [
        3791,
        3797
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x482"
    },
    "1103": {
      "fn": "ERC20.transfer",
      "offset": [
        3756,
        3765
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1104": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3756,
        3798
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1105": {
      "fn": "ERC20.allowance",
      "offset": [
        3884,
        4033
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1106": {
      "op": "DUP5"
    },
    "1107": {
      "op": "PUSH2",
      "value": "0x53A"
    },
    "1110": {
      "op": "JUMP"
    },
    "1111": {
      "op": "JUMPDEST"
    },
    "1112": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1114": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4017
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 18,
      "value": "0x1"
    },
    "1116": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4017
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "1118": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4017
      ],
      "op": "SHL",
      "path": "1"
    },
    "1119": {
      "fn": "ERC20.allowance",
      "offset": [
        3973,
        3980
      ],
      "op": "SUB",
      "path": "1"
    },
    "1120": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4017
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1121": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4017
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1122": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4017
      ],
      "op": "AND",
      "path": "1"
    },
    "1123": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1125": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4017
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1126": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4017
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1127": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4017
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1128": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4017
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1130": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4017
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1132": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4017
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1133": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4017
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1134": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4017
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1135": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4026
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1137": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4026
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1138": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4026
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1139": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4026
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1140": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4026
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1141": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4026
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1142": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4026
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "1143": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4026
      ],
      "op": "AND",
      "path": "1"
    },
    "1144": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4026
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1145": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4026
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1146": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4026
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1147": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4026
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1148": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4026
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1149": {
      "fn": "ERC20.allowance",
      "jump": "o",
      "offset": [
        3884,
        4033
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1150": {
      "fn": "Context._msgSender",
      "offset": [
        586,
        682
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1151": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "SLOAD",
      "path": "4",
      "statement": 19
    },
    "1152": {
      "fn": "Context._msgSender",
      "offset": [
        586,
        682
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1153": {
      "fn": "Context._msgSender",
      "jump": "o",
      "offset": [
        586,
        682
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1154": {
      "fn": "ERC20._approve",
      "offset": [
        9952,
        10322
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1155": {
      "op": "CALLER"
    },
    "1156": {
      "op": "SWAP1"
    },
    "1157": {
      "op": "JUMP"
    },
    "1158": {
      "op": "JUMPDEST"
    },
    "1159": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1161": {
      "fn": "ERC20._approve",
      "offset": [
        10083,
        10102
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 20,
      "value": "0x1"
    },
    "1163": {
      "branch": 47,
      "fn": "ERC20._approve",
      "offset": [
        10083,
        10102
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "1165": {
      "fn": "ERC20._approve",
      "offset": [
        10075,
        10143
      ],
      "op": "SHL",
      "path": "1"
    },
    "1166": {
      "fn": "ERC20._approve",
      "offset": [
        10075,
        10143
      ],
      "op": "SUB",
      "path": "1"
    },
    "1167": {
      "fn": "ERC20._approve",
      "offset": [
        10075,
        10143
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1168": {
      "fn": "ERC20._approve",
      "offset": [
        10075,
        10143
      ],
      "op": "AND",
      "path": "1"
    },
    "1169": {
      "op": "PUSH2",
      "value": "0x4AC"
    },
    "1172": {
      "op": "JUMPI"
    },
    "1173": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1175": {
      "fn": "ERC20._approve",
      "offset": [
        10075,
        10143
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1176": {
      "fn": "ERC20._approve",
      "offset": [
        10075,
        10143
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x461BCD"
    },
    "1180": {
      "fn": "ERC20._approve",
      "offset": [
        10075,
        10143
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE5"
    },
    "1182": {
      "fn": "ERC20._approve",
      "offset": [
        10075,
        10143
      ],
      "op": "SHL",
      "path": "1"
    },
    "1183": {
      "fn": "ERC20._approve",
      "offset": [
        10075,
        10143
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1184": {
      "fn": "ERC20._approve",
      "offset": [
        10075,
        10143
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1185": {
      "fn": "ERC20._approve",
      "offset": [
        10075,
        10143
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1187": {
      "fn": "ERC20._approve",
      "jump": "i",
      "offset": [
        10075,
        10143
      ],
      "op": "ADD",
      "path": "1"
    },
    "1188": {
      "fn": "ERC20._approve",
      "offset": [
        10075,
        10143
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x304"
    },
    "1191": {
      "op": "SWAP1"
    },
    "1192": {
      "op": "PUSH2",
      "value": "0xB41"
    },
    "1195": {
      "op": "JUMP"
    },
    "1196": {
      "op": "JUMPDEST"
    },
    "1197": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1199": {
      "fn": "ERC20._approve",
      "offset": [
        10161,
        10182
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 21,
      "value": "0x1"
    },
    "1201": {
      "branch": 48,
      "fn": "ERC20._approve",
      "offset": [
        10161,
        10182
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "1203": {
      "fn": "ERC20._approve",
      "offset": [
        10153,
        10221
      ],
      "op": "SHL",
      "path": "1"
    },
    "1204": {
      "fn": "ERC20._approve",
      "offset": [
        10153,
        10221
      ],
      "op": "SUB",
      "path": "1"
    },
    "1205": {
      "fn": "ERC20._approve",
      "offset": [
        10153,
        10221
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1206": {
      "fn": "ERC20._approve",
      "offset": [
        10153,
        10221
      ],
      "op": "AND",
      "path": "1"
    },
    "1207": {
      "op": "PUSH2",
      "value": "0x4D2"
    },
    "1210": {
      "op": "JUMPI"
    },
    "1211": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1213": {
      "fn": "ERC20._approve",
      "offset": [
        10153,
        10221
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1214": {
      "fn": "ERC20._approve",
      "offset": [
        10153,
        10221
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x461BCD"
    },
    "1218": {
      "fn": "ERC20._approve",
      "offset": [
        10153,
        10221
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE5"
    },
    "1220": {
      "fn": "ERC20._approve",
      "offset": [
        10153,
        10221
      ],
      "op": "SHL",
      "path": "1"
    },
    "1221": {
      "fn": "ERC20._approve",
      "offset": [
        10153,
        10221
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1222": {
      "fn": "ERC20._approve",
      "offset": [
        10153,
        10221
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1223": {
      "fn": "ERC20._approve",
      "offset": [
        10153,
        10221
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1225": {
      "fn": "ERC20._approve",
      "jump": "i",
      "offset": [
        10153,
        10221
      ],
      "op": "ADD",
      "path": "1"
    },
    "1226": {
      "fn": "ERC20._approve",
      "offset": [
        10153,
        10221
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x304"
    },
    "1229": {
      "op": "SWAP1"
    },
    "1230": {
      "op": "PUSH2",
      "value": "0x9EB"
    },
    "1233": {
      "op": "JUMP"
    },
    "1234": {
      "op": "JUMPDEST"
    },
    "1235": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1237": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 22,
      "value": "0x1"
    },
    "1239": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "1241": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "SHL",
      "path": "1"
    },
    "1242": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "SUB",
      "path": "1"
    },
    "1243": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1244": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1245": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "AND",
      "path": "1"
    },
    "1246": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1248": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1249": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1250": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1251": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1253": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1255": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1256": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1257": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1258": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10259
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1260": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10259
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1261": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10259
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1262": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10259
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1263": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10259
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "1264": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10259
      ],
      "op": "DUP8",
      "path": "1"
    },
    "1265": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10259
      ],
      "op": "AND",
      "path": "1"
    },
    "1266": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10259
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1267": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10259
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1268": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10259
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1269": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10259
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "1270": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10259
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1271": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10259
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1272": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10259
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1273": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10268
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1274": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10268
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1275": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10268
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1276": {
      "fn": "ERC20._approve",
      "offset": [
        10283,
        10315
      ],
      "op": "KECCAK256",
      "path": "1",
      "statement": 23
    },
    "1277": {
      "fn": "ERC20._approve",
      "offset": [
        10283,
        10315
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1278": {
      "fn": "ERC20._approve",
      "offset": [
        10283,
        10315
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1279": {
      "fn": "ERC20._approve",
      "offset": [
        10283,
        10315
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1280": {
      "fn": "ERC20._approve",
      "offset": [
        10283,
        10315
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1281": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10268
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "1314": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10268
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1315": {
      "fn": "ERC20._approve",
      "offset": [
        10283,
        10315
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x52D"
    },
    "1318": {
      "fn": "ERC20._approve",
      "jump": "i",
      "offset": [
        10283,
        10315
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1319": {
      "fn": "ERC20._approve",
      "offset": [
        10283,
        10315
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1320": {
      "fn": "ERC20._approve",
      "offset": [
        10283,
        10315
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1321": {
      "fn": "ERC20._approve",
      "offset": [
        10283,
        10315
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC01"
    },
    "1324": {
      "fn": "ERC20._approve",
      "offset": [
        10283,
        10315
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1325": {
      "fn": "ERC20._approve",
      "offset": [
        10283,
        10315
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1326": {
      "fn": "ERC20._approve",
      "offset": [
        10283,
        10315
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1328": {
      "fn": "ERC20._approve",
      "offset": [
        10283,
        10315
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1329": {
      "fn": "ERC20._approve",
      "offset": [
        10283,
        10315
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1330": {
      "fn": "ERC20._approve",
      "offset": [
        9952,
        10322
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1331": {
      "fn": "ERC20._approve",
      "offset": [
        9952,
        10322
      ],
      "op": "SUB",
      "path": "1"
    },
    "1332": {
      "fn": "ERC20._approve",
      "offset": [
        9952,
        10322
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1333": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [
        9952,
        10322
      ],
      "op": "LOG3",
      "path": "1"
    },
    "1334": {
      "fn": "ERC20._transfer",
      "offset": [
        7255,
        7968
      ],
      "op": "POP",
      "path": "1"
    },
    "1335": {
      "op": "POP"
    },
    "1336": {
      "op": "POP"
    },
    "1337": {
      "op": "JUMP"
    },
    "1338": {
      "op": "JUMPDEST"
    },
    "1339": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1341": {
      "fn": "ERC20._transfer",
      "offset": [
        7390,
        7410
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 24,
      "value": "0x1"
    },
    "1343": {
      "branch": 49,
      "fn": "ERC20._transfer",
      "offset": [
        7390,
        7410
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "1345": {
      "fn": "ERC20._transfer",
      "offset": [
        7382,
        7452
      ],
      "op": "SHL",
      "path": "1"
    },
    "1346": {
      "fn": "ERC20._transfer",
      "offset": [
        7382,
        7452
      ],
      "op": "SUB",
      "path": "1"
    },
    "1347": {
      "fn": "ERC20._transfer",
      "offset": [
        7382,
        7452
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1348": {
      "fn": "ERC20._transfer",
      "offset": [
        7382,
        7452
      ],
      "op": "AND",
      "path": "1"
    },
    "1349": {
      "op": "PUSH2",
      "value": "0x560"
    },
    "1352": {
      "op": "JUMPI"
    },
    "1353": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1355": {
      "fn": "ERC20._transfer",
      "offset": [
        7382,
        7452
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1356": {
      "fn": "ERC20._transfer",
      "offset": [
        7382,
        7452
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x461BCD"
    },
    "1360": {
      "fn": "ERC20._transfer",
      "offset": [
        7382,
        7452
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE5"
    },
    "1362": {
      "fn": "ERC20._transfer",
      "offset": [
        7382,
        7452
      ],
      "op": "SHL",
      "path": "1"
    },
    "1363": {
      "fn": "ERC20._transfer",
      "offset": [
        7382,
        7452
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1364": {
      "fn": "ERC20._transfer",
      "offset": [
        7382,
        7452
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1365": {
      "fn": "ERC20._transfer",
      "offset": [
        7382,
        7452
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1367": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7382,
        7452
      ],
      "op": "ADD",
      "path": "1"
    },
    "1368": {
      "fn": "ERC20._transfer",
      "offset": [
        7382,
        7452
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x304"
    },
    "1371": {
      "op": "SWAP1"
    },
    "1372": {
      "op": "PUSH2",
      "value": "0xAFC"
    },
    "1375": {
      "op": "JUMP"
    },
    "1376": {
      "op": "JUMPDEST"
    },
    "1377": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1379": {
      "fn": "ERC20._transfer",
      "offset": [
        7470,
        7493
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 25,
      "value": "0x1"
    },
    "1381": {
      "branch": 50,
      "fn": "ERC20._transfer",
      "offset": [
        7470,
        7493
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "1383": {
      "fn": "ERC20._transfer",
      "offset": [
        7462,
        7533
      ],
      "op": "SHL",
      "path": "1"
    },
    "1384": {
      "fn": "ERC20._transfer",
      "offset": [
        7462,
        7533
      ],
      "op": "SUB",
      "path": "1"
    },
    "1385": {
      "fn": "ERC20._transfer",
      "offset": [
        7462,
        7533
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1386": {
      "fn": "ERC20._transfer",
      "offset": [
        7462,
        7533
      ],
      "op": "AND",
      "path": "1"
    },
    "1387": {
      "op": "PUSH2",
      "value": "0x586"
    },
    "1390": {
      "op": "JUMPI"
    },
    "1391": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1393": {
      "fn": "ERC20._transfer",
      "offset": [
        7462,
        7533
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1394": {
      "fn": "ERC20._transfer",
      "offset": [
        7462,
        7533
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x461BCD"
    },
    "1398": {
      "fn": "ERC20._transfer",
      "offset": [
        7462,
        7533
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE5"
    },
    "1400": {
      "fn": "ERC20._transfer",
      "offset": [
        7462,
        7533
      ],
      "op": "SHL",
      "path": "1"
    },
    "1401": {
      "fn": "ERC20._transfer",
      "offset": [
        7462,
        7533
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1402": {
      "fn": "ERC20._transfer",
      "offset": [
        7462,
        7533
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1403": {
      "fn": "ERC20._transfer",
      "offset": [
        7462,
        7533
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1405": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7462,
        7533
      ],
      "op": "ADD",
      "path": "1"
    },
    "1406": {
      "fn": "ERC20._transfer",
      "offset": [
        7462,
        7533
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x304"
    },
    "1409": {
      "fn": "ERC20._transfer",
      "offset": [
        7544,
        7591
      ],
      "op": "SWAP1",
      "path": "1",
      "statement": 26
    },
    "1410": {
      "fn": "ERC20._transfer",
      "offset": [
        7565,
        7571
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x966"
    },
    "1413": {
      "fn": "ERC20._transfer",
      "offset": [
        7573,
        7582
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1414": {
      "fn": "ERC20._transfer",
      "offset": [
        7584,
        7590
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1415": {
      "fn": "ERC20._transfer",
      "offset": [
        7544,
        7564
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x591"
    },
    "1418": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7544,
        7591
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1419": {
      "fn": "ERC20._transfer",
      "offset": [
        7544,
        7591
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1420": {
      "op": "DUP4"
    },
    "1421": {
      "op": "PUSH2",
      "value": "0x751"
    },
    "1424": {
      "op": "JUMP"
    },
    "1425": {
      "op": "JUMPDEST"
    },
    "1426": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1428": {
      "fn": "ERC20._transfer",
      "offset": [
        7626,
        7643
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1430": {
      "fn": "ERC20._transfer",
      "offset": [
        7626,
        7643
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "1432": {
      "fn": "ERC20._transfer",
      "offset": [
        7602,
        7623
      ],
      "op": "SHL",
      "path": "1"
    },
    "1433": {
      "fn": "ERC20._transfer",
      "offset": [
        7626,
        7643
      ],
      "op": "SUB",
      "path": "1"
    },
    "1434": {
      "fn": "ERC20._transfer",
      "offset": [
        7626,
        7643
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1435": {
      "fn": "ERC20._transfer",
      "offset": [
        7626,
        7643
      ],
      "op": "AND",
      "path": "1"
    },
    "1436": {
      "fn": "ERC20._transfer",
      "offset": [
        7626,
        7643
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1438": {
      "fn": "ERC20._transfer",
      "offset": [
        7626,
        7643
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1439": {
      "fn": "ERC20._transfer",
      "offset": [
        7626,
        7643
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1440": {
      "fn": "ERC20._transfer",
      "offset": [
        7626,
        7643
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1441": {
      "fn": "ERC20._transfer",
      "offset": [
        7626,
        7643
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1443": {
      "fn": "ERC20._transfer",
      "offset": [
        7626,
        7643
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1444": {
      "fn": "ERC20._transfer",
      "offset": [
        7626,
        7643
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1445": {
      "fn": "ERC20._transfer",
      "offset": [
        7626,
        7643
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1446": {
      "fn": "ERC20._transfer",
      "offset": [
        7661,
        7684
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 27,
      "value": "0x40"
    },
    "1448": {
      "fn": "ERC20._transfer",
      "offset": [
        7661,
        7684
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1449": {
      "fn": "ERC20._transfer",
      "offset": [
        7661,
        7684
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1450": {
      "branch": 51,
      "fn": "ERC20._transfer",
      "offset": [
        7661,
        7684
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1451": {
      "fn": "ERC20._transfer",
      "offset": [
        7653,
        7727
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1452": {
      "fn": "ERC20._transfer",
      "offset": [
        7653,
        7727
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1453": {
      "fn": "ERC20._transfer",
      "offset": [
        7653,
        7727
      ],
      "op": "LT",
      "path": "1"
    },
    "1454": {
      "fn": "ERC20._transfer",
      "offset": [
        7653,
        7727
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1455": {
      "op": "PUSH2",
      "value": "0x5CA"
    },
    "1458": {
      "op": "JUMPI"
    },
    "1459": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1461": {
      "fn": "ERC20._transfer",
      "offset": [
        7653,
        7727
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1462": {
      "fn": "ERC20._transfer",
      "offset": [
        7653,
        7727
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x461BCD"
    },
    "1466": {
      "fn": "ERC20._transfer",
      "offset": [
        7653,
        7727
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE5"
    },
    "1468": {
      "fn": "ERC20._transfer",
      "offset": [
        7653,
        7727
      ],
      "op": "SHL",
      "path": "1"
    },
    "1469": {
      "fn": "ERC20._transfer",
      "offset": [
        7653,
        7727
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1470": {
      "fn": "ERC20._transfer",
      "offset": [
        7653,
        7727
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1471": {
      "fn": "ERC20._transfer",
      "offset": [
        7653,
        7727
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1473": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7653,
        7727
      ],
      "op": "ADD",
      "path": "1"
    },
    "1474": {
      "fn": "ERC20._transfer",
      "offset": [
        7653,
        7727
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x304"
    },
    "1477": {
      "op": "SWAP1"
    },
    "1478": {
      "op": "PUSH2",
      "value": "0xA2D"
    },
    "1481": {
      "op": "JUMP"
    },
    "1482": {
      "op": "JUMPDEST"
    },
    "1483": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1485": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7778
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 28,
      "value": "0x1"
    },
    "1487": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7778
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "1489": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7778
      ],
      "op": "SHL",
      "path": "1"
    },
    "1490": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7770
      ],
      "op": "SUB",
      "path": "1"
    },
    "1491": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7778
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1492": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7778
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1493": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7778
      ],
      "op": "AND",
      "path": "1"
    },
    "1494": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7778
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1496": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7778
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1497": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7778
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1498": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7778
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1499": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7778
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1501": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7778
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1502": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7778
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1503": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7778
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1504": {
      "fn": "ERC20._transfer",
      "offset": [
        7781,
        7803
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1506": {
      "fn": "ERC20._transfer",
      "offset": [
        7781,
        7803
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1507": {
      "fn": "ERC20._transfer",
      "offset": [
        7781,
        7803
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1508": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7803
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1509": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7803
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1510": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7843
      ],
      "op": "DUP6",
      "path": "1",
      "statement": 29
    },
    "1511": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7843
      ],
      "op": "SUB",
      "path": "1"
    },
    "1512": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7843
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1513": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7843
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1514": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7843
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1515": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7843
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1516": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7843
      ],
      "op": "AND",
      "path": "1"
    },
    "1517": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7843
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1518": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7853
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1519": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7853
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1520": {
      "fn": "ERC20._transfer",
      "offset": [
        7781,
        7803
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1521": {
      "fn": "ERC20._transfer",
      "offset": [
        7781,
        7803
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1522": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7770
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1523": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7853
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1524": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7853
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1525": {
      "fn": "ERC20._transfer",
      "offset": [
        7781,
        7803
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1526": {
      "fn": "ERC20._transfer",
      "offset": [
        7781,
        7803
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1527": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7853
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x601"
    },
    "1530": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7823,
        7853
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1531": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7853
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1532": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7853
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1533": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7853
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC18"
    },
    "1536": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7853
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1537": {
      "op": "JUMPDEST"
    },
    "1538": {
      "op": "SWAP3"
    },
    "1539": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "POP",
      "path": "1",
      "statement": 30
    },
    "1540": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "POP",
      "path": "1"
    },
    "1541": {
      "op": "DUP2"
    },
    "1542": {
      "op": "SWAP1"
    },
    "1543": {
      "op": "SSTORE"
    },
    "1544": {
      "op": "POP"
    },
    "1545": {
      "op": "DUP3"
    },
    "1546": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1548": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1550": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "1552": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "SHL",
      "path": "1"
    },
    "1553": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "SUB",
      "path": "1"
    },
    "1554": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "AND",
      "path": "1"
    },
    "1555": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1556": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1558": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1560": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "1562": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "SHL",
      "path": "1"
    },
    "1563": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "SUB",
      "path": "1"
    },
    "1564": {
      "fn": "ERC20._transfer",
      "offset": [
        7897,
        7903
      ],
      "op": "AND",
      "path": "1"
    },
    "1565": {
      "fn": "ERC20._transfer",
      "offset": [
        7897,
        7903
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "1598": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1599": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7869,
        7904
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1601": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1602": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x64B"
    },
    "1605": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1606": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1607": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC01"
    },
    "1610": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1611": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1612": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1614": {
      "fn": "ERC20._transfer",
      "offset": [
        7915,
        7961
      ],
      "op": "MLOAD",
      "path": "1",
      "statement": 31
    },
    "1615": {
      "fn": "ERC20._transfer",
      "offset": [
        7935,
        7941
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1616": {
      "fn": "ERC20._transfer",
      "offset": [
        7943,
        7952
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1617": {
      "fn": "ERC20._transfer",
      "offset": [
        7954,
        7960
      ],
      "op": "SUB",
      "path": "1"
    },
    "1618": {
      "fn": "ERC20._transfer",
      "offset": [
        7915,
        7934
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1619": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7915,
        7961
      ],
      "op": "LOG3",
      "path": "1"
    },
    "1620": {
      "fn": "ERC20._transfer",
      "offset": [
        7915,
        7961
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x65E"
    },
    "1623": {
      "fn": "ERC20._transfer",
      "offset": [
        7255,
        7968
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1624": {
      "fn": "ERC20._transfer",
      "offset": [
        7255,
        7968
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1625": {
      "fn": "ERC20._transfer",
      "offset": [
        7255,
        7968
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1626": {
      "fn": "ERC20._transfer",
      "offset": [
        7255,
        7968
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x751"
    },
    "1629": {
      "fn": "ERC20._transfer",
      "jump": "o",
      "offset": [
        7255,
        7968
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1630": {
      "fn": "ERC20._burn",
      "offset": [
        8953,
        9529
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1631": {
      "op": "POP"
    },
    "1632": {
      "op": "POP"
    },
    "1633": {
      "op": "POP"
    },
    "1634": {
      "op": "POP"
    },
    "1635": {
      "op": "JUMP"
    },
    "1636": {
      "fn": "ERC20._burn",
      "offset": [
        9036,
        9057
      ],
      "op": "JUMPDEST",
      "path": "1",
      "statement": 32
    },
    "1637": {
      "branch": 52,
      "fn": "ERC20._burn",
      "offset": [
        9036,
        9057
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1639": {
      "fn": "ERC20._burn",
      "offset": [
        9028,
        9095
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1641": {
      "fn": "ERC20._burn",
      "offset": [
        9028,
        9095
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "1643": {
      "fn": "ERC20._burn",
      "offset": [
        9028,
        9095
      ],
      "op": "SHL",
      "path": "1"
    },
    "1644": {
      "fn": "ERC20._burn",
      "offset": [
        9028,
        9095
      ],
      "op": "SUB",
      "path": "1"
    },
    "1645": {
      "op": "DUP3"
    },
    "1646": {
      "op": "AND"
    },
    "1647": {
      "op": "PUSH2",
      "value": "0x68A"
    },
    "1650": {
      "branch": 52,
      "fn": "ERC20._burn",
      "offset": [
        9028,
        9095
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1651": {
      "fn": "ERC20._burn",
      "offset": [
        9028,
        9095
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1653": {
      "fn": "ERC20._burn",
      "offset": [
        9028,
        9095
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1654": {
      "fn": "ERC20._burn",
      "offset": [
        9028,
        9095
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x461BCD"
    },
    "1658": {
      "fn": "ERC20._burn",
      "offset": [
        9028,
        9095
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE5"
    },
    "1660": {
      "fn": "ERC20._burn",
      "offset": [
        9028,
        9095
      ],
      "op": "SHL",
      "path": "1"
    },
    "1661": {
      "fn": "ERC20._burn",
      "offset": [
        9028,
        9095
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1662": {
      "fn": "ERC20._burn",
      "jump": "i",
      "offset": [
        9028,
        9095
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1663": {
      "fn": "ERC20._burn",
      "offset": [
        9028,
        9095
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1665": {
      "fn": "ERC20._burn",
      "offset": [
        9106,
        9155
      ],
      "op": "ADD",
      "path": "1",
      "statement": 33
    },
    "1666": {
      "fn": "ERC20._burn",
      "offset": [
        9127,
        9134
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x304"
    },
    "1669": {
      "fn": "ERC20._burn",
      "offset": [
        9144,
        9145
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1670": {
      "fn": "ERC20._burn",
      "offset": [
        9148,
        9154
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xABB"
    },
    "1673": {
      "fn": "ERC20._burn",
      "offset": [
        9106,
        9126
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1674": {
      "fn": "ERC20._burn",
      "jump": "i",
      "offset": [
        9106,
        9155
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1675": {
      "fn": "ERC20._burn",
      "offset": [
        9106,
        9155
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x696"
    },
    "1678": {
      "op": "DUP3"
    },
    "1679": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1681": {
      "op": "DUP4"
    },
    "1682": {
      "op": "PUSH2",
      "value": "0x751"
    },
    "1685": {
      "op": "JUMP"
    },
    "1686": {
      "fn": "ERC20._burn",
      "offset": [
        9191,
        9209
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1687": {
      "fn": "ERC20._burn",
      "offset": [
        9191,
        9209
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1689": {
      "fn": "ERC20._burn",
      "offset": [
        9166,
        9188
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1691": {
      "fn": "ERC20._burn",
      "offset": [
        9191,
        9209
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "1693": {
      "fn": "ERC20._burn",
      "offset": [
        9191,
        9209
      ],
      "op": "SHL",
      "path": "1"
    },
    "1694": {
      "fn": "ERC20._burn",
      "offset": [
        9191,
        9209
      ],
      "op": "SUB",
      "path": "1"
    },
    "1695": {
      "fn": "ERC20._burn",
      "offset": [
        9191,
        9209
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1696": {
      "fn": "ERC20._burn",
      "offset": [
        9191,
        9209
      ],
      "op": "AND",
      "path": "1"
    },
    "1697": {
      "fn": "ERC20._burn",
      "offset": [
        9191,
        9209
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1699": {
      "fn": "ERC20._burn",
      "offset": [
        9191,
        9209
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1700": {
      "fn": "ERC20._burn",
      "offset": [
        9191,
        9209
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1701": {
      "fn": "ERC20._burn",
      "offset": [
        9191,
        9209
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1702": {
      "fn": "ERC20._burn",
      "offset": [
        9191,
        9209
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1704": {
      "fn": "ERC20._burn",
      "offset": [
        9191,
        9209
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1705": {
      "fn": "ERC20._burn",
      "offset": [
        9227,
        9251
      ],
      "op": "SWAP1",
      "path": "1",
      "statement": 34
    },
    "1706": {
      "fn": "ERC20._burn",
      "offset": [
        9227,
        9251
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1707": {
      "fn": "ERC20._burn",
      "offset": [
        9227,
        9251
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1709": {
      "branch": 53,
      "fn": "ERC20._burn",
      "offset": [
        9227,
        9251
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1710": {
      "fn": "ERC20._burn",
      "offset": [
        9219,
        9290
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1711": {
      "fn": "ERC20._burn",
      "offset": [
        9219,
        9290
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1712": {
      "fn": "ERC20._burn",
      "offset": [
        9219,
        9290
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1713": {
      "fn": "ERC20._burn",
      "offset": [
        9219,
        9290
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1714": {
      "op": "LT"
    },
    "1715": {
      "op": "ISZERO"
    },
    "1716": {
      "op": "PUSH2",
      "value": "0x6CF"
    },
    "1719": {
      "branch": 53,
      "fn": "ERC20._burn",
      "offset": [
        9219,
        9290
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1720": {
      "fn": "ERC20._burn",
      "offset": [
        9219,
        9290
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1722": {
      "fn": "ERC20._burn",
      "offset": [
        9219,
        9290
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1723": {
      "fn": "ERC20._burn",
      "offset": [
        9219,
        9290
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x461BCD"
    },
    "1727": {
      "fn": "ERC20._burn",
      "offset": [
        9219,
        9290
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE5"
    },
    "1729": {
      "fn": "ERC20._burn",
      "offset": [
        9219,
        9290
      ],
      "op": "SHL",
      "path": "1"
    },
    "1730": {
      "fn": "ERC20._burn",
      "offset": [
        9219,
        9290
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1731": {
      "fn": "ERC20._burn",
      "jump": "i",
      "offset": [
        9219,
        9290
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1732": {
      "fn": "ERC20._burn",
      "offset": [
        9219,
        9290
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1734": {
      "op": "ADD"
    },
    "1735": {
      "op": "PUSH2",
      "value": "0x304"
    },
    "1738": {
      "op": "SWAP1"
    },
    "1739": {
      "op": "PUSH2",
      "value": "0x9A9"
    },
    "1742": {
      "op": "JUMP"
    },
    "1743": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9342
      ],
      "op": "JUMPDEST",
      "path": "1",
      "statement": 35
    },
    "1744": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9342
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1746": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9333
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1748": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9342
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "1750": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9342
      ],
      "op": "SHL",
      "path": "1"
    },
    "1751": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9342
      ],
      "op": "SUB",
      "path": "1"
    },
    "1752": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9342
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1753": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9342
      ],
      "op": "AND",
      "path": "1"
    },
    "1754": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9342
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1756": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9342
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1757": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9342
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1758": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9342
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1759": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9342
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1761": {
      "fn": "ERC20._burn",
      "offset": [
        9345,
        9368
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1762": {
      "fn": "ERC20._burn",
      "offset": [
        9345,
        9368
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1763": {
      "fn": "ERC20._burn",
      "offset": [
        9345,
        9368
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1764": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9368
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1766": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9368
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1767": {
      "fn": "ERC20._burn",
      "offset": [
        9388,
        9400
      ],
      "op": "KECCAK256",
      "path": "1",
      "statement": 36
    },
    "1768": {
      "fn": "ERC20._burn",
      "offset": [
        9388,
        9410
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1769": {
      "fn": "ERC20._burn",
      "offset": [
        9388,
        9410
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1770": {
      "fn": "ERC20._burn",
      "offset": [
        9345,
        9368
      ],
      "op": "SUB",
      "path": "1"
    },
    "1771": {
      "fn": "ERC20._burn",
      "offset": [
        9345,
        9368
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1772": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9333
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1773": {
      "fn": "ERC20._burn",
      "offset": [
        9388,
        9410
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "1775": {
      "fn": "ERC20._burn",
      "offset": [
        9388,
        9410
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1776": {
      "fn": "ERC20._burn",
      "offset": [
        9345,
        9368
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1777": {
      "fn": "ERC20._burn",
      "offset": [
        9345,
        9368
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1778": {
      "fn": "ERC20._burn",
      "offset": [
        9388,
        9410
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1779": {
      "fn": "ERC20._burn",
      "jump": "i",
      "offset": [
        9388,
        9410
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1780": {
      "fn": "ERC20._burn",
      "offset": [
        9388,
        9410
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6FE"
    },
    "1783": {
      "fn": "ERC20._burn",
      "offset": [
        9388,
        9410
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1784": {
      "fn": "ERC20._burn",
      "offset": [
        9388,
        9410
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1785": {
      "fn": "ERC20._burn",
      "offset": [
        9388,
        9410
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1786": {
      "op": "PUSH2",
      "value": "0xC30"
    },
    "1789": {
      "op": "JUMP"
    },
    "1790": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "JUMPDEST",
      "path": "1",
      "statement": 37
    },
    "1791": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1792": {
      "fn": "ERC20._burn",
      "offset": [
        9452,
        9453
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1793": {
      "fn": "ERC20._burn",
      "offset": [
        9452,
        9453
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1794": {
      "op": "POP"
    },
    "1795": {
      "op": "POP"
    },
    "1796": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1798": {
      "op": "MLOAD"
    },
    "1799": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1801": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1802": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1804": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1806": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "1808": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "SHL",
      "path": "1"
    },
    "1809": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "SUB",
      "path": "1"
    },
    "1810": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1811": {
      "fn": "ERC20._burn",
      "offset": [
        9456,
        9462
      ],
      "op": "AND",
      "path": "1"
    },
    "1812": {
      "fn": "ERC20._burn",
      "offset": [
        9456,
        9462
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1813": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "1846": {
      "fn": "ERC20._burn",
      "jump": "i",
      "offset": [
        9426,
        9463
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1847": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x741"
    },
    "1850": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1851": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "DUP7",
      "path": "1"
    },
    "1852": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1853": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC01"
    },
    "1856": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1857": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1858": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1860": {
      "fn": "ERC20._burn",
      "offset": [
        9474,
        9522
      ],
      "op": "MLOAD",
      "path": "1",
      "statement": 38
    },
    "1861": {
      "fn": "ERC20._burn",
      "offset": [
        9494,
        9501
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1862": {
      "fn": "ERC20._burn",
      "offset": [
        9511,
        9512
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1863": {
      "fn": "ERC20._burn",
      "offset": [
        9515,
        9521
      ],
      "op": "SUB",
      "path": "1"
    },
    "1864": {
      "fn": "ERC20._burn",
      "offset": [
        9474,
        9522
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1865": {
      "fn": "ERC20._burn",
      "offset": [
        8953,
        9529
      ],
      "op": "LOG3",
      "path": "1"
    },
    "1866": {
      "fn": "ERC20._burn",
      "offset": [
        8953,
        9529
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x751"
    },
    "1869": {
      "fn": "ERC20._burn",
      "offset": [
        8953,
        9529
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1870": {
      "fn": "ERC20._burn",
      "jump": "o",
      "offset": [
        8953,
        9529
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1872": {
      "fn": "ERC20._mint",
      "offset": [
        8244,
        8633
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1873": {
      "op": "JUMPDEST"
    },
    "1874": {
      "op": "POP"
    },
    "1875": {
      "op": "POP"
    },
    "1876": {
      "op": "POP"
    },
    "1877": {
      "op": "JUMP"
    },
    "1878": {
      "fn": "ERC20._mint",
      "offset": [
        8327,
        8348
      ],
      "op": "JUMPDEST",
      "path": "1",
      "statement": 39
    },
    "1879": {
      "branch": 54,
      "fn": "ERC20._mint",
      "offset": [
        8327,
        8348
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1881": {
      "fn": "ERC20._mint",
      "offset": [
        8319,
        8384
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1883": {
      "fn": "ERC20._mint",
      "offset": [
        8319,
        8384
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "1885": {
      "fn": "ERC20._mint",
      "offset": [
        8319,
        8384
      ],
      "op": "SHL",
      "path": "1"
    },
    "1886": {
      "fn": "ERC20._mint",
      "offset": [
        8319,
        8384
      ],
      "op": "SUB",
      "path": "1"
    },
    "1887": {
      "op": "DUP3"
    },
    "1888": {
      "op": "AND"
    },
    "1889": {
      "op": "PUSH2",
      "value": "0x77C"
    },
    "1892": {
      "branch": 54,
      "fn": "ERC20._mint",
      "offset": [
        8319,
        8384
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1893": {
      "fn": "ERC20._mint",
      "offset": [
        8319,
        8384
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1895": {
      "fn": "ERC20._mint",
      "offset": [
        8319,
        8384
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1896": {
      "fn": "ERC20._mint",
      "offset": [
        8319,
        8384
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x461BCD"
    },
    "1900": {
      "fn": "ERC20._mint",
      "offset": [
        8319,
        8384
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE5"
    },
    "1902": {
      "fn": "ERC20._mint",
      "offset": [
        8319,
        8384
      ],
      "op": "SHL",
      "path": "1"
    },
    "1903": {
      "fn": "ERC20._mint",
      "offset": [
        8319,
        8384
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1904": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8319,
        8384
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1905": {
      "fn": "ERC20._mint",
      "offset": [
        8319,
        8384
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1907": {
      "fn": "ERC20._mint",
      "offset": [
        8395,
        8444
      ],
      "op": "ADD",
      "path": "1",
      "statement": 40
    },
    "1908": {
      "fn": "ERC20._mint",
      "offset": [
        8424,
        8425
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x304"
    },
    "1911": {
      "fn": "ERC20._mint",
      "offset": [
        8428,
        8435
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1912": {
      "fn": "ERC20._mint",
      "offset": [
        8437,
        8443
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBCA"
    },
    "1915": {
      "fn": "ERC20._mint",
      "offset": [
        8395,
        8415
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1916": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8395,
        8444
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1917": {
      "fn": "ERC20._mint",
      "offset": [
        8395,
        8444
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x788"
    },
    "1920": {
      "fn": "ERC20._mint",
      "offset": [
        8471,
        8477
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 41,
      "value": "0x0"
    },
    "1922": {
      "fn": "ERC20._mint",
      "offset": [
        8455,
        8467
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1923": {
      "fn": "ERC20._mint",
      "offset": [
        8455,
        8467
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1924": {
      "fn": "ERC20._mint",
      "offset": [
        8455,
        8477
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x751"
    },
    "1927": {
      "fn": "ERC20._mint",
      "offset": [
        8455,
        8477
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1928": {
      "fn": "ERC20._mint",
      "offset": [
        8455,
        8477
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1929": {
      "fn": "ERC20._mint",
      "offset": [
        8455,
        8477
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1930": {
      "fn": "ERC20._mint",
      "offset": [
        8455,
        8477
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "1932": {
      "fn": "ERC20._mint",
      "offset": [
        8455,
        8477
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1934": {
      "fn": "ERC20._mint",
      "offset": [
        8455,
        8477
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1935": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8455,
        8477
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1936": {
      "fn": "ERC20._mint",
      "offset": [
        8455,
        8477
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1937": {
      "fn": "ERC20._mint",
      "offset": [
        8455,
        8477
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x79A"
    },
    "1940": {
      "fn": "ERC20._mint",
      "offset": [
        8455,
        8477
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1941": {
      "fn": "ERC20._mint",
      "offset": [
        8455,
        8477
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1942": {
      "op": "PUSH2",
      "value": "0xC18"
    },
    "1945": {
      "op": "JUMP"
    },
    "1946": {
      "op": "JUMPDEST"
    },
    "1947": {
      "op": "SWAP1"
    },
    "1948": {
      "op": "SWAP2"
    },
    "1949": {
      "op": "SSTORE"
    },
    "1950": {
      "op": "POP"
    },
    "1951": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8505
      ],
      "op": "POP",
      "path": "1",
      "statement": 42
    },
    "1952": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8505
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1954": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8496
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1956": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8505
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "1958": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8505
      ],
      "op": "SHL",
      "path": "1"
    },
    "1959": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8505
      ],
      "op": "SUB",
      "path": "1"
    },
    "1960": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8505
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1961": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8505
      ],
      "op": "AND",
      "path": "1"
    },
    "1962": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8505
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1964": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8505
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1965": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8505
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1966": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8505
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1967": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8505
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1969": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8515
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1970": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8515
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1971": {
      "fn": "ERC20._mint",
      "offset": [
        8509,
        8515
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1972": {
      "fn": "ERC20._mint",
      "offset": [
        8509,
        8515
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1974": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8496
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1975": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8515
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1976": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8515
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1977": {
      "fn": "ERC20._mint",
      "offset": [
        8509,
        8515
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1978": {
      "fn": "ERC20._mint",
      "offset": [
        8509,
        8515
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1979": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8515
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1980": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8487,
        8515
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1981": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8515
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7C7"
    },
    "1984": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8515
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1985": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8515
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1986": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8515
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1987": {
      "op": "PUSH2",
      "value": "0xC18"
    },
    "1990": {
      "op": "JUMP"
    },
    "1991": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "JUMPDEST",
      "path": "1",
      "statement": 43
    },
    "1992": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1993": {
      "op": "SWAP2"
    },
    "1994": {
      "op": "SSTORE"
    },
    "1995": {
      "op": "POP"
    },
    "1996": {
      "op": "POP"
    },
    "1997": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1999": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2000": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2002": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2004": {
      "fn": "ERC20._mint",
      "offset": [
        8547,
        8548
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "2006": {
      "fn": "ERC20._mint",
      "offset": [
        8547,
        8548
      ],
      "op": "SHL",
      "path": "1"
    },
    "2007": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "SUB",
      "path": "1"
    },
    "2008": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2009": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "AND",
      "path": "1"
    },
    "2010": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2011": {
      "fn": "ERC20._mint",
      "offset": [
        8560,
        8566
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2013": {
      "fn": "ERC20._mint",
      "offset": [
        8560,
        8566
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2014": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "2047": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8530,
        8567
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2048": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x80A"
    },
    "2051": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2052": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2053": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2054": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC01"
    },
    "2057": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2058": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2059": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2061": {
      "fn": "ERC20._mint",
      "offset": [
        8578,
        8626
      ],
      "op": "MLOAD",
      "path": "1",
      "statement": 44
    },
    "2062": {
      "fn": "ERC20._mint",
      "offset": [
        8606,
        8607
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2063": {
      "fn": "ERC20._mint",
      "offset": [
        8610,
        8617
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2064": {
      "fn": "ERC20._mint",
      "offset": [
        8619,
        8625
      ],
      "op": "SUB",
      "path": "1"
    },
    "2065": {
      "fn": "ERC20._mint",
      "offset": [
        8578,
        8597
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2066": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8578,
        8626
      ],
      "op": "LOG3",
      "path": "1"
    },
    "2067": {
      "fn": "ERC20._mint",
      "offset": [
        8578,
        8626
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x81E"
    },
    "2070": {
      "fn": "ERC20._mint",
      "offset": [
        8244,
        8633
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2072": {
      "fn": "ERC20._mint",
      "offset": [
        8244,
        8633
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2073": {
      "fn": "ERC20._mint",
      "jump": "o",
      "offset": [
        8244,
        8633
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2074": {
      "op": "PUSH2",
      "value": "0x751"
    },
    "2077": {
      "op": "JUMP"
    },
    "2078": {
      "op": "JUMPDEST"
    },
    "2079": {
      "op": "POP"
    },
    "2080": {
      "op": "POP"
    },
    "2081": {
      "op": "JUMP"
    },
    "2082": {
      "op": "JUMPDEST"
    },
    "2083": {
      "op": "DUP1"
    },
    "2084": {
      "op": "CALLDATALOAD"
    },
    "2085": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2087": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2089": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2091": {
      "op": "SHL"
    },
    "2092": {
      "op": "SUB"
    },
    "2093": {
      "op": "DUP2"
    },
    "2094": {
      "op": "AND"
    },
    "2095": {
      "op": "DUP2"
    },
    "2096": {
      "op": "EQ"
    },
    "2097": {
      "op": "PUSH2",
      "value": "0x3AC"
    },
    "2100": {
      "op": "JUMPI"
    },
    "2101": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2103": {
      "op": "DUP1"
    },
    "2104": {
      "op": "REVERT"
    },
    "2105": {
      "op": "JUMPDEST"
    },
    "2106": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2108": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2110": {
      "op": "DUP3"
    },
    "2111": {
      "op": "DUP5"
    },
    "2112": {
      "op": "SUB"
    },
    "2113": {
      "op": "SLT"
    },
    "2114": {
      "op": "ISZERO"
    },
    "2115": {
      "op": "PUSH2",
      "value": "0x84A"
    },
    "2118": {
      "op": "JUMPI"
    },
    "2119": {
      "op": "DUP1"
    },
    "2120": {
      "jump": "i",
      "op": "DUP2"
    },
    "2121": {
      "op": "REVERT"
    },
    "2122": {
      "op": "JUMPDEST"
    },
    "2123": {
      "op": "PUSH2",
      "value": "0x853"
    },
    "2126": {
      "op": "DUP3"
    },
    "2127": {
      "op": "PUSH2",
      "value": "0x822"
    },
    "2130": {
      "op": "JUMP"
    },
    "2131": {
      "jump": "o",
      "op": "JUMPDEST"
    },
    "2132": {
      "op": "SWAP4"
    },
    "2133": {
      "op": "SWAP3"
    },
    "2134": {
      "op": "POP"
    },
    "2135": {
      "op": "POP"
    },
    "2136": {
      "op": "POP"
    },
    "2137": {
      "op": "JUMP"
    },
    "2138": {
      "op": "JUMPDEST"
    },
    "2139": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2141": {
      "op": "DUP1"
    },
    "2142": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2144": {
      "op": "DUP4"
    },
    "2145": {
      "op": "DUP6"
    },
    "2146": {
      "op": "SUB"
    },
    "2147": {
      "op": "SLT"
    },
    "2148": {
      "op": "ISZERO"
    },
    "2149": {
      "op": "PUSH2",
      "value": "0x86C"
    },
    "2152": {
      "op": "JUMPI"
    },
    "2153": {
      "op": "DUP1"
    },
    "2154": {
      "jump": "i",
      "op": "DUP2"
    },
    "2155": {
      "op": "REVERT"
    },
    "2156": {
      "op": "JUMPDEST"
    },
    "2157": {
      "op": "PUSH2",
      "value": "0x875"
    },
    "2160": {
      "op": "DUP4"
    },
    "2161": {
      "op": "PUSH2",
      "value": "0x822"
    },
    "2164": {
      "op": "JUMP"
    },
    "2165": {
      "op": "JUMPDEST"
    },
    "2166": {
      "op": "SWAP2"
    },
    "2167": {
      "jump": "i",
      "op": "POP"
    },
    "2168": {
      "op": "PUSH2",
      "value": "0x883"
    },
    "2171": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2173": {
      "op": "DUP5"
    },
    "2174": {
      "op": "ADD"
    },
    "2175": {
      "op": "PUSH2",
      "value": "0x822"
    },
    "2178": {
      "op": "JUMP"
    },
    "2179": {
      "op": "JUMPDEST"
    },
    "2180": {
      "op": "SWAP1"
    },
    "2181": {
      "jump": "o",
      "op": "POP"
    },
    "2182": {
      "op": "SWAP3"
    },
    "2183": {
      "op": "POP"
    },
    "2184": {
      "op": "SWAP3"
    },
    "2185": {
      "op": "SWAP1"
    },
    "2186": {
      "op": "POP"
    },
    "2187": {
      "op": "JUMP"
    },
    "2188": {
      "op": "JUMPDEST"
    },
    "2189": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2191": {
      "op": "DUP1"
    },
    "2192": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2194": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2196": {
      "op": "DUP5"
    },
    "2197": {
      "op": "DUP7"
    },
    "2198": {
      "op": "SUB"
    },
    "2199": {
      "op": "SLT"
    },
    "2200": {
      "op": "ISZERO"
    },
    "2201": {
      "op": "PUSH2",
      "value": "0x8A0"
    },
    "2204": {
      "op": "JUMPI"
    },
    "2205": {
      "op": "DUP1"
    },
    "2206": {
      "jump": "i",
      "op": "DUP2"
    },
    "2207": {
      "op": "REVERT"
    },
    "2208": {
      "op": "JUMPDEST"
    },
    "2209": {
      "op": "PUSH2",
      "value": "0x8A9"
    },
    "2212": {
      "op": "DUP5"
    },
    "2213": {
      "op": "PUSH2",
      "value": "0x822"
    },
    "2216": {
      "op": "JUMP"
    },
    "2217": {
      "op": "JUMPDEST"
    },
    "2218": {
      "op": "SWAP3"
    },
    "2219": {
      "jump": "i",
      "op": "POP"
    },
    "2220": {
      "op": "PUSH2",
      "value": "0x8B7"
    },
    "2223": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2225": {
      "op": "DUP6"
    },
    "2226": {
      "op": "ADD"
    },
    "2227": {
      "op": "PUSH2",
      "value": "0x822"
    },
    "2230": {
      "op": "JUMP"
    },
    "2231": {
      "op": "JUMPDEST"
    },
    "2232": {
      "op": "SWAP2"
    },
    "2233": {
      "op": "POP"
    },
    "2234": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2236": {
      "op": "DUP5"
    },
    "2237": {
      "op": "ADD"
    },
    "2238": {
      "op": "CALLDATALOAD"
    },
    "2239": {
      "op": "SWAP1"
    },
    "2240": {
      "jump": "o",
      "op": "POP"
    },
    "2241": {
      "op": "SWAP3"
    },
    "2242": {
      "op": "POP"
    },
    "2243": {
      "op": "SWAP3"
    },
    "2244": {
      "op": "POP"
    },
    "2245": {
      "op": "SWAP3"
    },
    "2246": {
      "op": "JUMP"
    },
    "2247": {
      "op": "JUMPDEST"
    },
    "2248": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2250": {
      "op": "DUP1"
    },
    "2251": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2253": {
      "op": "DUP4"
    },
    "2254": {
      "op": "DUP6"
    },
    "2255": {
      "op": "SUB"
    },
    "2256": {
      "op": "SLT"
    },
    "2257": {
      "op": "ISZERO"
    },
    "2258": {
      "op": "PUSH2",
      "value": "0x8D9"
    },
    "2261": {
      "op": "JUMPI"
    },
    "2262": {
      "op": "DUP2"
    },
    "2263": {
      "jump": "i",
      "op": "DUP3"
    },
    "2264": {
      "op": "REVERT"
    },
    "2265": {
      "op": "JUMPDEST"
    },
    "2266": {
      "op": "PUSH2",
      "value": "0x8E2"
    },
    "2269": {
      "op": "DUP4"
    },
    "2270": {
      "op": "PUSH2",
      "value": "0x822"
    },
    "2273": {
      "op": "JUMP"
    },
    "2274": {
      "op": "JUMPDEST"
    },
    "2275": {
      "op": "SWAP5"
    },
    "2276": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2278": {
      "op": "SWAP4"
    },
    "2279": {
      "op": "SWAP1"
    },
    "2280": {
      "op": "SWAP4"
    },
    "2281": {
      "jump": "o",
      "op": "ADD"
    },
    "2282": {
      "op": "CALLDATALOAD"
    },
    "2283": {
      "op": "SWAP4"
    },
    "2284": {
      "op": "POP"
    },
    "2285": {
      "op": "POP"
    },
    "2286": {
      "op": "POP"
    },
    "2287": {
      "op": "JUMP"
    },
    "2288": {
      "op": "JUMPDEST"
    },
    "2289": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2291": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2293": {
      "op": "DUP3"
    },
    "2294": {
      "op": "DUP5"
    },
    "2295": {
      "op": "SUB"
    },
    "2296": {
      "op": "SLT"
    },
    "2297": {
      "op": "ISZERO"
    },
    "2298": {
      "op": "PUSH2",
      "value": "0x901"
    },
    "2301": {
      "op": "JUMPI"
    },
    "2302": {
      "op": "DUP1"
    },
    "2303": {
      "op": "DUP2"
    },
    "2304": {
      "op": "REVERT"
    },
    "2305": {
      "jump": "o",
      "op": "JUMPDEST"
    },
    "2306": {
      "op": "POP"
    },
    "2307": {
      "op": "CALLDATALOAD"
    },
    "2308": {
      "op": "SWAP2"
    },
    "2309": {
      "op": "SWAP1"
    },
    "2310": {
      "op": "POP"
    },
    "2311": {
      "op": "JUMP"
    },
    "2312": {
      "op": "JUMPDEST"
    },
    "2313": {
      "op": "SWAP1"
    },
    "2314": {
      "op": "ISZERO"
    },
    "2315": {
      "jump": "o",
      "op": "ISZERO"
    },
    "2316": {
      "op": "DUP2"
    },
    "2317": {
      "op": "MSTORE"
    },
    "2318": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2320": {
      "op": "ADD"
    },
    "2321": {
      "op": "SWAP1"
    },
    "2322": {
      "op": "JUMP"
    },
    "2323": {
      "op": "JUMPDEST"
    },
    "2324": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2326": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2328": {
      "op": "DUP1"
    },
    "2329": {
      "op": "DUP4"
    },
    "2330": {
      "op": "MSTORE"
    },
    "2331": {
      "op": "DUP4"
    },
    "2332": {
      "op": "MLOAD"
    },
    "2333": {
      "op": "DUP1"
    },
    "2334": {
      "op": "DUP3"
    },
    "2335": {
      "op": "DUP6"
    },
    "2336": {
      "op": "ADD"
    },
    "2337": {
      "op": "MSTORE"
    },
    "2338": {
      "op": "DUP3"
    },
    "2339": {
      "op": "JUMPDEST"
    },
    "2340": {
      "op": "DUP2"
    },
    "2341": {
      "op": "DUP2"
    },
    "2342": {
      "op": "LT"
    },
    "2343": {
      "op": "ISZERO"
    },
    "2344": {
      "op": "PUSH2",
      "value": "0x93F"
    },
    "2347": {
      "op": "JUMPI"
    },
    "2348": {
      "op": "DUP6"
    },
    "2349": {
      "op": "DUP2"
    },
    "2350": {
      "op": "ADD"
    },
    "2351": {
      "op": "DUP4"
    },
    "2352": {
      "op": "ADD"
    },
    "2353": {
      "op": "MLOAD"
    },
    "2354": {
      "op": "DUP6"
    },
    "2355": {
      "op": "DUP3"
    },
    "2356": {
      "op": "ADD"
    },
    "2357": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2359": {
      "op": "ADD"
    },
    "2360": {
      "op": "MSTORE"
    },
    "2361": {
      "op": "DUP3"
    },
    "2362": {
      "op": "ADD"
    },
    "2363": {
      "op": "PUSH2",
      "value": "0x923"
    },
    "2366": {
      "op": "JUMP"
    },
    "2367": {
      "op": "JUMPDEST"
    },
    "2368": {
      "op": "DUP2"
    },
    "2369": {
      "op": "DUP2"
    },
    "2370": {
      "op": "GT"
    },
    "2371": {
      "op": "ISZERO"
    },
    "2372": {
      "op": "PUSH2",
      "value": "0x950"
    },
    "2375": {
      "op": "JUMPI"
    },
    "2376": {
      "op": "DUP4"
    },
    "2377": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2379": {
      "op": "DUP4"
    },
    "2380": {
      "op": "DUP8"
    },
    "2381": {
      "op": "ADD"
    },
    "2382": {
      "op": "ADD"
    },
    "2383": {
      "op": "MSTORE"
    },
    "2384": {
      "op": "JUMPDEST"
    },
    "2385": {
      "op": "POP"
    },
    "2386": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2388": {
      "op": "ADD"
    },
    "2389": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2391": {
      "op": "NOT"
    },
    "2392": {
      "op": "AND"
    },
    "2393": {
      "op": "SWAP3"
    },
    "2394": {
      "op": "SWAP1"
    },
    "2395": {
      "op": "SWAP3"
    },
    "2396": {
      "op": "ADD"
    },
    "2397": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2399": {
      "jump": "o",
      "op": "ADD"
    },
    "2400": {
      "op": "SWAP4"
    },
    "2401": {
      "op": "SWAP3"
    },
    "2402": {
      "op": "POP"
    },
    "2403": {
      "op": "POP"
    },
    "2404": {
      "op": "POP"
    },
    "2405": {
      "op": "JUMP"
    },
    "2406": {
      "op": "JUMPDEST"
    },
    "2407": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2409": {
      "op": "DUP1"
    },
    "2410": {
      "op": "DUP3"
    },
    "2411": {
      "op": "MSTORE"
    },
    "2412": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "2414": {
      "op": "SWAP1"
    },
    "2415": {
      "op": "DUP3"
    },
    "2416": {
      "op": "ADD"
    },
    "2417": {
      "op": "MSTORE"
    },
    "2418": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220746F20746865207A65726F2061646472"
    },
    "2451": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2453": {
      "op": "DUP3"
    },
    "2454": {
      "op": "ADD"
    },
    "2455": {
      "op": "MSTORE"
    },
    "2456": {
      "op": "PUSH3",
      "value": "0x657373"
    },
    "2460": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "2462": {
      "op": "SHL"
    },
    "2463": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2465": {
      "jump": "o",
      "op": "DUP3"
    },
    "2466": {
      "op": "ADD"
    },
    "2467": {
      "op": "MSTORE"
    },
    "2468": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2470": {
      "op": "ADD"
    },
    "2471": {
      "op": "SWAP1"
    },
    "2472": {
      "op": "JUMP"
    },
    "2473": {
      "op": "JUMPDEST"
    },
    "2474": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2476": {
      "op": "DUP1"
    },
    "2477": {
      "op": "DUP3"
    },
    "2478": {
      "op": "MSTORE"
    },
    "2479": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "2481": {
      "op": "SWAP1"
    },
    "2482": {
      "op": "DUP3"
    },
    "2483": {
      "op": "ADD"
    },
    "2484": {
      "op": "MSTORE"
    },
    "2485": {
      "op": "PUSH32",
      "value": "0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E"
    },
    "2518": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2520": {
      "op": "DUP3"
    },
    "2521": {
      "op": "ADD"
    },
    "2522": {
      "op": "MSTORE"
    },
    "2523": {
      "op": "PUSH2",
      "value": "0x6365"
    },
    "2526": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "2528": {
      "op": "SHL"
    },
    "2529": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2531": {
      "jump": "o",
      "op": "DUP3"
    },
    "2532": {
      "op": "ADD"
    },
    "2533": {
      "op": "MSTORE"
    },
    "2534": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2536": {
      "op": "ADD"
    },
    "2537": {
      "op": "SWAP1"
    },
    "2538": {
      "op": "JUMP"
    },
    "2539": {
      "op": "JUMPDEST"
    },
    "2540": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2542": {
      "op": "DUP1"
    },
    "2543": {
      "op": "DUP3"
    },
    "2544": {
      "op": "MSTORE"
    },
    "2545": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "2547": {
      "op": "SWAP1"
    },
    "2548": {
      "op": "DUP3"
    },
    "2549": {
      "op": "ADD"
    },
    "2550": {
      "op": "MSTORE"
    },
    "2551": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F766520746F20746865207A65726F206164647265"
    },
    "2584": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2586": {
      "op": "DUP3"
    },
    "2587": {
      "op": "ADD"
    },
    "2588": {
      "op": "MSTORE"
    },
    "2589": {
      "op": "PUSH2",
      "value": "0x7373"
    },
    "2592": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "2594": {
      "op": "SHL"
    },
    "2595": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2597": {
      "jump": "o",
      "op": "DUP3"
    },
    "2598": {
      "op": "ADD"
    },
    "2599": {
      "op": "MSTORE"
    },
    "2600": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2602": {
      "op": "ADD"
    },
    "2603": {
      "op": "SWAP1"
    },
    "2604": {
      "op": "JUMP"
    },
    "2605": {
      "op": "JUMPDEST"
    },
    "2606": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2608": {
      "op": "DUP1"
    },
    "2609": {
      "op": "DUP3"
    },
    "2610": {
      "op": "MSTORE"
    },
    "2611": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "2613": {
      "op": "SWAP1"
    },
    "2614": {
      "op": "DUP3"
    },
    "2615": {
      "op": "ADD"
    },
    "2616": {
      "op": "MSTORE"
    },
    "2617": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732062"
    },
    "2650": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2652": {
      "op": "DUP3"
    },
    "2653": {
      "op": "ADD"
    },
    "2654": {
      "op": "MSTORE"
    },
    "2655": {
      "op": "PUSH6",
      "value": "0x616C616E6365"
    },
    "2662": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "2664": {
      "op": "SHL"
    },
    "2665": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2667": {
      "jump": "o",
      "op": "DUP3"
    },
    "2668": {
      "op": "ADD"
    },
    "2669": {
      "op": "MSTORE"
    },
    "2670": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2672": {
      "op": "ADD"
    },
    "2673": {
      "op": "SWAP1"
    },
    "2674": {
      "op": "JUMP"
    },
    "2675": {
      "op": "JUMPDEST"
    },
    "2676": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2678": {
      "op": "DUP1"
    },
    "2679": {
      "op": "DUP3"
    },
    "2680": {
      "op": "MSTORE"
    },
    "2681": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "2683": {
      "op": "SWAP1"
    },
    "2684": {
      "op": "DUP3"
    },
    "2685": {
      "op": "ADD"
    },
    "2686": {
      "op": "MSTORE"
    },
    "2687": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732061"
    },
    "2720": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2722": {
      "op": "DUP3"
    },
    "2723": {
      "op": "ADD"
    },
    "2724": {
      "op": "MSTORE"
    },
    "2725": {
      "op": "PUSH8",
      "value": "0x6C6C6F77616E6365"
    },
    "2734": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "2736": {
      "op": "SHL"
    },
    "2737": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2739": {
      "jump": "o",
      "op": "DUP3"
    },
    "2740": {
      "op": "ADD"
    },
    "2741": {
      "op": "MSTORE"
    },
    "2742": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2744": {
      "op": "ADD"
    },
    "2745": {
      "op": "SWAP1"
    },
    "2746": {
      "op": "JUMP"
    },
    "2747": {
      "op": "JUMPDEST"
    },
    "2748": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2750": {
      "op": "DUP1"
    },
    "2751": {
      "op": "DUP3"
    },
    "2752": {
      "op": "MSTORE"
    },
    "2753": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "2755": {
      "op": "SWAP1"
    },
    "2756": {
      "op": "DUP3"
    },
    "2757": {
      "op": "ADD"
    },
    "2758": {
      "op": "MSTORE"
    },
    "2759": {
      "op": "PUSH32",
      "value": "0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573"
    },
    "2792": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2794": {
      "op": "DUP3"
    },
    "2795": {
      "op": "ADD"
    },
    "2796": {
      "op": "MSTORE"
    },
    "2797": {
      "op": "PUSH1",
      "value": "0x73"
    },
    "2799": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "2801": {
      "op": "SHL"
    },
    "2802": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2804": {
      "jump": "o",
      "op": "DUP3"
    },
    "2805": {
      "op": "ADD"
    },
    "2806": {
      "op": "MSTORE"
    },
    "2807": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2809": {
      "op": "ADD"
    },
    "2810": {
      "op": "SWAP1"
    },
    "2811": {
      "op": "JUMP"
    },
    "2812": {
      "op": "JUMPDEST"
    },
    "2813": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2815": {
      "op": "DUP1"
    },
    "2816": {
      "op": "DUP3"
    },
    "2817": {
      "op": "MSTORE"
    },
    "2818": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "2820": {
      "op": "SWAP1"
    },
    "2821": {
      "op": "DUP3"
    },
    "2822": {
      "op": "ADD"
    },
    "2823": {
      "op": "MSTORE"
    },
    "2824": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E736665722066726F6D20746865207A65726F206164"
    },
    "2857": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2859": {
      "op": "DUP3"
    },
    "2860": {
      "op": "ADD"
    },
    "2861": {
      "op": "MSTORE"
    },
    "2862": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "2868": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "2870": {
      "op": "SHL"
    },
    "2871": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2873": {
      "jump": "o",
      "op": "DUP3"
    },
    "2874": {
      "op": "ADD"
    },
    "2875": {
      "op": "MSTORE"
    },
    "2876": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2878": {
      "op": "ADD"
    },
    "2879": {
      "op": "SWAP1"
    },
    "2880": {
      "op": "JUMP"
    },
    "2881": {
      "op": "JUMPDEST"
    },
    "2882": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2884": {
      "op": "DUP1"
    },
    "2885": {
      "op": "DUP3"
    },
    "2886": {
      "op": "MSTORE"
    },
    "2887": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2889": {
      "op": "SWAP1"
    },
    "2890": {
      "op": "DUP3"
    },
    "2891": {
      "op": "ADD"
    },
    "2892": {
      "op": "MSTORE"
    },
    "2893": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
    },
    "2926": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2928": {
      "op": "DUP3"
    },
    "2929": {
      "op": "ADD"
    },
    "2930": {
      "op": "MSTORE"
    },
    "2931": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "2936": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2938": {
      "op": "SHL"
    },
    "2939": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2941": {
      "jump": "o",
      "op": "DUP3"
    },
    "2942": {
      "op": "ADD"
    },
    "2943": {
      "op": "MSTORE"
    },
    "2944": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2946": {
      "op": "ADD"
    },
    "2947": {
      "op": "SWAP1"
    },
    "2948": {
      "op": "JUMP"
    },
    "2949": {
      "op": "JUMPDEST"
    },
    "2950": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2952": {
      "op": "DUP1"
    },
    "2953": {
      "op": "DUP3"
    },
    "2954": {
      "op": "MSTORE"
    },
    "2955": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "2957": {
      "op": "SWAP1"
    },
    "2958": {
      "op": "DUP3"
    },
    "2959": {
      "op": "ADD"
    },
    "2960": {
      "op": "MSTORE"
    },
    "2961": {
      "op": "PUSH32",
      "value": "0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
    },
    "2994": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2996": {
      "op": "DUP3"
    },
    "2997": {
      "op": "ADD"
    },
    "2998": {
      "op": "MSTORE"
    },
    "2999": {
      "op": "PUSH5",
      "value": "0x207A65726F"
    },
    "3005": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "3007": {
      "op": "SHL"
    },
    "3008": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3010": {
      "jump": "o",
      "op": "DUP3"
    },
    "3011": {
      "op": "ADD"
    },
    "3012": {
      "op": "MSTORE"
    },
    "3013": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3015": {
      "op": "ADD"
    },
    "3016": {
      "op": "SWAP1"
    },
    "3017": {
      "op": "JUMP"
    },
    "3018": {
      "op": "JUMPDEST"
    },
    "3019": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3021": {
      "op": "DUP1"
    },
    "3022": {
      "op": "DUP3"
    },
    "3023": {
      "op": "MSTORE"
    },
    "3024": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3026": {
      "op": "SWAP1"
    },
    "3027": {
      "op": "DUP3"
    },
    "3028": {
      "op": "ADD"
    },
    "3029": {
      "op": "MSTORE"
    },
    "3030": {
      "op": "PUSH32",
      "value": "0x45524332303A206D696E7420746F20746865207A65726F206164647265737300"
    },
    "3063": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3065": {
      "jump": "o",
      "op": "DUP3"
    },
    "3066": {
      "op": "ADD"
    },
    "3067": {
      "op": "MSTORE"
    },
    "3068": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3070": {
      "op": "ADD"
    },
    "3071": {
      "op": "SWAP1"
    },
    "3072": {
      "op": "JUMP"
    },
    "3073": {
      "op": "JUMPDEST"
    },
    "3074": {
      "jump": "o",
      "op": "SWAP1"
    },
    "3075": {
      "op": "DUP2"
    },
    "3076": {
      "op": "MSTORE"
    },
    "3077": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3079": {
      "op": "ADD"
    },
    "3080": {
      "op": "SWAP1"
    },
    "3081": {
      "op": "JUMP"
    },
    "3082": {
      "op": "JUMPDEST"
    },
    "3083": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3085": {
      "op": "SWAP2"
    },
    "3086": {
      "op": "SWAP1"
    },
    "3087": {
      "op": "SWAP2"
    },
    "3088": {
      "jump": "o",
      "op": "AND"
    },
    "3089": {
      "op": "DUP2"
    },
    "3090": {
      "op": "MSTORE"
    },
    "3091": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3093": {
      "op": "ADD"
    },
    "3094": {
      "op": "SWAP1"
    },
    "3095": {
      "op": "JUMP"
    },
    "3096": {
      "op": "JUMPDEST"
    },
    "3097": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3099": {
      "op": "DUP3"
    },
    "3100": {
      "op": "NOT"
    },
    "3101": {
      "op": "DUP3"
    },
    "3102": {
      "jump": "i",
      "op": "GT"
    },
    "3103": {
      "op": "ISZERO"
    },
    "3104": {
      "op": "PUSH2",
      "value": "0xC2B"
    },
    "3107": {
      "op": "JUMPI"
    },
    "3108": {
      "op": "PUSH2",
      "value": "0xC2B"
    },
    "3111": {
      "jump": "o",
      "op": "PUSH2",
      "value": "0xC82"
    },
    "3114": {
      "op": "JUMP"
    },
    "3115": {
      "op": "JUMPDEST"
    },
    "3116": {
      "op": "POP"
    },
    "3117": {
      "op": "ADD"
    },
    "3118": {
      "op": "SWAP1"
    },
    "3119": {
      "op": "JUMP"
    },
    "3120": {
      "op": "JUMPDEST"
    },
    "3121": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3123": {
      "op": "DUP3"
    },
    "3124": {
      "op": "DUP3"
    },
    "3125": {
      "jump": "i",
      "op": "LT"
    },
    "3126": {
      "op": "ISZERO"
    },
    "3127": {
      "op": "PUSH2",
      "value": "0xC42"
    },
    "3130": {
      "op": "JUMPI"
    },
    "3131": {
      "op": "PUSH2",
      "value": "0xC42"
    },
    "3134": {
      "jump": "o",
      "op": "PUSH2",
      "value": "0xC82"
    },
    "3137": {
      "op": "JUMP"
    },
    "3138": {
      "op": "JUMPDEST"
    },
    "3139": {
      "op": "POP"
    },
    "3140": {
      "op": "SUB"
    },
    "3141": {
      "op": "SWAP1"
    },
    "3142": {
      "op": "JUMP"
    },
    "3143": {
      "op": "JUMPDEST"
    },
    "3144": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3146": {
      "op": "DUP2"
    },
    "3147": {
      "op": "DIV"
    },
    "3148": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3150": {
      "op": "DUP3"
    },
    "3151": {
      "op": "AND"
    },
    "3152": {
      "op": "DUP1"
    },
    "3153": {
      "op": "PUSH2",
      "value": "0xC5B"
    },
    "3156": {
      "op": "JUMPI"
    },
    "3157": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "3159": {
      "op": "DUP3"
    },
    "3160": {
      "op": "AND"
    },
    "3161": {
      "op": "SWAP2"
    },
    "3162": {
      "op": "POP"
    },
    "3163": {
      "op": "JUMPDEST"
    },
    "3164": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3166": {
      "op": "DUP3"
    },
    "3167": {
      "op": "LT"
    },
    "3168": {
      "op": "DUP2"
    },
    "3169": {
      "op": "EQ"
    },
    "3170": {
      "op": "ISZERO"
    },
    "3171": {
      "op": "PUSH2",
      "value": "0xC7C"
    },
    "3174": {
      "op": "JUMPI"
    },
    "3175": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3180": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3182": {
      "op": "SHL"
    },
    "3183": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3185": {
      "op": "MSTORE"
    },
    "3186": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "3188": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3190": {
      "op": "MSTORE"
    },
    "3191": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3193": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3195": {
      "jump": "o",
      "op": "REVERT"
    },
    "3196": {
      "op": "JUMPDEST"
    },
    "3197": {
      "op": "POP"
    },
    "3198": {
      "op": "SWAP2"
    },
    "3199": {
      "op": "SWAP1"
    },
    "3200": {
      "op": "POP"
    },
    "3201": {
      "op": "JUMP"
    },
    "3202": {
      "op": "JUMPDEST"
    },
    "3203": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3208": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3210": {
      "op": "SHL"
    },
    "3211": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3213": {
      "op": "MSTORE"
    },
    "3214": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "3216": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3218": {
      "op": "MSTORE"
    },
    "3219": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3221": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3223": {
      "op": "REVERT"
    }
  },
  "sha1": "0f3d638418f8a3af66cc8fae0874533772fae681",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {ERC20} from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n\ninterface IERC20 {\n    function transfer(address recipient, uint256 amount) external returns (bool);\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n    function approve(address spender, uint256 amount) external returns (bool);\n}\n\ncontract BTCUP is ERC20 {\n    constructor() ERC20(\"Bitcoin Up\", \"BTCUP\") {\n    }\n\n    function mint(uint256 quantity) public {\n        _mint(tx.origin, quantity);\n    }\n\n    function burn(uint256 quantity) public {\n        _burn(tx.origin, quantity);\n    }\n\n    function decimals() public view override returns (uint8) {\n        return 6;\n    }\n}\n\ncontract BTCDOWN is ERC20 {\n    constructor() ERC20(\"Bitcoin Down\", \"BTCDOWN\") {\n    }\n\n    function mint(uint256 quantity) public {\n        _mint(tx.origin, quantity);\n    }\n\n    function burn(uint256 quantity) public {\n        _burn(tx.origin, quantity);\n    }\n\n    function decimals() public view override returns (uint8) {\n        return 6;\n    }\n}\n\ncontract LeveragedTrading is Ownable {\n    using SafeMath for uint256;\n\n    uint256 public priceBtcUp = 10 ** 6;\n    uint256 public priceBtcDown = 10 ** 6;        // 6 decimals\n\n    uint256 public collateralBtcUp = 0;          //6 decimals\n    uint256 public collateralBtcDown = 0;\n\n    uint256 public amountBtcUp = 0;           // 6 decimals\n    uint256 public amountBtcDown = 0;         // 6 decimals\n\n    uint256 public lastBtcPrice = 0;       // 8 decimals, chainlink conventions\n\n    bool public poolIsInitiated = false;\n\n    address addressUsdc = 0xb7a4F3E9097C08dA09517b5aB877F7a917224ede;  // <- Kovan  //0xeb8f08a975Ab53E34D8a0330E0D34de942C95926;\n    address addressBtcUSDFeed =  0x6135b13325bfC4B00278B4abC5e20bbce2D6580e; // <- Kovan          // 0xECe365B379E1dD183B20fc5f022230C044d51404;\n\n    BTCUP btcUp = new BTCUP();\n    BTCDOWN btcDown = new BTCDOWN();\n\n\n    function initiatePool(uint256 amountUsdc) public onlyOwner {\n        require(!poolIsInitiated, \"The pool was already initiated.\");\n\n        issueBtcUp(amountUsdc.div(2));\n        issueBtcDown(amountUsdc.div(2));\n\n        poolIsInitiated = true;\n    }\n\n    function issueBtcUp(uint256 amountUsdc) public {\n        rebalanceLeveragedTokens();\n        \n        priceBtcUp = getBtcUpPrice();\n        uint256 amountLeveragedTokens = amountUsdc.mul(10 ** 6).div(priceBtcUp);\n\n        btcUp.mint(amountLeveragedTokens);\n        amountBtcUp = amountBtcUp.add(amountLeveragedTokens);\n        collateralBtcUp = collateralBtcUp.add(amountUsdc);\n\n        IERC20 usdc = IERC20(addressUsdc);\n        require(usdc.transferFrom(msg.sender, address(this), amountUsdc), \"You don't have enough USDC.\");\n    }\n\n    function issueBtcDown(uint256 amountUsdc) public {\n        rebalanceLeveragedTokens();\n        \n        priceBtcDown = getBtcDownPrice();\n        uint256 amountLeveragedTokens = amountUsdc.mul(10 ** 6).div(priceBtcDown);\n\n        btcDown.mint(amountLeveragedTokens);\n        amountBtcDown = amountBtcDown.add(amountLeveragedTokens);\n        collateralBtcDown = collateralBtcDown.add(amountUsdc);\n\n        IERC20 usdc = IERC20(addressUsdc);\n        require(usdc.transferFrom(msg.sender, address(this), amountUsdc), \"You don't have enough USDC.\");\n    }\n\n    function redeemBtcUp(uint256 amountLeveragedTokens) public {\n        rebalanceLeveragedTokens();\n        btcUp.burn(amountLeveragedTokens);\n\n        priceBtcUp = getBtcUpPrice();\n        uint256 amountUsdc = amountLeveragedTokens.mul(priceBtcUp).div(10 ** 6);\n\n        amountBtcUp = amountBtcUp.sub(amountLeveragedTokens);\n        collateralBtcUp = collateralBtcUp.sub(amountUsdc);\n\n        IERC20 usdc = IERC20(addressUsdc);\n        require(usdc.transfer(msg.sender, amountUsdc), \"Not enough usdc available\");\n    }\n\n    function redeemBtcDown(uint256 amountLeveragedTokens) public {\n        rebalanceLeveragedTokens();\n        btcDown.burn(amountLeveragedTokens);\n\n        priceBtcDown = getBtcDownPrice();\n        uint256 amountUsdc = amountLeveragedTokens.mul(priceBtcDown).div(10 ** 6);\n        \n        amountBtcDown = amountBtcDown.sub(amountLeveragedTokens);\n        collateralBtcDown = collateralBtcDown.sub(amountUsdc);\n\n        IERC20 usdc = IERC20(addressUsdc);\n        require(usdc.transfer(msg.sender,  amountUsdc), \"Not enough usdc available\");\n\n    }\n\n    function rebalanceLeveragedTokens() public {\n        uint256 btcPrice = getBtcPrice();\n        if ((collateralBtcUp > 0) && (collateralBtcDown > 0)) {\n            uint256 rebalanceAmount = getRebalanceAmount(btcPrice);\n            if (getSign(btcPrice) > 0) {\n                collateralBtcUp = collateralBtcUp.add(rebalanceAmount);\n                collateralBtcDown = collateralBtcDown.sub(rebalanceAmount);\n            }\n\n            else {\n                collateralBtcUp = collateralBtcUp.sub(rebalanceAmount);\n                collateralBtcDown = collateralBtcDown.add(rebalanceAmount);\n            }\n\n        }\n\n        lastBtcPrice = btcPrice;\n    }\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    function getSign(uint256 btcPrice) internal view returns (int256){\n        if (btcPrice > lastBtcPrice) {\n            return 1;\n        }\n        else {\n            return -1;\n        }\n    }\n \n    function getRebalanceAmount(uint256 priceBtc) internal view returns (uint256){\n        uint256 priceDiff = getPriceDiff(priceBtc);\n\n        return min(collateralBtcUp, collateralBtcDown).mul(L(priceDiff)).div(10 ** 6);\n    }\n\n// getBtcUpPrice() 6 decimals\n    function getBtcUpPrice() public view returns (uint256) {\n        return amountBtcUp == 0 ?  priceBtcUp : collateralBtcUp.mul(10 ** 6).div(amountBtcUp);\n    }\n\n// getBtcDownPrice() 6 decimals\n    function getBtcDownPrice() public view returns (uint256) {//6 decimals\n        return amountBtcDown == 0 ?  priceBtcDown : collateralBtcDown.mul(10 ** 6).div(amountBtcDown);\n    }\n\n// get the price of our asset with 8 decimals\n    function getBtcPrice() public view returns (uint256) {\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(addressBtcUSDFeed);\n        (,int256 answer,,,) = priceFeed.latestRoundData();\n\n         return uint256(answer);             // we call chainlink oracle to get the price of the asset\n         \n    }\n    \n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a <= b ? a : b;\n    }\n\n    function L(uint256 x) internal pure returns (uint256) {            //6  decimals\n\n        uint256 denom = 9 * (x ** 2 / 10 ** 6)  + 3 * x + 10 ** 6;\n        uint256 num = 10 ** 12;\n\n        return 10 ** 6 - num / denom;\n    }\n\n    function getPriceDiff(uint256 btcPrice) internal view returns (uint256) {     //6 decimals\n        if (btcPrice > lastBtcPrice) {\n            return btcPrice.mul(10 ** 6).div(lastBtcPrice).sub(10 ** 6);\n        }\n\n        else {\n            return lastBtcPrice.mul(10 ** 6).div(btcPrice).sub(10 ** 6);\n        }\n\n    }\n\n    function getBtcupBalance() public view returns(uint256) {\n        return btcUp.balanceOf(msg.sender);\n    }\n\n    function getBtcdownBalance() public view returns(uint256) {\n        return btcDown.balanceOf(msg.sender);\n    }\n\n}\n\n",
  "sourceMap": "949:352:7:-:0;;;981:54;;;;;;;;;-1:-1:-1;1896:113:1;;;;;;;;;;;-1:-1:-1;;;1896:113:1;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1896:113:1;;;;1962:13;;1896:113;;;1962:13;;:5;;:13;:::i;:::-;-1:-1:-1;1985:17:1;;;;:7;;:17;;;;;:::i;:::-;;1896:113;;949:352:7;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;949:352:7;;;-1:-1:-1;949:352:7;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:380:8;99:1;89:12;;146:1;136:12;;;157:2;;211:4;203:6;199:17;189:27;;157:2;264;256:6;253:14;233:18;230:38;227:2;;;310:10;305:3;301:20;298:1;291:31;345:4;342:1;335:15;373:4;370:1;363:15;227:2;;69:325;;;:::o;:::-;949:352:7;;;;;;",
  "sourcePath": "contracts/LeveragedTrading.sol",
  "type": "contract"
}
},{}],2:[function(require,module,exports){
module.exports={
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "quantity",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "quantity",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "1": "/home/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/ERC20.sol",
    "2": "/home/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/IERC20.sol",
    "3": "/home/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/extensions/IERC20Metadata.sol",
    "4": "/home/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/Context.sol",
    "7": "contracts/LeveragedTrading.sol"
  },
  "ast": {
    "absolutePath": "contracts/LeveragedTrading.sol",
    "exportedSymbols": {
      "AggregatorV3Interface": [
        1786
      ],
      "BTCDOWN": [
        124
      ],
      "BTCUP": [
        80
      ],
      "Context": [
        1807
      ],
      "ERC20": [
        1428
      ],
      "IERC20": [
        36
      ],
      "LeveragedTrading": [
        778
      ],
      "Ownable": [
        882
      ],
      "SafeMath": [
        1740
      ]
    },
    "id": 779,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:7"
      },
      {
        "absolutePath": "/home/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 779,
        "sourceUnit": 1429,
        "src": "57:68:7",
        "symbolAliases": [
          {
            "foreign": {
              "id": 2,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "65:5:7",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/alex/.brownie/packages/smartcontractkit/chainlink@1.3.0/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 779,
        "sourceUnit": 1787,
        "src": "126:76:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 779,
        "sourceUnit": 1741,
        "src": "203:57:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 6,
        "nodeType": "ImportDirective",
        "scope": 779,
        "sourceUnit": 883,
        "src": "261:52:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 36,
        "linearizedBaseContracts": [
          36
        ],
        "name": "IERC20",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "a9059cbb",
            "id": 15,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 15,
                  "src": "357:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "357:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 15,
                  "src": "376:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "376:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "356:35:7"
            },
            "returnParameters": {
              "id": 14,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 15,
                  "src": "410:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 12,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "410:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "409:6:7"
            },
            "scope": 36,
            "src": "339:77:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "23b872dd",
            "id": 26,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 22,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 26,
                  "src": "443:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "443:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 26,
                  "src": "459:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "459:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 26,
                  "src": "478:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "478:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "442:51:7"
            },
            "returnParameters": {
              "id": 25,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 26,
                  "src": "512:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 23,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "512:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "511:6:7"
            },
            "scope": 36,
            "src": "421:97:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "095ea7b3",
            "id": 35,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 35,
                  "src": "540:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "540:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 35,
                  "src": "557:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "557:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "539:33:7"
            },
            "returnParameters": {
              "id": 34,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 35,
                  "src": "591:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "591:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "590:6:7"
            },
            "scope": 36,
            "src": "523:74:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 779,
        "src": "316:283:7"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 37,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1428,
              "src": "619:5:7"
            },
            "id": 38,
            "nodeType": "InheritanceSpecifier",
            "src": "619:5:7"
          }
        ],
        "contractDependencies": [
          1428,
          1807,
          1885,
          1910
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 80,
        "linearizedBaseContracts": [
          80,
          1428,
          1910,
          1885,
          1807
        ],
        "name": "BTCUP",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 45,
              "nodeType": "Block",
              "src": "674:7:7",
              "statements": []
            },
            "id": 46,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "426974636f696e205570",
                    "id": 41,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "651:12:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_9cbc1d0721872492c3eae100dd6a7dad3b4b199dc4e72a46010b2b1c98a11964",
                      "typeString": "literal_string \"Bitcoin Up\""
                    },
                    "value": "Bitcoin Up"
                  },
                  {
                    "hexValue": "4254435550",
                    "id": 42,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "665:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_f92903022a172a42cae03bdc1621474c2ab6bc2b8980d8251e05283c61f8c975",
                      "typeString": "literal_string \"BTCUP\""
                    },
                    "value": "BTCUP"
                  }
                ],
                "id": 43,
                "modifierName": {
                  "id": 40,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1428,
                  "src": "645:5:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "645:28:7"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "642:2:7"
            },
            "returnParameters": {
              "id": 44,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "674:0:7"
            },
            "scope": 80,
            "src": "631:50:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 57,
              "nodeType": "Block",
              "src": "726:43:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 52,
                          "name": "tx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -26,
                          "src": "742:2:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_transaction",
                            "typeString": "tx"
                          }
                        },
                        "id": 53,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "origin",
                        "nodeType": "MemberAccess",
                        "src": "742:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 54,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "753:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 51,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1288,
                      "src": "736:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 55,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "736:26:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 56,
                  "nodeType": "ExpressionStatement",
                  "src": "736:26:7"
                }
              ]
            },
            "functionSelector": "a0712d68",
            "id": 58,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 49,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nodeType": "VariableDeclaration",
                  "scope": 58,
                  "src": "701:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "701:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "700:18:7"
            },
            "returnParameters": {
              "id": 50,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "726:0:7"
            },
            "scope": 80,
            "src": "687:82:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 69,
              "nodeType": "Block",
              "src": "814:43:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 64,
                          "name": "tx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -26,
                          "src": "830:2:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_transaction",
                            "typeString": "tx"
                          }
                        },
                        "id": 65,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "origin",
                        "nodeType": "MemberAccess",
                        "src": "830:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 66,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60,
                        "src": "841:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 63,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1360,
                      "src": "824:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "824:26:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68,
                  "nodeType": "ExpressionStatement",
                  "src": "824:26:7"
                }
              ]
            },
            "functionSelector": "42966c68",
            "id": 70,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 61,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "789:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "789:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "788:18:7"
            },
            "returnParameters": {
              "id": 62,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "814:0:7"
            },
            "scope": 80,
            "src": "775:82:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              957
            ],
            "body": {
              "id": 78,
              "nodeType": "Block",
              "src": "920:25:7",
              "statements": [
                {
                  "expression": {
                    "hexValue": "36",
                    "id": 76,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "937:1:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_6_by_1",
                      "typeString": "int_const 6"
                    },
                    "value": "6"
                  },
                  "functionReturnParameters": 75,
                  "id": 77,
                  "nodeType": "Return",
                  "src": "930:8:7"
                }
              ]
            },
            "functionSelector": "313ce567",
            "id": 79,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 72,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "895:8:7"
            },
            "parameters": {
              "id": 71,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "880:2:7"
            },
            "returnParameters": {
              "id": 75,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 79,
                  "src": "913:5:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 73,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "913:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "912:7:7"
            },
            "scope": 80,
            "src": "863:82:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 779,
        "src": "601:346:7"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 81,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1428,
              "src": "969:5:7"
            },
            "id": 82,
            "nodeType": "InheritanceSpecifier",
            "src": "969:5:7"
          }
        ],
        "contractDependencies": [
          1428,
          1807,
          1885,
          1910
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 124,
        "linearizedBaseContracts": [
          124,
          1428,
          1910,
          1885,
          1807
        ],
        "name": "BTCDOWN",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 89,
              "nodeType": "Block",
              "src": "1028:7:7",
              "statements": []
            },
            "id": 90,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "426974636f696e20446f776e",
                    "id": 85,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1001:14:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_165fe89d7acd7320260d3007f731660e2a452d2e9dbef2c2e44ee15c6b8bc1ec",
                      "typeString": "literal_string \"Bitcoin Down\""
                    },
                    "value": "Bitcoin Down"
                  },
                  {
                    "hexValue": "425443444f574e",
                    "id": 86,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1017:9:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_72f3d7098f717fcc170dbb6c7dad0b9049f1ed825e03177180edf7a0240d28f2",
                      "typeString": "literal_string \"BTCDOWN\""
                    },
                    "value": "BTCDOWN"
                  }
                ],
                "id": 87,
                "modifierName": {
                  "id": 84,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1428,
                  "src": "995:5:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "995:32:7"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 83,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "992:2:7"
            },
            "returnParameters": {
              "id": 88,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1028:0:7"
            },
            "scope": 124,
            "src": "981:54:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 101,
              "nodeType": "Block",
              "src": "1080:43:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 96,
                          "name": "tx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -26,
                          "src": "1096:2:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_transaction",
                            "typeString": "tx"
                          }
                        },
                        "id": 97,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "origin",
                        "nodeType": "MemberAccess",
                        "src": "1096:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 98,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92,
                        "src": "1107:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 95,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1288,
                      "src": "1090:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 99,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1090:26:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100,
                  "nodeType": "ExpressionStatement",
                  "src": "1090:26:7"
                }
              ]
            },
            "functionSelector": "a0712d68",
            "id": 102,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 93,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 92,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nodeType": "VariableDeclaration",
                  "scope": 102,
                  "src": "1055:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 91,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1055:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1054:18:7"
            },
            "returnParameters": {
              "id": 94,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1080:0:7"
            },
            "scope": 124,
            "src": "1041:82:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 113,
              "nodeType": "Block",
              "src": "1168:43:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 108,
                          "name": "tx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -26,
                          "src": "1184:2:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_transaction",
                            "typeString": "tx"
                          }
                        },
                        "id": 109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "origin",
                        "nodeType": "MemberAccess",
                        "src": "1184:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 110,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 104,
                        "src": "1195:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 107,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1360,
                      "src": "1178:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1178:26:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 112,
                  "nodeType": "ExpressionStatement",
                  "src": "1178:26:7"
                }
              ]
            },
            "functionSelector": "42966c68",
            "id": 114,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 105,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 104,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nodeType": "VariableDeclaration",
                  "scope": 114,
                  "src": "1143:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 103,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1143:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1142:18:7"
            },
            "returnParameters": {
              "id": 106,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1168:0:7"
            },
            "scope": 124,
            "src": "1129:82:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              957
            ],
            "body": {
              "id": 122,
              "nodeType": "Block",
              "src": "1274:25:7",
              "statements": [
                {
                  "expression": {
                    "hexValue": "36",
                    "id": 120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1291:1:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_6_by_1",
                      "typeString": "int_const 6"
                    },
                    "value": "6"
                  },
                  "functionReturnParameters": 119,
                  "id": 121,
                  "nodeType": "Return",
                  "src": "1284:8:7"
                }
              ]
            },
            "functionSelector": "313ce567",
            "id": 123,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 116,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1249:8:7"
            },
            "parameters": {
              "id": 115,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1234:2:7"
            },
            "returnParameters": {
              "id": 119,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 118,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 123,
                  "src": "1267:5:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 117,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1267:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1266:7:7"
            },
            "scope": 124,
            "src": "1217:82:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 779,
        "src": "949:352:7"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 125,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 882,
              "src": "1332:7:7"
            },
            "id": 126,
            "nodeType": "InheritanceSpecifier",
            "src": "1332:7:7"
          }
        ],
        "contractDependencies": [
          80,
          124,
          882,
          1807
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 778,
        "linearizedBaseContracts": [
          778,
          882,
          1807
        ],
        "name": "LeveragedTrading",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 129,
            "libraryName": {
              "id": 127,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1740,
              "src": "1352:8:7"
            },
            "nodeType": "UsingForDirective",
            "src": "1346:27:7",
            "typeName": {
              "id": 128,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1365:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "f0156e8a",
            "id": 134,
            "mutability": "mutable",
            "name": "priceBtcUp",
            "nodeType": "VariableDeclaration",
            "scope": 778,
            "src": "1379:35:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 130,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1379:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_1000000_by_1",
                "typeString": "int_const 1000000"
              },
              "id": 133,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "3130",
                "id": 131,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1407:2:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10_by_1",
                  "typeString": "int_const 10"
                },
                "value": "10"
              },
              "nodeType": "BinaryOperation",
              "operator": "**",
              "rightExpression": {
                "hexValue": "36",
                "id": 132,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1413:1:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_6_by_1",
                  "typeString": "int_const 6"
                },
                "value": "6"
              },
              "src": "1407:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000_by_1",
                "typeString": "int_const 1000000"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0c3e5343",
            "id": 139,
            "mutability": "mutable",
            "name": "priceBtcDown",
            "nodeType": "VariableDeclaration",
            "scope": 778,
            "src": "1420:37:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 135,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1420:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_1000000_by_1",
                "typeString": "int_const 1000000"
              },
              "id": 138,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "3130",
                "id": 136,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1450:2:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10_by_1",
                  "typeString": "int_const 10"
                },
                "value": "10"
              },
              "nodeType": "BinaryOperation",
              "operator": "**",
              "rightExpression": {
                "hexValue": "36",
                "id": 137,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1456:1:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_6_by_1",
                  "typeString": "int_const 6"
                },
                "value": "6"
              },
              "src": "1450:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000_by_1",
                "typeString": "int_const 1000000"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "dde7be2c",
            "id": 142,
            "mutability": "mutable",
            "name": "collateralBtcUp",
            "nodeType": "VariableDeclaration",
            "scope": 778,
            "src": "1485:34:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 140,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1485:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 141,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1518:1:7",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "14d7c6d2",
            "id": 145,
            "mutability": "mutable",
            "name": "collateralBtcDown",
            "nodeType": "VariableDeclaration",
            "scope": 778,
            "src": "1547:36:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 143,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1547:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 144,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1582:1:7",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0034b9cc",
            "id": 148,
            "mutability": "mutable",
            "name": "amountBtcUp",
            "nodeType": "VariableDeclaration",
            "scope": 778,
            "src": "1590:30:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 146,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1590:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 147,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1619:1:7",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b75cbe0b",
            "id": 151,
            "mutability": "mutable",
            "name": "amountBtcDown",
            "nodeType": "VariableDeclaration",
            "scope": 778,
            "src": "1650:32:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 149,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1650:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 150,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1681:1:7",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f4352c57",
            "id": 154,
            "mutability": "mutable",
            "name": "lastBtcPrice",
            "nodeType": "VariableDeclaration",
            "scope": 778,
            "src": "1711:31:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 152,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1711:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 153,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1741:1:7",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3074fff7",
            "id": 157,
            "mutability": "mutable",
            "name": "poolIsInitiated",
            "nodeType": "VariableDeclaration",
            "scope": 778,
            "src": "1792:35:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 155,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1792:4:7",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 156,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1822:5:7",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 160,
            "mutability": "mutable",
            "name": "addressUsdc",
            "nodeType": "VariableDeclaration",
            "scope": 778,
            "src": "1834:64:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 158,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1834:7:7",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307862376134463345393039374330386441303935313762356142383737463761393137323234656465",
              "id": 159,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1856:42:7",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xb7a4F3E9097C08dA09517b5aB877F7a917224ede"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 163,
            "mutability": "mutable",
            "name": "addressBtcUSDFeed",
            "nodeType": "VariableDeclaration",
            "scope": 778,
            "src": "1964:71:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 161,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1964:7:7",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307836313335623133333235626643344230303237384234616243356532306262636532443635383065",
              "id": 162,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1993:42:7",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x6135b13325bfC4B00278B4abC5e20bbce2D6580e"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 170,
            "mutability": "mutable",
            "name": "btcUp",
            "nodeType": "VariableDeclaration",
            "scope": 778,
            "src": "2110:25:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_BTCUP_$80",
              "typeString": "contract BTCUP"
            },
            "typeName": {
              "id": 165,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 164,
                "name": "BTCUP",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 80,
                "src": "2110:5:7"
              },
              "referencedDeclaration": 80,
              "src": "2110:5:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BTCUP_$80",
                "typeString": "contract BTCUP"
              }
            },
            "value": {
              "arguments": [],
              "expression": {
                "argumentTypes": [],
                "id": 168,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "nodeType": "NewExpression",
                "src": "2124:9:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_BTCUP_$80_$",
                  "typeString": "function () returns (contract BTCUP)"
                },
                "typeName": {
                  "id": 167,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 166,
                    "name": "BTCUP",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 80,
                    "src": "2128:5:7"
                  },
                  "referencedDeclaration": 80,
                  "src": "2128:5:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_BTCUP_$80",
                    "typeString": "contract BTCUP"
                  }
                }
              },
              "id": 169,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2124:11:7",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BTCUP_$80",
                "typeString": "contract BTCUP"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 177,
            "mutability": "mutable",
            "name": "btcDown",
            "nodeType": "VariableDeclaration",
            "scope": 778,
            "src": "2141:31:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_BTCDOWN_$124",
              "typeString": "contract BTCDOWN"
            },
            "typeName": {
              "id": 172,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 171,
                "name": "BTCDOWN",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 124,
                "src": "2141:7:7"
              },
              "referencedDeclaration": 124,
              "src": "2141:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BTCDOWN_$124",
                "typeString": "contract BTCDOWN"
              }
            },
            "value": {
              "arguments": [],
              "expression": {
                "argumentTypes": [],
                "id": 175,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "nodeType": "NewExpression",
                "src": "2159:11:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_BTCDOWN_$124_$",
                  "typeString": "function () returns (contract BTCDOWN)"
                },
                "typeName": {
                  "id": 174,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 173,
                    "name": "BTCDOWN",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 124,
                    "src": "2163:7:7"
                  },
                  "referencedDeclaration": 124,
                  "src": "2163:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_BTCDOWN_$124",
                    "typeString": "contract BTCDOWN"
                  }
                }
              },
              "id": 176,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2159:13:7",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BTCDOWN_$124",
                "typeString": "contract BTCDOWN"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 208,
              "nodeType": "Block",
              "src": "2239:191:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2257:16:7",
                        "subExpression": {
                          "id": 185,
                          "name": "poolIsInitiated",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 157,
                          "src": "2258:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520706f6f6c2077617320616c726561647920696e697469617465642e",
                        "id": 187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2275:33:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_580e872a0bf3ae438081ad6284342a647742aae71fdfc53b8a10245734a22e81",
                          "typeString": "literal_string \"The pool was already initiated.\""
                        },
                        "value": "The pool was already initiated."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_580e872a0bf3ae438081ad6284342a647742aae71fdfc53b8a10245734a22e81",
                          "typeString": "literal_string \"The pool was already initiated.\""
                        }
                      ],
                      "id": 184,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2249:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2249:60:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 189,
                  "nodeType": "ExpressionStatement",
                  "src": "2249:60:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "32",
                            "id": 193,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2346:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            }
                          ],
                          "expression": {
                            "id": 191,
                            "name": "amountUsdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 179,
                            "src": "2331:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 192,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1649,
                          "src": "2331:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2331:17:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 190,
                      "name": "issueBtcUp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 276,
                      "src": "2320:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2320:29:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 196,
                  "nodeType": "ExpressionStatement",
                  "src": "2320:29:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "32",
                            "id": 200,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2387:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            }
                          ],
                          "expression": {
                            "id": 198,
                            "name": "amountUsdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 179,
                            "src": "2372:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 199,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1649,
                          "src": "2372:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2372:17:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 197,
                      "name": "issueBtcDown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 343,
                      "src": "2359:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2359:31:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 203,
                  "nodeType": "ExpressionStatement",
                  "src": "2359:31:7"
                },
                {
                  "expression": {
                    "id": 206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 204,
                      "name": "poolIsInitiated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 157,
                      "src": "2401:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 205,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2419:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2401:22:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 207,
                  "nodeType": "ExpressionStatement",
                  "src": "2401:22:7"
                }
              ]
            },
            "functionSelector": "9b3075a1",
            "id": 209,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 182,
                "modifierName": {
                  "id": 181,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 825,
                  "src": "2229:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "2229:9:7"
              }
            ],
            "name": "initiatePool",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 179,
                  "mutability": "mutable",
                  "name": "amountUsdc",
                  "nodeType": "VariableDeclaration",
                  "scope": 209,
                  "src": "2202:18:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 178,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2202:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2201:20:7"
            },
            "returnParameters": {
              "id": 183,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2239:0:7"
            },
            "scope": 778,
            "src": "2180:250:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 275,
              "nodeType": "Block",
              "src": "2483:486:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 214,
                      "name": "rebalanceLeveragedTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 535,
                      "src": "2493:24:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2493:26:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 216,
                  "nodeType": "ExpressionStatement",
                  "src": "2493:26:7"
                },
                {
                  "expression": {
                    "id": 220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 217,
                      "name": "priceBtcUp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 134,
                      "src": "2538:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 218,
                        "name": "getBtcUpPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 604,
                        "src": "2551:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 219,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2551:15:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2538:28:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 221,
                  "nodeType": "ExpressionStatement",
                  "src": "2538:28:7"
                },
                {
                  "assignments": [
                    223
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 223,
                      "mutability": "mutable",
                      "name": "amountLeveragedTokens",
                      "nodeType": "VariableDeclaration",
                      "scope": 275,
                      "src": "2576:29:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 222,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2576:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 233,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 231,
                        "name": "priceBtcUp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 134,
                        "src": "2636:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_1000000_by_1",
                              "typeString": "int_const 1000000"
                            },
                            "id": 228,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 226,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2623:2:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "hexValue": "36",
                              "id": 227,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2629:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_6_by_1",
                                "typeString": "int_const 6"
                              },
                              "value": "6"
                            },
                            "src": "2623:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000_by_1",
                              "typeString": "int_const 1000000"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1000000_by_1",
                              "typeString": "int_const 1000000"
                            }
                          ],
                          "expression": {
                            "id": 224,
                            "name": "amountUsdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 211,
                            "src": "2608:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 225,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1634,
                          "src": "2608:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2608:23:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 230,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1649,
                      "src": "2608:27:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2608:39:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2576:71:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 237,
                        "name": "amountLeveragedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 223,
                        "src": "2669:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 234,
                        "name": "btcUp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 170,
                        "src": "2658:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BTCUP_$80",
                          "typeString": "contract BTCUP"
                        }
                      },
                      "id": 236,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 58,
                      "src": "2658:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2658:33:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 239,
                  "nodeType": "ExpressionStatement",
                  "src": "2658:33:7"
                },
                {
                  "expression": {
                    "id": 245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 240,
                      "name": "amountBtcUp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 148,
                      "src": "2701:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 243,
                          "name": "amountLeveragedTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 223,
                          "src": "2731:21:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 241,
                          "name": "amountBtcUp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 148,
                          "src": "2715:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1604,
                        "src": "2715:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 244,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2715:38:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2701:52:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 246,
                  "nodeType": "ExpressionStatement",
                  "src": "2701:52:7"
                },
                {
                  "expression": {
                    "id": 252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 247,
                      "name": "collateralBtcUp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 142,
                      "src": "2763:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 250,
                          "name": "amountUsdc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 211,
                          "src": "2801:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 248,
                          "name": "collateralBtcUp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 142,
                          "src": "2781:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1604,
                        "src": "2781:19:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 251,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2781:31:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2763:49:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 253,
                  "nodeType": "ExpressionStatement",
                  "src": "2763:49:7"
                },
                {
                  "assignments": [
                    256
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 256,
                      "mutability": "mutable",
                      "name": "usdc",
                      "nodeType": "VariableDeclaration",
                      "scope": 275,
                      "src": "2823:11:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$36",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 255,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 254,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 36,
                          "src": "2823:6:7"
                        },
                        "referencedDeclaration": 36,
                        "src": "2823:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$36",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 260,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 258,
                        "name": "addressUsdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 160,
                        "src": "2844:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 257,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "2837:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$36_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2837:19:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$36",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2823:33:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 264,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2892:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 265,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2892:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 268,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "2912:4:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LeveragedTrading_$778",
                                  "typeString": "contract LeveragedTrading"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LeveragedTrading_$778",
                                  "typeString": "contract LeveragedTrading"
                                }
                              ],
                              "id": 267,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2904:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 266,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2904:7:7",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 269,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2904:13:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 270,
                            "name": "amountUsdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 211,
                            "src": "2919:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 262,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 256,
                            "src": "2874:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$36",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 263,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 26,
                          "src": "2874:17:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2874:56:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520646f6e2774206861766520656e6f75676820555344432e",
                        "id": 272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2932:29:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fa81e2605579e88471722381a01380eff7db3c869a8b4d6c5142c052f717215d",
                          "typeString": "literal_string \"You don't have enough USDC.\""
                        },
                        "value": "You don't have enough USDC."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fa81e2605579e88471722381a01380eff7db3c869a8b4d6c5142c052f717215d",
                          "typeString": "literal_string \"You don't have enough USDC.\""
                        }
                      ],
                      "id": 261,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2866:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2866:96:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 274,
                  "nodeType": "ExpressionStatement",
                  "src": "2866:96:7"
                }
              ]
            },
            "functionSelector": "f530c04a",
            "id": 276,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "issueBtcUp",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 212,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 211,
                  "mutability": "mutable",
                  "name": "amountUsdc",
                  "nodeType": "VariableDeclaration",
                  "scope": 276,
                  "src": "2456:18:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 210,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2456:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2455:20:7"
            },
            "returnParameters": {
              "id": 213,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2483:0:7"
            },
            "scope": 778,
            "src": "2436:533:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 342,
              "nodeType": "Block",
              "src": "3024:502:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 281,
                      "name": "rebalanceLeveragedTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 535,
                      "src": "3034:24:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3034:26:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 283,
                  "nodeType": "ExpressionStatement",
                  "src": "3034:26:7"
                },
                {
                  "expression": {
                    "id": 287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 284,
                      "name": "priceBtcDown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 139,
                      "src": "3079:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 285,
                        "name": "getBtcDownPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 625,
                        "src": "3094:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 286,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3094:17:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3079:32:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 288,
                  "nodeType": "ExpressionStatement",
                  "src": "3079:32:7"
                },
                {
                  "assignments": [
                    290
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 290,
                      "mutability": "mutable",
                      "name": "amountLeveragedTokens",
                      "nodeType": "VariableDeclaration",
                      "scope": 342,
                      "src": "3121:29:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 289,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3121:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 300,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 298,
                        "name": "priceBtcDown",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 139,
                        "src": "3181:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_1000000_by_1",
                              "typeString": "int_const 1000000"
                            },
                            "id": 295,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 293,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3168:2:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "hexValue": "36",
                              "id": 294,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3174:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_6_by_1",
                                "typeString": "int_const 6"
                              },
                              "value": "6"
                            },
                            "src": "3168:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000_by_1",
                              "typeString": "int_const 1000000"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1000000_by_1",
                              "typeString": "int_const 1000000"
                            }
                          ],
                          "expression": {
                            "id": 291,
                            "name": "amountUsdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 278,
                            "src": "3153:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 292,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1634,
                          "src": "3153:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3153:23:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 297,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1649,
                      "src": "3153:27:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3153:41:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3121:73:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 304,
                        "name": "amountLeveragedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 290,
                        "src": "3218:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 301,
                        "name": "btcDown",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 177,
                        "src": "3205:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BTCDOWN_$124",
                          "typeString": "contract BTCDOWN"
                        }
                      },
                      "id": 303,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 102,
                      "src": "3205:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3205:35:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 306,
                  "nodeType": "ExpressionStatement",
                  "src": "3205:35:7"
                },
                {
                  "expression": {
                    "id": 312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 307,
                      "name": "amountBtcDown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 151,
                      "src": "3250:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 310,
                          "name": "amountLeveragedTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 290,
                          "src": "3284:21:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 308,
                          "name": "amountBtcDown",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 151,
                          "src": "3266:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 309,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1604,
                        "src": "3266:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 311,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3266:40:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3250:56:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 313,
                  "nodeType": "ExpressionStatement",
                  "src": "3250:56:7"
                },
                {
                  "expression": {
                    "id": 319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 314,
                      "name": "collateralBtcDown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 145,
                      "src": "3316:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 317,
                          "name": "amountUsdc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 278,
                          "src": "3358:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 315,
                          "name": "collateralBtcDown",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 145,
                          "src": "3336:17:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1604,
                        "src": "3336:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 318,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3336:33:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3316:53:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 320,
                  "nodeType": "ExpressionStatement",
                  "src": "3316:53:7"
                },
                {
                  "assignments": [
                    323
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 323,
                      "mutability": "mutable",
                      "name": "usdc",
                      "nodeType": "VariableDeclaration",
                      "scope": 342,
                      "src": "3380:11:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$36",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 322,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 321,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 36,
                          "src": "3380:6:7"
                        },
                        "referencedDeclaration": 36,
                        "src": "3380:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$36",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 327,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 325,
                        "name": "addressUsdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 160,
                        "src": "3401:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 324,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "3394:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$36_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3394:19:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$36",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3380:33:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 331,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3449:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 332,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3449:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 335,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "3469:4:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LeveragedTrading_$778",
                                  "typeString": "contract LeveragedTrading"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LeveragedTrading_$778",
                                  "typeString": "contract LeveragedTrading"
                                }
                              ],
                              "id": 334,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3461:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 333,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3461:7:7",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 336,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3461:13:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 337,
                            "name": "amountUsdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 278,
                            "src": "3476:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 329,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 323,
                            "src": "3431:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$36",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 26,
                          "src": "3431:17:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3431:56:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520646f6e2774206861766520656e6f75676820555344432e",
                        "id": 339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3489:29:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fa81e2605579e88471722381a01380eff7db3c869a8b4d6c5142c052f717215d",
                          "typeString": "literal_string \"You don't have enough USDC.\""
                        },
                        "value": "You don't have enough USDC."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fa81e2605579e88471722381a01380eff7db3c869a8b4d6c5142c052f717215d",
                          "typeString": "literal_string \"You don't have enough USDC.\""
                        }
                      ],
                      "id": 328,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3423:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3423:96:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 341,
                  "nodeType": "ExpressionStatement",
                  "src": "3423:96:7"
                }
              ]
            },
            "functionSelector": "c46d4f09",
            "id": 343,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "issueBtcDown",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 279,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 278,
                  "mutability": "mutable",
                  "name": "amountUsdc",
                  "nodeType": "VariableDeclaration",
                  "scope": 343,
                  "src": "2997:18:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 277,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2997:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2996:20:7"
            },
            "returnParameters": {
              "id": 280,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3024:0:7"
            },
            "scope": 778,
            "src": "2975:551:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 405,
              "nodeType": "Block",
              "src": "3591:457:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 348,
                      "name": "rebalanceLeveragedTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 535,
                      "src": "3601:24:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3601:26:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 350,
                  "nodeType": "ExpressionStatement",
                  "src": "3601:26:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 354,
                        "name": "amountLeveragedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 345,
                        "src": "3648:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 351,
                        "name": "btcUp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 170,
                        "src": "3637:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BTCUP_$80",
                          "typeString": "contract BTCUP"
                        }
                      },
                      "id": 353,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 70,
                      "src": "3637:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3637:33:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 356,
                  "nodeType": "ExpressionStatement",
                  "src": "3637:33:7"
                },
                {
                  "expression": {
                    "id": 360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 357,
                      "name": "priceBtcUp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 134,
                      "src": "3681:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 358,
                        "name": "getBtcUpPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 604,
                        "src": "3694:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 359,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3694:15:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3681:28:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 361,
                  "nodeType": "ExpressionStatement",
                  "src": "3681:28:7"
                },
                {
                  "assignments": [
                    363
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 363,
                      "mutability": "mutable",
                      "name": "amountUsdc",
                      "nodeType": "VariableDeclaration",
                      "scope": 405,
                      "src": "3719:18:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 362,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3719:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 373,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        },
                        "id": 371,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3130",
                          "id": 369,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3782:2:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "hexValue": "36",
                          "id": 370,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3788:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_6_by_1",
                            "typeString": "int_const 6"
                          },
                          "value": "6"
                        },
                        "src": "3782:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 366,
                            "name": "priceBtcUp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 134,
                            "src": "3766:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 364,
                            "name": "amountLeveragedTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 345,
                            "src": "3740:21:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1634,
                          "src": "3740:25:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3740:37:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 368,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1649,
                      "src": "3740:41:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3740:50:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3719:71:7"
                },
                {
                  "expression": {
                    "id": 379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 374,
                      "name": "amountBtcUp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 148,
                      "src": "3801:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 377,
                          "name": "amountLeveragedTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 345,
                          "src": "3831:21:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 375,
                          "name": "amountBtcUp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 148,
                          "src": "3815:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1619,
                        "src": "3815:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 378,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3815:38:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3801:52:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 380,
                  "nodeType": "ExpressionStatement",
                  "src": "3801:52:7"
                },
                {
                  "expression": {
                    "id": 386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 381,
                      "name": "collateralBtcUp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 142,
                      "src": "3863:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 384,
                          "name": "amountUsdc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 363,
                          "src": "3901:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 382,
                          "name": "collateralBtcUp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 142,
                          "src": "3881:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 383,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1619,
                        "src": "3881:19:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 385,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3881:31:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3863:49:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 387,
                  "nodeType": "ExpressionStatement",
                  "src": "3863:49:7"
                },
                {
                  "assignments": [
                    390
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 390,
                      "mutability": "mutable",
                      "name": "usdc",
                      "nodeType": "VariableDeclaration",
                      "scope": 405,
                      "src": "3923:11:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$36",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 389,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 388,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 36,
                          "src": "3923:6:7"
                        },
                        "referencedDeclaration": 36,
                        "src": "3923:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$36",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 394,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 392,
                        "name": "addressUsdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 160,
                        "src": "3944:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 391,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "3937:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$36_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3937:19:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$36",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3923:33:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 398,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3988:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 399,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3988:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 400,
                            "name": "amountUsdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 363,
                            "src": "4000:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 396,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 390,
                            "src": "3974:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$36",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 397,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 15,
                          "src": "3974:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 401,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3974:37:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f756768207573646320617661696c61626c65",
                        "id": 402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4013:27:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_11e0d42ca67e4d2b1a22b36c1afaf70b8acf7fd68b23b01ee92fff5e749db362",
                          "typeString": "literal_string \"Not enough usdc available\""
                        },
                        "value": "Not enough usdc available"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_11e0d42ca67e4d2b1a22b36c1afaf70b8acf7fd68b23b01ee92fff5e749db362",
                          "typeString": "literal_string \"Not enough usdc available\""
                        }
                      ],
                      "id": 395,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3966:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3966:75:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 404,
                  "nodeType": "ExpressionStatement",
                  "src": "3966:75:7"
                }
              ]
            },
            "functionSelector": "d1ee539d",
            "id": 406,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redeemBtcUp",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 346,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 345,
                  "mutability": "mutable",
                  "name": "amountLeveragedTokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 406,
                  "src": "3553:29:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 344,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3553:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3552:31:7"
            },
            "returnParameters": {
              "id": 347,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3591:0:7"
            },
            "scope": 778,
            "src": "3532:516:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 468,
              "nodeType": "Block",
              "src": "4115:483:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 411,
                      "name": "rebalanceLeveragedTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 535,
                      "src": "4125:24:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4125:26:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 413,
                  "nodeType": "ExpressionStatement",
                  "src": "4125:26:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 417,
                        "name": "amountLeveragedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 408,
                        "src": "4174:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 414,
                        "name": "btcDown",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 177,
                        "src": "4161:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BTCDOWN_$124",
                          "typeString": "contract BTCDOWN"
                        }
                      },
                      "id": 416,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 114,
                      "src": "4161:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4161:35:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 419,
                  "nodeType": "ExpressionStatement",
                  "src": "4161:35:7"
                },
                {
                  "expression": {
                    "id": 423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 420,
                      "name": "priceBtcDown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 139,
                      "src": "4207:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 421,
                        "name": "getBtcDownPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 625,
                        "src": "4222:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 422,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4222:17:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4207:32:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 424,
                  "nodeType": "ExpressionStatement",
                  "src": "4207:32:7"
                },
                {
                  "assignments": [
                    426
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 426,
                      "mutability": "mutable",
                      "name": "amountUsdc",
                      "nodeType": "VariableDeclaration",
                      "scope": 468,
                      "src": "4249:18:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 425,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4249:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 436,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        },
                        "id": 434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3130",
                          "id": 432,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4314:2:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "hexValue": "36",
                          "id": 433,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4320:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_6_by_1",
                            "typeString": "int_const 6"
                          },
                          "value": "6"
                        },
                        "src": "4314:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 429,
                            "name": "priceBtcDown",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 139,
                            "src": "4296:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 427,
                            "name": "amountLeveragedTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 408,
                            "src": "4270:21:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 428,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1634,
                          "src": "4270:25:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4270:39:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 431,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1649,
                      "src": "4270:43:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4270:52:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4249:73:7"
                },
                {
                  "expression": {
                    "id": 442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 437,
                      "name": "amountBtcDown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 151,
                      "src": "4341:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 440,
                          "name": "amountLeveragedTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 408,
                          "src": "4375:21:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 438,
                          "name": "amountBtcDown",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 151,
                          "src": "4357:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1619,
                        "src": "4357:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 441,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4357:40:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4341:56:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 443,
                  "nodeType": "ExpressionStatement",
                  "src": "4341:56:7"
                },
                {
                  "expression": {
                    "id": 449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 444,
                      "name": "collateralBtcDown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 145,
                      "src": "4407:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 447,
                          "name": "amountUsdc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 426,
                          "src": "4449:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 445,
                          "name": "collateralBtcDown",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 145,
                          "src": "4427:17:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1619,
                        "src": "4427:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 448,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4427:33:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4407:53:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 450,
                  "nodeType": "ExpressionStatement",
                  "src": "4407:53:7"
                },
                {
                  "assignments": [
                    453
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 453,
                      "mutability": "mutable",
                      "name": "usdc",
                      "nodeType": "VariableDeclaration",
                      "scope": 468,
                      "src": "4471:11:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$36",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 452,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 451,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 36,
                          "src": "4471:6:7"
                        },
                        "referencedDeclaration": 36,
                        "src": "4471:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$36",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 457,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 455,
                        "name": "addressUsdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 160,
                        "src": "4492:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 454,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "4485:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$36_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4485:19:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$36",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4471:33:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 461,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4536:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 462,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4536:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 463,
                            "name": "amountUsdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 426,
                            "src": "4549:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 459,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 453,
                            "src": "4522:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$36",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 460,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 15,
                          "src": "4522:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4522:38:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f756768207573646320617661696c61626c65",
                        "id": 465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4562:27:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_11e0d42ca67e4d2b1a22b36c1afaf70b8acf7fd68b23b01ee92fff5e749db362",
                          "typeString": "literal_string \"Not enough usdc available\""
                        },
                        "value": "Not enough usdc available"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_11e0d42ca67e4d2b1a22b36c1afaf70b8acf7fd68b23b01ee92fff5e749db362",
                          "typeString": "literal_string \"Not enough usdc available\""
                        }
                      ],
                      "id": 458,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4514:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4514:76:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 467,
                  "nodeType": "ExpressionStatement",
                  "src": "4514:76:7"
                }
              ]
            },
            "functionSelector": "a14274e8",
            "id": 469,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redeemBtcDown",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 409,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 408,
                  "mutability": "mutable",
                  "name": "amountLeveragedTokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 469,
                  "src": "4077:29:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 407,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4077:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4076:31:7"
            },
            "returnParameters": {
              "id": 410,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4115:0:7"
            },
            "scope": 778,
            "src": "4054:544:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 534,
              "nodeType": "Block",
              "src": "4647:611:7",
              "statements": [
                {
                  "assignments": [
                    473
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 473,
                      "mutability": "mutable",
                      "name": "btcPrice",
                      "nodeType": "VariableDeclaration",
                      "scope": 534,
                      "src": "4657:16:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 472,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4657:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 476,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 474,
                      "name": "getBtcPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 649,
                      "src": "4676:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4676:13:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4657:32:7"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 479,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 477,
                            "name": "collateralBtcUp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 142,
                            "src": "4704:15:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 478,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4722:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4704:19:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 480,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4703:21:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 483,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 481,
                            "name": "collateralBtcDown",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 145,
                            "src": "4729:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 482,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4749:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4729:21:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 484,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4728:23:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4703:48:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 529,
                  "nodeType": "IfStatement",
                  "src": "4699:519:7",
                  "trueBody": {
                    "id": 528,
                    "nodeType": "Block",
                    "src": "4753:465:7",
                    "statements": [
                      {
                        "assignments": [
                          487
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 487,
                            "mutability": "mutable",
                            "name": "rebalanceAmount",
                            "nodeType": "VariableDeclaration",
                            "scope": 528,
                            "src": "4767:23:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 486,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4767:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 491,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 489,
                              "name": "btcPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 473,
                              "src": "4812:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 488,
                            "name": "getRebalanceAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 583,
                            "src": "4793:18:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view returns (uint256)"
                            }
                          },
                          "id": 490,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4793:28:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4767:54:7"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          },
                          "id": 496,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 493,
                                "name": "btcPrice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 473,
                                "src": "4847:8:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 492,
                              "name": "getSign",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 554,
                              "src": "4839:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_int256_$",
                                "typeString": "function (uint256) view returns (int256)"
                              }
                            },
                            "id": 494,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4839:17:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 495,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4859:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4839:21:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 526,
                          "nodeType": "Block",
                          "src": "5044:163:7",
                          "statements": [
                            {
                              "expression": {
                                "id": 517,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 512,
                                  "name": "collateralBtcUp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 142,
                                  "src": "5062:15:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 515,
                                      "name": "rebalanceAmount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 487,
                                      "src": "5100:15:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 513,
                                      "name": "collateralBtcUp",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 142,
                                      "src": "5080:15:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 514,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sub",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1619,
                                    "src": "5080:19:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 516,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5080:36:7",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5062:54:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 518,
                              "nodeType": "ExpressionStatement",
                              "src": "5062:54:7"
                            },
                            {
                              "expression": {
                                "id": 524,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 519,
                                  "name": "collateralBtcDown",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 145,
                                  "src": "5134:17:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 522,
                                      "name": "rebalanceAmount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 487,
                                      "src": "5176:15:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 520,
                                      "name": "collateralBtcDown",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 145,
                                      "src": "5154:17:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 521,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "add",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1604,
                                    "src": "5154:21:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 523,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5154:38:7",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5134:58:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 525,
                              "nodeType": "ExpressionStatement",
                              "src": "5134:58:7"
                            }
                          ]
                        },
                        "id": 527,
                        "nodeType": "IfStatement",
                        "src": "4835:372:7",
                        "trueBody": {
                          "id": 511,
                          "nodeType": "Block",
                          "src": "4862:163:7",
                          "statements": [
                            {
                              "expression": {
                                "id": 502,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 497,
                                  "name": "collateralBtcUp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 142,
                                  "src": "4880:15:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 500,
                                      "name": "rebalanceAmount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 487,
                                      "src": "4918:15:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 498,
                                      "name": "collateralBtcUp",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 142,
                                      "src": "4898:15:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 499,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "add",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1604,
                                    "src": "4898:19:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 501,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4898:36:7",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4880:54:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 503,
                              "nodeType": "ExpressionStatement",
                              "src": "4880:54:7"
                            },
                            {
                              "expression": {
                                "id": 509,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 504,
                                  "name": "collateralBtcDown",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 145,
                                  "src": "4952:17:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 507,
                                      "name": "rebalanceAmount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 487,
                                      "src": "4994:15:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 505,
                                      "name": "collateralBtcDown",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 145,
                                      "src": "4972:17:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 506,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sub",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1619,
                                    "src": "4972:21:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 508,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4972:38:7",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4952:58:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 510,
                              "nodeType": "ExpressionStatement",
                              "src": "4952:58:7"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 532,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 530,
                      "name": "lastBtcPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 154,
                      "src": "5228:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 531,
                      "name": "btcPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 473,
                      "src": "5243:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5228:23:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 533,
                  "nodeType": "ExpressionStatement",
                  "src": "5228:23:7"
                }
              ]
            },
            "functionSelector": "6e5d6615",
            "id": 535,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "rebalanceLeveragedTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 470,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4637:2:7"
            },
            "returnParameters": {
              "id": 471,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4647:0:7"
            },
            "scope": 778,
            "src": "4604:654:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 553,
              "nodeType": "Block",
              "src": "5500:126:7",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 542,
                      "name": "btcPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 537,
                      "src": "5514:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 543,
                      "name": "lastBtcPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 154,
                      "src": "5525:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5514:23:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 551,
                    "nodeType": "Block",
                    "src": "5586:34:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 549,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "-",
                          "prefix": true,
                          "src": "5607:2:7",
                          "subExpression": {
                            "hexValue": "31",
                            "id": 548,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5608:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_minus_1_by_1",
                            "typeString": "int_const -1"
                          }
                        },
                        "functionReturnParameters": 541,
                        "id": 550,
                        "nodeType": "Return",
                        "src": "5600:9:7"
                      }
                    ]
                  },
                  "id": 552,
                  "nodeType": "IfStatement",
                  "src": "5510:110:7",
                  "trueBody": {
                    "id": 547,
                    "nodeType": "Block",
                    "src": "5539:33:7",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "31",
                          "id": 545,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5560:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "functionReturnParameters": 541,
                        "id": 546,
                        "nodeType": "Return",
                        "src": "5553:8:7"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 554,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSign",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 538,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 537,
                  "mutability": "mutable",
                  "name": "btcPrice",
                  "nodeType": "VariableDeclaration",
                  "scope": 554,
                  "src": "5452:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 536,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5452:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5451:18:7"
            },
            "returnParameters": {
              "id": 541,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 540,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 554,
                  "src": "5493:6:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 539,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5493:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5492:8:7"
            },
            "scope": 778,
            "src": "5435:191:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 582,
              "nodeType": "Block",
              "src": "5710:147:7",
              "statements": [
                {
                  "assignments": [
                    562
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 562,
                      "mutability": "mutable",
                      "name": "priceDiff",
                      "nodeType": "VariableDeclaration",
                      "scope": 582,
                      "src": "5720:17:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 561,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5720:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 566,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 564,
                        "name": "priceBtc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 556,
                        "src": "5753:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 563,
                      "name": "getPriceDiff",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 753,
                      "src": "5740:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5740:22:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5720:42:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        },
                        "id": 579,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3130",
                          "id": 577,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5842:2:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "hexValue": "36",
                          "id": 578,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5848:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_6_by_1",
                            "typeString": "int_const 6"
                          },
                          "value": "6"
                        },
                        "src": "5842:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 573,
                                "name": "priceDiff",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 562,
                                "src": "5826:9:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 572,
                              "name": "L",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 709,
                              "src": "5824:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256) pure returns (uint256)"
                              }
                            },
                            "id": 574,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5824:12:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 568,
                                "name": "collateralBtcUp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 142,
                                "src": "5784:15:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 569,
                                "name": "collateralBtcDown",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 145,
                                "src": "5801:17:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 567,
                              "name": "min",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 666,
                              "src": "5780:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 570,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5780:39:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 571,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1634,
                          "src": "5780:43:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 575,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5780:57:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 576,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1649,
                      "src": "5780:61:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5780:70:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 560,
                  "id": 581,
                  "nodeType": "Return",
                  "src": "5773:77:7"
                }
              ]
            },
            "id": 583,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRebalanceAmount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 557,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 556,
                  "mutability": "mutable",
                  "name": "priceBtc",
                  "nodeType": "VariableDeclaration",
                  "scope": 583,
                  "src": "5661:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 555,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5661:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5660:18:7"
            },
            "returnParameters": {
              "id": 560,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 559,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 583,
                  "src": "5702:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 558,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5702:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5701:9:7"
            },
            "scope": 778,
            "src": "5633:224:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 603,
              "nodeType": "Block",
              "src": "5948:102:7",
              "statements": [
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 590,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 588,
                        "name": "amountBtcUp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 148,
                        "src": "5965:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 589,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5980:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "5965:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "arguments": [
                        {
                          "id": 599,
                          "name": "amountBtcUp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 148,
                          "src": "6031:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              },
                              "id": 596,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 594,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6018:2:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "36",
                                "id": 595,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6024:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_6_by_1",
                                  "typeString": "int_const 6"
                                },
                                "value": "6"
                              },
                              "src": "6018:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              }
                            ],
                            "expression": {
                              "id": 592,
                              "name": "collateralBtcUp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 142,
                              "src": "5998:15:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 593,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1634,
                            "src": "5998:19:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 597,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5998:28:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 598,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1649,
                        "src": "5998:32:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 600,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5998:45:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "5965:78:7",
                    "trueExpression": {
                      "id": 591,
                      "name": "priceBtcUp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 134,
                      "src": "5985:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 587,
                  "id": 602,
                  "nodeType": "Return",
                  "src": "5958:85:7"
                }
              ]
            },
            "functionSelector": "f06847d6",
            "id": 604,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBtcUpPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 584,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5915:2:7"
            },
            "returnParameters": {
              "id": 587,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 586,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 604,
                  "src": "5939:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 585,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5939:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5938:9:7"
            },
            "scope": 778,
            "src": "5893:157:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 624,
              "nodeType": "Block",
              "src": "6145:122:7",
              "statements": [
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 611,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 609,
                        "name": "amountBtcDown",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 151,
                        "src": "6174:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 610,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6191:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "6174:18:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "arguments": [
                        {
                          "id": 620,
                          "name": "amountBtcDown",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 151,
                          "src": "6246:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              },
                              "id": 617,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 615,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6233:2:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "36",
                                "id": 616,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6239:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_6_by_1",
                                  "typeString": "int_const 6"
                                },
                                "value": "6"
                              },
                              "src": "6233:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              }
                            ],
                            "expression": {
                              "id": 613,
                              "name": "collateralBtcDown",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 145,
                              "src": "6211:17:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 614,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1634,
                            "src": "6211:21:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 618,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6211:30:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 619,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1649,
                        "src": "6211:34:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 621,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6211:49:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 622,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "6174:86:7",
                    "trueExpression": {
                      "id": 612,
                      "name": "priceBtcDown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 139,
                      "src": "6196:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 608,
                  "id": 623,
                  "nodeType": "Return",
                  "src": "6167:93:7"
                }
              ]
            },
            "functionSelector": "81c2b29b",
            "id": 625,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBtcDownPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 605,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6112:2:7"
            },
            "returnParameters": {
              "id": 608,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 607,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 625,
                  "src": "6136:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 606,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6136:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6135:9:7"
            },
            "scope": 778,
            "src": "6088:179:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 648,
              "nodeType": "Block",
              "src": "6372:264:7",
              "statements": [
                {
                  "assignments": [
                    632
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 632,
                      "mutability": "mutable",
                      "name": "priceFeed",
                      "nodeType": "VariableDeclaration",
                      "scope": 648,
                      "src": "6382:31:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$1786",
                        "typeString": "contract AggregatorV3Interface"
                      },
                      "typeName": {
                        "id": 631,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 630,
                          "name": "AggregatorV3Interface",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1786,
                          "src": "6382:21:7"
                        },
                        "referencedDeclaration": 1786,
                        "src": "6382:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$1786",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 636,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 634,
                        "name": "addressBtcUSDFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 163,
                        "src": "6438:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 633,
                      "name": "AggregatorV3Interface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1786,
                      "src": "6416:21:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$1786_$",
                        "typeString": "type(contract AggregatorV3Interface)"
                      }
                    },
                    "id": 635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6416:40:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$1786",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6382:74:7"
                },
                {
                  "assignments": [
                    null,
                    638,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 638,
                      "mutability": "mutable",
                      "name": "answer",
                      "nodeType": "VariableDeclaration",
                      "scope": 648,
                      "src": "6468:13:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 637,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6468:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null
                  ],
                  "id": 642,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 639,
                        "name": "priceFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 632,
                        "src": "6488:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$1786",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 640,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1785,
                      "src": "6488:25:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6488:27:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6466:49:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 645,
                        "name": "answer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 638,
                        "src": "6542:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 644,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "6534:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 643,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6534:7:7",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6534:15:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 629,
                  "id": 647,
                  "nodeType": "Return",
                  "src": "6527:22:7"
                }
              ]
            },
            "functionSelector": "3a3610bc",
            "id": 649,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBtcPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 626,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6339:2:7"
            },
            "returnParameters": {
              "id": 629,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 628,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 649,
                  "src": "6363:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 627,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6363:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6362:9:7"
            },
            "scope": 778,
            "src": "6319:317:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 665,
              "nodeType": "Block",
              "src": "6713:38:7",
              "statements": [
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 660,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 658,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 651,
                        "src": "6730:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<=",
                      "rightExpression": {
                        "id": 659,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 653,
                        "src": "6735:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6730:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 662,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 653,
                      "src": "6743:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "6730:14:7",
                    "trueExpression": {
                      "id": 661,
                      "name": "a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 651,
                      "src": "6739:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 657,
                  "id": 664,
                  "nodeType": "Return",
                  "src": "6723:21:7"
                }
              ]
            },
            "id": 666,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "min",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 654,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 651,
                  "mutability": "mutable",
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 666,
                  "src": "6659:9:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 650,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6659:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 653,
                  "mutability": "mutable",
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 666,
                  "src": "6670:9:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 652,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6670:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6658:22:7"
            },
            "returnParameters": {
              "id": 657,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 656,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 666,
                  "src": "6704:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 655,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6704:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6703:9:7"
            },
            "scope": 778,
            "src": "6646:105:7",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 708,
              "nodeType": "Block",
              "src": "6811:171:7",
              "statements": [
                {
                  "assignments": [
                    674
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 674,
                      "mutability": "mutable",
                      "name": "denom",
                      "nodeType": "VariableDeclaration",
                      "scope": 708,
                      "src": "6847:13:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 673,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6847:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 693,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 688,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 684,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "39",
                          "id": 675,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6863:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_9_by_1",
                            "typeString": "int_const 9"
                          },
                          "value": "9"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 682,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 678,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 676,
                                  "name": "x",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 668,
                                  "src": "6868:1:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "hexValue": "32",
                                  "id": 677,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6873:1:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "src": "6868:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_rational_1000000_by_1",
                                  "typeString": "int_const 1000000"
                                },
                                "id": 681,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "3130",
                                  "id": 679,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6877:2:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10_by_1",
                                    "typeString": "int_const 10"
                                  },
                                  "value": "10"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "hexValue": "36",
                                  "id": 680,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6883:1:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_6_by_1",
                                    "typeString": "int_const 6"
                                  },
                                  "value": "6"
                                },
                                "src": "6877:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000_by_1",
                                  "typeString": "int_const 1000000"
                                }
                              },
                              "src": "6868:16:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 683,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "6867:18:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6863:22:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 687,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "33",
                          "id": 685,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6889:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "id": 686,
                          "name": "x",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 668,
                          "src": "6893:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6889:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6863:31:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_rational_1000000_by_1",
                        "typeString": "int_const 1000000"
                      },
                      "id": 691,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3130",
                        "id": 689,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6897:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "hexValue": "36",
                        "id": 690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6903:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        },
                        "value": "6"
                      },
                      "src": "6897:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000_by_1",
                        "typeString": "int_const 1000000"
                      }
                    },
                    "src": "6863:41:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6847:57:7"
                },
                {
                  "assignments": [
                    695
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 695,
                      "mutability": "mutable",
                      "name": "num",
                      "nodeType": "VariableDeclaration",
                      "scope": 708,
                      "src": "6914:11:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 694,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6914:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 699,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_rational_1000000000000_by_1",
                      "typeString": "int_const 1000000000000"
                    },
                    "id": 698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3130",
                      "id": 696,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6928:2:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "hexValue": "3132",
                      "id": 697,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6934:2:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_12_by_1",
                        "typeString": "int_const 12"
                      },
                      "value": "12"
                    },
                    "src": "6928:8:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000000_by_1",
                      "typeString": "int_const 1000000000000"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6914:22:7"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 706,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_rational_1000000_by_1",
                        "typeString": "int_const 1000000"
                      },
                      "id": 702,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3130",
                        "id": 700,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6954:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "hexValue": "36",
                        "id": 701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6960:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        },
                        "value": "6"
                      },
                      "src": "6954:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000_by_1",
                        "typeString": "int_const 1000000"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 705,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 703,
                        "name": "num",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 695,
                        "src": "6964:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "id": 704,
                        "name": "denom",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 674,
                        "src": "6970:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6964:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6954:21:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 672,
                  "id": 707,
                  "nodeType": "Return",
                  "src": "6947:28:7"
                }
              ]
            },
            "id": 709,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "L",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 669,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 668,
                  "mutability": "mutable",
                  "name": "x",
                  "nodeType": "VariableDeclaration",
                  "scope": 709,
                  "src": "6768:9:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 667,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6768:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6767:11:7"
            },
            "returnParameters": {
              "id": 672,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 671,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 709,
                  "src": "6802:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 670,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6802:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6801:9:7"
            },
            "scope": 778,
            "src": "6757:225:7",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 752,
              "nodeType": "Block",
              "src": "7060:246:7",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 716,
                      "name": "btcPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 711,
                      "src": "7091:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 717,
                      "name": "lastBtcPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 154,
                      "src": "7102:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7091:23:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 750,
                    "nodeType": "Block",
                    "src": "7215:84:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              },
                              "id": 747,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 745,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7280:2:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "36",
                                "id": 746,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7286:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_6_by_1",
                                  "typeString": "int_const 6"
                                },
                                "value": "6"
                              },
                              "src": "7280:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 742,
                                  "name": "btcPrice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 711,
                                  "src": "7266:8:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_rational_1000000_by_1",
                                        "typeString": "int_const 1000000"
                                      },
                                      "id": 739,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "hexValue": "3130",
                                        "id": 737,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7253:2:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_10_by_1",
                                          "typeString": "int_const 10"
                                        },
                                        "value": "10"
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "**",
                                      "rightExpression": {
                                        "hexValue": "36",
                                        "id": 738,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7259:1:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_6_by_1",
                                          "typeString": "int_const 6"
                                        },
                                        "value": "6"
                                      },
                                      "src": "7253:7:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1000000_by_1",
                                        "typeString": "int_const 1000000"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_1000000_by_1",
                                        "typeString": "int_const 1000000"
                                      }
                                    ],
                                    "expression": {
                                      "id": 735,
                                      "name": "lastBtcPrice",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 154,
                                      "src": "7236:12:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 736,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1634,
                                    "src": "7236:16:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 740,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7236:25:7",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 741,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1649,
                                "src": "7236:29:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 743,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7236:39:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 744,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1619,
                            "src": "7236:43:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 748,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7236:52:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 715,
                        "id": 749,
                        "nodeType": "Return",
                        "src": "7229:59:7"
                      }
                    ]
                  },
                  "id": 751,
                  "nodeType": "IfStatement",
                  "src": "7087:212:7",
                  "trueBody": {
                    "id": 734,
                    "nodeType": "Block",
                    "src": "7116:84:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              },
                              "id": 731,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 729,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7181:2:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "36",
                                "id": 730,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7187:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_6_by_1",
                                  "typeString": "int_const 6"
                                },
                                "value": "6"
                              },
                              "src": "7181:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 726,
                                  "name": "lastBtcPrice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 154,
                                  "src": "7163:12:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_rational_1000000_by_1",
                                        "typeString": "int_const 1000000"
                                      },
                                      "id": 723,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "hexValue": "3130",
                                        "id": 721,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7150:2:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_10_by_1",
                                          "typeString": "int_const 10"
                                        },
                                        "value": "10"
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "**",
                                      "rightExpression": {
                                        "hexValue": "36",
                                        "id": 722,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7156:1:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_6_by_1",
                                          "typeString": "int_const 6"
                                        },
                                        "value": "6"
                                      },
                                      "src": "7150:7:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1000000_by_1",
                                        "typeString": "int_const 1000000"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_1000000_by_1",
                                        "typeString": "int_const 1000000"
                                      }
                                    ],
                                    "expression": {
                                      "id": 719,
                                      "name": "btcPrice",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 711,
                                      "src": "7137:8:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 720,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1634,
                                    "src": "7137:12:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 724,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7137:21:7",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 725,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1649,
                                "src": "7137:25:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 727,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7137:39:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 728,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1619,
                            "src": "7137:43:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 732,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7137:52:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 715,
                        "id": 733,
                        "nodeType": "Return",
                        "src": "7130:59:7"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 753,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPriceDiff",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 712,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 711,
                  "mutability": "mutable",
                  "name": "btcPrice",
                  "nodeType": "VariableDeclaration",
                  "scope": 753,
                  "src": "7010:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 710,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7010:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7009:18:7"
            },
            "returnParameters": {
              "id": 715,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 714,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 753,
                  "src": "7051:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 713,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7051:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7050:9:7"
            },
            "scope": 778,
            "src": "6988:318:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 764,
              "nodeType": "Block",
              "src": "7368:51:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 760,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7401:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7401:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 758,
                        "name": "btcUp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 170,
                        "src": "7385:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BTCUP_$80",
                          "typeString": "contract BTCUP"
                        }
                      },
                      "id": 759,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 981,
                      "src": "7385:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7385:27:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 757,
                  "id": 763,
                  "nodeType": "Return",
                  "src": "7378:34:7"
                }
              ]
            },
            "functionSelector": "157d0129",
            "id": 765,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBtcupBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 754,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7336:2:7"
            },
            "returnParameters": {
              "id": 757,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 756,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 765,
                  "src": "7359:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 755,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7359:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7358:9:7"
            },
            "scope": 778,
            "src": "7312:107:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 776,
              "nodeType": "Block",
              "src": "7483:53:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 772,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7518:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 773,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7518:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 770,
                        "name": "btcDown",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 177,
                        "src": "7500:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BTCDOWN_$124",
                          "typeString": "contract BTCDOWN"
                        }
                      },
                      "id": 771,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 981,
                      "src": "7500:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7500:29:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 769,
                  "id": 775,
                  "nodeType": "Return",
                  "src": "7493:36:7"
                }
              ]
            },
            "functionSelector": "c7e3b124",
            "id": 777,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBtcdownBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 766,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7451:2:7"
            },
            "returnParameters": {
              "id": 769,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 768,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 777,
                  "src": "7474:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 767,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7474:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7473:9:7"
            },
            "scope": 778,
            "src": "7425:111:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 779,
        "src": "1303:6236:7"
      }
    ],
    "src": "32:7509:7"
  },
  "bytecode": "60806040523480156200001157600080fd5b50604080518082018252600a8152690426974636f696e2055760b41b602080830191825283518085019094526005845264042544355560dc1b908401528151919291620000619160039162000080565b5080516200007790600490602084019062000080565b50505062000163565b8280546200008e9062000126565b90600052602060002090601f016020900481019282620000b25760008555620000fd565b82601f10620000cd57805160ff1916838001178555620000fd565b82800160010185558215620000fd579182015b82811115620000fd578251825591602001919060010190620000e0565b506200010b9291506200010f565b5090565b5b808211156200010b576000815560010162000110565b6002810460018216806200013b57607f821691505b602082108114156200015d57634e487b7160e01b600052602260045260246000fd5b50919050565b610cce80620001736000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806342966c681161008c578063a0712d6811610066578063a0712d6814610192578063a457c2d7146101a5578063a9059cbb146101b8578063dd62ed3e146101cb576100cf565b806342966c681461016257806370a082311461017757806395d89b411461018a576100cf565b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461011257806323b872dd14610127578063313ce5671461013a578063395093511461014f575b600080fd5b6100dc6101de565b6040516100e99190610913565b60405180910390f35b6101056101003660046108c7565b610270565b6040516100e99190610908565b61011a61028d565b6040516100e99190610c01565b61010561013536600461088c565b610293565b61014261032c565b6040516100e99190610c0a565b61010561015d3660046108c7565b610331565b6101756101703660046108f0565b610385565b005b61011a610185366004610839565b610392565b6100dc6103b1565b6101756101a03660046108f0565b6103c0565b6101056101b33660046108c7565b6103ca565b6101056101c63660046108c7565b610443565b61011a6101d936600461085a565b610457565b6060600380546101ed90610c47565b80601f016020809104026020016040519081016040528092919081815260200182805461021990610c47565b80156102665780601f1061023b57610100808354040283529160200191610266565b820191906000526020600020905b81548152906001019060200180831161024957829003601f168201915b5050505050905090565b600061028461027d610482565b8484610486565b50600192915050565b60025490565b60006102a084848461053a565b6001600160a01b0384166000908152600160205260408120816102c1610482565b6001600160a01b03166001600160a01b031681526020019081526020016000205490508281101561030d5760405162461bcd60e51b815260040161030490610a73565b60405180910390fd5b61032185610319610482565b858403610486565b506001949350505050565b600690565b600061028461033e610482565b84846001600061034c610482565b6001600160a01b03908116825260208083019390935260409182016000908120918b16815292529020546103809190610c18565b610486565b61038f3282610664565b50565b6001600160a01b0381166000908152602081905260409020545b919050565b6060600480546101ed90610c47565b61038f3282610756565b600080600160006103d9610482565b6001600160a01b03908116825260208083019390935260409182016000908120918816815292529020549050828110156104255760405162461bcd60e51b815260040161030490610b85565b610439610430610482565b85858403610486565b5060019392505050565b6000610284610450610482565b848461053a565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166104ac5760405162461bcd60e51b815260040161030490610b41565b6001600160a01b0382166104d25760405162461bcd60e51b8152600401610304906109eb565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061052d908590610c01565b60405180910390a3505050565b6001600160a01b0383166105605760405162461bcd60e51b815260040161030490610afc565b6001600160a01b0382166105865760405162461bcd60e51b815260040161030490610966565b610591838383610751565b6001600160a01b038316600090815260208190526040902054818110156105ca5760405162461bcd60e51b815260040161030490610a2d565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610601908490610c18565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161064b9190610c01565b60405180910390a361065e848484610751565b50505050565b6001600160a01b03821661068a5760405162461bcd60e51b815260040161030490610abb565b61069682600083610751565b6001600160a01b038216600090815260208190526040902054818110156106cf5760405162461bcd60e51b8152600401610304906109a9565b6001600160a01b03831660009081526020819052604081208383039055600280548492906106fe908490610c30565b90915550506040516000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610741908690610c01565b60405180910390a3610751836000845b505050565b6001600160a01b03821661077c5760405162461bcd60e51b815260040161030490610bca565b61078860008383610751565b806002600082825461079a9190610c18565b90915550506001600160a01b038216600090815260208190526040812080548392906107c7908490610c18565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061080a908590610c01565b60405180910390a361081e60008383610751565b5050565b80356001600160a01b03811681146103ac57600080fd5b60006020828403121561084a578081fd5b61085382610822565b9392505050565b6000806040838503121561086c578081fd5b61087583610822565b915061088360208401610822565b90509250929050565b6000806000606084860312156108a0578081fd5b6108a984610822565b92506108b760208501610822565b9150604084013590509250925092565b600080604083850312156108d9578182fd5b6108e283610822565b946020939093013593505050565b600060208284031215610901578081fd5b5035919050565b901515815260200190565b6000602080835283518082850152825b8181101561093f57858101830151858201604001528201610923565b818111156109505783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526022908201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604082015261636560f01b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b60208082526028908201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616040820152676c6c6f77616e636560c01b606082015260800190565b60208082526021908201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736040820152607360f81b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604082015264207a65726f60d81b606082015260800190565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b60ff91909116815260200190565b60008219821115610c2b57610c2b610c82565b500190565b600082821015610c4257610c42610c82565b500390565b600281046001821680610c5b57607f821691505b60208210811415610c7c57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220241f93fff893c0ad9b2f67fbac7729f578fe8ca6ec742ad73fcf9763c1ddca4164736f6c63430008000033",
  "bytecodeSha1": "575954518449bfa9df864f5b53761eff50c6a0c5",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.0+commit.c7dfd78e"
  },
  "contractName": "BTCUP",
  "coverageMap": {
    "branches": {
      "1": {
        "ERC20._approve": {
          "47": [
            10083,
            10102,
            true
          ],
          "48": [
            10161,
            10182,
            true
          ]
        },
        "ERC20._burn": {
          "52": [
            9036,
            9057,
            true
          ],
          "53": [
            9227,
            9251,
            true
          ]
        },
        "ERC20._mint": {
          "54": [
            8327,
            8348,
            true
          ]
        },
        "ERC20._transfer": {
          "49": [
            7390,
            7410,
            true
          ],
          "50": [
            7470,
            7493,
            true
          ],
          "51": [
            7661,
            7684,
            true
          ]
        },
        "ERC20.decreaseAllowance": {
          "46": [
            6564,
            6599,
            true
          ]
        },
        "ERC20.transferFrom": {
          "45": [
            5081,
            5107,
            true
          ]
        }
      },
      "2": {},
      "3": {},
      "4": {},
      "7": {}
    },
    "statements": {
      "1": {
        "ERC20._approve": {
          "20": [
            10075,
            10143
          ],
          "21": [
            10153,
            10221
          ],
          "22": [
            10232,
            10268
          ],
          "23": [
            10278,
            10315
          ]
        },
        "ERC20._burn": {
          "32": [
            9028,
            9095
          ],
          "33": [
            9106,
            9155
          ],
          "34": [
            9219,
            9290
          ],
          "35": [
            9324,
            9368
          ],
          "36": [
            9388,
            9410
          ],
          "37": [
            9421,
            9463
          ],
          "38": [
            9474,
            9522
          ]
        },
        "ERC20._mint": {
          "39": [
            8319,
            8384
          ],
          "40": [
            8395,
            8444
          ],
          "41": [
            8455,
            8477
          ],
          "42": [
            8487,
            8515
          ],
          "43": [
            8525,
            8567
          ],
          "44": [
            8578,
            8626
          ]
        },
        "ERC20._transfer": {
          "24": [
            7382,
            7452
          ],
          "25": [
            7462,
            7533
          ],
          "26": [
            7544,
            7591
          ],
          "27": [
            7653,
            7727
          ],
          "28": [
            7761,
            7803
          ],
          "29": [
            7823,
            7853
          ],
          "30": [
            7864,
            7904
          ],
          "31": [
            7915,
            7961
          ]
        },
        "ERC20.allowance": {
          "18": [
            3992,
            4026
          ]
        },
        "ERC20.approve": {
          "1": [
            4270,
            4309
          ],
          "2": [
            4319,
            4330
          ]
        },
        "ERC20.balanceOf": {
          "11": [
            3419,
            3444
          ]
        },
        "ERC20.decreaseAllowance": {
          "14": [
            6556,
            6641
          ],
          "15": [
            6675,
            6742
          ],
          "16": [
            6763,
            6774
          ]
        },
        "ERC20.increaseAllowance": {
          "9": [
            5781,
            5861
          ]
        },
        "ERC20.name": {
          "0": [
            2153,
            2165
          ]
        },
        "ERC20.symbol": {
          "12": [
            2366,
            2380
          ]
        },
        "ERC20.totalSupply": {
          "3": [
            3242,
            3261
          ]
        },
        "ERC20.transfer": {
          "17": [
            3756,
            3798
          ]
        },
        "ERC20.transferFrom": {
          "4": [
            4956,
            4992
          ],
          "5": [
            5073,
            5152
          ],
          "6": [
            5186,
            5243
          ],
          "7": [
            5264,
            5275
          ]
        }
      },
      "2": {},
      "3": {},
      "4": {
        "Context._msgSender": {
          "19": [
            658,
            675
          ]
        }
      },
      "7": {
        "BTCUP.burn": {
          "10": [
            824,
            850
          ]
        },
        "BTCUP.decimals": {
          "8": [
            930,
            938
          ]
        },
        "BTCUP.mint": {
          "13": [
            736,
            762
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.2.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/ERC20",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/IERC20Metadata"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c806342966c681161008c578063a0712d6811610066578063a0712d6814610192578063a457c2d7146101a5578063a9059cbb146101b8578063dd62ed3e146101cb576100cf565b806342966c681461016257806370a082311461017757806395d89b411461018a576100cf565b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461011257806323b872dd14610127578063313ce5671461013a578063395093511461014f575b600080fd5b6100dc6101de565b6040516100e99190610913565b60405180910390f35b6101056101003660046108c7565b610270565b6040516100e99190610908565b61011a61028d565b6040516100e99190610c01565b61010561013536600461088c565b610293565b61014261032c565b6040516100e99190610c0a565b61010561015d3660046108c7565b610331565b6101756101703660046108f0565b610385565b005b61011a610185366004610839565b610392565b6100dc6103b1565b6101756101a03660046108f0565b6103c0565b6101056101b33660046108c7565b6103ca565b6101056101c63660046108c7565b610443565b61011a6101d936600461085a565b610457565b6060600380546101ed90610c47565b80601f016020809104026020016040519081016040528092919081815260200182805461021990610c47565b80156102665780601f1061023b57610100808354040283529160200191610266565b820191906000526020600020905b81548152906001019060200180831161024957829003601f168201915b5050505050905090565b600061028461027d610482565b8484610486565b50600192915050565b60025490565b60006102a084848461053a565b6001600160a01b0384166000908152600160205260408120816102c1610482565b6001600160a01b03166001600160a01b031681526020019081526020016000205490508281101561030d5760405162461bcd60e51b815260040161030490610a73565b60405180910390fd5b61032185610319610482565b858403610486565b506001949350505050565b600690565b600061028461033e610482565b84846001600061034c610482565b6001600160a01b03908116825260208083019390935260409182016000908120918b16815292529020546103809190610c18565b610486565b61038f3282610664565b50565b6001600160a01b0381166000908152602081905260409020545b919050565b6060600480546101ed90610c47565b61038f3282610756565b600080600160006103d9610482565b6001600160a01b03908116825260208083019390935260409182016000908120918816815292529020549050828110156104255760405162461bcd60e51b815260040161030490610b85565b610439610430610482565b85858403610486565b5060019392505050565b6000610284610450610482565b848461053a565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166104ac5760405162461bcd60e51b815260040161030490610b41565b6001600160a01b0382166104d25760405162461bcd60e51b8152600401610304906109eb565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061052d908590610c01565b60405180910390a3505050565b6001600160a01b0383166105605760405162461bcd60e51b815260040161030490610afc565b6001600160a01b0382166105865760405162461bcd60e51b815260040161030490610966565b610591838383610751565b6001600160a01b038316600090815260208190526040902054818110156105ca5760405162461bcd60e51b815260040161030490610a2d565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610601908490610c18565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161064b9190610c01565b60405180910390a361065e848484610751565b50505050565b6001600160a01b03821661068a5760405162461bcd60e51b815260040161030490610abb565b61069682600083610751565b6001600160a01b038216600090815260208190526040902054818110156106cf5760405162461bcd60e51b8152600401610304906109a9565b6001600160a01b03831660009081526020819052604081208383039055600280548492906106fe908490610c30565b90915550506040516000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610741908690610c01565b60405180910390a3610751836000845b505050565b6001600160a01b03821661077c5760405162461bcd60e51b815260040161030490610bca565b61078860008383610751565b806002600082825461079a9190610c18565b90915550506001600160a01b038216600090815260208190526040812080548392906107c7908490610c18565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061080a908590610c01565b60405180910390a361081e60008383610751565b5050565b80356001600160a01b03811681146103ac57600080fd5b60006020828403121561084a578081fd5b61085382610822565b9392505050565b6000806040838503121561086c578081fd5b61087583610822565b915061088360208401610822565b90509250929050565b6000806000606084860312156108a0578081fd5b6108a984610822565b92506108b760208501610822565b9150604084013590509250925092565b600080604083850312156108d9578182fd5b6108e283610822565b946020939093013593505050565b600060208284031215610901578081fd5b5035919050565b901515815260200190565b6000602080835283518082850152825b8181101561093f57858101830151858201604001528201610923565b818111156109505783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526022908201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604082015261636560f01b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b60208082526028908201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616040820152676c6c6f77616e636560c01b606082015260800190565b60208082526021908201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736040820152607360f81b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604082015264207a65726f60d81b606082015260800190565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b60ff91909116815260200190565b60008219821115610c2b57610c2b610c82565b500190565b600082821015610c4257610c42610c82565b500390565b600281046001821680610c5b57607f821691505b60208210811415610c7c57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220241f93fff893c0ad9b2f67fbac7729f578fe8ca6ec742ad73fcf9763c1ddca4164736f6c63430008000033",
  "deployedSourceMap": "601:346:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:98:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4171:166;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3162:106::-;;;:::i;:::-;;;;;;;:::i;4804:478::-;;;;;;:::i;:::-;;:::i;863:82:7:-;;;:::i;:::-;;;;;;;:::i;5677:212:1:-;;;;;;:::i;:::-;;:::i;775:82:7:-;;;;;;:::i;:::-;;:::i;:::-;;3326:125:1;;;;;;:::i;:::-;;:::i;2285:102::-;;;:::i;687:82:7:-;;;;;;:::i;:::-;;:::i;6376:405:1:-;;;;;;:::i;:::-;;:::i;3654:172::-;;;;;;:::i;:::-;;:::i;3884:149::-;;;;;;:::i;:::-;;:::i;2074:98::-;2128:13;2160:5;2153:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:98;:::o;4171:166::-;4254:4;4270:39;4279:12;:10;:12::i;:::-;4293:7;4302:6;4270:8;:39::i;:::-;-1:-1:-1;4326:4:1;4171:166;;;;:::o;3162:106::-;3249:12;;3162:106;:::o;4804:478::-;4940:4;4956:36;4966:6;4974:9;4985:6;4956:9;:36::i;:::-;-1:-1:-1;;;;;5030:19:1;;5003:24;5030:19;;;-1:-1:-1;5030:19:1;;;;;5003:24;5050:12;:10;:12::i;:::-;-1:-1:-1;;;;;5030:33:1;;;;;;;;;;;;-1:-1:-1;5030:33:1;;;-1:-1:-1;5081:26:1;;;;5073:79;;;;-1:-1:-1;;;5073:79:1;;;;;;;:::i;:::-;;;;;;;;;5186:57;5195:6;5203:12;:10;:12::i;:::-;5236:6;5217:16;:25;5186:8;:57::i;:::-;-1:-1:-1;5271:4:1;;4804:478;-1:-1:-1;;;;4804:478:1:o;863:82:7:-;937:1;863:82;:::o;5677:212:1:-;5765:4;5781:80;5790:12;:10;:12::i;:::-;5804:7;5850:10;5813:11;:25;5825:12;:10;:12::i;:::-;-1:-1:-1;;;;;5813:25:1;;;;;;;;;;;;;;;;;-1:-1:-1;5813:25:1;;;:34;;;;;;;;;;:47;;;;:::i;:::-;5781:8;:80::i;775:82:7:-;824:26;830:9;841:8;824:5;:26::i;:::-;775:82;:::o;3326:125:1:-;-1:-1:-1;;;;;3426:18:1;;3400:7;3426:18;;;;;;;;;;;3326:125;;;;:::o;2285:102::-;2341:13;2373:7;2366:14;;;;;:::i;687:82:7:-;736:26;742:9;753:8;736:5;:26::i;6376:405:1:-;6469:4;6485:24;6512:11;:25;6524:12;:10;:12::i;:::-;-1:-1:-1;;;;;6512:25:1;;;;;;;;;;;;;;;;;-1:-1:-1;6512:25:1;;;:34;;;;;;;;;;;-1:-1:-1;6564:35:1;;;;6556:85;;;;-1:-1:-1;;;6556:85:1;;;;;;;:::i;:::-;6675:67;6684:12;:10;:12::i;:::-;6698:7;6726:15;6707:16;:34;6675:8;:67::i;:::-;-1:-1:-1;6770:4:1;;6376:405;-1:-1:-1;;;6376:405:1:o;3654:172::-;3740:4;3756:42;3766:12;:10;:12::i;:::-;3780:9;3791:6;3756:9;:42::i;3884:149::-;-1:-1:-1;;;;;3999:18:1;;;3973:7;3999:18;;;-1:-1:-1;3999:18:1;;;;;;;;:27;;;;;;;;;;;;;3884:149::o;586:96:4:-;665:10;586:96;:::o;9952:370:1:-;-1:-1:-1;;;;;10083:19:1;;10075:68;;;;-1:-1:-1;;;10075:68:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;10161:21:1;;10153:68;;;;-1:-1:-1;;;10153:68:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;10232:18:1;;;;;;;-1:-1:-1;10232:18:1;;;;;;;;:27;;;;;;;;;;;;;;:36;;;10283:32;;;;;10232:36;;10283:32;:::i;:::-;;;;;;;;9952:370;;;:::o;7255:713::-;-1:-1:-1;;;;;7390:20:1;;7382:70;;;;-1:-1:-1;;;7382:70:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;7470:23:1;;7462:71;;;;-1:-1:-1;;;7462:71:1;;;;;;;:::i;:::-;7544:47;7565:6;7573:9;7584:6;7544:20;:47::i;:::-;-1:-1:-1;;;;;7626:17:1;;7602:21;7626:17;;;;;;;;;;;7661:23;;;;7653:74;;;;-1:-1:-1;;;7653:74:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;7761:17:1;;;:9;:17;;;;;;;;;;;7781:22;;;7761:42;;7823:20;;;;;;;;:30;;7781:22;;7761:9;7823:30;;7781:22;;7823:30;:::i;:::-;;;;-1:-1:-1;;7869:35:1;;-1:-1:-1;;;;;7869:35:1;;;;;;;;;;;;7897:6;;7869:35;:::i;:::-;;;;;;;;7915:46;7935:6;7943:9;7954:6;7915:19;:46::i;:::-;7255:713;;;;:::o;8953:576::-;-1:-1:-1;;;;;9036:21:1;;9028:67;;;;-1:-1:-1;;;9028:67:1;;;;;;;:::i;:::-;9106:49;9127:7;9144:1;9148:6;9106:20;:49::i;:::-;-1:-1:-1;;;;;9191:18:1;;9166:22;9191:18;;;;;;;;;;;9227:24;;;;9219:71;;;;-1:-1:-1;;;9219:71:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;9324:18:1;;:9;:18;;;;;;;;;;9345:23;;;9324:44;;9388:12;:22;;9345:23;;9324:9;9388:22;;9345:23;;9388:22;:::i;:::-;;;;-1:-1:-1;;9426:37:1;;9452:1;;-1:-1:-1;;;;;9426:37:1;;;;;;;9456:6;;9426:37;:::i;:::-;;;;;;;;9474:48;9494:7;9511:1;9515:6;9474:48;8953:576;;;:::o;8244:389::-;-1:-1:-1;;;;;8327:21:1;;8319:65;;;;-1:-1:-1;;;8319:65:1;;;;;;;:::i;:::-;8395:49;8424:1;8428:7;8437:6;8395:20;:49::i;:::-;8471:6;8455:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8487:18:1;;:9;:18;;;;;;;;;;:28;;8509:6;;8487:9;:28;;8509:6;;8487:28;:::i;:::-;;;;-1:-1:-1;;8530:37:1;;-1:-1:-1;;;;;8530:37:1;;;8547:1;;8530:37;;;;8560:6;;8530:37;:::i;:::-;;;;;;;;8578:48;8606:1;8610:7;8619:6;8578:19;:48::i;:::-;8244:389;;:::o;14:175:8:-;84:20;;-1:-1:-1;;;;;133:31:8;;123:42;;113:2;;179:1;176;169:12;194:198;;306:2;294:9;285:7;281:23;277:32;274:2;;;327:6;319;312:22;274:2;355:31;376:9;355:31;:::i;:::-;345:41;264:128;-1:-1:-1;;;264:128:8:o;397:274::-;;;526:2;514:9;505:7;501:23;497:32;494:2;;;547:6;539;532:22;494:2;575:31;596:9;575:31;:::i;:::-;565:41;;625:40;661:2;650:9;646:18;625:40;:::i;:::-;615:50;;484:187;;;;;:::o;676:342::-;;;;822:2;810:9;801:7;797:23;793:32;790:2;;;843:6;835;828:22;790:2;871:31;892:9;871:31;:::i;:::-;861:41;;921:40;957:2;946:9;942:18;921:40;:::i;:::-;911:50;;1008:2;997:9;993:18;980:32;970:42;;780:238;;;;;:::o;1023:266::-;;;1152:2;1140:9;1131:7;1127:23;1123:32;1120:2;;;1173:6;1165;1158:22;1120:2;1201:31;1222:9;1201:31;:::i;:::-;1191:41;1279:2;1264:18;;;;1251:32;;-1:-1:-1;;;1110:179:8:o;1294:190::-;;1406:2;1394:9;1385:7;1381:23;1377:32;1374:2;;;1427:6;1419;1412:22;1374:2;-1:-1:-1;1455:23:8;;1364:120;-1:-1:-1;1364:120:8:o;1489:187::-;1654:14;;1647:22;1629:41;;1617:2;1602:18;;1584:92::o;1681:603::-;;1822:2;1851;1840:9;1833:21;1883:6;1877:13;1926:6;1921:2;1910:9;1906:18;1899:34;1951:4;1964:140;1978:6;1975:1;1972:13;1964:140;;;2073:14;;;2069:23;;2063:30;2039:17;;;2058:2;2035:26;2028:66;1993:10;;1964:140;;;2122:6;2119:1;2116:13;2113:2;;;2192:4;2187:2;2178:6;2167:9;2163:22;2159:31;2152:45;2113:2;-1:-1:-1;2268:2:8;2247:15;-1:-1:-1;;2243:29:8;2228:45;;;;2275:2;2224:54;;1802:482;-1:-1:-1;;;1802:482:8:o;2289:399::-;2491:2;2473:21;;;2530:2;2510:18;;;2503:30;2569:34;2564:2;2549:18;;2542:62;-1:-1:-1;;;2635:2:8;2620:18;;2613:33;2678:3;2663:19;;2463:225::o;2693:398::-;2895:2;2877:21;;;2934:2;2914:18;;;2907:30;2973:34;2968:2;2953:18;;2946:62;-1:-1:-1;;;3039:2:8;3024:18;;3017:32;3081:3;3066:19;;2867:224::o;3096:398::-;3298:2;3280:21;;;3337:2;3317:18;;;3310:30;3376:34;3371:2;3356:18;;3349:62;-1:-1:-1;;;3442:2:8;3427:18;;3420:32;3484:3;3469:19;;3270:224::o;3499:402::-;3701:2;3683:21;;;3740:2;3720:18;;;3713:30;3779:34;3774:2;3759:18;;3752:62;-1:-1:-1;;;3845:2:8;3830:18;;3823:36;3891:3;3876:19;;3673:228::o;3906:404::-;4108:2;4090:21;;;4147:2;4127:18;;;4120:30;4186:34;4181:2;4166:18;;4159:62;-1:-1:-1;;;4252:2:8;4237:18;;4230:38;4300:3;4285:19;;4080:230::o;4315:397::-;4517:2;4499:21;;;4556:2;4536:18;;;4529:30;4595:34;4590:2;4575:18;;4568:62;-1:-1:-1;;;4661:2:8;4646:18;;4639:31;4702:3;4687:19;;4489:223::o;4717:401::-;4919:2;4901:21;;;4958:2;4938:18;;;4931:30;4997:34;4992:2;4977:18;;4970:62;-1:-1:-1;;;5063:2:8;5048:18;;5041:35;5108:3;5093:19;;4891:227::o;5123:400::-;5325:2;5307:21;;;5364:2;5344:18;;;5337:30;5403:34;5398:2;5383:18;;5376:62;-1:-1:-1;;;5469:2:8;5454:18;;5447:34;5513:3;5498:19;;5297:226::o;5528:401::-;5730:2;5712:21;;;5769:2;5749:18;;;5742:30;5808:34;5803:2;5788:18;;5781:62;-1:-1:-1;;;5874:2:8;5859:18;;5852:35;5919:3;5904:19;;5702:227::o;5934:355::-;6136:2;6118:21;;;6175:2;6155:18;;;6148:30;6214:33;6209:2;6194:18;;6187:61;6280:2;6265:18;;6108:181::o;6294:177::-;6440:25;;;6428:2;6413:18;;6395:76::o;6476:184::-;6648:4;6636:17;;;;6618:36;;6606:2;6591:18;;6573:87::o;6665:128::-;;6736:1;6732:6;6729:1;6726:13;6723:2;;;6742:18;;:::i;:::-;-1:-1:-1;6778:9:8;;6713:80::o;6798:125::-;;6866:1;6863;6860:8;6857:2;;;6871:18;;:::i;:::-;-1:-1:-1;6908:9:8;;6847:76::o;6928:380::-;7013:1;7003:12;;7060:1;7050:12;;;7071:2;;7125:4;7117:6;7113:17;7103:27;;7071:2;7178;7170:6;7167:14;7147:18;7144:38;7141:2;;;7224:10;7219:3;7215:20;7212:1;7205:31;7259:4;7256:1;7249:15;7287:4;7284:1;7277:15;7141:2;;6983:325;;;:::o;7313:127::-;7374:10;7369:3;7365:20;7362:1;7355:31;7405:4;7402:1;7395:15;7429:4;7426:1;7419:15",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "offset": [
    601,
    947
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x42966C68 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA0712D68 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1B8 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1CB JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x42966C68 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x18A JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x112 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x13A JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x14F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH2 0x1DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x913 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x105 PUSH2 0x100 CALLDATASIZE PUSH1 0x4 PUSH2 0x8C7 JUMP JUMPDEST PUSH2 0x270 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x908 JUMP JUMPDEST PUSH2 0x11A PUSH2 0x28D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0xC01 JUMP JUMPDEST PUSH2 0x105 PUSH2 0x135 CALLDATASIZE PUSH1 0x4 PUSH2 0x88C JUMP JUMPDEST PUSH2 0x293 JUMP JUMPDEST PUSH2 0x142 PUSH2 0x32C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0xC0A JUMP JUMPDEST PUSH2 0x105 PUSH2 0x15D CALLDATASIZE PUSH1 0x4 PUSH2 0x8C7 JUMP JUMPDEST PUSH2 0x331 JUMP JUMPDEST PUSH2 0x175 PUSH2 0x170 CALLDATASIZE PUSH1 0x4 PUSH2 0x8F0 JUMP JUMPDEST PUSH2 0x385 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11A PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0x839 JUMP JUMPDEST PUSH2 0x392 JUMP JUMPDEST PUSH2 0xDC PUSH2 0x3B1 JUMP JUMPDEST PUSH2 0x175 PUSH2 0x1A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x8F0 JUMP JUMPDEST PUSH2 0x3C0 JUMP JUMPDEST PUSH2 0x105 PUSH2 0x1B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x8C7 JUMP JUMPDEST PUSH2 0x3CA JUMP JUMPDEST PUSH2 0x105 PUSH2 0x1C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x8C7 JUMP JUMPDEST PUSH2 0x443 JUMP JUMPDEST PUSH2 0x11A PUSH2 0x1D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x85A JUMP JUMPDEST PUSH2 0x457 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1ED SWAP1 PUSH2 0xC47 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x219 SWAP1 PUSH2 0xC47 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x266 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x23B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x266 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x249 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x284 PUSH2 0x27D PUSH2 0x482 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x486 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A0 DUP5 DUP5 DUP5 PUSH2 0x53A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 PUSH2 0x2C1 PUSH2 0x482 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x30D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x304 SWAP1 PUSH2 0xA73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x321 DUP6 PUSH2 0x319 PUSH2 0x482 JUMP JUMPDEST DUP6 DUP5 SUB PUSH2 0x486 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x284 PUSH2 0x33E PUSH2 0x482 JUMP JUMPDEST DUP5 DUP5 PUSH1 0x1 PUSH1 0x0 PUSH2 0x34C PUSH2 0x482 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP12 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x380 SWAP2 SWAP1 PUSH2 0xC18 JUMP JUMPDEST PUSH2 0x486 JUMP JUMPDEST PUSH2 0x38F ORIGIN DUP3 PUSH2 0x664 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1ED SWAP1 PUSH2 0xC47 JUMP JUMPDEST PUSH2 0x38F ORIGIN DUP3 PUSH2 0x756 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x3D9 PUSH2 0x482 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP9 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x425 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x304 SWAP1 PUSH2 0xB85 JUMP JUMPDEST PUSH2 0x439 PUSH2 0x430 PUSH2 0x482 JUMP JUMPDEST DUP6 DUP6 DUP5 SUB PUSH2 0x486 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x284 PUSH2 0x450 PUSH2 0x482 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x53A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x4AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x304 SWAP1 PUSH2 0xB41 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x304 SWAP1 PUSH2 0x9EB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x52D SWAP1 DUP6 SWAP1 PUSH2 0xC01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x560 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x304 SWAP1 PUSH2 0xAFC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x586 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x304 SWAP1 PUSH2 0x966 JUMP JUMPDEST PUSH2 0x591 DUP4 DUP4 DUP4 PUSH2 0x751 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x5CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x304 SWAP1 PUSH2 0xA2D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x601 SWAP1 DUP5 SWAP1 PUSH2 0xC18 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x64B SWAP2 SWAP1 PUSH2 0xC01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x65E DUP5 DUP5 DUP5 PUSH2 0x751 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x68A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x304 SWAP1 PUSH2 0xABB JUMP JUMPDEST PUSH2 0x696 DUP3 PUSH1 0x0 DUP4 PUSH2 0x751 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x6CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x304 SWAP1 PUSH2 0x9A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 DUP4 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6FE SWAP1 DUP5 SWAP1 PUSH2 0xC30 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x741 SWAP1 DUP7 SWAP1 PUSH2 0xC01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x751 DUP4 PUSH1 0x0 DUP5 JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x77C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x304 SWAP1 PUSH2 0xBCA JUMP JUMPDEST PUSH2 0x788 PUSH1 0x0 DUP4 DUP4 PUSH2 0x751 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x79A SWAP2 SWAP1 PUSH2 0xC18 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x7C7 SWAP1 DUP5 SWAP1 PUSH2 0xC18 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x80A SWAP1 DUP6 SWAP1 PUSH2 0xC01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x81E PUSH1 0x0 DUP4 DUP4 PUSH2 0x751 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x84A JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x853 DUP3 PUSH2 0x822 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x86C JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x875 DUP4 PUSH2 0x822 JUMP JUMPDEST SWAP2 POP PUSH2 0x883 PUSH1 0x20 DUP5 ADD PUSH2 0x822 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x8A0 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x8A9 DUP5 PUSH2 0x822 JUMP JUMPDEST SWAP3 POP PUSH2 0x8B7 PUSH1 0x20 DUP6 ADD PUSH2 0x822 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8D9 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x8E2 DUP4 PUSH2 0x822 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x901 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x93F JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x923 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x950 JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xC2B JUMPI PUSH2 0xC2B PUSH2 0xC82 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xC42 JUMPI PUSH2 0xC42 PUSH2 0xC82 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xC5B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xC7C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x24 0x1F SWAP4 SELFDESTRUCT 0xF8 SWAP4 0xC0 0xAD SWAP12 0x2F PUSH8 0xFBAC7729F578FE8C 0xA6 0xEC PUSH21 0x2AD73FCF9763C1DDCA4164736F6C63430008000033 ",
  "pcMap": {
    "0": {
      "offset": [
        601,
        947
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "6": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "8": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "12": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "DUP1",
      "path": "7"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "REVERT",
      "path": "7"
    },
    "16": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "17": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "POP",
      "path": "7"
    },
    "18": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "21": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "LT",
      "path": "7"
    },
    "22": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xCF"
    },
    "25": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "26": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "CALLDATALOAD",
      "path": "7"
    },
    "29": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "SHR",
      "path": "7"
    },
    "32": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "DUP1",
      "path": "7"
    },
    "33": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x42966C68"
    },
    "38": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "GT",
      "path": "7"
    },
    "39": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x8C"
    },
    "42": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "43": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "DUP1",
      "path": "7"
    },
    "44": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xA0712D68"
    },
    "49": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "GT",
      "path": "7"
    },
    "50": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x66"
    },
    "53": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "54": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "DUP1",
      "path": "7"
    },
    "55": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xA0712D68"
    },
    "60": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "EQ",
      "path": "7"
    },
    "61": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x192"
    },
    "64": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "65": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "DUP1",
      "path": "7"
    },
    "66": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xA457C2D7"
    },
    "71": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "EQ",
      "path": "7"
    },
    "72": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1A5"
    },
    "75": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "76": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "DUP1",
      "path": "7"
    },
    "77": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xA9059CBB"
    },
    "82": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "EQ",
      "path": "7"
    },
    "83": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1B8"
    },
    "86": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "87": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "DUP1",
      "path": "7"
    },
    "88": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xDD62ED3E"
    },
    "93": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "EQ",
      "path": "7"
    },
    "94": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1CB"
    },
    "97": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "98": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xCF"
    },
    "101": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "JUMP",
      "path": "7"
    },
    "102": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "103": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "DUP1",
      "path": "7"
    },
    "104": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x42966C68"
    },
    "109": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "EQ",
      "path": "7"
    },
    "110": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x162"
    },
    "113": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "114": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "DUP1",
      "path": "7"
    },
    "115": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x70A08231"
    },
    "120": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "EQ",
      "path": "7"
    },
    "121": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x177"
    },
    "124": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "125": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "DUP1",
      "path": "7"
    },
    "126": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x95D89B41"
    },
    "131": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "EQ",
      "path": "7"
    },
    "132": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x18A"
    },
    "135": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "136": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xCF"
    },
    "139": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "JUMP",
      "path": "7"
    },
    "140": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "141": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "DUP1",
      "path": "7"
    },
    "142": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x6FDDE03"
    },
    "147": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "EQ",
      "path": "7"
    },
    "148": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xD4"
    },
    "151": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "152": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "DUP1",
      "path": "7"
    },
    "153": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x95EA7B3"
    },
    "158": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "EQ",
      "path": "7"
    },
    "159": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xF2"
    },
    "162": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "163": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "DUP1",
      "path": "7"
    },
    "164": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x18160DDD"
    },
    "169": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "EQ",
      "path": "7"
    },
    "170": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x112"
    },
    "173": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "174": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "DUP1",
      "path": "7"
    },
    "175": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x23B872DD"
    },
    "180": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "EQ",
      "path": "7"
    },
    "181": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x127"
    },
    "184": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "185": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "DUP1",
      "path": "7"
    },
    "186": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x313CE567"
    },
    "191": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "EQ",
      "path": "7"
    },
    "192": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x13A"
    },
    "195": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "196": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "DUP1",
      "path": "7"
    },
    "197": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x39509351"
    },
    "202": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "EQ",
      "path": "7"
    },
    "203": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x14F"
    },
    "206": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "207": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "208": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "210": {
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "DUP1",
      "path": "7"
    },
    "211": {
      "first_revert": true,
      "fn": null,
      "offset": [
        601,
        947
      ],
      "op": "REVERT",
      "path": "7"
    },
    "212": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "213": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDC"
    },
    "216": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1DE"
    },
    "219": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2074,
        2172
      ],
      "op": "JUMP",
      "path": "1"
    },
    "220": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "221": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "223": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "224": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE9"
    },
    "227": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "228": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "229": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x913"
    },
    "232": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2074,
        2172
      ],
      "op": "JUMP",
      "path": "1"
    },
    "233": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "234": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "236": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "237": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "DUP1",
      "path": "1"
    },
    "238": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "239": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "SUB",
      "path": "1"
    },
    "240": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "241": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "RETURN",
      "path": "1"
    },
    "242": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "243": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x105"
    },
    "246": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "249": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "250": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "252": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8C7"
    },
    "255": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4171,
        4337
      ],
      "op": "JUMP",
      "path": "1"
    },
    "256": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "257": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x270"
    },
    "260": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4171,
        4337
      ],
      "op": "JUMP",
      "path": "1"
    },
    "261": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "262": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "264": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "265": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE9"
    },
    "268": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "269": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "270": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x908"
    },
    "273": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4171,
        4337
      ],
      "op": "JUMP",
      "path": "1"
    },
    "274": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3162,
        3268
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "275": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3162,
        3268
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x11A"
    },
    "278": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3162,
        3268
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x28D"
    },
    "281": {
      "fn": "ERC20.totalSupply",
      "jump": "i",
      "offset": [
        3162,
        3268
      ],
      "op": "JUMP",
      "path": "1"
    },
    "282": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3162,
        3268
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "283": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3162,
        3268
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "285": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3162,
        3268
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "286": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3162,
        3268
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE9"
    },
    "289": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3162,
        3268
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "290": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3162,
        3268
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "291": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3162,
        3268
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC01"
    },
    "294": {
      "fn": "ERC20.totalSupply",
      "jump": "i",
      "offset": [
        3162,
        3268
      ],
      "op": "JUMP",
      "path": "1"
    },
    "295": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4804,
        5282
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "296": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4804,
        5282
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x105"
    },
    "299": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4804,
        5282
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x135"
    },
    "302": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4804,
        5282
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "303": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4804,
        5282
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "305": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4804,
        5282
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x88C"
    },
    "308": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        4804,
        5282
      ],
      "op": "JUMP",
      "path": "1"
    },
    "309": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4804,
        5282
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "310": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4804,
        5282
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x293"
    },
    "313": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        4804,
        5282
      ],
      "op": "JUMP",
      "path": "1"
    },
    "314": {
      "fn": "BTCUP.decimals",
      "offset": [
        863,
        945
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "315": {
      "fn": "BTCUP.decimals",
      "offset": [
        863,
        945
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x142"
    },
    "318": {
      "fn": "BTCUP.decimals",
      "offset": [
        863,
        945
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x32C"
    },
    "321": {
      "fn": "BTCUP.decimals",
      "jump": "i",
      "offset": [
        863,
        945
      ],
      "op": "JUMP",
      "path": "7"
    },
    "322": {
      "fn": "BTCUP.decimals",
      "offset": [
        863,
        945
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "323": {
      "fn": "BTCUP.decimals",
      "offset": [
        863,
        945
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "325": {
      "fn": "BTCUP.decimals",
      "offset": [
        863,
        945
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "326": {
      "fn": "BTCUP.decimals",
      "offset": [
        863,
        945
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE9"
    },
    "329": {
      "fn": "BTCUP.decimals",
      "offset": [
        863,
        945
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "330": {
      "fn": "BTCUP.decimals",
      "offset": [
        863,
        945
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "331": {
      "fn": "BTCUP.decimals",
      "offset": [
        863,
        945
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC0A"
    },
    "334": {
      "fn": "BTCUP.decimals",
      "jump": "i",
      "offset": [
        863,
        945
      ],
      "op": "JUMP",
      "path": "7"
    },
    "335": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5677,
        5889
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "336": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5677,
        5889
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x105"
    },
    "339": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5677,
        5889
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x15D"
    },
    "342": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5677,
        5889
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "343": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5677,
        5889
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "345": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5677,
        5889
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8C7"
    },
    "348": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5677,
        5889
      ],
      "op": "JUMP",
      "path": "1"
    },
    "349": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5677,
        5889
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "350": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5677,
        5889
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x331"
    },
    "353": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5677,
        5889
      ],
      "op": "JUMP",
      "path": "1"
    },
    "354": {
      "fn": "BTCUP.burn",
      "offset": [
        775,
        857
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "355": {
      "fn": "BTCUP.burn",
      "offset": [
        775,
        857
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x175"
    },
    "358": {
      "fn": "BTCUP.burn",
      "offset": [
        775,
        857
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x170"
    },
    "361": {
      "fn": "BTCUP.burn",
      "offset": [
        775,
        857
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "362": {
      "fn": "BTCUP.burn",
      "offset": [
        775,
        857
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "364": {
      "fn": "BTCUP.burn",
      "offset": [
        775,
        857
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x8F0"
    },
    "367": {
      "fn": "BTCUP.burn",
      "jump": "i",
      "offset": [
        775,
        857
      ],
      "op": "JUMP",
      "path": "7"
    },
    "368": {
      "fn": "BTCUP.burn",
      "offset": [
        775,
        857
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "369": {
      "fn": "BTCUP.burn",
      "offset": [
        775,
        857
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x385"
    },
    "372": {
      "fn": "BTCUP.burn",
      "jump": "i",
      "offset": [
        775,
        857
      ],
      "op": "JUMP",
      "path": "7"
    },
    "373": {
      "fn": "BTCUP.burn",
      "offset": [
        775,
        857
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "374": {
      "fn": "BTCUP.burn",
      "offset": [
        775,
        857
      ],
      "op": "STOP",
      "path": "7"
    },
    "375": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3326,
        3451
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "376": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3326,
        3451
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x11A"
    },
    "379": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3326,
        3451
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x185"
    },
    "382": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3326,
        3451
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "383": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3326,
        3451
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "385": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3326,
        3451
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x839"
    },
    "388": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        3326,
        3451
      ],
      "op": "JUMP",
      "path": "1"
    },
    "389": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3326,
        3451
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "390": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3326,
        3451
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x392"
    },
    "393": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        3326,
        3451
      ],
      "op": "JUMP",
      "path": "1"
    },
    "394": {
      "fn": "ERC20.symbol",
      "offset": [
        2285,
        2387
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "395": {
      "fn": "ERC20.symbol",
      "offset": [
        2285,
        2387
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDC"
    },
    "398": {
      "fn": "ERC20.symbol",
      "offset": [
        2285,
        2387
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3B1"
    },
    "401": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2285,
        2387
      ],
      "op": "JUMP",
      "path": "1"
    },
    "402": {
      "fn": "BTCUP.mint",
      "offset": [
        687,
        769
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "403": {
      "fn": "BTCUP.mint",
      "offset": [
        687,
        769
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x175"
    },
    "406": {
      "fn": "BTCUP.mint",
      "offset": [
        687,
        769
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1A0"
    },
    "409": {
      "fn": "BTCUP.mint",
      "offset": [
        687,
        769
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "410": {
      "fn": "BTCUP.mint",
      "offset": [
        687,
        769
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "412": {
      "fn": "BTCUP.mint",
      "offset": [
        687,
        769
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x8F0"
    },
    "415": {
      "fn": "BTCUP.mint",
      "jump": "i",
      "offset": [
        687,
        769
      ],
      "op": "JUMP",
      "path": "7"
    },
    "416": {
      "fn": "BTCUP.mint",
      "offset": [
        687,
        769
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "417": {
      "fn": "BTCUP.mint",
      "offset": [
        687,
        769
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3C0"
    },
    "420": {
      "fn": "BTCUP.mint",
      "jump": "i",
      "offset": [
        687,
        769
      ],
      "op": "JUMP",
      "path": "7"
    },
    "421": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6376,
        6781
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "422": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6376,
        6781
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x105"
    },
    "425": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6376,
        6781
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1B3"
    },
    "428": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6376,
        6781
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "429": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6376,
        6781
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "431": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6376,
        6781
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8C7"
    },
    "434": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6376,
        6781
      ],
      "op": "JUMP",
      "path": "1"
    },
    "435": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6376,
        6781
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "436": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6376,
        6781
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CA"
    },
    "439": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6376,
        6781
      ],
      "op": "JUMP",
      "path": "1"
    },
    "440": {
      "fn": "ERC20.transfer",
      "offset": [
        3654,
        3826
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "441": {
      "fn": "ERC20.transfer",
      "offset": [
        3654,
        3826
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x105"
    },
    "444": {
      "fn": "ERC20.transfer",
      "offset": [
        3654,
        3826
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1C6"
    },
    "447": {
      "fn": "ERC20.transfer",
      "offset": [
        3654,
        3826
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "448": {
      "fn": "ERC20.transfer",
      "offset": [
        3654,
        3826
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "450": {
      "fn": "ERC20.transfer",
      "offset": [
        3654,
        3826
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8C7"
    },
    "453": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3654,
        3826
      ],
      "op": "JUMP",
      "path": "1"
    },
    "454": {
      "fn": "ERC20.transfer",
      "offset": [
        3654,
        3826
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "455": {
      "fn": "ERC20.transfer",
      "offset": [
        3654,
        3826
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x443"
    },
    "458": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3654,
        3826
      ],
      "op": "JUMP",
      "path": "1"
    },
    "459": {
      "fn": "ERC20.allowance",
      "offset": [
        3884,
        4033
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "460": {
      "fn": "ERC20.allowance",
      "offset": [
        3884,
        4033
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x11A"
    },
    "463": {
      "fn": "ERC20.allowance",
      "offset": [
        3884,
        4033
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1D9"
    },
    "466": {
      "fn": "ERC20.allowance",
      "offset": [
        3884,
        4033
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "467": {
      "fn": "ERC20.allowance",
      "offset": [
        3884,
        4033
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "469": {
      "fn": "ERC20.allowance",
      "offset": [
        3884,
        4033
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x85A"
    },
    "472": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        3884,
        4033
      ],
      "op": "JUMP",
      "path": "1"
    },
    "473": {
      "fn": "ERC20.allowance",
      "offset": [
        3884,
        4033
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "474": {
      "fn": "ERC20.allowance",
      "offset": [
        3884,
        4033
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x457"
    },
    "477": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        3884,
        4033
      ],
      "op": "JUMP",
      "path": "1"
    },
    "478": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "479": {
      "fn": "ERC20.name",
      "offset": [
        2128,
        2141
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "481": {
      "fn": "ERC20.name",
      "offset": [
        2160,
        2165
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 0,
      "value": "0x3"
    },
    "483": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP1",
      "path": "1"
    },
    "484": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "485": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1ED"
    },
    "488": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "489": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC47"
    },
    "492": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2153,
        2165
      ],
      "op": "JUMP",
      "path": "1"
    },
    "493": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "494": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP1",
      "path": "1"
    },
    "495": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "497": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "ADD",
      "path": "1"
    },
    "498": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "500": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP1",
      "path": "1"
    },
    "501": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "502": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DIV",
      "path": "1"
    },
    "503": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "MUL",
      "path": "1"
    },
    "504": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "506": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "ADD",
      "path": "1"
    },
    "507": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "509": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "510": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "511": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP2",
      "path": "1"
    },
    "512": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "ADD",
      "path": "1"
    },
    "513": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "515": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "516": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP1",
      "path": "1"
    },
    "517": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "518": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "519": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "520": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP2",
      "path": "1"
    },
    "521": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP2",
      "path": "1"
    },
    "522": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "523": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "525": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "ADD",
      "path": "1"
    },
    "526": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP3",
      "path": "1"
    },
    "527": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP1",
      "path": "1"
    },
    "528": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "529": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x219"
    },
    "532": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "533": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC47"
    },
    "536": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2153,
        2165
      ],
      "op": "JUMP",
      "path": "1"
    },
    "537": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "538": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP1",
      "path": "1"
    },
    "539": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "540": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x266"
    },
    "543": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "544": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP1",
      "path": "1"
    },
    "545": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "547": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "LT",
      "path": "1"
    },
    "548": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x23B"
    },
    "551": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "552": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "555": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP1",
      "path": "1"
    },
    "556": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP4",
      "path": "1"
    },
    "557": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "558": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DIV",
      "path": "1"
    },
    "559": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "MUL",
      "path": "1"
    },
    "560": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP4",
      "path": "1"
    },
    "561": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "562": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "563": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "565": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "ADD",
      "path": "1"
    },
    "566": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "567": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x266"
    },
    "570": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "JUMP",
      "path": "1"
    },
    "571": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "572": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP3",
      "path": "1"
    },
    "573": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "ADD",
      "path": "1"
    },
    "574": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "575": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "576": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "578": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "579": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "581": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "583": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "584": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "585": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "586": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP2",
      "path": "1"
    },
    "587": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "588": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP2",
      "path": "1"
    },
    "589": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "590": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "591": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "593": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "ADD",
      "path": "1"
    },
    "594": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "595": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "597": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "ADD",
      "path": "1"
    },
    "598": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP1",
      "path": "1"
    },
    "599": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP4",
      "path": "1"
    },
    "600": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "GT",
      "path": "1"
    },
    "601": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x249"
    },
    "604": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "605": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP3",
      "path": "1"
    },
    "606": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "607": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SUB",
      "path": "1"
    },
    "608": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "610": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "AND",
      "path": "1"
    },
    "611": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP3",
      "path": "1"
    },
    "612": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "ADD",
      "path": "1"
    },
    "613": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "614": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "615": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "POP",
      "path": "1"
    },
    "616": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "POP",
      "path": "1"
    },
    "617": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "POP",
      "path": "1"
    },
    "618": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "POP",
      "path": "1"
    },
    "619": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "POP",
      "path": "1"
    },
    "620": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "621": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "POP",
      "path": "1"
    },
    "622": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "623": {
      "fn": "ERC20.name",
      "jump": "o",
      "offset": [
        2074,
        2172
      ],
      "op": "JUMP",
      "path": "1"
    },
    "624": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "625": {
      "fn": "ERC20.approve",
      "offset": [
        4254,
        4258
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "627": {
      "fn": "ERC20.approve",
      "offset": [
        4270,
        4309
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 1,
      "value": "0x284"
    },
    "630": {
      "fn": "ERC20.approve",
      "offset": [
        4279,
        4291
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x27D"
    },
    "633": {
      "fn": "ERC20.approve",
      "offset": [
        4279,
        4289
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x482"
    },
    "636": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4279,
        4291
      ],
      "op": "JUMP",
      "path": "1"
    },
    "637": {
      "fn": "ERC20.approve",
      "offset": [
        4279,
        4291
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "638": {
      "fn": "ERC20.approve",
      "offset": [
        4293,
        4300
      ],
      "op": "DUP5",
      "path": "1"
    },
    "639": {
      "fn": "ERC20.approve",
      "offset": [
        4302,
        4308
      ],
      "op": "DUP5",
      "path": "1"
    },
    "640": {
      "fn": "ERC20.approve",
      "offset": [
        4270,
        4278
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x486"
    },
    "643": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4270,
        4309
      ],
      "op": "JUMP",
      "path": "1"
    },
    "644": {
      "fn": "ERC20.approve",
      "offset": [
        4270,
        4309
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "645": {
      "op": "POP"
    },
    "646": {
      "fn": "ERC20.approve",
      "offset": [
        4326,
        4330
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 2,
      "value": "0x1"
    },
    "648": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "649": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "650": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "POP",
      "path": "1"
    },
    "651": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "POP",
      "path": "1"
    },
    "652": {
      "fn": "ERC20.approve",
      "jump": "o",
      "offset": [
        4171,
        4337
      ],
      "op": "JUMP",
      "path": "1"
    },
    "653": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3162,
        3268
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "654": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3249,
        3261
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 3,
      "value": "0x2"
    },
    "656": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3249,
        3261
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "657": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3162,
        3268
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "658": {
      "fn": "ERC20.totalSupply",
      "jump": "o",
      "offset": [
        3162,
        3268
      ],
      "op": "JUMP",
      "path": "1"
    },
    "659": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4804,
        5282
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "660": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4940,
        4944
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "662": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4956,
        4992
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 4,
      "value": "0x2A0"
    },
    "665": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4966,
        4972
      ],
      "op": "DUP5",
      "path": "1"
    },
    "666": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4974,
        4983
      ],
      "op": "DUP5",
      "path": "1"
    },
    "667": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4985,
        4991
      ],
      "op": "DUP5",
      "path": "1"
    },
    "668": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4956,
        4965
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x53A"
    },
    "671": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        4956,
        4992
      ],
      "op": "JUMP",
      "path": "1"
    },
    "672": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4956,
        4992
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "673": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "675": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "677": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "679": {
      "op": "SHL"
    },
    "680": {
      "op": "SUB"
    },
    "681": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5049
      ],
      "op": "DUP5",
      "path": "1"
    },
    "682": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5049
      ],
      "op": "AND",
      "path": "1"
    },
    "683": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5003,
        5027
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "685": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5049
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "686": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5049
      ],
      "op": "DUP2",
      "path": "1"
    },
    "687": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5049
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "688": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "690": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5049
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "692": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5049
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "693": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5049
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "695": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5049
      ],
      "op": "DUP2",
      "path": "1"
    },
    "696": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5049
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "697": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5003,
        5027
      ],
      "op": "DUP2",
      "path": "1"
    },
    "698": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5050,
        5062
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2C1"
    },
    "701": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5050,
        5060
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x482"
    },
    "704": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5050,
        5062
      ],
      "op": "JUMP",
      "path": "1"
    },
    "705": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5050,
        5062
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "706": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "708": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "710": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "712": {
      "op": "SHL"
    },
    "713": {
      "op": "SUB"
    },
    "714": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5063
      ],
      "op": "AND",
      "path": "1"
    },
    "715": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5063
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "717": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5063
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "719": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5063
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "721": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5063
      ],
      "op": "SHL",
      "path": "1"
    },
    "722": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5063
      ],
      "op": "SUB",
      "path": "1"
    },
    "723": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5063
      ],
      "op": "AND",
      "path": "1"
    },
    "724": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5063
      ],
      "op": "DUP2",
      "path": "1"
    },
    "725": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5063
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "726": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5063
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "728": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5063
      ],
      "op": "ADD",
      "path": "1"
    },
    "729": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5063
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "730": {
      "op": "DUP2"
    },
    "731": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5063
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "732": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5063
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "734": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5063
      ],
      "op": "ADD",
      "path": "1"
    },
    "735": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "737": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5081,
        5107
      ],
      "op": "KECCAK256",
      "path": "1",
      "statement": 5
    },
    "738": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5081,
        5107
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "739": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5081,
        5107
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "740": {
      "branch": 45,
      "fn": "ERC20.transferFrom",
      "offset": [
        5081,
        5107
      ],
      "op": "POP",
      "path": "1"
    },
    "741": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "DUP3",
      "path": "1"
    },
    "742": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "DUP2",
      "path": "1"
    },
    "743": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "LT",
      "path": "1"
    },
    "744": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "745": {
      "op": "PUSH2",
      "value": "0x30D"
    },
    "748": {
      "op": "JUMPI"
    },
    "749": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "751": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "752": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x461BCD"
    },
    "756": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE5"
    },
    "758": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "SHL",
      "path": "1"
    },
    "759": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "DUP2",
      "path": "1"
    },
    "760": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "761": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "763": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5073,
        5152
      ],
      "op": "ADD",
      "path": "1"
    },
    "764": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x304"
    },
    "767": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "768": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA73"
    },
    "771": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "JUMP",
      "path": "1"
    },
    "772": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "773": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "775": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "776": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "DUP1",
      "path": "1"
    },
    "777": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "778": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5186,
        5243
      ],
      "op": "SUB",
      "path": "1",
      "statement": 6
    },
    "779": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5195,
        5201
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "780": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5203,
        5215
      ],
      "op": "REVERT",
      "path": "1"
    },
    "781": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5203,
        5213
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "782": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5203,
        5215
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x321"
    },
    "785": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5203,
        5215
      ],
      "op": "DUP6",
      "path": "1"
    },
    "786": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5236,
        5242
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x319"
    },
    "789": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5217,
        5233
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x482"
    },
    "792": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5217,
        5242
      ],
      "op": "JUMP",
      "path": "1"
    },
    "793": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5186,
        5194
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "794": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5186,
        5243
      ],
      "op": "DUP6",
      "path": "1"
    },
    "795": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5186,
        5243
      ],
      "op": "DUP5",
      "path": "1"
    },
    "796": {
      "op": "SUB"
    },
    "797": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5271,
        5275
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 7,
      "value": "0x486"
    },
    "800": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5271,
        5275
      ],
      "op": "JUMP",
      "path": "1"
    },
    "801": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4804,
        5282
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "802": {
      "op": "POP"
    },
    "803": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "805": {
      "op": "SWAP5"
    },
    "806": {
      "op": "SWAP4"
    },
    "807": {
      "fn": "ERC20.transferFrom",
      "jump": "o",
      "offset": [
        4804,
        5282
      ],
      "op": "POP",
      "path": "1"
    },
    "808": {
      "fn": "BTCUP.decimals",
      "offset": [
        863,
        945
      ],
      "op": "POP",
      "path": "7"
    },
    "809": {
      "fn": "BTCUP.decimals",
      "offset": [
        937,
        938
      ],
      "op": "POP",
      "path": "7",
      "statement": 8
    },
    "810": {
      "fn": "BTCUP.decimals",
      "offset": [
        863,
        945
      ],
      "op": "POP",
      "path": "7"
    },
    "811": {
      "fn": "BTCUP.decimals",
      "jump": "o",
      "offset": [
        863,
        945
      ],
      "op": "JUMP",
      "path": "7"
    },
    "812": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5677,
        5889
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "813": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5765,
        5769
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x6"
    },
    "815": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5781,
        5861
      ],
      "op": "SWAP1",
      "path": "1",
      "statement": 9
    },
    "816": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5790,
        5802
      ],
      "op": "JUMP",
      "path": "1"
    },
    "817": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5790,
        5800
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "818": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5790,
        5802
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "820": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5790,
        5802
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x284"
    },
    "823": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5804,
        5811
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x33E"
    },
    "826": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5850,
        5860
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x482"
    },
    "829": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5824
      ],
      "op": "JUMP",
      "path": "1"
    },
    "830": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "831": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5825,
        5837
      ],
      "op": "DUP5",
      "path": "1"
    },
    "832": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5825,
        5835
      ],
      "op": "DUP5",
      "path": "1"
    },
    "833": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5825,
        5837
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "835": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5825,
        5837
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "837": {
      "op": "PUSH2",
      "value": "0x34C"
    },
    "840": {
      "op": "PUSH2",
      "value": "0x482"
    },
    "843": {
      "op": "JUMP"
    },
    "844": {
      "op": "JUMPDEST"
    },
    "845": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "847": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "849": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "851": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "SHL",
      "path": "1"
    },
    "852": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "SUB",
      "path": "1"
    },
    "853": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "854": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "DUP2",
      "path": "1"
    },
    "855": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "AND",
      "path": "1"
    },
    "856": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "DUP3",
      "path": "1"
    },
    "857": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "858": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "860": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "DUP1",
      "path": "1"
    },
    "861": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "DUP4",
      "path": "1"
    },
    "862": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "ADD",
      "path": "1"
    },
    "863": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "864": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "865": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "866": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "867": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "869": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "870": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "DUP3",
      "path": "1"
    },
    "871": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "ADD",
      "path": "1"
    },
    "872": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5847
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "874": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5847
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "875": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5847
      ],
      "op": "DUP2",
      "path": "1"
    },
    "876": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5847
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "877": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5847
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "878": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5847
      ],
      "op": "DUP12",
      "path": "1"
    },
    "879": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5847
      ],
      "op": "AND",
      "path": "1"
    },
    "880": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5847
      ],
      "op": "DUP2",
      "path": "1"
    },
    "881": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5847
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "882": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5847
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "883": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5860
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "884": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5860
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "885": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5860
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "886": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5860
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "887": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5813,
        5860
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x380"
    },
    "890": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5860
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "891": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5781,
        5789
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "892": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5781,
        5861
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC18"
    },
    "895": {
      "fn": "BTCUP.burn",
      "offset": [
        775,
        857
      ],
      "op": "JUMP",
      "path": "7"
    },
    "896": {
      "fn": "BTCUP.burn",
      "offset": [
        824,
        850
      ],
      "op": "JUMPDEST",
      "path": "7",
      "statement": 10
    },
    "897": {
      "fn": "BTCUP.burn",
      "offset": [
        830,
        839
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x486"
    },
    "900": {
      "fn": "BTCUP.burn",
      "offset": [
        841,
        849
      ],
      "op": "JUMP",
      "path": "7"
    },
    "901": {
      "fn": "BTCUP.burn",
      "offset": [
        824,
        829
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "902": {
      "fn": "BTCUP.burn",
      "jump": "i",
      "offset": [
        824,
        850
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x38F"
    },
    "905": {
      "fn": "BTCUP.burn",
      "offset": [
        824,
        850
      ],
      "op": "ORIGIN",
      "path": "7"
    },
    "906": {
      "fn": "BTCUP.burn",
      "offset": [
        775,
        857
      ],
      "op": "DUP3",
      "path": "7"
    },
    "907": {
      "fn": "BTCUP.burn",
      "jump": "o",
      "offset": [
        775,
        857
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x664"
    },
    "910": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3326,
        3451
      ],
      "op": "JUMP",
      "path": "1"
    },
    "911": {
      "op": "JUMPDEST"
    },
    "912": {
      "op": "POP"
    },
    "913": {
      "op": "JUMP"
    },
    "914": {
      "op": "JUMPDEST"
    },
    "915": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "917": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 11,
      "value": "0x1"
    },
    "919": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "921": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3400,
        3407
      ],
      "op": "SHL",
      "path": "1"
    },
    "922": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "SUB",
      "path": "1"
    },
    "923": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "DUP2",
      "path": "1"
    },
    "924": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "AND",
      "path": "1"
    },
    "925": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "927": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "928": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "DUP2",
      "path": "1"
    },
    "929": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "930": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "932": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "DUP2",
      "path": "1"
    },
    "933": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "934": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "935": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3326,
        3451
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "937": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3326,
        3451
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "938": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3326,
        3451
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "939": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3326,
        3451
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "940": {
      "fn": "ERC20.balanceOf",
      "jump": "o",
      "offset": [
        3326,
        3451
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "941": {
      "fn": "ERC20.symbol",
      "offset": [
        2285,
        2387
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "942": {
      "fn": "ERC20.symbol",
      "offset": [
        2341,
        2354
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "943": {
      "fn": "ERC20.symbol",
      "offset": [
        2373,
        2380
      ],
      "op": "POP",
      "path": "1",
      "statement": 12
    },
    "944": {
      "fn": "ERC20.symbol",
      "offset": [
        2366,
        2380
      ],
      "op": "JUMP",
      "path": "1"
    },
    "945": {
      "fn": "ERC20.symbol",
      "offset": [
        2366,
        2380
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "946": {
      "fn": "ERC20.symbol",
      "offset": [
        2366,
        2380
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "948": {
      "fn": "ERC20.symbol",
      "offset": [
        2366,
        2380
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "950": {
      "fn": "ERC20.symbol",
      "offset": [
        2366,
        2380
      ],
      "op": "DUP1",
      "path": "1"
    },
    "951": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2366,
        2380
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "952": {
      "fn": "BTCUP.mint",
      "offset": [
        687,
        769
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1ED"
    },
    "955": {
      "fn": "BTCUP.mint",
      "offset": [
        736,
        762
      ],
      "op": "SWAP1",
      "path": "7",
      "statement": 13
    },
    "956": {
      "fn": "BTCUP.mint",
      "offset": [
        742,
        751
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC47"
    },
    "959": {
      "fn": "BTCUP.mint",
      "offset": [
        753,
        761
      ],
      "op": "JUMP",
      "path": "7"
    },
    "960": {
      "fn": "BTCUP.mint",
      "offset": [
        736,
        741
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "961": {
      "fn": "BTCUP.mint",
      "jump": "i",
      "offset": [
        736,
        762
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x38F"
    },
    "964": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6376,
        6781
      ],
      "op": "ORIGIN",
      "path": "1"
    },
    "965": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6469,
        6473
      ],
      "op": "DUP3",
      "path": "1"
    },
    "966": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6485,
        6509
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x756"
    },
    "969": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6523
      ],
      "op": "JUMP",
      "path": "1"
    },
    "970": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "971": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6524,
        6536
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "973": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6524,
        6534
      ],
      "op": "DUP1",
      "path": "1"
    },
    "974": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6524,
        6536
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "976": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6524,
        6536
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "978": {
      "op": "PUSH2",
      "value": "0x3D9"
    },
    "981": {
      "op": "PUSH2",
      "value": "0x482"
    },
    "984": {
      "op": "JUMP"
    },
    "985": {
      "op": "JUMPDEST"
    },
    "986": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "988": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "990": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "992": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "SHL",
      "path": "1"
    },
    "993": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "SUB",
      "path": "1"
    },
    "994": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "995": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "DUP2",
      "path": "1"
    },
    "996": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "AND",
      "path": "1"
    },
    "997": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "DUP3",
      "path": "1"
    },
    "998": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "999": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1001": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1002": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1003": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "ADD",
      "path": "1"
    },
    "1004": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1005": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1006": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1007": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1008": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1010": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1011": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1012": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "ADD",
      "path": "1"
    },
    "1013": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6546
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1015": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6546
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1016": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6546
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1017": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6546
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1018": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6546
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1019": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6546
      ],
      "op": "DUP9",
      "path": "1"
    },
    "1020": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6546
      ],
      "op": "AND",
      "path": "1"
    },
    "1021": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6546
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1022": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6546
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1023": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6546
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1024": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6546
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1025": {
      "op": "SWAP1"
    },
    "1026": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6564,
        6599
      ],
      "op": "KECCAK256",
      "path": "1",
      "statement": 14
    },
    "1027": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6564,
        6599
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1028": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6564,
        6599
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1029": {
      "branch": 46,
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6564,
        6599
      ],
      "op": "POP",
      "path": "1"
    },
    "1030": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6556,
        6641
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1031": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6556,
        6641
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1032": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6556,
        6641
      ],
      "op": "LT",
      "path": "1"
    },
    "1033": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6556,
        6641
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1034": {
      "op": "PUSH2",
      "value": "0x425"
    },
    "1037": {
      "op": "JUMPI"
    },
    "1038": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1040": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6556,
        6641
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1041": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6556,
        6641
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x461BCD"
    },
    "1045": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6556,
        6641
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE5"
    },
    "1047": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6556,
        6641
      ],
      "op": "SHL",
      "path": "1"
    },
    "1048": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6556,
        6641
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1049": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6556,
        6641
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1050": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6556,
        6641
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1052": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6556,
        6641
      ],
      "op": "ADD",
      "path": "1"
    },
    "1053": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6556,
        6641
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x304"
    },
    "1056": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6675,
        6742
      ],
      "op": "SWAP1",
      "path": "1",
      "statement": 15
    },
    "1057": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6684,
        6696
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB85"
    },
    "1060": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6684,
        6694
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1061": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6684,
        6696
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1062": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6684,
        6696
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x439"
    },
    "1065": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6698,
        6705
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x430"
    },
    "1068": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6726,
        6741
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x482"
    },
    "1071": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6707,
        6723
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1072": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6707,
        6741
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1073": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6675,
        6683
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1074": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6675,
        6742
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1075": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6675,
        6742
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1076": {
      "op": "SUB"
    },
    "1077": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6774
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 16,
      "value": "0x486"
    },
    "1080": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6774
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1081": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6376,
        6781
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1082": {
      "op": "POP"
    },
    "1083": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1085": {
      "op": "SWAP4"
    },
    "1086": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "o",
      "offset": [
        6376,
        6781
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1087": {
      "fn": "ERC20.transfer",
      "offset": [
        3654,
        3826
      ],
      "op": "POP",
      "path": "1"
    },
    "1088": {
      "fn": "ERC20.transfer",
      "offset": [
        3740,
        3744
      ],
      "op": "POP",
      "path": "1"
    },
    "1089": {
      "fn": "ERC20.transfer",
      "offset": [
        3756,
        3798
      ],
      "op": "POP",
      "path": "1",
      "statement": 17
    },
    "1090": {
      "fn": "ERC20.transfer",
      "offset": [
        3766,
        3778
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1091": {
      "fn": "ERC20.transfer",
      "offset": [
        3766,
        3776
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1092": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3766,
        3778
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1094": {
      "fn": "ERC20.transfer",
      "offset": [
        3766,
        3778
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x284"
    },
    "1097": {
      "fn": "ERC20.transfer",
      "offset": [
        3780,
        3789
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x450"
    },
    "1100": {
      "fn": "ERC20.transfer",
      "offset": [
        3791,
        3797
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x482"
    },
    "1103": {
      "fn": "ERC20.transfer",
      "offset": [
        3756,
        3765
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1104": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3756,
        3798
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1105": {
      "fn": "ERC20.allowance",
      "offset": [
        3884,
        4033
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1106": {
      "op": "DUP5"
    },
    "1107": {
      "op": "PUSH2",
      "value": "0x53A"
    },
    "1110": {
      "op": "JUMP"
    },
    "1111": {
      "op": "JUMPDEST"
    },
    "1112": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1114": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4017
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 18,
      "value": "0x1"
    },
    "1116": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4017
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "1118": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4017
      ],
      "op": "SHL",
      "path": "1"
    },
    "1119": {
      "fn": "ERC20.allowance",
      "offset": [
        3973,
        3980
      ],
      "op": "SUB",
      "path": "1"
    },
    "1120": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4017
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1121": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4017
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1122": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4017
      ],
      "op": "AND",
      "path": "1"
    },
    "1123": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1125": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4017
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1126": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4017
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1127": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4017
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1128": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4017
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1130": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4017
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1132": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4017
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1133": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4017
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1134": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4017
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1135": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4026
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1137": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4026
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1138": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4026
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1139": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4026
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1140": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4026
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1141": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4026
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1142": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4026
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "1143": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4026
      ],
      "op": "AND",
      "path": "1"
    },
    "1144": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4026
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1145": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4026
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1146": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4026
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1147": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4026
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1148": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4026
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1149": {
      "fn": "ERC20.allowance",
      "jump": "o",
      "offset": [
        3884,
        4033
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1150": {
      "fn": "Context._msgSender",
      "offset": [
        586,
        682
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1151": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "SLOAD",
      "path": "4",
      "statement": 19
    },
    "1152": {
      "fn": "Context._msgSender",
      "offset": [
        586,
        682
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1153": {
      "fn": "Context._msgSender",
      "jump": "o",
      "offset": [
        586,
        682
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1154": {
      "fn": "ERC20._approve",
      "offset": [
        9952,
        10322
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1155": {
      "op": "CALLER"
    },
    "1156": {
      "op": "SWAP1"
    },
    "1157": {
      "op": "JUMP"
    },
    "1158": {
      "op": "JUMPDEST"
    },
    "1159": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1161": {
      "fn": "ERC20._approve",
      "offset": [
        10083,
        10102
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 20,
      "value": "0x1"
    },
    "1163": {
      "branch": 47,
      "fn": "ERC20._approve",
      "offset": [
        10083,
        10102
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "1165": {
      "fn": "ERC20._approve",
      "offset": [
        10075,
        10143
      ],
      "op": "SHL",
      "path": "1"
    },
    "1166": {
      "fn": "ERC20._approve",
      "offset": [
        10075,
        10143
      ],
      "op": "SUB",
      "path": "1"
    },
    "1167": {
      "fn": "ERC20._approve",
      "offset": [
        10075,
        10143
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1168": {
      "fn": "ERC20._approve",
      "offset": [
        10075,
        10143
      ],
      "op": "AND",
      "path": "1"
    },
    "1169": {
      "op": "PUSH2",
      "value": "0x4AC"
    },
    "1172": {
      "op": "JUMPI"
    },
    "1173": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1175": {
      "fn": "ERC20._approve",
      "offset": [
        10075,
        10143
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1176": {
      "fn": "ERC20._approve",
      "offset": [
        10075,
        10143
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x461BCD"
    },
    "1180": {
      "fn": "ERC20._approve",
      "offset": [
        10075,
        10143
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE5"
    },
    "1182": {
      "fn": "ERC20._approve",
      "offset": [
        10075,
        10143
      ],
      "op": "SHL",
      "path": "1"
    },
    "1183": {
      "fn": "ERC20._approve",
      "offset": [
        10075,
        10143
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1184": {
      "fn": "ERC20._approve",
      "offset": [
        10075,
        10143
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1185": {
      "fn": "ERC20._approve",
      "offset": [
        10075,
        10143
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1187": {
      "fn": "ERC20._approve",
      "jump": "i",
      "offset": [
        10075,
        10143
      ],
      "op": "ADD",
      "path": "1"
    },
    "1188": {
      "fn": "ERC20._approve",
      "offset": [
        10075,
        10143
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x304"
    },
    "1191": {
      "op": "SWAP1"
    },
    "1192": {
      "op": "PUSH2",
      "value": "0xB41"
    },
    "1195": {
      "op": "JUMP"
    },
    "1196": {
      "op": "JUMPDEST"
    },
    "1197": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1199": {
      "fn": "ERC20._approve",
      "offset": [
        10161,
        10182
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 21,
      "value": "0x1"
    },
    "1201": {
      "branch": 48,
      "fn": "ERC20._approve",
      "offset": [
        10161,
        10182
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "1203": {
      "fn": "ERC20._approve",
      "offset": [
        10153,
        10221
      ],
      "op": "SHL",
      "path": "1"
    },
    "1204": {
      "fn": "ERC20._approve",
      "offset": [
        10153,
        10221
      ],
      "op": "SUB",
      "path": "1"
    },
    "1205": {
      "fn": "ERC20._approve",
      "offset": [
        10153,
        10221
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1206": {
      "fn": "ERC20._approve",
      "offset": [
        10153,
        10221
      ],
      "op": "AND",
      "path": "1"
    },
    "1207": {
      "op": "PUSH2",
      "value": "0x4D2"
    },
    "1210": {
      "op": "JUMPI"
    },
    "1211": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1213": {
      "fn": "ERC20._approve",
      "offset": [
        10153,
        10221
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1214": {
      "fn": "ERC20._approve",
      "offset": [
        10153,
        10221
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x461BCD"
    },
    "1218": {
      "fn": "ERC20._approve",
      "offset": [
        10153,
        10221
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE5"
    },
    "1220": {
      "fn": "ERC20._approve",
      "offset": [
        10153,
        10221
      ],
      "op": "SHL",
      "path": "1"
    },
    "1221": {
      "fn": "ERC20._approve",
      "offset": [
        10153,
        10221
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1222": {
      "fn": "ERC20._approve",
      "offset": [
        10153,
        10221
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1223": {
      "fn": "ERC20._approve",
      "offset": [
        10153,
        10221
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1225": {
      "fn": "ERC20._approve",
      "jump": "i",
      "offset": [
        10153,
        10221
      ],
      "op": "ADD",
      "path": "1"
    },
    "1226": {
      "fn": "ERC20._approve",
      "offset": [
        10153,
        10221
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x304"
    },
    "1229": {
      "op": "SWAP1"
    },
    "1230": {
      "op": "PUSH2",
      "value": "0x9EB"
    },
    "1233": {
      "op": "JUMP"
    },
    "1234": {
      "op": "JUMPDEST"
    },
    "1235": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1237": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 22,
      "value": "0x1"
    },
    "1239": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "1241": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "SHL",
      "path": "1"
    },
    "1242": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "SUB",
      "path": "1"
    },
    "1243": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1244": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1245": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "AND",
      "path": "1"
    },
    "1246": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1248": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1249": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1250": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1251": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1253": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1255": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1256": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1257": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1258": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10259
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1260": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10259
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1261": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10259
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1262": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10259
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1263": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10259
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "1264": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10259
      ],
      "op": "DUP8",
      "path": "1"
    },
    "1265": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10259
      ],
      "op": "AND",
      "path": "1"
    },
    "1266": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10259
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1267": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10259
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1268": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10259
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1269": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10259
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "1270": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10259
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1271": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10259
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1272": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10259
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1273": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10268
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1274": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10268
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1275": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10268
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1276": {
      "fn": "ERC20._approve",
      "offset": [
        10283,
        10315
      ],
      "op": "KECCAK256",
      "path": "1",
      "statement": 23
    },
    "1277": {
      "fn": "ERC20._approve",
      "offset": [
        10283,
        10315
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1278": {
      "fn": "ERC20._approve",
      "offset": [
        10283,
        10315
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1279": {
      "fn": "ERC20._approve",
      "offset": [
        10283,
        10315
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1280": {
      "fn": "ERC20._approve",
      "offset": [
        10283,
        10315
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1281": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10268
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "1314": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10268
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1315": {
      "fn": "ERC20._approve",
      "offset": [
        10283,
        10315
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x52D"
    },
    "1318": {
      "fn": "ERC20._approve",
      "jump": "i",
      "offset": [
        10283,
        10315
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1319": {
      "fn": "ERC20._approve",
      "offset": [
        10283,
        10315
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1320": {
      "fn": "ERC20._approve",
      "offset": [
        10283,
        10315
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1321": {
      "fn": "ERC20._approve",
      "offset": [
        10283,
        10315
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC01"
    },
    "1324": {
      "fn": "ERC20._approve",
      "offset": [
        10283,
        10315
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1325": {
      "fn": "ERC20._approve",
      "offset": [
        10283,
        10315
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1326": {
      "fn": "ERC20._approve",
      "offset": [
        10283,
        10315
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1328": {
      "fn": "ERC20._approve",
      "offset": [
        10283,
        10315
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1329": {
      "fn": "ERC20._approve",
      "offset": [
        10283,
        10315
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1330": {
      "fn": "ERC20._approve",
      "offset": [
        9952,
        10322
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1331": {
      "fn": "ERC20._approve",
      "offset": [
        9952,
        10322
      ],
      "op": "SUB",
      "path": "1"
    },
    "1332": {
      "fn": "ERC20._approve",
      "offset": [
        9952,
        10322
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1333": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [
        9952,
        10322
      ],
      "op": "LOG3",
      "path": "1"
    },
    "1334": {
      "fn": "ERC20._transfer",
      "offset": [
        7255,
        7968
      ],
      "op": "POP",
      "path": "1"
    },
    "1335": {
      "op": "POP"
    },
    "1336": {
      "op": "POP"
    },
    "1337": {
      "op": "JUMP"
    },
    "1338": {
      "op": "JUMPDEST"
    },
    "1339": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1341": {
      "fn": "ERC20._transfer",
      "offset": [
        7390,
        7410
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 24,
      "value": "0x1"
    },
    "1343": {
      "branch": 49,
      "fn": "ERC20._transfer",
      "offset": [
        7390,
        7410
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "1345": {
      "fn": "ERC20._transfer",
      "offset": [
        7382,
        7452
      ],
      "op": "SHL",
      "path": "1"
    },
    "1346": {
      "fn": "ERC20._transfer",
      "offset": [
        7382,
        7452
      ],
      "op": "SUB",
      "path": "1"
    },
    "1347": {
      "fn": "ERC20._transfer",
      "offset": [
        7382,
        7452
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1348": {
      "fn": "ERC20._transfer",
      "offset": [
        7382,
        7452
      ],
      "op": "AND",
      "path": "1"
    },
    "1349": {
      "op": "PUSH2",
      "value": "0x560"
    },
    "1352": {
      "op": "JUMPI"
    },
    "1353": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1355": {
      "fn": "ERC20._transfer",
      "offset": [
        7382,
        7452
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1356": {
      "fn": "ERC20._transfer",
      "offset": [
        7382,
        7452
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x461BCD"
    },
    "1360": {
      "fn": "ERC20._transfer",
      "offset": [
        7382,
        7452
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE5"
    },
    "1362": {
      "fn": "ERC20._transfer",
      "offset": [
        7382,
        7452
      ],
      "op": "SHL",
      "path": "1"
    },
    "1363": {
      "fn": "ERC20._transfer",
      "offset": [
        7382,
        7452
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1364": {
      "fn": "ERC20._transfer",
      "offset": [
        7382,
        7452
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1365": {
      "fn": "ERC20._transfer",
      "offset": [
        7382,
        7452
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1367": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7382,
        7452
      ],
      "op": "ADD",
      "path": "1"
    },
    "1368": {
      "fn": "ERC20._transfer",
      "offset": [
        7382,
        7452
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x304"
    },
    "1371": {
      "op": "SWAP1"
    },
    "1372": {
      "op": "PUSH2",
      "value": "0xAFC"
    },
    "1375": {
      "op": "JUMP"
    },
    "1376": {
      "op": "JUMPDEST"
    },
    "1377": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1379": {
      "fn": "ERC20._transfer",
      "offset": [
        7470,
        7493
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 25,
      "value": "0x1"
    },
    "1381": {
      "branch": 50,
      "fn": "ERC20._transfer",
      "offset": [
        7470,
        7493
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "1383": {
      "fn": "ERC20._transfer",
      "offset": [
        7462,
        7533
      ],
      "op": "SHL",
      "path": "1"
    },
    "1384": {
      "fn": "ERC20._transfer",
      "offset": [
        7462,
        7533
      ],
      "op": "SUB",
      "path": "1"
    },
    "1385": {
      "fn": "ERC20._transfer",
      "offset": [
        7462,
        7533
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1386": {
      "fn": "ERC20._transfer",
      "offset": [
        7462,
        7533
      ],
      "op": "AND",
      "path": "1"
    },
    "1387": {
      "op": "PUSH2",
      "value": "0x586"
    },
    "1390": {
      "op": "JUMPI"
    },
    "1391": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1393": {
      "fn": "ERC20._transfer",
      "offset": [
        7462,
        7533
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1394": {
      "fn": "ERC20._transfer",
      "offset": [
        7462,
        7533
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x461BCD"
    },
    "1398": {
      "fn": "ERC20._transfer",
      "offset": [
        7462,
        7533
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE5"
    },
    "1400": {
      "fn": "ERC20._transfer",
      "offset": [
        7462,
        7533
      ],
      "op": "SHL",
      "path": "1"
    },
    "1401": {
      "fn": "ERC20._transfer",
      "offset": [
        7462,
        7533
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1402": {
      "fn": "ERC20._transfer",
      "offset": [
        7462,
        7533
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1403": {
      "fn": "ERC20._transfer",
      "offset": [
        7462,
        7533
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1405": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7462,
        7533
      ],
      "op": "ADD",
      "path": "1"
    },
    "1406": {
      "fn": "ERC20._transfer",
      "offset": [
        7462,
        7533
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x304"
    },
    "1409": {
      "fn": "ERC20._transfer",
      "offset": [
        7544,
        7591
      ],
      "op": "SWAP1",
      "path": "1",
      "statement": 26
    },
    "1410": {
      "fn": "ERC20._transfer",
      "offset": [
        7565,
        7571
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x966"
    },
    "1413": {
      "fn": "ERC20._transfer",
      "offset": [
        7573,
        7582
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1414": {
      "fn": "ERC20._transfer",
      "offset": [
        7584,
        7590
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1415": {
      "fn": "ERC20._transfer",
      "offset": [
        7544,
        7564
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x591"
    },
    "1418": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7544,
        7591
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1419": {
      "fn": "ERC20._transfer",
      "offset": [
        7544,
        7591
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1420": {
      "op": "DUP4"
    },
    "1421": {
      "op": "PUSH2",
      "value": "0x751"
    },
    "1424": {
      "op": "JUMP"
    },
    "1425": {
      "op": "JUMPDEST"
    },
    "1426": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1428": {
      "fn": "ERC20._transfer",
      "offset": [
        7626,
        7643
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1430": {
      "fn": "ERC20._transfer",
      "offset": [
        7626,
        7643
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "1432": {
      "fn": "ERC20._transfer",
      "offset": [
        7602,
        7623
      ],
      "op": "SHL",
      "path": "1"
    },
    "1433": {
      "fn": "ERC20._transfer",
      "offset": [
        7626,
        7643
      ],
      "op": "SUB",
      "path": "1"
    },
    "1434": {
      "fn": "ERC20._transfer",
      "offset": [
        7626,
        7643
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1435": {
      "fn": "ERC20._transfer",
      "offset": [
        7626,
        7643
      ],
      "op": "AND",
      "path": "1"
    },
    "1436": {
      "fn": "ERC20._transfer",
      "offset": [
        7626,
        7643
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1438": {
      "fn": "ERC20._transfer",
      "offset": [
        7626,
        7643
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1439": {
      "fn": "ERC20._transfer",
      "offset": [
        7626,
        7643
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1440": {
      "fn": "ERC20._transfer",
      "offset": [
        7626,
        7643
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1441": {
      "fn": "ERC20._transfer",
      "offset": [
        7626,
        7643
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1443": {
      "fn": "ERC20._transfer",
      "offset": [
        7626,
        7643
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1444": {
      "fn": "ERC20._transfer",
      "offset": [
        7626,
        7643
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1445": {
      "fn": "ERC20._transfer",
      "offset": [
        7626,
        7643
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1446": {
      "fn": "ERC20._transfer",
      "offset": [
        7661,
        7684
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 27,
      "value": "0x40"
    },
    "1448": {
      "fn": "ERC20._transfer",
      "offset": [
        7661,
        7684
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1449": {
      "fn": "ERC20._transfer",
      "offset": [
        7661,
        7684
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1450": {
      "branch": 51,
      "fn": "ERC20._transfer",
      "offset": [
        7661,
        7684
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1451": {
      "fn": "ERC20._transfer",
      "offset": [
        7653,
        7727
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1452": {
      "fn": "ERC20._transfer",
      "offset": [
        7653,
        7727
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1453": {
      "fn": "ERC20._transfer",
      "offset": [
        7653,
        7727
      ],
      "op": "LT",
      "path": "1"
    },
    "1454": {
      "fn": "ERC20._transfer",
      "offset": [
        7653,
        7727
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1455": {
      "op": "PUSH2",
      "value": "0x5CA"
    },
    "1458": {
      "op": "JUMPI"
    },
    "1459": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1461": {
      "fn": "ERC20._transfer",
      "offset": [
        7653,
        7727
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1462": {
      "fn": "ERC20._transfer",
      "offset": [
        7653,
        7727
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x461BCD"
    },
    "1466": {
      "fn": "ERC20._transfer",
      "offset": [
        7653,
        7727
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE5"
    },
    "1468": {
      "fn": "ERC20._transfer",
      "offset": [
        7653,
        7727
      ],
      "op": "SHL",
      "path": "1"
    },
    "1469": {
      "fn": "ERC20._transfer",
      "offset": [
        7653,
        7727
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1470": {
      "fn": "ERC20._transfer",
      "offset": [
        7653,
        7727
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1471": {
      "fn": "ERC20._transfer",
      "offset": [
        7653,
        7727
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1473": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7653,
        7727
      ],
      "op": "ADD",
      "path": "1"
    },
    "1474": {
      "fn": "ERC20._transfer",
      "offset": [
        7653,
        7727
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x304"
    },
    "1477": {
      "op": "SWAP1"
    },
    "1478": {
      "op": "PUSH2",
      "value": "0xA2D"
    },
    "1481": {
      "op": "JUMP"
    },
    "1482": {
      "op": "JUMPDEST"
    },
    "1483": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1485": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7778
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 28,
      "value": "0x1"
    },
    "1487": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7778
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "1489": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7778
      ],
      "op": "SHL",
      "path": "1"
    },
    "1490": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7770
      ],
      "op": "SUB",
      "path": "1"
    },
    "1491": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7778
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1492": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7778
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1493": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7778
      ],
      "op": "AND",
      "path": "1"
    },
    "1494": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7778
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1496": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7778
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1497": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7778
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1498": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7778
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1499": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7778
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1501": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7778
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1502": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7778
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1503": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7778
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1504": {
      "fn": "ERC20._transfer",
      "offset": [
        7781,
        7803
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1506": {
      "fn": "ERC20._transfer",
      "offset": [
        7781,
        7803
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1507": {
      "fn": "ERC20._transfer",
      "offset": [
        7781,
        7803
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1508": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7803
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1509": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7803
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1510": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7843
      ],
      "op": "DUP6",
      "path": "1",
      "statement": 29
    },
    "1511": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7843
      ],
      "op": "SUB",
      "path": "1"
    },
    "1512": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7843
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1513": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7843
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1514": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7843
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1515": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7843
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1516": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7843
      ],
      "op": "AND",
      "path": "1"
    },
    "1517": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7843
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1518": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7853
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1519": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7853
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1520": {
      "fn": "ERC20._transfer",
      "offset": [
        7781,
        7803
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1521": {
      "fn": "ERC20._transfer",
      "offset": [
        7781,
        7803
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1522": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7770
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1523": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7853
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1524": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7853
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1525": {
      "fn": "ERC20._transfer",
      "offset": [
        7781,
        7803
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1526": {
      "fn": "ERC20._transfer",
      "offset": [
        7781,
        7803
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1527": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7853
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x601"
    },
    "1530": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7823,
        7853
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1531": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7853
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1532": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7853
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1533": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7853
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC18"
    },
    "1536": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7853
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1537": {
      "op": "JUMPDEST"
    },
    "1538": {
      "op": "SWAP3"
    },
    "1539": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "POP",
      "path": "1",
      "statement": 30
    },
    "1540": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "POP",
      "path": "1"
    },
    "1541": {
      "op": "DUP2"
    },
    "1542": {
      "op": "SWAP1"
    },
    "1543": {
      "op": "SSTORE"
    },
    "1544": {
      "op": "POP"
    },
    "1545": {
      "op": "DUP3"
    },
    "1546": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1548": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1550": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "1552": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "SHL",
      "path": "1"
    },
    "1553": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "SUB",
      "path": "1"
    },
    "1554": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "AND",
      "path": "1"
    },
    "1555": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1556": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1558": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1560": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "1562": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "SHL",
      "path": "1"
    },
    "1563": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "SUB",
      "path": "1"
    },
    "1564": {
      "fn": "ERC20._transfer",
      "offset": [
        7897,
        7903
      ],
      "op": "AND",
      "path": "1"
    },
    "1565": {
      "fn": "ERC20._transfer",
      "offset": [
        7897,
        7903
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "1598": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1599": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7869,
        7904
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1601": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1602": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x64B"
    },
    "1605": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1606": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1607": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC01"
    },
    "1610": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1611": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1612": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1614": {
      "fn": "ERC20._transfer",
      "offset": [
        7915,
        7961
      ],
      "op": "MLOAD",
      "path": "1",
      "statement": 31
    },
    "1615": {
      "fn": "ERC20._transfer",
      "offset": [
        7935,
        7941
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1616": {
      "fn": "ERC20._transfer",
      "offset": [
        7943,
        7952
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1617": {
      "fn": "ERC20._transfer",
      "offset": [
        7954,
        7960
      ],
      "op": "SUB",
      "path": "1"
    },
    "1618": {
      "fn": "ERC20._transfer",
      "offset": [
        7915,
        7934
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1619": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7915,
        7961
      ],
      "op": "LOG3",
      "path": "1"
    },
    "1620": {
      "fn": "ERC20._transfer",
      "offset": [
        7915,
        7961
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x65E"
    },
    "1623": {
      "fn": "ERC20._transfer",
      "offset": [
        7255,
        7968
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1624": {
      "fn": "ERC20._transfer",
      "offset": [
        7255,
        7968
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1625": {
      "fn": "ERC20._transfer",
      "offset": [
        7255,
        7968
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1626": {
      "fn": "ERC20._transfer",
      "offset": [
        7255,
        7968
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x751"
    },
    "1629": {
      "fn": "ERC20._transfer",
      "jump": "o",
      "offset": [
        7255,
        7968
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1630": {
      "fn": "ERC20._burn",
      "offset": [
        8953,
        9529
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1631": {
      "op": "POP"
    },
    "1632": {
      "op": "POP"
    },
    "1633": {
      "op": "POP"
    },
    "1634": {
      "op": "POP"
    },
    "1635": {
      "op": "JUMP"
    },
    "1636": {
      "fn": "ERC20._burn",
      "offset": [
        9036,
        9057
      ],
      "op": "JUMPDEST",
      "path": "1",
      "statement": 32
    },
    "1637": {
      "branch": 52,
      "fn": "ERC20._burn",
      "offset": [
        9036,
        9057
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1639": {
      "fn": "ERC20._burn",
      "offset": [
        9028,
        9095
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1641": {
      "fn": "ERC20._burn",
      "offset": [
        9028,
        9095
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "1643": {
      "fn": "ERC20._burn",
      "offset": [
        9028,
        9095
      ],
      "op": "SHL",
      "path": "1"
    },
    "1644": {
      "fn": "ERC20._burn",
      "offset": [
        9028,
        9095
      ],
      "op": "SUB",
      "path": "1"
    },
    "1645": {
      "op": "DUP3"
    },
    "1646": {
      "op": "AND"
    },
    "1647": {
      "op": "PUSH2",
      "value": "0x68A"
    },
    "1650": {
      "branch": 52,
      "fn": "ERC20._burn",
      "offset": [
        9028,
        9095
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1651": {
      "fn": "ERC20._burn",
      "offset": [
        9028,
        9095
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1653": {
      "fn": "ERC20._burn",
      "offset": [
        9028,
        9095
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1654": {
      "fn": "ERC20._burn",
      "offset": [
        9028,
        9095
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x461BCD"
    },
    "1658": {
      "fn": "ERC20._burn",
      "offset": [
        9028,
        9095
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE5"
    },
    "1660": {
      "fn": "ERC20._burn",
      "offset": [
        9028,
        9095
      ],
      "op": "SHL",
      "path": "1"
    },
    "1661": {
      "fn": "ERC20._burn",
      "offset": [
        9028,
        9095
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1662": {
      "fn": "ERC20._burn",
      "jump": "i",
      "offset": [
        9028,
        9095
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1663": {
      "fn": "ERC20._burn",
      "offset": [
        9028,
        9095
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1665": {
      "fn": "ERC20._burn",
      "offset": [
        9106,
        9155
      ],
      "op": "ADD",
      "path": "1",
      "statement": 33
    },
    "1666": {
      "fn": "ERC20._burn",
      "offset": [
        9127,
        9134
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x304"
    },
    "1669": {
      "fn": "ERC20._burn",
      "offset": [
        9144,
        9145
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1670": {
      "fn": "ERC20._burn",
      "offset": [
        9148,
        9154
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xABB"
    },
    "1673": {
      "fn": "ERC20._burn",
      "offset": [
        9106,
        9126
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1674": {
      "fn": "ERC20._burn",
      "jump": "i",
      "offset": [
        9106,
        9155
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1675": {
      "fn": "ERC20._burn",
      "offset": [
        9106,
        9155
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x696"
    },
    "1678": {
      "op": "DUP3"
    },
    "1679": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1681": {
      "op": "DUP4"
    },
    "1682": {
      "op": "PUSH2",
      "value": "0x751"
    },
    "1685": {
      "op": "JUMP"
    },
    "1686": {
      "fn": "ERC20._burn",
      "offset": [
        9191,
        9209
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1687": {
      "fn": "ERC20._burn",
      "offset": [
        9191,
        9209
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1689": {
      "fn": "ERC20._burn",
      "offset": [
        9166,
        9188
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1691": {
      "fn": "ERC20._burn",
      "offset": [
        9191,
        9209
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "1693": {
      "fn": "ERC20._burn",
      "offset": [
        9191,
        9209
      ],
      "op": "SHL",
      "path": "1"
    },
    "1694": {
      "fn": "ERC20._burn",
      "offset": [
        9191,
        9209
      ],
      "op": "SUB",
      "path": "1"
    },
    "1695": {
      "fn": "ERC20._burn",
      "offset": [
        9191,
        9209
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1696": {
      "fn": "ERC20._burn",
      "offset": [
        9191,
        9209
      ],
      "op": "AND",
      "path": "1"
    },
    "1697": {
      "fn": "ERC20._burn",
      "offset": [
        9191,
        9209
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1699": {
      "fn": "ERC20._burn",
      "offset": [
        9191,
        9209
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1700": {
      "fn": "ERC20._burn",
      "offset": [
        9191,
        9209
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1701": {
      "fn": "ERC20._burn",
      "offset": [
        9191,
        9209
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1702": {
      "fn": "ERC20._burn",
      "offset": [
        9191,
        9209
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1704": {
      "fn": "ERC20._burn",
      "offset": [
        9191,
        9209
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1705": {
      "fn": "ERC20._burn",
      "offset": [
        9227,
        9251
      ],
      "op": "SWAP1",
      "path": "1",
      "statement": 34
    },
    "1706": {
      "fn": "ERC20._burn",
      "offset": [
        9227,
        9251
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1707": {
      "fn": "ERC20._burn",
      "offset": [
        9227,
        9251
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1709": {
      "branch": 53,
      "fn": "ERC20._burn",
      "offset": [
        9227,
        9251
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1710": {
      "fn": "ERC20._burn",
      "offset": [
        9219,
        9290
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1711": {
      "fn": "ERC20._burn",
      "offset": [
        9219,
        9290
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1712": {
      "fn": "ERC20._burn",
      "offset": [
        9219,
        9290
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1713": {
      "fn": "ERC20._burn",
      "offset": [
        9219,
        9290
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1714": {
      "op": "LT"
    },
    "1715": {
      "op": "ISZERO"
    },
    "1716": {
      "op": "PUSH2",
      "value": "0x6CF"
    },
    "1719": {
      "branch": 53,
      "fn": "ERC20._burn",
      "offset": [
        9219,
        9290
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1720": {
      "fn": "ERC20._burn",
      "offset": [
        9219,
        9290
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1722": {
      "fn": "ERC20._burn",
      "offset": [
        9219,
        9290
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1723": {
      "fn": "ERC20._burn",
      "offset": [
        9219,
        9290
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x461BCD"
    },
    "1727": {
      "fn": "ERC20._burn",
      "offset": [
        9219,
        9290
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE5"
    },
    "1729": {
      "fn": "ERC20._burn",
      "offset": [
        9219,
        9290
      ],
      "op": "SHL",
      "path": "1"
    },
    "1730": {
      "fn": "ERC20._burn",
      "offset": [
        9219,
        9290
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1731": {
      "fn": "ERC20._burn",
      "jump": "i",
      "offset": [
        9219,
        9290
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1732": {
      "fn": "ERC20._burn",
      "offset": [
        9219,
        9290
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1734": {
      "op": "ADD"
    },
    "1735": {
      "op": "PUSH2",
      "value": "0x304"
    },
    "1738": {
      "op": "SWAP1"
    },
    "1739": {
      "op": "PUSH2",
      "value": "0x9A9"
    },
    "1742": {
      "op": "JUMP"
    },
    "1743": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9342
      ],
      "op": "JUMPDEST",
      "path": "1",
      "statement": 35
    },
    "1744": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9342
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1746": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9333
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1748": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9342
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "1750": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9342
      ],
      "op": "SHL",
      "path": "1"
    },
    "1751": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9342
      ],
      "op": "SUB",
      "path": "1"
    },
    "1752": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9342
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1753": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9342
      ],
      "op": "AND",
      "path": "1"
    },
    "1754": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9342
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1756": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9342
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1757": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9342
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1758": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9342
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1759": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9342
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1761": {
      "fn": "ERC20._burn",
      "offset": [
        9345,
        9368
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1762": {
      "fn": "ERC20._burn",
      "offset": [
        9345,
        9368
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1763": {
      "fn": "ERC20._burn",
      "offset": [
        9345,
        9368
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1764": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9368
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1766": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9368
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1767": {
      "fn": "ERC20._burn",
      "offset": [
        9388,
        9400
      ],
      "op": "KECCAK256",
      "path": "1",
      "statement": 36
    },
    "1768": {
      "fn": "ERC20._burn",
      "offset": [
        9388,
        9410
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1769": {
      "fn": "ERC20._burn",
      "offset": [
        9388,
        9410
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1770": {
      "fn": "ERC20._burn",
      "offset": [
        9345,
        9368
      ],
      "op": "SUB",
      "path": "1"
    },
    "1771": {
      "fn": "ERC20._burn",
      "offset": [
        9345,
        9368
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1772": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9333
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1773": {
      "fn": "ERC20._burn",
      "offset": [
        9388,
        9410
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "1775": {
      "fn": "ERC20._burn",
      "offset": [
        9388,
        9410
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1776": {
      "fn": "ERC20._burn",
      "offset": [
        9345,
        9368
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1777": {
      "fn": "ERC20._burn",
      "offset": [
        9345,
        9368
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1778": {
      "fn": "ERC20._burn",
      "offset": [
        9388,
        9410
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1779": {
      "fn": "ERC20._burn",
      "jump": "i",
      "offset": [
        9388,
        9410
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1780": {
      "fn": "ERC20._burn",
      "offset": [
        9388,
        9410
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6FE"
    },
    "1783": {
      "fn": "ERC20._burn",
      "offset": [
        9388,
        9410
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1784": {
      "fn": "ERC20._burn",
      "offset": [
        9388,
        9410
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1785": {
      "fn": "ERC20._burn",
      "offset": [
        9388,
        9410
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1786": {
      "op": "PUSH2",
      "value": "0xC30"
    },
    "1789": {
      "op": "JUMP"
    },
    "1790": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "JUMPDEST",
      "path": "1",
      "statement": 37
    },
    "1791": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1792": {
      "fn": "ERC20._burn",
      "offset": [
        9452,
        9453
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1793": {
      "fn": "ERC20._burn",
      "offset": [
        9452,
        9453
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1794": {
      "op": "POP"
    },
    "1795": {
      "op": "POP"
    },
    "1796": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1798": {
      "op": "MLOAD"
    },
    "1799": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1801": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1802": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1804": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1806": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "1808": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "SHL",
      "path": "1"
    },
    "1809": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "SUB",
      "path": "1"
    },
    "1810": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1811": {
      "fn": "ERC20._burn",
      "offset": [
        9456,
        9462
      ],
      "op": "AND",
      "path": "1"
    },
    "1812": {
      "fn": "ERC20._burn",
      "offset": [
        9456,
        9462
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1813": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "1846": {
      "fn": "ERC20._burn",
      "jump": "i",
      "offset": [
        9426,
        9463
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1847": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x741"
    },
    "1850": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1851": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "DUP7",
      "path": "1"
    },
    "1852": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1853": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC01"
    },
    "1856": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1857": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1858": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1860": {
      "fn": "ERC20._burn",
      "offset": [
        9474,
        9522
      ],
      "op": "MLOAD",
      "path": "1",
      "statement": 38
    },
    "1861": {
      "fn": "ERC20._burn",
      "offset": [
        9494,
        9501
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1862": {
      "fn": "ERC20._burn",
      "offset": [
        9511,
        9512
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1863": {
      "fn": "ERC20._burn",
      "offset": [
        9515,
        9521
      ],
      "op": "SUB",
      "path": "1"
    },
    "1864": {
      "fn": "ERC20._burn",
      "offset": [
        9474,
        9522
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1865": {
      "fn": "ERC20._burn",
      "offset": [
        8953,
        9529
      ],
      "op": "LOG3",
      "path": "1"
    },
    "1866": {
      "fn": "ERC20._burn",
      "offset": [
        8953,
        9529
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x751"
    },
    "1869": {
      "fn": "ERC20._burn",
      "offset": [
        8953,
        9529
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1870": {
      "fn": "ERC20._burn",
      "jump": "o",
      "offset": [
        8953,
        9529
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1872": {
      "fn": "ERC20._mint",
      "offset": [
        8244,
        8633
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1873": {
      "op": "JUMPDEST"
    },
    "1874": {
      "op": "POP"
    },
    "1875": {
      "op": "POP"
    },
    "1876": {
      "op": "POP"
    },
    "1877": {
      "op": "JUMP"
    },
    "1878": {
      "fn": "ERC20._mint",
      "offset": [
        8327,
        8348
      ],
      "op": "JUMPDEST",
      "path": "1",
      "statement": 39
    },
    "1879": {
      "branch": 54,
      "fn": "ERC20._mint",
      "offset": [
        8327,
        8348
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1881": {
      "fn": "ERC20._mint",
      "offset": [
        8319,
        8384
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1883": {
      "fn": "ERC20._mint",
      "offset": [
        8319,
        8384
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "1885": {
      "fn": "ERC20._mint",
      "offset": [
        8319,
        8384
      ],
      "op": "SHL",
      "path": "1"
    },
    "1886": {
      "fn": "ERC20._mint",
      "offset": [
        8319,
        8384
      ],
      "op": "SUB",
      "path": "1"
    },
    "1887": {
      "op": "DUP3"
    },
    "1888": {
      "op": "AND"
    },
    "1889": {
      "op": "PUSH2",
      "value": "0x77C"
    },
    "1892": {
      "branch": 54,
      "fn": "ERC20._mint",
      "offset": [
        8319,
        8384
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1893": {
      "fn": "ERC20._mint",
      "offset": [
        8319,
        8384
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1895": {
      "fn": "ERC20._mint",
      "offset": [
        8319,
        8384
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1896": {
      "fn": "ERC20._mint",
      "offset": [
        8319,
        8384
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x461BCD"
    },
    "1900": {
      "fn": "ERC20._mint",
      "offset": [
        8319,
        8384
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE5"
    },
    "1902": {
      "fn": "ERC20._mint",
      "offset": [
        8319,
        8384
      ],
      "op": "SHL",
      "path": "1"
    },
    "1903": {
      "fn": "ERC20._mint",
      "offset": [
        8319,
        8384
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1904": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8319,
        8384
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1905": {
      "fn": "ERC20._mint",
      "offset": [
        8319,
        8384
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1907": {
      "fn": "ERC20._mint",
      "offset": [
        8395,
        8444
      ],
      "op": "ADD",
      "path": "1",
      "statement": 40
    },
    "1908": {
      "fn": "ERC20._mint",
      "offset": [
        8424,
        8425
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x304"
    },
    "1911": {
      "fn": "ERC20._mint",
      "offset": [
        8428,
        8435
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1912": {
      "fn": "ERC20._mint",
      "offset": [
        8437,
        8443
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBCA"
    },
    "1915": {
      "fn": "ERC20._mint",
      "offset": [
        8395,
        8415
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1916": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8395,
        8444
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1917": {
      "fn": "ERC20._mint",
      "offset": [
        8395,
        8444
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x788"
    },
    "1920": {
      "fn": "ERC20._mint",
      "offset": [
        8471,
        8477
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 41,
      "value": "0x0"
    },
    "1922": {
      "fn": "ERC20._mint",
      "offset": [
        8455,
        8467
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1923": {
      "fn": "ERC20._mint",
      "offset": [
        8455,
        8467
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1924": {
      "fn": "ERC20._mint",
      "offset": [
        8455,
        8477
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x751"
    },
    "1927": {
      "fn": "ERC20._mint",
      "offset": [
        8455,
        8477
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1928": {
      "fn": "ERC20._mint",
      "offset": [
        8455,
        8477
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1929": {
      "fn": "ERC20._mint",
      "offset": [
        8455,
        8477
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1930": {
      "fn": "ERC20._mint",
      "offset": [
        8455,
        8477
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "1932": {
      "fn": "ERC20._mint",
      "offset": [
        8455,
        8477
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1934": {
      "fn": "ERC20._mint",
      "offset": [
        8455,
        8477
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1935": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8455,
        8477
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1936": {
      "fn": "ERC20._mint",
      "offset": [
        8455,
        8477
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1937": {
      "fn": "ERC20._mint",
      "offset": [
        8455,
        8477
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x79A"
    },
    "1940": {
      "fn": "ERC20._mint",
      "offset": [
        8455,
        8477
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1941": {
      "fn": "ERC20._mint",
      "offset": [
        8455,
        8477
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1942": {
      "op": "PUSH2",
      "value": "0xC18"
    },
    "1945": {
      "op": "JUMP"
    },
    "1946": {
      "op": "JUMPDEST"
    },
    "1947": {
      "op": "SWAP1"
    },
    "1948": {
      "op": "SWAP2"
    },
    "1949": {
      "op": "SSTORE"
    },
    "1950": {
      "op": "POP"
    },
    "1951": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8505
      ],
      "op": "POP",
      "path": "1",
      "statement": 42
    },
    "1952": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8505
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1954": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8496
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1956": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8505
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "1958": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8505
      ],
      "op": "SHL",
      "path": "1"
    },
    "1959": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8505
      ],
      "op": "SUB",
      "path": "1"
    },
    "1960": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8505
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1961": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8505
      ],
      "op": "AND",
      "path": "1"
    },
    "1962": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8505
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1964": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8505
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1965": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8505
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1966": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8505
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1967": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8505
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1969": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8515
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1970": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8515
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1971": {
      "fn": "ERC20._mint",
      "offset": [
        8509,
        8515
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1972": {
      "fn": "ERC20._mint",
      "offset": [
        8509,
        8515
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1974": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8496
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1975": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8515
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1976": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8515
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1977": {
      "fn": "ERC20._mint",
      "offset": [
        8509,
        8515
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1978": {
      "fn": "ERC20._mint",
      "offset": [
        8509,
        8515
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1979": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8515
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1980": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8487,
        8515
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1981": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8515
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7C7"
    },
    "1984": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8515
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1985": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8515
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1986": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8515
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1987": {
      "op": "PUSH2",
      "value": "0xC18"
    },
    "1990": {
      "op": "JUMP"
    },
    "1991": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "JUMPDEST",
      "path": "1",
      "statement": 43
    },
    "1992": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1993": {
      "op": "SWAP2"
    },
    "1994": {
      "op": "SSTORE"
    },
    "1995": {
      "op": "POP"
    },
    "1996": {
      "op": "POP"
    },
    "1997": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1999": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2000": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2002": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2004": {
      "fn": "ERC20._mint",
      "offset": [
        8547,
        8548
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "2006": {
      "fn": "ERC20._mint",
      "offset": [
        8547,
        8548
      ],
      "op": "SHL",
      "path": "1"
    },
    "2007": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "SUB",
      "path": "1"
    },
    "2008": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2009": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "AND",
      "path": "1"
    },
    "2010": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2011": {
      "fn": "ERC20._mint",
      "offset": [
        8560,
        8566
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2013": {
      "fn": "ERC20._mint",
      "offset": [
        8560,
        8566
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2014": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "2047": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8530,
        8567
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2048": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x80A"
    },
    "2051": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2052": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2053": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2054": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC01"
    },
    "2057": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2058": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2059": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2061": {
      "fn": "ERC20._mint",
      "offset": [
        8578,
        8626
      ],
      "op": "MLOAD",
      "path": "1",
      "statement": 44
    },
    "2062": {
      "fn": "ERC20._mint",
      "offset": [
        8606,
        8607
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2063": {
      "fn": "ERC20._mint",
      "offset": [
        8610,
        8617
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2064": {
      "fn": "ERC20._mint",
      "offset": [
        8619,
        8625
      ],
      "op": "SUB",
      "path": "1"
    },
    "2065": {
      "fn": "ERC20._mint",
      "offset": [
        8578,
        8597
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2066": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8578,
        8626
      ],
      "op": "LOG3",
      "path": "1"
    },
    "2067": {
      "fn": "ERC20._mint",
      "offset": [
        8578,
        8626
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x81E"
    },
    "2070": {
      "fn": "ERC20._mint",
      "offset": [
        8244,
        8633
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2072": {
      "fn": "ERC20._mint",
      "offset": [
        8244,
        8633
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2073": {
      "fn": "ERC20._mint",
      "jump": "o",
      "offset": [
        8244,
        8633
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2074": {
      "op": "PUSH2",
      "value": "0x751"
    },
    "2077": {
      "op": "JUMP"
    },
    "2078": {
      "op": "JUMPDEST"
    },
    "2079": {
      "op": "POP"
    },
    "2080": {
      "op": "POP"
    },
    "2081": {
      "op": "JUMP"
    },
    "2082": {
      "op": "JUMPDEST"
    },
    "2083": {
      "op": "DUP1"
    },
    "2084": {
      "op": "CALLDATALOAD"
    },
    "2085": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2087": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2089": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2091": {
      "op": "SHL"
    },
    "2092": {
      "op": "SUB"
    },
    "2093": {
      "op": "DUP2"
    },
    "2094": {
      "op": "AND"
    },
    "2095": {
      "op": "DUP2"
    },
    "2096": {
      "op": "EQ"
    },
    "2097": {
      "op": "PUSH2",
      "value": "0x3AC"
    },
    "2100": {
      "op": "JUMPI"
    },
    "2101": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2103": {
      "op": "DUP1"
    },
    "2104": {
      "op": "REVERT"
    },
    "2105": {
      "op": "JUMPDEST"
    },
    "2106": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2108": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2110": {
      "op": "DUP3"
    },
    "2111": {
      "op": "DUP5"
    },
    "2112": {
      "op": "SUB"
    },
    "2113": {
      "op": "SLT"
    },
    "2114": {
      "op": "ISZERO"
    },
    "2115": {
      "op": "PUSH2",
      "value": "0x84A"
    },
    "2118": {
      "op": "JUMPI"
    },
    "2119": {
      "op": "DUP1"
    },
    "2120": {
      "jump": "i",
      "op": "DUP2"
    },
    "2121": {
      "op": "REVERT"
    },
    "2122": {
      "op": "JUMPDEST"
    },
    "2123": {
      "op": "PUSH2",
      "value": "0x853"
    },
    "2126": {
      "op": "DUP3"
    },
    "2127": {
      "op": "PUSH2",
      "value": "0x822"
    },
    "2130": {
      "op": "JUMP"
    },
    "2131": {
      "jump": "o",
      "op": "JUMPDEST"
    },
    "2132": {
      "op": "SWAP4"
    },
    "2133": {
      "op": "SWAP3"
    },
    "2134": {
      "op": "POP"
    },
    "2135": {
      "op": "POP"
    },
    "2136": {
      "op": "POP"
    },
    "2137": {
      "op": "JUMP"
    },
    "2138": {
      "op": "JUMPDEST"
    },
    "2139": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2141": {
      "op": "DUP1"
    },
    "2142": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2144": {
      "op": "DUP4"
    },
    "2145": {
      "op": "DUP6"
    },
    "2146": {
      "op": "SUB"
    },
    "2147": {
      "op": "SLT"
    },
    "2148": {
      "op": "ISZERO"
    },
    "2149": {
      "op": "PUSH2",
      "value": "0x86C"
    },
    "2152": {
      "op": "JUMPI"
    },
    "2153": {
      "op": "DUP1"
    },
    "2154": {
      "jump": "i",
      "op": "DUP2"
    },
    "2155": {
      "op": "REVERT"
    },
    "2156": {
      "op": "JUMPDEST"
    },
    "2157": {
      "op": "PUSH2",
      "value": "0x875"
    },
    "2160": {
      "op": "DUP4"
    },
    "2161": {
      "op": "PUSH2",
      "value": "0x822"
    },
    "2164": {
      "op": "JUMP"
    },
    "2165": {
      "op": "JUMPDEST"
    },
    "2166": {
      "op": "SWAP2"
    },
    "2167": {
      "jump": "i",
      "op": "POP"
    },
    "2168": {
      "op": "PUSH2",
      "value": "0x883"
    },
    "2171": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2173": {
      "op": "DUP5"
    },
    "2174": {
      "op": "ADD"
    },
    "2175": {
      "op": "PUSH2",
      "value": "0x822"
    },
    "2178": {
      "op": "JUMP"
    },
    "2179": {
      "op": "JUMPDEST"
    },
    "2180": {
      "op": "SWAP1"
    },
    "2181": {
      "jump": "o",
      "op": "POP"
    },
    "2182": {
      "op": "SWAP3"
    },
    "2183": {
      "op": "POP"
    },
    "2184": {
      "op": "SWAP3"
    },
    "2185": {
      "op": "SWAP1"
    },
    "2186": {
      "op": "POP"
    },
    "2187": {
      "op": "JUMP"
    },
    "2188": {
      "op": "JUMPDEST"
    },
    "2189": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2191": {
      "op": "DUP1"
    },
    "2192": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2194": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2196": {
      "op": "DUP5"
    },
    "2197": {
      "op": "DUP7"
    },
    "2198": {
      "op": "SUB"
    },
    "2199": {
      "op": "SLT"
    },
    "2200": {
      "op": "ISZERO"
    },
    "2201": {
      "op": "PUSH2",
      "value": "0x8A0"
    },
    "2204": {
      "op": "JUMPI"
    },
    "2205": {
      "op": "DUP1"
    },
    "2206": {
      "jump": "i",
      "op": "DUP2"
    },
    "2207": {
      "op": "REVERT"
    },
    "2208": {
      "op": "JUMPDEST"
    },
    "2209": {
      "op": "PUSH2",
      "value": "0x8A9"
    },
    "2212": {
      "op": "DUP5"
    },
    "2213": {
      "op": "PUSH2",
      "value": "0x822"
    },
    "2216": {
      "op": "JUMP"
    },
    "2217": {
      "op": "JUMPDEST"
    },
    "2218": {
      "op": "SWAP3"
    },
    "2219": {
      "jump": "i",
      "op": "POP"
    },
    "2220": {
      "op": "PUSH2",
      "value": "0x8B7"
    },
    "2223": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2225": {
      "op": "DUP6"
    },
    "2226": {
      "op": "ADD"
    },
    "2227": {
      "op": "PUSH2",
      "value": "0x822"
    },
    "2230": {
      "op": "JUMP"
    },
    "2231": {
      "op": "JUMPDEST"
    },
    "2232": {
      "op": "SWAP2"
    },
    "2233": {
      "op": "POP"
    },
    "2234": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2236": {
      "op": "DUP5"
    },
    "2237": {
      "op": "ADD"
    },
    "2238": {
      "op": "CALLDATALOAD"
    },
    "2239": {
      "op": "SWAP1"
    },
    "2240": {
      "jump": "o",
      "op": "POP"
    },
    "2241": {
      "op": "SWAP3"
    },
    "2242": {
      "op": "POP"
    },
    "2243": {
      "op": "SWAP3"
    },
    "2244": {
      "op": "POP"
    },
    "2245": {
      "op": "SWAP3"
    },
    "2246": {
      "op": "JUMP"
    },
    "2247": {
      "op": "JUMPDEST"
    },
    "2248": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2250": {
      "op": "DUP1"
    },
    "2251": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2253": {
      "op": "DUP4"
    },
    "2254": {
      "op": "DUP6"
    },
    "2255": {
      "op": "SUB"
    },
    "2256": {
      "op": "SLT"
    },
    "2257": {
      "op": "ISZERO"
    },
    "2258": {
      "op": "PUSH2",
      "value": "0x8D9"
    },
    "2261": {
      "op": "JUMPI"
    },
    "2262": {
      "op": "DUP2"
    },
    "2263": {
      "jump": "i",
      "op": "DUP3"
    },
    "2264": {
      "op": "REVERT"
    },
    "2265": {
      "op": "JUMPDEST"
    },
    "2266": {
      "op": "PUSH2",
      "value": "0x8E2"
    },
    "2269": {
      "op": "DUP4"
    },
    "2270": {
      "op": "PUSH2",
      "value": "0x822"
    },
    "2273": {
      "op": "JUMP"
    },
    "2274": {
      "op": "JUMPDEST"
    },
    "2275": {
      "op": "SWAP5"
    },
    "2276": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2278": {
      "op": "SWAP4"
    },
    "2279": {
      "op": "SWAP1"
    },
    "2280": {
      "op": "SWAP4"
    },
    "2281": {
      "jump": "o",
      "op": "ADD"
    },
    "2282": {
      "op": "CALLDATALOAD"
    },
    "2283": {
      "op": "SWAP4"
    },
    "2284": {
      "op": "POP"
    },
    "2285": {
      "op": "POP"
    },
    "2286": {
      "op": "POP"
    },
    "2287": {
      "op": "JUMP"
    },
    "2288": {
      "op": "JUMPDEST"
    },
    "2289": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2291": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2293": {
      "op": "DUP3"
    },
    "2294": {
      "op": "DUP5"
    },
    "2295": {
      "op": "SUB"
    },
    "2296": {
      "op": "SLT"
    },
    "2297": {
      "op": "ISZERO"
    },
    "2298": {
      "op": "PUSH2",
      "value": "0x901"
    },
    "2301": {
      "op": "JUMPI"
    },
    "2302": {
      "op": "DUP1"
    },
    "2303": {
      "op": "DUP2"
    },
    "2304": {
      "op": "REVERT"
    },
    "2305": {
      "jump": "o",
      "op": "JUMPDEST"
    },
    "2306": {
      "op": "POP"
    },
    "2307": {
      "op": "CALLDATALOAD"
    },
    "2308": {
      "op": "SWAP2"
    },
    "2309": {
      "op": "SWAP1"
    },
    "2310": {
      "op": "POP"
    },
    "2311": {
      "op": "JUMP"
    },
    "2312": {
      "op": "JUMPDEST"
    },
    "2313": {
      "op": "SWAP1"
    },
    "2314": {
      "op": "ISZERO"
    },
    "2315": {
      "jump": "o",
      "op": "ISZERO"
    },
    "2316": {
      "op": "DUP2"
    },
    "2317": {
      "op": "MSTORE"
    },
    "2318": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2320": {
      "op": "ADD"
    },
    "2321": {
      "op": "SWAP1"
    },
    "2322": {
      "op": "JUMP"
    },
    "2323": {
      "op": "JUMPDEST"
    },
    "2324": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2326": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2328": {
      "op": "DUP1"
    },
    "2329": {
      "op": "DUP4"
    },
    "2330": {
      "op": "MSTORE"
    },
    "2331": {
      "op": "DUP4"
    },
    "2332": {
      "op": "MLOAD"
    },
    "2333": {
      "op": "DUP1"
    },
    "2334": {
      "op": "DUP3"
    },
    "2335": {
      "op": "DUP6"
    },
    "2336": {
      "op": "ADD"
    },
    "2337": {
      "op": "MSTORE"
    },
    "2338": {
      "op": "DUP3"
    },
    "2339": {
      "op": "JUMPDEST"
    },
    "2340": {
      "op": "DUP2"
    },
    "2341": {
      "op": "DUP2"
    },
    "2342": {
      "op": "LT"
    },
    "2343": {
      "op": "ISZERO"
    },
    "2344": {
      "op": "PUSH2",
      "value": "0x93F"
    },
    "2347": {
      "op": "JUMPI"
    },
    "2348": {
      "op": "DUP6"
    },
    "2349": {
      "op": "DUP2"
    },
    "2350": {
      "op": "ADD"
    },
    "2351": {
      "op": "DUP4"
    },
    "2352": {
      "op": "ADD"
    },
    "2353": {
      "op": "MLOAD"
    },
    "2354": {
      "op": "DUP6"
    },
    "2355": {
      "op": "DUP3"
    },
    "2356": {
      "op": "ADD"
    },
    "2357": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2359": {
      "op": "ADD"
    },
    "2360": {
      "op": "MSTORE"
    },
    "2361": {
      "op": "DUP3"
    },
    "2362": {
      "op": "ADD"
    },
    "2363": {
      "op": "PUSH2",
      "value": "0x923"
    },
    "2366": {
      "op": "JUMP"
    },
    "2367": {
      "op": "JUMPDEST"
    },
    "2368": {
      "op": "DUP2"
    },
    "2369": {
      "op": "DUP2"
    },
    "2370": {
      "op": "GT"
    },
    "2371": {
      "op": "ISZERO"
    },
    "2372": {
      "op": "PUSH2",
      "value": "0x950"
    },
    "2375": {
      "op": "JUMPI"
    },
    "2376": {
      "op": "DUP4"
    },
    "2377": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2379": {
      "op": "DUP4"
    },
    "2380": {
      "op": "DUP8"
    },
    "2381": {
      "op": "ADD"
    },
    "2382": {
      "op": "ADD"
    },
    "2383": {
      "op": "MSTORE"
    },
    "2384": {
      "op": "JUMPDEST"
    },
    "2385": {
      "op": "POP"
    },
    "2386": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2388": {
      "op": "ADD"
    },
    "2389": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2391": {
      "op": "NOT"
    },
    "2392": {
      "op": "AND"
    },
    "2393": {
      "op": "SWAP3"
    },
    "2394": {
      "op": "SWAP1"
    },
    "2395": {
      "op": "SWAP3"
    },
    "2396": {
      "op": "ADD"
    },
    "2397": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2399": {
      "jump": "o",
      "op": "ADD"
    },
    "2400": {
      "op": "SWAP4"
    },
    "2401": {
      "op": "SWAP3"
    },
    "2402": {
      "op": "POP"
    },
    "2403": {
      "op": "POP"
    },
    "2404": {
      "op": "POP"
    },
    "2405": {
      "op": "JUMP"
    },
    "2406": {
      "op": "JUMPDEST"
    },
    "2407": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2409": {
      "op": "DUP1"
    },
    "2410": {
      "op": "DUP3"
    },
    "2411": {
      "op": "MSTORE"
    },
    "2412": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "2414": {
      "op": "SWAP1"
    },
    "2415": {
      "op": "DUP3"
    },
    "2416": {
      "op": "ADD"
    },
    "2417": {
      "op": "MSTORE"
    },
    "2418": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220746F20746865207A65726F2061646472"
    },
    "2451": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2453": {
      "op": "DUP3"
    },
    "2454": {
      "op": "ADD"
    },
    "2455": {
      "op": "MSTORE"
    },
    "2456": {
      "op": "PUSH3",
      "value": "0x657373"
    },
    "2460": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "2462": {
      "op": "SHL"
    },
    "2463": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2465": {
      "jump": "o",
      "op": "DUP3"
    },
    "2466": {
      "op": "ADD"
    },
    "2467": {
      "op": "MSTORE"
    },
    "2468": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2470": {
      "op": "ADD"
    },
    "2471": {
      "op": "SWAP1"
    },
    "2472": {
      "op": "JUMP"
    },
    "2473": {
      "op": "JUMPDEST"
    },
    "2474": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2476": {
      "op": "DUP1"
    },
    "2477": {
      "op": "DUP3"
    },
    "2478": {
      "op": "MSTORE"
    },
    "2479": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "2481": {
      "op": "SWAP1"
    },
    "2482": {
      "op": "DUP3"
    },
    "2483": {
      "op": "ADD"
    },
    "2484": {
      "op": "MSTORE"
    },
    "2485": {
      "op": "PUSH32",
      "value": "0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E"
    },
    "2518": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2520": {
      "op": "DUP3"
    },
    "2521": {
      "op": "ADD"
    },
    "2522": {
      "op": "MSTORE"
    },
    "2523": {
      "op": "PUSH2",
      "value": "0x6365"
    },
    "2526": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "2528": {
      "op": "SHL"
    },
    "2529": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2531": {
      "jump": "o",
      "op": "DUP3"
    },
    "2532": {
      "op": "ADD"
    },
    "2533": {
      "op": "MSTORE"
    },
    "2534": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2536": {
      "op": "ADD"
    },
    "2537": {
      "op": "SWAP1"
    },
    "2538": {
      "op": "JUMP"
    },
    "2539": {
      "op": "JUMPDEST"
    },
    "2540": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2542": {
      "op": "DUP1"
    },
    "2543": {
      "op": "DUP3"
    },
    "2544": {
      "op": "MSTORE"
    },
    "2545": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "2547": {
      "op": "SWAP1"
    },
    "2548": {
      "op": "DUP3"
    },
    "2549": {
      "op": "ADD"
    },
    "2550": {
      "op": "MSTORE"
    },
    "2551": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F766520746F20746865207A65726F206164647265"
    },
    "2584": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2586": {
      "op": "DUP3"
    },
    "2587": {
      "op": "ADD"
    },
    "2588": {
      "op": "MSTORE"
    },
    "2589": {
      "op": "PUSH2",
      "value": "0x7373"
    },
    "2592": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "2594": {
      "op": "SHL"
    },
    "2595": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2597": {
      "jump": "o",
      "op": "DUP3"
    },
    "2598": {
      "op": "ADD"
    },
    "2599": {
      "op": "MSTORE"
    },
    "2600": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2602": {
      "op": "ADD"
    },
    "2603": {
      "op": "SWAP1"
    },
    "2604": {
      "op": "JUMP"
    },
    "2605": {
      "op": "JUMPDEST"
    },
    "2606": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2608": {
      "op": "DUP1"
    },
    "2609": {
      "op": "DUP3"
    },
    "2610": {
      "op": "MSTORE"
    },
    "2611": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "2613": {
      "op": "SWAP1"
    },
    "2614": {
      "op": "DUP3"
    },
    "2615": {
      "op": "ADD"
    },
    "2616": {
      "op": "MSTORE"
    },
    "2617": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732062"
    },
    "2650": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2652": {
      "op": "DUP3"
    },
    "2653": {
      "op": "ADD"
    },
    "2654": {
      "op": "MSTORE"
    },
    "2655": {
      "op": "PUSH6",
      "value": "0x616C616E6365"
    },
    "2662": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "2664": {
      "op": "SHL"
    },
    "2665": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2667": {
      "jump": "o",
      "op": "DUP3"
    },
    "2668": {
      "op": "ADD"
    },
    "2669": {
      "op": "MSTORE"
    },
    "2670": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2672": {
      "op": "ADD"
    },
    "2673": {
      "op": "SWAP1"
    },
    "2674": {
      "op": "JUMP"
    },
    "2675": {
      "op": "JUMPDEST"
    },
    "2676": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2678": {
      "op": "DUP1"
    },
    "2679": {
      "op": "DUP3"
    },
    "2680": {
      "op": "MSTORE"
    },
    "2681": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "2683": {
      "op": "SWAP1"
    },
    "2684": {
      "op": "DUP3"
    },
    "2685": {
      "op": "ADD"
    },
    "2686": {
      "op": "MSTORE"
    },
    "2687": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732061"
    },
    "2720": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2722": {
      "op": "DUP3"
    },
    "2723": {
      "op": "ADD"
    },
    "2724": {
      "op": "MSTORE"
    },
    "2725": {
      "op": "PUSH8",
      "value": "0x6C6C6F77616E6365"
    },
    "2734": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "2736": {
      "op": "SHL"
    },
    "2737": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2739": {
      "jump": "o",
      "op": "DUP3"
    },
    "2740": {
      "op": "ADD"
    },
    "2741": {
      "op": "MSTORE"
    },
    "2742": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2744": {
      "op": "ADD"
    },
    "2745": {
      "op": "SWAP1"
    },
    "2746": {
      "op": "JUMP"
    },
    "2747": {
      "op": "JUMPDEST"
    },
    "2748": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2750": {
      "op": "DUP1"
    },
    "2751": {
      "op": "DUP3"
    },
    "2752": {
      "op": "MSTORE"
    },
    "2753": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "2755": {
      "op": "SWAP1"
    },
    "2756": {
      "op": "DUP3"
    },
    "2757": {
      "op": "ADD"
    },
    "2758": {
      "op": "MSTORE"
    },
    "2759": {
      "op": "PUSH32",
      "value": "0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573"
    },
    "2792": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2794": {
      "op": "DUP3"
    },
    "2795": {
      "op": "ADD"
    },
    "2796": {
      "op": "MSTORE"
    },
    "2797": {
      "op": "PUSH1",
      "value": "0x73"
    },
    "2799": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "2801": {
      "op": "SHL"
    },
    "2802": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2804": {
      "jump": "o",
      "op": "DUP3"
    },
    "2805": {
      "op": "ADD"
    },
    "2806": {
      "op": "MSTORE"
    },
    "2807": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2809": {
      "op": "ADD"
    },
    "2810": {
      "op": "SWAP1"
    },
    "2811": {
      "op": "JUMP"
    },
    "2812": {
      "op": "JUMPDEST"
    },
    "2813": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2815": {
      "op": "DUP1"
    },
    "2816": {
      "op": "DUP3"
    },
    "2817": {
      "op": "MSTORE"
    },
    "2818": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "2820": {
      "op": "SWAP1"
    },
    "2821": {
      "op": "DUP3"
    },
    "2822": {
      "op": "ADD"
    },
    "2823": {
      "op": "MSTORE"
    },
    "2824": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E736665722066726F6D20746865207A65726F206164"
    },
    "2857": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2859": {
      "op": "DUP3"
    },
    "2860": {
      "op": "ADD"
    },
    "2861": {
      "op": "MSTORE"
    },
    "2862": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "2868": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "2870": {
      "op": "SHL"
    },
    "2871": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2873": {
      "jump": "o",
      "op": "DUP3"
    },
    "2874": {
      "op": "ADD"
    },
    "2875": {
      "op": "MSTORE"
    },
    "2876": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2878": {
      "op": "ADD"
    },
    "2879": {
      "op": "SWAP1"
    },
    "2880": {
      "op": "JUMP"
    },
    "2881": {
      "op": "JUMPDEST"
    },
    "2882": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2884": {
      "op": "DUP1"
    },
    "2885": {
      "op": "DUP3"
    },
    "2886": {
      "op": "MSTORE"
    },
    "2887": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2889": {
      "op": "SWAP1"
    },
    "2890": {
      "op": "DUP3"
    },
    "2891": {
      "op": "ADD"
    },
    "2892": {
      "op": "MSTORE"
    },
    "2893": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
    },
    "2926": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2928": {
      "op": "DUP3"
    },
    "2929": {
      "op": "ADD"
    },
    "2930": {
      "op": "MSTORE"
    },
    "2931": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "2936": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2938": {
      "op": "SHL"
    },
    "2939": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2941": {
      "jump": "o",
      "op": "DUP3"
    },
    "2942": {
      "op": "ADD"
    },
    "2943": {
      "op": "MSTORE"
    },
    "2944": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2946": {
      "op": "ADD"
    },
    "2947": {
      "op": "SWAP1"
    },
    "2948": {
      "op": "JUMP"
    },
    "2949": {
      "op": "JUMPDEST"
    },
    "2950": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2952": {
      "op": "DUP1"
    },
    "2953": {
      "op": "DUP3"
    },
    "2954": {
      "op": "MSTORE"
    },
    "2955": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "2957": {
      "op": "SWAP1"
    },
    "2958": {
      "op": "DUP3"
    },
    "2959": {
      "op": "ADD"
    },
    "2960": {
      "op": "MSTORE"
    },
    "2961": {
      "op": "PUSH32",
      "value": "0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
    },
    "2994": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2996": {
      "op": "DUP3"
    },
    "2997": {
      "op": "ADD"
    },
    "2998": {
      "op": "MSTORE"
    },
    "2999": {
      "op": "PUSH5",
      "value": "0x207A65726F"
    },
    "3005": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "3007": {
      "op": "SHL"
    },
    "3008": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3010": {
      "jump": "o",
      "op": "DUP3"
    },
    "3011": {
      "op": "ADD"
    },
    "3012": {
      "op": "MSTORE"
    },
    "3013": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3015": {
      "op": "ADD"
    },
    "3016": {
      "op": "SWAP1"
    },
    "3017": {
      "op": "JUMP"
    },
    "3018": {
      "op": "JUMPDEST"
    },
    "3019": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3021": {
      "op": "DUP1"
    },
    "3022": {
      "op": "DUP3"
    },
    "3023": {
      "op": "MSTORE"
    },
    "3024": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3026": {
      "op": "SWAP1"
    },
    "3027": {
      "op": "DUP3"
    },
    "3028": {
      "op": "ADD"
    },
    "3029": {
      "op": "MSTORE"
    },
    "3030": {
      "op": "PUSH32",
      "value": "0x45524332303A206D696E7420746F20746865207A65726F206164647265737300"
    },
    "3063": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3065": {
      "jump": "o",
      "op": "DUP3"
    },
    "3066": {
      "op": "ADD"
    },
    "3067": {
      "op": "MSTORE"
    },
    "3068": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3070": {
      "op": "ADD"
    },
    "3071": {
      "op": "SWAP1"
    },
    "3072": {
      "op": "JUMP"
    },
    "3073": {
      "op": "JUMPDEST"
    },
    "3074": {
      "jump": "o",
      "op": "SWAP1"
    },
    "3075": {
      "op": "DUP2"
    },
    "3076": {
      "op": "MSTORE"
    },
    "3077": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3079": {
      "op": "ADD"
    },
    "3080": {
      "op": "SWAP1"
    },
    "3081": {
      "op": "JUMP"
    },
    "3082": {
      "op": "JUMPDEST"
    },
    "3083": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3085": {
      "op": "SWAP2"
    },
    "3086": {
      "op": "SWAP1"
    },
    "3087": {
      "op": "SWAP2"
    },
    "3088": {
      "jump": "o",
      "op": "AND"
    },
    "3089": {
      "op": "DUP2"
    },
    "3090": {
      "op": "MSTORE"
    },
    "3091": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3093": {
      "op": "ADD"
    },
    "3094": {
      "op": "SWAP1"
    },
    "3095": {
      "op": "JUMP"
    },
    "3096": {
      "op": "JUMPDEST"
    },
    "3097": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3099": {
      "op": "DUP3"
    },
    "3100": {
      "op": "NOT"
    },
    "3101": {
      "op": "DUP3"
    },
    "3102": {
      "jump": "i",
      "op": "GT"
    },
    "3103": {
      "op": "ISZERO"
    },
    "3104": {
      "op": "PUSH2",
      "value": "0xC2B"
    },
    "3107": {
      "op": "JUMPI"
    },
    "3108": {
      "op": "PUSH2",
      "value": "0xC2B"
    },
    "3111": {
      "jump": "o",
      "op": "PUSH2",
      "value": "0xC82"
    },
    "3114": {
      "op": "JUMP"
    },
    "3115": {
      "op": "JUMPDEST"
    },
    "3116": {
      "op": "POP"
    },
    "3117": {
      "op": "ADD"
    },
    "3118": {
      "op": "SWAP1"
    },
    "3119": {
      "op": "JUMP"
    },
    "3120": {
      "op": "JUMPDEST"
    },
    "3121": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3123": {
      "op": "DUP3"
    },
    "3124": {
      "op": "DUP3"
    },
    "3125": {
      "jump": "i",
      "op": "LT"
    },
    "3126": {
      "op": "ISZERO"
    },
    "3127": {
      "op": "PUSH2",
      "value": "0xC42"
    },
    "3130": {
      "op": "JUMPI"
    },
    "3131": {
      "op": "PUSH2",
      "value": "0xC42"
    },
    "3134": {
      "jump": "o",
      "op": "PUSH2",
      "value": "0xC82"
    },
    "3137": {
      "op": "JUMP"
    },
    "3138": {
      "op": "JUMPDEST"
    },
    "3139": {
      "op": "POP"
    },
    "3140": {
      "op": "SUB"
    },
    "3141": {
      "op": "SWAP1"
    },
    "3142": {
      "op": "JUMP"
    },
    "3143": {
      "op": "JUMPDEST"
    },
    "3144": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3146": {
      "op": "DUP2"
    },
    "3147": {
      "op": "DIV"
    },
    "3148": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3150": {
      "op": "DUP3"
    },
    "3151": {
      "op": "AND"
    },
    "3152": {
      "op": "DUP1"
    },
    "3153": {
      "op": "PUSH2",
      "value": "0xC5B"
    },
    "3156": {
      "op": "JUMPI"
    },
    "3157": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "3159": {
      "op": "DUP3"
    },
    "3160": {
      "op": "AND"
    },
    "3161": {
      "op": "SWAP2"
    },
    "3162": {
      "op": "POP"
    },
    "3163": {
      "op": "JUMPDEST"
    },
    "3164": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3166": {
      "op": "DUP3"
    },
    "3167": {
      "op": "LT"
    },
    "3168": {
      "op": "DUP2"
    },
    "3169": {
      "op": "EQ"
    },
    "3170": {
      "op": "ISZERO"
    },
    "3171": {
      "op": "PUSH2",
      "value": "0xC7C"
    },
    "3174": {
      "op": "JUMPI"
    },
    "3175": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3180": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3182": {
      "op": "SHL"
    },
    "3183": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3185": {
      "op": "MSTORE"
    },
    "3186": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "3188": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3190": {
      "op": "MSTORE"
    },
    "3191": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3193": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3195": {
      "jump": "o",
      "op": "REVERT"
    },
    "3196": {
      "op": "JUMPDEST"
    },
    "3197": {
      "op": "POP"
    },
    "3198": {
      "op": "SWAP2"
    },
    "3199": {
      "op": "SWAP1"
    },
    "3200": {
      "op": "POP"
    },
    "3201": {
      "op": "JUMP"
    },
    "3202": {
      "op": "JUMPDEST"
    },
    "3203": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3208": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3210": {
      "op": "SHL"
    },
    "3211": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3213": {
      "op": "MSTORE"
    },
    "3214": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "3216": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3218": {
      "op": "MSTORE"
    },
    "3219": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3221": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3223": {
      "op": "REVERT"
    }
  },
  "sha1": "0f3d638418f8a3af66cc8fae0874533772fae681",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {ERC20} from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n\ninterface IERC20 {\n    function transfer(address recipient, uint256 amount) external returns (bool);\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n    function approve(address spender, uint256 amount) external returns (bool);\n}\n\ncontract BTCUP is ERC20 {\n    constructor() ERC20(\"Bitcoin Up\", \"BTCUP\") {\n    }\n\n    function mint(uint256 quantity) public {\n        _mint(tx.origin, quantity);\n    }\n\n    function burn(uint256 quantity) public {\n        _burn(tx.origin, quantity);\n    }\n\n    function decimals() public view override returns (uint8) {\n        return 6;\n    }\n}\n\ncontract BTCDOWN is ERC20 {\n    constructor() ERC20(\"Bitcoin Down\", \"BTCDOWN\") {\n    }\n\n    function mint(uint256 quantity) public {\n        _mint(tx.origin, quantity);\n    }\n\n    function burn(uint256 quantity) public {\n        _burn(tx.origin, quantity);\n    }\n\n    function decimals() public view override returns (uint8) {\n        return 6;\n    }\n}\n\ncontract LeveragedTrading is Ownable {\n    using SafeMath for uint256;\n\n    uint256 public priceBtcUp = 10 ** 6;\n    uint256 public priceBtcDown = 10 ** 6;        // 6 decimals\n\n    uint256 public collateralBtcUp = 0;          //6 decimals\n    uint256 public collateralBtcDown = 0;\n\n    uint256 public amountBtcUp = 0;           // 6 decimals\n    uint256 public amountBtcDown = 0;         // 6 decimals\n\n    uint256 public lastBtcPrice = 0;       // 8 decimals, chainlink conventions\n\n    bool public poolIsInitiated = false;\n\n    address addressUsdc = 0xb7a4F3E9097C08dA09517b5aB877F7a917224ede;  // <- Kovan  //0xeb8f08a975Ab53E34D8a0330E0D34de942C95926;\n    address addressBtcUSDFeed =  0x6135b13325bfC4B00278B4abC5e20bbce2D6580e; // <- Kovan          // 0xECe365B379E1dD183B20fc5f022230C044d51404;\n\n    BTCUP btcUp = new BTCUP();\n    BTCDOWN btcDown = new BTCDOWN();\n\n\n    function initiatePool(uint256 amountUsdc) public onlyOwner {\n        require(!poolIsInitiated, \"The pool was already initiated.\");\n\n        issueBtcUp(amountUsdc.div(2));\n        issueBtcDown(amountUsdc.div(2));\n\n        poolIsInitiated = true;\n    }\n\n    function issueBtcUp(uint256 amountUsdc) public {\n        rebalanceLeveragedTokens();\n        \n        priceBtcUp = getBtcUpPrice();\n        uint256 amountLeveragedTokens = amountUsdc.mul(10 ** 6).div(priceBtcUp);\n\n        btcUp.mint(amountLeveragedTokens);\n        amountBtcUp = amountBtcUp.add(amountLeveragedTokens);\n        collateralBtcUp = collateralBtcUp.add(amountUsdc);\n\n        IERC20 usdc = IERC20(addressUsdc);\n        require(usdc.transferFrom(msg.sender, address(this), amountUsdc), \"You don't have enough USDC.\");\n    }\n\n    function issueBtcDown(uint256 amountUsdc) public {\n        rebalanceLeveragedTokens();\n        \n        priceBtcDown = getBtcDownPrice();\n        uint256 amountLeveragedTokens = amountUsdc.mul(10 ** 6).div(priceBtcDown);\n\n        btcDown.mint(amountLeveragedTokens);\n        amountBtcDown = amountBtcDown.add(amountLeveragedTokens);\n        collateralBtcDown = collateralBtcDown.add(amountUsdc);\n\n        IERC20 usdc = IERC20(addressUsdc);\n        require(usdc.transferFrom(msg.sender, address(this), amountUsdc), \"You don't have enough USDC.\");\n    }\n\n    function redeemBtcUp(uint256 amountLeveragedTokens) public {\n        rebalanceLeveragedTokens();\n        btcUp.burn(amountLeveragedTokens);\n\n        priceBtcUp = getBtcUpPrice();\n        uint256 amountUsdc = amountLeveragedTokens.mul(priceBtcUp).div(10 ** 6);\n\n        amountBtcUp = amountBtcUp.sub(amountLeveragedTokens);\n        collateralBtcUp = collateralBtcUp.sub(amountUsdc);\n\n        IERC20 usdc = IERC20(addressUsdc);\n        require(usdc.transfer(msg.sender, amountUsdc), \"Not enough usdc available\");\n    }\n\n    function redeemBtcDown(uint256 amountLeveragedTokens) public {\n        rebalanceLeveragedTokens();\n        btcDown.burn(amountLeveragedTokens);\n\n        priceBtcDown = getBtcDownPrice();\n        uint256 amountUsdc = amountLeveragedTokens.mul(priceBtcDown).div(10 ** 6);\n        \n        amountBtcDown = amountBtcDown.sub(amountLeveragedTokens);\n        collateralBtcDown = collateralBtcDown.sub(amountUsdc);\n\n        IERC20 usdc = IERC20(addressUsdc);\n        require(usdc.transfer(msg.sender,  amountUsdc), \"Not enough usdc available\");\n\n    }\n\n    function rebalanceLeveragedTokens() public {\n        uint256 btcPrice = getBtcPrice();\n        if ((collateralBtcUp > 0) && (collateralBtcDown > 0)) {\n            uint256 rebalanceAmount = getRebalanceAmount(btcPrice);\n            if (getSign(btcPrice) > 0) {\n                collateralBtcUp = collateralBtcUp.add(rebalanceAmount);\n                collateralBtcDown = collateralBtcDown.sub(rebalanceAmount);\n            }\n\n            else {\n                collateralBtcUp = collateralBtcUp.sub(rebalanceAmount);\n                collateralBtcDown = collateralBtcDown.add(rebalanceAmount);\n            }\n\n        }\n\n        lastBtcPrice = btcPrice;\n    }\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    function getSign(uint256 btcPrice) internal view returns (int256){\n        if (btcPrice > lastBtcPrice) {\n            return 1;\n        }\n        else {\n            return -1;\n        }\n    }\n \n    function getRebalanceAmount(uint256 priceBtc) internal view returns (uint256){\n        uint256 priceDiff = getPriceDiff(priceBtc);\n\n        return min(collateralBtcUp, collateralBtcDown).mul(L(priceDiff)).div(10 ** 6);\n    }\n\n// getBtcUpPrice() 6 decimals\n    function getBtcUpPrice() public view returns (uint256) {\n        return amountBtcUp == 0 ?  priceBtcUp : collateralBtcUp.mul(10 ** 6).div(amountBtcUp);\n    }\n\n// getBtcDownPrice() 6 decimals\n    function getBtcDownPrice() public view returns (uint256) {//6 decimals\n        return amountBtcDown == 0 ?  priceBtcDown : collateralBtcDown.mul(10 ** 6).div(amountBtcDown);\n    }\n\n// get the price of our asset with 8 decimals\n    function getBtcPrice() public view returns (uint256) {\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(addressBtcUSDFeed);\n        (,int256 answer,,,) = priceFeed.latestRoundData();\n\n         return uint256(answer);             // we call chainlink oracle to get the price of the asset\n         \n    }\n    \n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a <= b ? a : b;\n    }\n\n    function L(uint256 x) internal pure returns (uint256) {            //6  decimals\n\n        uint256 denom = 9 * (x ** 2 / 10 ** 6)  + 3 * x + 10 ** 6;\n        uint256 num = 10 ** 12;\n\n        return 10 ** 6 - num / denom;\n    }\n\n    function getPriceDiff(uint256 btcPrice) internal view returns (uint256) {     //6 decimals\n        if (btcPrice > lastBtcPrice) {\n            return btcPrice.mul(10 ** 6).div(lastBtcPrice).sub(10 ** 6);\n        }\n\n        else {\n            return lastBtcPrice.mul(10 ** 6).div(btcPrice).sub(10 ** 6);\n        }\n\n    }\n\n    function getBtcupBalance() public view returns(uint256) {\n        return btcUp.balanceOf(msg.sender);\n    }\n\n    function getBtcdownBalance() public view returns(uint256) {\n        return btcDown.balanceOf(msg.sender);\n    }\n\n}\n\n",
  "sourceMap": "601:346:7:-:0;;;631:50;;;;;;;;;-1:-1:-1;1896:113:1;;;;;;;;;;;-1:-1:-1;;;1896:113:1;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1896:113:1;;;;1962:13;;1896:113;;;1962:13;;:5;;:13;:::i;:::-;-1:-1:-1;1985:17:1;;;;:7;;:17;;;;;:::i;:::-;;1896:113;;601:346:7;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;601:346:7;;;-1:-1:-1;601:346:7;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:380:8;99:1;89:12;;146:1;136:12;;;157:2;;211:4;203:6;199:17;189:27;;157:2;264;256:6;253:14;233:18;230:38;227:2;;;310:10;305:3;301:20;298:1;291:31;345:4;342:1;335:15;373:4;370:1;363:15;227:2;;69:325;;;:::o;:::-;601:346:7;;;;;;",
  "sourcePath": "contracts/LeveragedTrading.sol",
  "type": "contract"
}
},{}],3:[function(require,module,exports){
module.exports={
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "7": "contracts/LeveragedTrading.sol"
  },
  "ast": {
    "absolutePath": "contracts/LeveragedTrading.sol",
    "exportedSymbols": {
      "AggregatorV3Interface": [
        1786
      ],
      "BTCDOWN": [
        124
      ],
      "BTCUP": [
        80
      ],
      "Context": [
        1807
      ],
      "ERC20": [
        1428
      ],
      "IERC20": [
        36
      ],
      "LeveragedTrading": [
        778
      ],
      "Ownable": [
        882
      ],
      "SafeMath": [
        1740
      ]
    },
    "id": 779,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:7"
      },
      {
        "absolutePath": "/home/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 779,
        "sourceUnit": 1429,
        "src": "57:68:7",
        "symbolAliases": [
          {
            "foreign": {
              "id": 2,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "65:5:7",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/alex/.brownie/packages/smartcontractkit/chainlink@1.3.0/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 779,
        "sourceUnit": 1787,
        "src": "126:76:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 779,
        "sourceUnit": 1741,
        "src": "203:57:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 6,
        "nodeType": "ImportDirective",
        "scope": 779,
        "sourceUnit": 883,
        "src": "261:52:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 36,
        "linearizedBaseContracts": [
          36
        ],
        "name": "IERC20",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "a9059cbb",
            "id": 15,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 15,
                  "src": "357:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "357:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 15,
                  "src": "376:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "376:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "356:35:7"
            },
            "returnParameters": {
              "id": 14,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 15,
                  "src": "410:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 12,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "410:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "409:6:7"
            },
            "scope": 36,
            "src": "339:77:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "23b872dd",
            "id": 26,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 22,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 26,
                  "src": "443:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "443:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 26,
                  "src": "459:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "459:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 26,
                  "src": "478:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "478:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "442:51:7"
            },
            "returnParameters": {
              "id": 25,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 26,
                  "src": "512:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 23,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "512:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "511:6:7"
            },
            "scope": 36,
            "src": "421:97:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "095ea7b3",
            "id": 35,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 35,
                  "src": "540:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "540:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 35,
                  "src": "557:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "557:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "539:33:7"
            },
            "returnParameters": {
              "id": 34,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 35,
                  "src": "591:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "591:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "590:6:7"
            },
            "scope": 36,
            "src": "523:74:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 779,
        "src": "316:283:7"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 37,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1428,
              "src": "619:5:7"
            },
            "id": 38,
            "nodeType": "InheritanceSpecifier",
            "src": "619:5:7"
          }
        ],
        "contractDependencies": [
          1428,
          1807,
          1885,
          1910
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 80,
        "linearizedBaseContracts": [
          80,
          1428,
          1910,
          1885,
          1807
        ],
        "name": "BTCUP",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 45,
              "nodeType": "Block",
              "src": "674:7:7",
              "statements": []
            },
            "id": 46,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "426974636f696e205570",
                    "id": 41,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "651:12:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_9cbc1d0721872492c3eae100dd6a7dad3b4b199dc4e72a46010b2b1c98a11964",
                      "typeString": "literal_string \"Bitcoin Up\""
                    },
                    "value": "Bitcoin Up"
                  },
                  {
                    "hexValue": "4254435550",
                    "id": 42,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "665:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_f92903022a172a42cae03bdc1621474c2ab6bc2b8980d8251e05283c61f8c975",
                      "typeString": "literal_string \"BTCUP\""
                    },
                    "value": "BTCUP"
                  }
                ],
                "id": 43,
                "modifierName": {
                  "id": 40,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1428,
                  "src": "645:5:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "645:28:7"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "642:2:7"
            },
            "returnParameters": {
              "id": 44,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "674:0:7"
            },
            "scope": 80,
            "src": "631:50:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 57,
              "nodeType": "Block",
              "src": "726:43:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 52,
                          "name": "tx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -26,
                          "src": "742:2:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_transaction",
                            "typeString": "tx"
                          }
                        },
                        "id": 53,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "origin",
                        "nodeType": "MemberAccess",
                        "src": "742:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 54,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "753:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 51,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1288,
                      "src": "736:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 55,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "736:26:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 56,
                  "nodeType": "ExpressionStatement",
                  "src": "736:26:7"
                }
              ]
            },
            "functionSelector": "a0712d68",
            "id": 58,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 49,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nodeType": "VariableDeclaration",
                  "scope": 58,
                  "src": "701:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "701:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "700:18:7"
            },
            "returnParameters": {
              "id": 50,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "726:0:7"
            },
            "scope": 80,
            "src": "687:82:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 69,
              "nodeType": "Block",
              "src": "814:43:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 64,
                          "name": "tx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -26,
                          "src": "830:2:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_transaction",
                            "typeString": "tx"
                          }
                        },
                        "id": 65,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "origin",
                        "nodeType": "MemberAccess",
                        "src": "830:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 66,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60,
                        "src": "841:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 63,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1360,
                      "src": "824:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "824:26:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68,
                  "nodeType": "ExpressionStatement",
                  "src": "824:26:7"
                }
              ]
            },
            "functionSelector": "42966c68",
            "id": 70,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 61,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "789:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "789:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "788:18:7"
            },
            "returnParameters": {
              "id": 62,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "814:0:7"
            },
            "scope": 80,
            "src": "775:82:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              957
            ],
            "body": {
              "id": 78,
              "nodeType": "Block",
              "src": "920:25:7",
              "statements": [
                {
                  "expression": {
                    "hexValue": "36",
                    "id": 76,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "937:1:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_6_by_1",
                      "typeString": "int_const 6"
                    },
                    "value": "6"
                  },
                  "functionReturnParameters": 75,
                  "id": 77,
                  "nodeType": "Return",
                  "src": "930:8:7"
                }
              ]
            },
            "functionSelector": "313ce567",
            "id": 79,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 72,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "895:8:7"
            },
            "parameters": {
              "id": 71,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "880:2:7"
            },
            "returnParameters": {
              "id": 75,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 79,
                  "src": "913:5:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 73,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "913:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "912:7:7"
            },
            "scope": 80,
            "src": "863:82:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 779,
        "src": "601:346:7"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 81,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1428,
              "src": "969:5:7"
            },
            "id": 82,
            "nodeType": "InheritanceSpecifier",
            "src": "969:5:7"
          }
        ],
        "contractDependencies": [
          1428,
          1807,
          1885,
          1910
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 124,
        "linearizedBaseContracts": [
          124,
          1428,
          1910,
          1885,
          1807
        ],
        "name": "BTCDOWN",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 89,
              "nodeType": "Block",
              "src": "1028:7:7",
              "statements": []
            },
            "id": 90,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "426974636f696e20446f776e",
                    "id": 85,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1001:14:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_165fe89d7acd7320260d3007f731660e2a452d2e9dbef2c2e44ee15c6b8bc1ec",
                      "typeString": "literal_string \"Bitcoin Down\""
                    },
                    "value": "Bitcoin Down"
                  },
                  {
                    "hexValue": "425443444f574e",
                    "id": 86,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1017:9:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_72f3d7098f717fcc170dbb6c7dad0b9049f1ed825e03177180edf7a0240d28f2",
                      "typeString": "literal_string \"BTCDOWN\""
                    },
                    "value": "BTCDOWN"
                  }
                ],
                "id": 87,
                "modifierName": {
                  "id": 84,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1428,
                  "src": "995:5:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "995:32:7"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 83,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "992:2:7"
            },
            "returnParameters": {
              "id": 88,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1028:0:7"
            },
            "scope": 124,
            "src": "981:54:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 101,
              "nodeType": "Block",
              "src": "1080:43:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 96,
                          "name": "tx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -26,
                          "src": "1096:2:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_transaction",
                            "typeString": "tx"
                          }
                        },
                        "id": 97,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "origin",
                        "nodeType": "MemberAccess",
                        "src": "1096:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 98,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92,
                        "src": "1107:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 95,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1288,
                      "src": "1090:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 99,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1090:26:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100,
                  "nodeType": "ExpressionStatement",
                  "src": "1090:26:7"
                }
              ]
            },
            "functionSelector": "a0712d68",
            "id": 102,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 93,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 92,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nodeType": "VariableDeclaration",
                  "scope": 102,
                  "src": "1055:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 91,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1055:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1054:18:7"
            },
            "returnParameters": {
              "id": 94,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1080:0:7"
            },
            "scope": 124,
            "src": "1041:82:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 113,
              "nodeType": "Block",
              "src": "1168:43:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 108,
                          "name": "tx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -26,
                          "src": "1184:2:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_transaction",
                            "typeString": "tx"
                          }
                        },
                        "id": 109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "origin",
                        "nodeType": "MemberAccess",
                        "src": "1184:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 110,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 104,
                        "src": "1195:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 107,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1360,
                      "src": "1178:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1178:26:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 112,
                  "nodeType": "ExpressionStatement",
                  "src": "1178:26:7"
                }
              ]
            },
            "functionSelector": "42966c68",
            "id": 114,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 105,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 104,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nodeType": "VariableDeclaration",
                  "scope": 114,
                  "src": "1143:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 103,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1143:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1142:18:7"
            },
            "returnParameters": {
              "id": 106,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1168:0:7"
            },
            "scope": 124,
            "src": "1129:82:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              957
            ],
            "body": {
              "id": 122,
              "nodeType": "Block",
              "src": "1274:25:7",
              "statements": [
                {
                  "expression": {
                    "hexValue": "36",
                    "id": 120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1291:1:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_6_by_1",
                      "typeString": "int_const 6"
                    },
                    "value": "6"
                  },
                  "functionReturnParameters": 119,
                  "id": 121,
                  "nodeType": "Return",
                  "src": "1284:8:7"
                }
              ]
            },
            "functionSelector": "313ce567",
            "id": 123,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 116,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1249:8:7"
            },
            "parameters": {
              "id": 115,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1234:2:7"
            },
            "returnParameters": {
              "id": 119,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 118,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 123,
                  "src": "1267:5:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 117,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1267:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1266:7:7"
            },
            "scope": 124,
            "src": "1217:82:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 779,
        "src": "949:352:7"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 125,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 882,
              "src": "1332:7:7"
            },
            "id": 126,
            "nodeType": "InheritanceSpecifier",
            "src": "1332:7:7"
          }
        ],
        "contractDependencies": [
          80,
          124,
          882,
          1807
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 778,
        "linearizedBaseContracts": [
          778,
          882,
          1807
        ],
        "name": "LeveragedTrading",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 129,
            "libraryName": {
              "id": 127,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1740,
              "src": "1352:8:7"
            },
            "nodeType": "UsingForDirective",
            "src": "1346:27:7",
            "typeName": {
              "id": 128,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1365:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "f0156e8a",
            "id": 134,
            "mutability": "mutable",
            "name": "priceBtcUp",
            "nodeType": "VariableDeclaration",
            "scope": 778,
            "src": "1379:35:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 130,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1379:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_1000000_by_1",
                "typeString": "int_const 1000000"
              },
              "id": 133,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "3130",
                "id": 131,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1407:2:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10_by_1",
                  "typeString": "int_const 10"
                },
                "value": "10"
              },
              "nodeType": "BinaryOperation",
              "operator": "**",
              "rightExpression": {
                "hexValue": "36",
                "id": 132,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1413:1:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_6_by_1",
                  "typeString": "int_const 6"
                },
                "value": "6"
              },
              "src": "1407:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000_by_1",
                "typeString": "int_const 1000000"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0c3e5343",
            "id": 139,
            "mutability": "mutable",
            "name": "priceBtcDown",
            "nodeType": "VariableDeclaration",
            "scope": 778,
            "src": "1420:37:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 135,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1420:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_1000000_by_1",
                "typeString": "int_const 1000000"
              },
              "id": 138,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "3130",
                "id": 136,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1450:2:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10_by_1",
                  "typeString": "int_const 10"
                },
                "value": "10"
              },
              "nodeType": "BinaryOperation",
              "operator": "**",
              "rightExpression": {
                "hexValue": "36",
                "id": 137,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1456:1:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_6_by_1",
                  "typeString": "int_const 6"
                },
                "value": "6"
              },
              "src": "1450:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000_by_1",
                "typeString": "int_const 1000000"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "dde7be2c",
            "id": 142,
            "mutability": "mutable",
            "name": "collateralBtcUp",
            "nodeType": "VariableDeclaration",
            "scope": 778,
            "src": "1485:34:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 140,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1485:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 141,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1518:1:7",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "14d7c6d2",
            "id": 145,
            "mutability": "mutable",
            "name": "collateralBtcDown",
            "nodeType": "VariableDeclaration",
            "scope": 778,
            "src": "1547:36:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 143,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1547:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 144,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1582:1:7",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0034b9cc",
            "id": 148,
            "mutability": "mutable",
            "name": "amountBtcUp",
            "nodeType": "VariableDeclaration",
            "scope": 778,
            "src": "1590:30:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 146,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1590:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 147,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1619:1:7",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b75cbe0b",
            "id": 151,
            "mutability": "mutable",
            "name": "amountBtcDown",
            "nodeType": "VariableDeclaration",
            "scope": 778,
            "src": "1650:32:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 149,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1650:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 150,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1681:1:7",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f4352c57",
            "id": 154,
            "mutability": "mutable",
            "name": "lastBtcPrice",
            "nodeType": "VariableDeclaration",
            "scope": 778,
            "src": "1711:31:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 152,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1711:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 153,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1741:1:7",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3074fff7",
            "id": 157,
            "mutability": "mutable",
            "name": "poolIsInitiated",
            "nodeType": "VariableDeclaration",
            "scope": 778,
            "src": "1792:35:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 155,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1792:4:7",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 156,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1822:5:7",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 160,
            "mutability": "mutable",
            "name": "addressUsdc",
            "nodeType": "VariableDeclaration",
            "scope": 778,
            "src": "1834:64:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 158,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1834:7:7",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307862376134463345393039374330386441303935313762356142383737463761393137323234656465",
              "id": 159,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1856:42:7",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xb7a4F3E9097C08dA09517b5aB877F7a917224ede"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 163,
            "mutability": "mutable",
            "name": "addressBtcUSDFeed",
            "nodeType": "VariableDeclaration",
            "scope": 778,
            "src": "1964:71:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 161,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1964:7:7",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307836313335623133333235626643344230303237384234616243356532306262636532443635383065",
              "id": 162,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1993:42:7",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x6135b13325bfC4B00278B4abC5e20bbce2D6580e"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 170,
            "mutability": "mutable",
            "name": "btcUp",
            "nodeType": "VariableDeclaration",
            "scope": 778,
            "src": "2110:25:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_BTCUP_$80",
              "typeString": "contract BTCUP"
            },
            "typeName": {
              "id": 165,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 164,
                "name": "BTCUP",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 80,
                "src": "2110:5:7"
              },
              "referencedDeclaration": 80,
              "src": "2110:5:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BTCUP_$80",
                "typeString": "contract BTCUP"
              }
            },
            "value": {
              "arguments": [],
              "expression": {
                "argumentTypes": [],
                "id": 168,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "nodeType": "NewExpression",
                "src": "2124:9:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_BTCUP_$80_$",
                  "typeString": "function () returns (contract BTCUP)"
                },
                "typeName": {
                  "id": 167,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 166,
                    "name": "BTCUP",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 80,
                    "src": "2128:5:7"
                  },
                  "referencedDeclaration": 80,
                  "src": "2128:5:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_BTCUP_$80",
                    "typeString": "contract BTCUP"
                  }
                }
              },
              "id": 169,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2124:11:7",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BTCUP_$80",
                "typeString": "contract BTCUP"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 177,
            "mutability": "mutable",
            "name": "btcDown",
            "nodeType": "VariableDeclaration",
            "scope": 778,
            "src": "2141:31:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_BTCDOWN_$124",
              "typeString": "contract BTCDOWN"
            },
            "typeName": {
              "id": 172,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 171,
                "name": "BTCDOWN",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 124,
                "src": "2141:7:7"
              },
              "referencedDeclaration": 124,
              "src": "2141:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BTCDOWN_$124",
                "typeString": "contract BTCDOWN"
              }
            },
            "value": {
              "arguments": [],
              "expression": {
                "argumentTypes": [],
                "id": 175,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "nodeType": "NewExpression",
                "src": "2159:11:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_BTCDOWN_$124_$",
                  "typeString": "function () returns (contract BTCDOWN)"
                },
                "typeName": {
                  "id": 174,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 173,
                    "name": "BTCDOWN",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 124,
                    "src": "2163:7:7"
                  },
                  "referencedDeclaration": 124,
                  "src": "2163:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_BTCDOWN_$124",
                    "typeString": "contract BTCDOWN"
                  }
                }
              },
              "id": 176,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2159:13:7",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BTCDOWN_$124",
                "typeString": "contract BTCDOWN"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 208,
              "nodeType": "Block",
              "src": "2239:191:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2257:16:7",
                        "subExpression": {
                          "id": 185,
                          "name": "poolIsInitiated",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 157,
                          "src": "2258:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520706f6f6c2077617320616c726561647920696e697469617465642e",
                        "id": 187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2275:33:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_580e872a0bf3ae438081ad6284342a647742aae71fdfc53b8a10245734a22e81",
                          "typeString": "literal_string \"The pool was already initiated.\""
                        },
                        "value": "The pool was already initiated."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_580e872a0bf3ae438081ad6284342a647742aae71fdfc53b8a10245734a22e81",
                          "typeString": "literal_string \"The pool was already initiated.\""
                        }
                      ],
                      "id": 184,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2249:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2249:60:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 189,
                  "nodeType": "ExpressionStatement",
                  "src": "2249:60:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "32",
                            "id": 193,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2346:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            }
                          ],
                          "expression": {
                            "id": 191,
                            "name": "amountUsdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 179,
                            "src": "2331:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 192,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1649,
                          "src": "2331:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2331:17:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 190,
                      "name": "issueBtcUp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 276,
                      "src": "2320:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2320:29:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 196,
                  "nodeType": "ExpressionStatement",
                  "src": "2320:29:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "32",
                            "id": 200,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2387:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            }
                          ],
                          "expression": {
                            "id": 198,
                            "name": "amountUsdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 179,
                            "src": "2372:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 199,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1649,
                          "src": "2372:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2372:17:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 197,
                      "name": "issueBtcDown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 343,
                      "src": "2359:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2359:31:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 203,
                  "nodeType": "ExpressionStatement",
                  "src": "2359:31:7"
                },
                {
                  "expression": {
                    "id": 206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 204,
                      "name": "poolIsInitiated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 157,
                      "src": "2401:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 205,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2419:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2401:22:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 207,
                  "nodeType": "ExpressionStatement",
                  "src": "2401:22:7"
                }
              ]
            },
            "functionSelector": "9b3075a1",
            "id": 209,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 182,
                "modifierName": {
                  "id": 181,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 825,
                  "src": "2229:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "2229:9:7"
              }
            ],
            "name": "initiatePool",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 179,
                  "mutability": "mutable",
                  "name": "amountUsdc",
                  "nodeType": "VariableDeclaration",
                  "scope": 209,
                  "src": "2202:18:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 178,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2202:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2201:20:7"
            },
            "returnParameters": {
              "id": 183,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2239:0:7"
            },
            "scope": 778,
            "src": "2180:250:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 275,
              "nodeType": "Block",
              "src": "2483:486:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 214,
                      "name": "rebalanceLeveragedTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 535,
                      "src": "2493:24:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2493:26:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 216,
                  "nodeType": "ExpressionStatement",
                  "src": "2493:26:7"
                },
                {
                  "expression": {
                    "id": 220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 217,
                      "name": "priceBtcUp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 134,
                      "src": "2538:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 218,
                        "name": "getBtcUpPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 604,
                        "src": "2551:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 219,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2551:15:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2538:28:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 221,
                  "nodeType": "ExpressionStatement",
                  "src": "2538:28:7"
                },
                {
                  "assignments": [
                    223
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 223,
                      "mutability": "mutable",
                      "name": "amountLeveragedTokens",
                      "nodeType": "VariableDeclaration",
                      "scope": 275,
                      "src": "2576:29:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 222,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2576:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 233,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 231,
                        "name": "priceBtcUp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 134,
                        "src": "2636:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_1000000_by_1",
                              "typeString": "int_const 1000000"
                            },
                            "id": 228,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 226,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2623:2:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "hexValue": "36",
                              "id": 227,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2629:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_6_by_1",
                                "typeString": "int_const 6"
                              },
                              "value": "6"
                            },
                            "src": "2623:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000_by_1",
                              "typeString": "int_const 1000000"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1000000_by_1",
                              "typeString": "int_const 1000000"
                            }
                          ],
                          "expression": {
                            "id": 224,
                            "name": "amountUsdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 211,
                            "src": "2608:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 225,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1634,
                          "src": "2608:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2608:23:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 230,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1649,
                      "src": "2608:27:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2608:39:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2576:71:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 237,
                        "name": "amountLeveragedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 223,
                        "src": "2669:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 234,
                        "name": "btcUp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 170,
                        "src": "2658:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BTCUP_$80",
                          "typeString": "contract BTCUP"
                        }
                      },
                      "id": 236,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 58,
                      "src": "2658:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2658:33:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 239,
                  "nodeType": "ExpressionStatement",
                  "src": "2658:33:7"
                },
                {
                  "expression": {
                    "id": 245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 240,
                      "name": "amountBtcUp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 148,
                      "src": "2701:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 243,
                          "name": "amountLeveragedTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 223,
                          "src": "2731:21:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 241,
                          "name": "amountBtcUp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 148,
                          "src": "2715:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1604,
                        "src": "2715:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 244,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2715:38:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2701:52:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 246,
                  "nodeType": "ExpressionStatement",
                  "src": "2701:52:7"
                },
                {
                  "expression": {
                    "id": 252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 247,
                      "name": "collateralBtcUp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 142,
                      "src": "2763:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 250,
                          "name": "amountUsdc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 211,
                          "src": "2801:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 248,
                          "name": "collateralBtcUp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 142,
                          "src": "2781:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1604,
                        "src": "2781:19:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 251,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2781:31:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2763:49:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 253,
                  "nodeType": "ExpressionStatement",
                  "src": "2763:49:7"
                },
                {
                  "assignments": [
                    256
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 256,
                      "mutability": "mutable",
                      "name": "usdc",
                      "nodeType": "VariableDeclaration",
                      "scope": 275,
                      "src": "2823:11:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$36",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 255,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 254,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 36,
                          "src": "2823:6:7"
                        },
                        "referencedDeclaration": 36,
                        "src": "2823:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$36",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 260,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 258,
                        "name": "addressUsdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 160,
                        "src": "2844:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 257,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "2837:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$36_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2837:19:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$36",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2823:33:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 264,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2892:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 265,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2892:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 268,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "2912:4:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LeveragedTrading_$778",
                                  "typeString": "contract LeveragedTrading"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LeveragedTrading_$778",
                                  "typeString": "contract LeveragedTrading"
                                }
                              ],
                              "id": 267,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2904:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 266,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2904:7:7",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 269,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2904:13:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 270,
                            "name": "amountUsdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 211,
                            "src": "2919:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 262,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 256,
                            "src": "2874:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$36",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 263,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 26,
                          "src": "2874:17:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2874:56:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520646f6e2774206861766520656e6f75676820555344432e",
                        "id": 272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2932:29:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fa81e2605579e88471722381a01380eff7db3c869a8b4d6c5142c052f717215d",
                          "typeString": "literal_string \"You don't have enough USDC.\""
                        },
                        "value": "You don't have enough USDC."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fa81e2605579e88471722381a01380eff7db3c869a8b4d6c5142c052f717215d",
                          "typeString": "literal_string \"You don't have enough USDC.\""
                        }
                      ],
                      "id": 261,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2866:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2866:96:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 274,
                  "nodeType": "ExpressionStatement",
                  "src": "2866:96:7"
                }
              ]
            },
            "functionSelector": "f530c04a",
            "id": 276,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "issueBtcUp",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 212,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 211,
                  "mutability": "mutable",
                  "name": "amountUsdc",
                  "nodeType": "VariableDeclaration",
                  "scope": 276,
                  "src": "2456:18:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 210,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2456:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2455:20:7"
            },
            "returnParameters": {
              "id": 213,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2483:0:7"
            },
            "scope": 778,
            "src": "2436:533:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 342,
              "nodeType": "Block",
              "src": "3024:502:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 281,
                      "name": "rebalanceLeveragedTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 535,
                      "src": "3034:24:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3034:26:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 283,
                  "nodeType": "ExpressionStatement",
                  "src": "3034:26:7"
                },
                {
                  "expression": {
                    "id": 287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 284,
                      "name": "priceBtcDown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 139,
                      "src": "3079:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 285,
                        "name": "getBtcDownPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 625,
                        "src": "3094:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 286,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3094:17:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3079:32:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 288,
                  "nodeType": "ExpressionStatement",
                  "src": "3079:32:7"
                },
                {
                  "assignments": [
                    290
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 290,
                      "mutability": "mutable",
                      "name": "amountLeveragedTokens",
                      "nodeType": "VariableDeclaration",
                      "scope": 342,
                      "src": "3121:29:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 289,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3121:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 300,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 298,
                        "name": "priceBtcDown",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 139,
                        "src": "3181:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_1000000_by_1",
                              "typeString": "int_const 1000000"
                            },
                            "id": 295,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 293,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3168:2:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "hexValue": "36",
                              "id": 294,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3174:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_6_by_1",
                                "typeString": "int_const 6"
                              },
                              "value": "6"
                            },
                            "src": "3168:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000_by_1",
                              "typeString": "int_const 1000000"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1000000_by_1",
                              "typeString": "int_const 1000000"
                            }
                          ],
                          "expression": {
                            "id": 291,
                            "name": "amountUsdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 278,
                            "src": "3153:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 292,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1634,
                          "src": "3153:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3153:23:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 297,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1649,
                      "src": "3153:27:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3153:41:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3121:73:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 304,
                        "name": "amountLeveragedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 290,
                        "src": "3218:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 301,
                        "name": "btcDown",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 177,
                        "src": "3205:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BTCDOWN_$124",
                          "typeString": "contract BTCDOWN"
                        }
                      },
                      "id": 303,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 102,
                      "src": "3205:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3205:35:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 306,
                  "nodeType": "ExpressionStatement",
                  "src": "3205:35:7"
                },
                {
                  "expression": {
                    "id": 312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 307,
                      "name": "amountBtcDown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 151,
                      "src": "3250:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 310,
                          "name": "amountLeveragedTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 290,
                          "src": "3284:21:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 308,
                          "name": "amountBtcDown",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 151,
                          "src": "3266:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 309,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1604,
                        "src": "3266:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 311,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3266:40:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3250:56:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 313,
                  "nodeType": "ExpressionStatement",
                  "src": "3250:56:7"
                },
                {
                  "expression": {
                    "id": 319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 314,
                      "name": "collateralBtcDown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 145,
                      "src": "3316:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 317,
                          "name": "amountUsdc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 278,
                          "src": "3358:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 315,
                          "name": "collateralBtcDown",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 145,
                          "src": "3336:17:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1604,
                        "src": "3336:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 318,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3336:33:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3316:53:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 320,
                  "nodeType": "ExpressionStatement",
                  "src": "3316:53:7"
                },
                {
                  "assignments": [
                    323
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 323,
                      "mutability": "mutable",
                      "name": "usdc",
                      "nodeType": "VariableDeclaration",
                      "scope": 342,
                      "src": "3380:11:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$36",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 322,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 321,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 36,
                          "src": "3380:6:7"
                        },
                        "referencedDeclaration": 36,
                        "src": "3380:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$36",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 327,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 325,
                        "name": "addressUsdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 160,
                        "src": "3401:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 324,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "3394:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$36_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3394:19:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$36",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3380:33:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 331,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3449:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 332,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3449:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 335,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "3469:4:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LeveragedTrading_$778",
                                  "typeString": "contract LeveragedTrading"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LeveragedTrading_$778",
                                  "typeString": "contract LeveragedTrading"
                                }
                              ],
                              "id": 334,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3461:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 333,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3461:7:7",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 336,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3461:13:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 337,
                            "name": "amountUsdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 278,
                            "src": "3476:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 329,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 323,
                            "src": "3431:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$36",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 26,
                          "src": "3431:17:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3431:56:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520646f6e2774206861766520656e6f75676820555344432e",
                        "id": 339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3489:29:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fa81e2605579e88471722381a01380eff7db3c869a8b4d6c5142c052f717215d",
                          "typeString": "literal_string \"You don't have enough USDC.\""
                        },
                        "value": "You don't have enough USDC."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fa81e2605579e88471722381a01380eff7db3c869a8b4d6c5142c052f717215d",
                          "typeString": "literal_string \"You don't have enough USDC.\""
                        }
                      ],
                      "id": 328,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3423:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3423:96:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 341,
                  "nodeType": "ExpressionStatement",
                  "src": "3423:96:7"
                }
              ]
            },
            "functionSelector": "c46d4f09",
            "id": 343,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "issueBtcDown",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 279,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 278,
                  "mutability": "mutable",
                  "name": "amountUsdc",
                  "nodeType": "VariableDeclaration",
                  "scope": 343,
                  "src": "2997:18:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 277,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2997:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2996:20:7"
            },
            "returnParameters": {
              "id": 280,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3024:0:7"
            },
            "scope": 778,
            "src": "2975:551:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 405,
              "nodeType": "Block",
              "src": "3591:457:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 348,
                      "name": "rebalanceLeveragedTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 535,
                      "src": "3601:24:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3601:26:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 350,
                  "nodeType": "ExpressionStatement",
                  "src": "3601:26:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 354,
                        "name": "amountLeveragedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 345,
                        "src": "3648:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 351,
                        "name": "btcUp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 170,
                        "src": "3637:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BTCUP_$80",
                          "typeString": "contract BTCUP"
                        }
                      },
                      "id": 353,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 70,
                      "src": "3637:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3637:33:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 356,
                  "nodeType": "ExpressionStatement",
                  "src": "3637:33:7"
                },
                {
                  "expression": {
                    "id": 360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 357,
                      "name": "priceBtcUp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 134,
                      "src": "3681:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 358,
                        "name": "getBtcUpPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 604,
                        "src": "3694:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 359,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3694:15:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3681:28:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 361,
                  "nodeType": "ExpressionStatement",
                  "src": "3681:28:7"
                },
                {
                  "assignments": [
                    363
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 363,
                      "mutability": "mutable",
                      "name": "amountUsdc",
                      "nodeType": "VariableDeclaration",
                      "scope": 405,
                      "src": "3719:18:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 362,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3719:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 373,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        },
                        "id": 371,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3130",
                          "id": 369,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3782:2:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "hexValue": "36",
                          "id": 370,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3788:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_6_by_1",
                            "typeString": "int_const 6"
                          },
                          "value": "6"
                        },
                        "src": "3782:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 366,
                            "name": "priceBtcUp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 134,
                            "src": "3766:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 364,
                            "name": "amountLeveragedTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 345,
                            "src": "3740:21:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1634,
                          "src": "3740:25:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3740:37:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 368,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1649,
                      "src": "3740:41:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3740:50:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3719:71:7"
                },
                {
                  "expression": {
                    "id": 379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 374,
                      "name": "amountBtcUp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 148,
                      "src": "3801:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 377,
                          "name": "amountLeveragedTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 345,
                          "src": "3831:21:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 375,
                          "name": "amountBtcUp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 148,
                          "src": "3815:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1619,
                        "src": "3815:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 378,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3815:38:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3801:52:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 380,
                  "nodeType": "ExpressionStatement",
                  "src": "3801:52:7"
                },
                {
                  "expression": {
                    "id": 386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 381,
                      "name": "collateralBtcUp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 142,
                      "src": "3863:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 384,
                          "name": "amountUsdc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 363,
                          "src": "3901:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 382,
                          "name": "collateralBtcUp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 142,
                          "src": "3881:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 383,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1619,
                        "src": "3881:19:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 385,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3881:31:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3863:49:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 387,
                  "nodeType": "ExpressionStatement",
                  "src": "3863:49:7"
                },
                {
                  "assignments": [
                    390
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 390,
                      "mutability": "mutable",
                      "name": "usdc",
                      "nodeType": "VariableDeclaration",
                      "scope": 405,
                      "src": "3923:11:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$36",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 389,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 388,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 36,
                          "src": "3923:6:7"
                        },
                        "referencedDeclaration": 36,
                        "src": "3923:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$36",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 394,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 392,
                        "name": "addressUsdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 160,
                        "src": "3944:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 391,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "3937:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$36_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3937:19:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$36",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3923:33:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 398,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3988:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 399,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3988:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 400,
                            "name": "amountUsdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 363,
                            "src": "4000:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 396,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 390,
                            "src": "3974:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$36",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 397,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 15,
                          "src": "3974:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 401,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3974:37:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f756768207573646320617661696c61626c65",
                        "id": 402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4013:27:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_11e0d42ca67e4d2b1a22b36c1afaf70b8acf7fd68b23b01ee92fff5e749db362",
                          "typeString": "literal_string \"Not enough usdc available\""
                        },
                        "value": "Not enough usdc available"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_11e0d42ca67e4d2b1a22b36c1afaf70b8acf7fd68b23b01ee92fff5e749db362",
                          "typeString": "literal_string \"Not enough usdc available\""
                        }
                      ],
                      "id": 395,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3966:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3966:75:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 404,
                  "nodeType": "ExpressionStatement",
                  "src": "3966:75:7"
                }
              ]
            },
            "functionSelector": "d1ee539d",
            "id": 406,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redeemBtcUp",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 346,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 345,
                  "mutability": "mutable",
                  "name": "amountLeveragedTokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 406,
                  "src": "3553:29:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 344,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3553:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3552:31:7"
            },
            "returnParameters": {
              "id": 347,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3591:0:7"
            },
            "scope": 778,
            "src": "3532:516:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 468,
              "nodeType": "Block",
              "src": "4115:483:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 411,
                      "name": "rebalanceLeveragedTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 535,
                      "src": "4125:24:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4125:26:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 413,
                  "nodeType": "ExpressionStatement",
                  "src": "4125:26:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 417,
                        "name": "amountLeveragedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 408,
                        "src": "4174:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 414,
                        "name": "btcDown",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 177,
                        "src": "4161:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BTCDOWN_$124",
                          "typeString": "contract BTCDOWN"
                        }
                      },
                      "id": 416,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 114,
                      "src": "4161:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4161:35:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 419,
                  "nodeType": "ExpressionStatement",
                  "src": "4161:35:7"
                },
                {
                  "expression": {
                    "id": 423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 420,
                      "name": "priceBtcDown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 139,
                      "src": "4207:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 421,
                        "name": "getBtcDownPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 625,
                        "src": "4222:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 422,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4222:17:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4207:32:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 424,
                  "nodeType": "ExpressionStatement",
                  "src": "4207:32:7"
                },
                {
                  "assignments": [
                    426
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 426,
                      "mutability": "mutable",
                      "name": "amountUsdc",
                      "nodeType": "VariableDeclaration",
                      "scope": 468,
                      "src": "4249:18:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 425,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4249:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 436,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        },
                        "id": 434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3130",
                          "id": 432,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4314:2:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "hexValue": "36",
                          "id": 433,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4320:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_6_by_1",
                            "typeString": "int_const 6"
                          },
                          "value": "6"
                        },
                        "src": "4314:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 429,
                            "name": "priceBtcDown",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 139,
                            "src": "4296:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 427,
                            "name": "amountLeveragedTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 408,
                            "src": "4270:21:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 428,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1634,
                          "src": "4270:25:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4270:39:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 431,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1649,
                      "src": "4270:43:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4270:52:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4249:73:7"
                },
                {
                  "expression": {
                    "id": 442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 437,
                      "name": "amountBtcDown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 151,
                      "src": "4341:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 440,
                          "name": "amountLeveragedTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 408,
                          "src": "4375:21:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 438,
                          "name": "amountBtcDown",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 151,
                          "src": "4357:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1619,
                        "src": "4357:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 441,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4357:40:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4341:56:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 443,
                  "nodeType": "ExpressionStatement",
                  "src": "4341:56:7"
                },
                {
                  "expression": {
                    "id": 449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 444,
                      "name": "collateralBtcDown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 145,
                      "src": "4407:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 447,
                          "name": "amountUsdc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 426,
                          "src": "4449:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 445,
                          "name": "collateralBtcDown",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 145,
                          "src": "4427:17:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1619,
                        "src": "4427:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 448,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4427:33:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4407:53:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 450,
                  "nodeType": "ExpressionStatement",
                  "src": "4407:53:7"
                },
                {
                  "assignments": [
                    453
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 453,
                      "mutability": "mutable",
                      "name": "usdc",
                      "nodeType": "VariableDeclaration",
                      "scope": 468,
                      "src": "4471:11:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$36",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 452,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 451,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 36,
                          "src": "4471:6:7"
                        },
                        "referencedDeclaration": 36,
                        "src": "4471:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$36",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 457,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 455,
                        "name": "addressUsdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 160,
                        "src": "4492:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 454,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "4485:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$36_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4485:19:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$36",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4471:33:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 461,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4536:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 462,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4536:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 463,
                            "name": "amountUsdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 426,
                            "src": "4549:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 459,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 453,
                            "src": "4522:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$36",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 460,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 15,
                          "src": "4522:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4522:38:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f756768207573646320617661696c61626c65",
                        "id": 465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4562:27:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_11e0d42ca67e4d2b1a22b36c1afaf70b8acf7fd68b23b01ee92fff5e749db362",
                          "typeString": "literal_string \"Not enough usdc available\""
                        },
                        "value": "Not enough usdc available"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_11e0d42ca67e4d2b1a22b36c1afaf70b8acf7fd68b23b01ee92fff5e749db362",
                          "typeString": "literal_string \"Not enough usdc available\""
                        }
                      ],
                      "id": 458,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4514:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4514:76:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 467,
                  "nodeType": "ExpressionStatement",
                  "src": "4514:76:7"
                }
              ]
            },
            "functionSelector": "a14274e8",
            "id": 469,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redeemBtcDown",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 409,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 408,
                  "mutability": "mutable",
                  "name": "amountLeveragedTokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 469,
                  "src": "4077:29:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 407,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4077:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4076:31:7"
            },
            "returnParameters": {
              "id": 410,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4115:0:7"
            },
            "scope": 778,
            "src": "4054:544:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 534,
              "nodeType": "Block",
              "src": "4647:611:7",
              "statements": [
                {
                  "assignments": [
                    473
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 473,
                      "mutability": "mutable",
                      "name": "btcPrice",
                      "nodeType": "VariableDeclaration",
                      "scope": 534,
                      "src": "4657:16:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 472,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4657:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 476,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 474,
                      "name": "getBtcPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 649,
                      "src": "4676:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4676:13:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4657:32:7"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 479,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 477,
                            "name": "collateralBtcUp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 142,
                            "src": "4704:15:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 478,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4722:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4704:19:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 480,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4703:21:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 483,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 481,
                            "name": "collateralBtcDown",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 145,
                            "src": "4729:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 482,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4749:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4729:21:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 484,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4728:23:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4703:48:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 529,
                  "nodeType": "IfStatement",
                  "src": "4699:519:7",
                  "trueBody": {
                    "id": 528,
                    "nodeType": "Block",
                    "src": "4753:465:7",
                    "statements": [
                      {
                        "assignments": [
                          487
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 487,
                            "mutability": "mutable",
                            "name": "rebalanceAmount",
                            "nodeType": "VariableDeclaration",
                            "scope": 528,
                            "src": "4767:23:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 486,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4767:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 491,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 489,
                              "name": "btcPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 473,
                              "src": "4812:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 488,
                            "name": "getRebalanceAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 583,
                            "src": "4793:18:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view returns (uint256)"
                            }
                          },
                          "id": 490,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4793:28:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4767:54:7"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          },
                          "id": 496,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 493,
                                "name": "btcPrice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 473,
                                "src": "4847:8:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 492,
                              "name": "getSign",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 554,
                              "src": "4839:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_int256_$",
                                "typeString": "function (uint256) view returns (int256)"
                              }
                            },
                            "id": 494,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4839:17:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 495,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4859:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4839:21:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 526,
                          "nodeType": "Block",
                          "src": "5044:163:7",
                          "statements": [
                            {
                              "expression": {
                                "id": 517,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 512,
                                  "name": "collateralBtcUp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 142,
                                  "src": "5062:15:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 515,
                                      "name": "rebalanceAmount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 487,
                                      "src": "5100:15:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 513,
                                      "name": "collateralBtcUp",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 142,
                                      "src": "5080:15:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 514,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sub",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1619,
                                    "src": "5080:19:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 516,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5080:36:7",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5062:54:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 518,
                              "nodeType": "ExpressionStatement",
                              "src": "5062:54:7"
                            },
                            {
                              "expression": {
                                "id": 524,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 519,
                                  "name": "collateralBtcDown",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 145,
                                  "src": "5134:17:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 522,
                                      "name": "rebalanceAmount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 487,
                                      "src": "5176:15:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 520,
                                      "name": "collateralBtcDown",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 145,
                                      "src": "5154:17:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 521,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "add",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1604,
                                    "src": "5154:21:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 523,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5154:38:7",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5134:58:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 525,
                              "nodeType": "ExpressionStatement",
                              "src": "5134:58:7"
                            }
                          ]
                        },
                        "id": 527,
                        "nodeType": "IfStatement",
                        "src": "4835:372:7",
                        "trueBody": {
                          "id": 511,
                          "nodeType": "Block",
                          "src": "4862:163:7",
                          "statements": [
                            {
                              "expression": {
                                "id": 502,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 497,
                                  "name": "collateralBtcUp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 142,
                                  "src": "4880:15:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 500,
                                      "name": "rebalanceAmount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 487,
                                      "src": "4918:15:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 498,
                                      "name": "collateralBtcUp",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 142,
                                      "src": "4898:15:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 499,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "add",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1604,
                                    "src": "4898:19:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 501,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4898:36:7",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4880:54:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 503,
                              "nodeType": "ExpressionStatement",
                              "src": "4880:54:7"
                            },
                            {
                              "expression": {
                                "id": 509,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 504,
                                  "name": "collateralBtcDown",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 145,
                                  "src": "4952:17:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 507,
                                      "name": "rebalanceAmount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 487,
                                      "src": "4994:15:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 505,
                                      "name": "collateralBtcDown",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 145,
                                      "src": "4972:17:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 506,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sub",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1619,
                                    "src": "4972:21:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 508,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4972:38:7",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4952:58:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 510,
                              "nodeType": "ExpressionStatement",
                              "src": "4952:58:7"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 532,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 530,
                      "name": "lastBtcPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 154,
                      "src": "5228:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 531,
                      "name": "btcPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 473,
                      "src": "5243:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5228:23:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 533,
                  "nodeType": "ExpressionStatement",
                  "src": "5228:23:7"
                }
              ]
            },
            "functionSelector": "6e5d6615",
            "id": 535,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "rebalanceLeveragedTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 470,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4637:2:7"
            },
            "returnParameters": {
              "id": 471,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4647:0:7"
            },
            "scope": 778,
            "src": "4604:654:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 553,
              "nodeType": "Block",
              "src": "5500:126:7",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 542,
                      "name": "btcPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 537,
                      "src": "5514:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 543,
                      "name": "lastBtcPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 154,
                      "src": "5525:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5514:23:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 551,
                    "nodeType": "Block",
                    "src": "5586:34:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 549,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "-",
                          "prefix": true,
                          "src": "5607:2:7",
                          "subExpression": {
                            "hexValue": "31",
                            "id": 548,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5608:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_minus_1_by_1",
                            "typeString": "int_const -1"
                          }
                        },
                        "functionReturnParameters": 541,
                        "id": 550,
                        "nodeType": "Return",
                        "src": "5600:9:7"
                      }
                    ]
                  },
                  "id": 552,
                  "nodeType": "IfStatement",
                  "src": "5510:110:7",
                  "trueBody": {
                    "id": 547,
                    "nodeType": "Block",
                    "src": "5539:33:7",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "31",
                          "id": 545,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5560:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "functionReturnParameters": 541,
                        "id": 546,
                        "nodeType": "Return",
                        "src": "5553:8:7"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 554,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSign",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 538,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 537,
                  "mutability": "mutable",
                  "name": "btcPrice",
                  "nodeType": "VariableDeclaration",
                  "scope": 554,
                  "src": "5452:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 536,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5452:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5451:18:7"
            },
            "returnParameters": {
              "id": 541,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 540,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 554,
                  "src": "5493:6:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 539,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5493:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5492:8:7"
            },
            "scope": 778,
            "src": "5435:191:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 582,
              "nodeType": "Block",
              "src": "5710:147:7",
              "statements": [
                {
                  "assignments": [
                    562
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 562,
                      "mutability": "mutable",
                      "name": "priceDiff",
                      "nodeType": "VariableDeclaration",
                      "scope": 582,
                      "src": "5720:17:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 561,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5720:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 566,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 564,
                        "name": "priceBtc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 556,
                        "src": "5753:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 563,
                      "name": "getPriceDiff",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 753,
                      "src": "5740:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5740:22:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5720:42:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        },
                        "id": 579,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3130",
                          "id": 577,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5842:2:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "hexValue": "36",
                          "id": 578,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5848:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_6_by_1",
                            "typeString": "int_const 6"
                          },
                          "value": "6"
                        },
                        "src": "5842:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 573,
                                "name": "priceDiff",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 562,
                                "src": "5826:9:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 572,
                              "name": "L",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 709,
                              "src": "5824:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256) pure returns (uint256)"
                              }
                            },
                            "id": 574,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5824:12:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 568,
                                "name": "collateralBtcUp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 142,
                                "src": "5784:15:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 569,
                                "name": "collateralBtcDown",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 145,
                                "src": "5801:17:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 567,
                              "name": "min",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 666,
                              "src": "5780:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 570,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5780:39:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 571,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1634,
                          "src": "5780:43:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 575,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5780:57:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 576,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1649,
                      "src": "5780:61:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5780:70:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 560,
                  "id": 581,
                  "nodeType": "Return",
                  "src": "5773:77:7"
                }
              ]
            },
            "id": 583,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRebalanceAmount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 557,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 556,
                  "mutability": "mutable",
                  "name": "priceBtc",
                  "nodeType": "VariableDeclaration",
                  "scope": 583,
                  "src": "5661:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 555,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5661:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5660:18:7"
            },
            "returnParameters": {
              "id": 560,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 559,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 583,
                  "src": "5702:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 558,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5702:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5701:9:7"
            },
            "scope": 778,
            "src": "5633:224:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 603,
              "nodeType": "Block",
              "src": "5948:102:7",
              "statements": [
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 590,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 588,
                        "name": "amountBtcUp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 148,
                        "src": "5965:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 589,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5980:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "5965:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "arguments": [
                        {
                          "id": 599,
                          "name": "amountBtcUp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 148,
                          "src": "6031:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              },
                              "id": 596,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 594,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6018:2:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "36",
                                "id": 595,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6024:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_6_by_1",
                                  "typeString": "int_const 6"
                                },
                                "value": "6"
                              },
                              "src": "6018:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              }
                            ],
                            "expression": {
                              "id": 592,
                              "name": "collateralBtcUp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 142,
                              "src": "5998:15:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 593,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1634,
                            "src": "5998:19:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 597,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5998:28:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 598,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1649,
                        "src": "5998:32:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 600,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5998:45:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "5965:78:7",
                    "trueExpression": {
                      "id": 591,
                      "name": "priceBtcUp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 134,
                      "src": "5985:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 587,
                  "id": 602,
                  "nodeType": "Return",
                  "src": "5958:85:7"
                }
              ]
            },
            "functionSelector": "f06847d6",
            "id": 604,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBtcUpPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 584,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5915:2:7"
            },
            "returnParameters": {
              "id": 587,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 586,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 604,
                  "src": "5939:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 585,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5939:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5938:9:7"
            },
            "scope": 778,
            "src": "5893:157:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 624,
              "nodeType": "Block",
              "src": "6145:122:7",
              "statements": [
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 611,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 609,
                        "name": "amountBtcDown",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 151,
                        "src": "6174:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 610,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6191:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "6174:18:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "arguments": [
                        {
                          "id": 620,
                          "name": "amountBtcDown",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 151,
                          "src": "6246:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              },
                              "id": 617,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 615,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6233:2:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "36",
                                "id": 616,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6239:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_6_by_1",
                                  "typeString": "int_const 6"
                                },
                                "value": "6"
                              },
                              "src": "6233:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              }
                            ],
                            "expression": {
                              "id": 613,
                              "name": "collateralBtcDown",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 145,
                              "src": "6211:17:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 614,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1634,
                            "src": "6211:21:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 618,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6211:30:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 619,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1649,
                        "src": "6211:34:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 621,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6211:49:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 622,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "6174:86:7",
                    "trueExpression": {
                      "id": 612,
                      "name": "priceBtcDown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 139,
                      "src": "6196:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 608,
                  "id": 623,
                  "nodeType": "Return",
                  "src": "6167:93:7"
                }
              ]
            },
            "functionSelector": "81c2b29b",
            "id": 625,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBtcDownPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 605,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6112:2:7"
            },
            "returnParameters": {
              "id": 608,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 607,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 625,
                  "src": "6136:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 606,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6136:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6135:9:7"
            },
            "scope": 778,
            "src": "6088:179:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 648,
              "nodeType": "Block",
              "src": "6372:264:7",
              "statements": [
                {
                  "assignments": [
                    632
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 632,
                      "mutability": "mutable",
                      "name": "priceFeed",
                      "nodeType": "VariableDeclaration",
                      "scope": 648,
                      "src": "6382:31:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$1786",
                        "typeString": "contract AggregatorV3Interface"
                      },
                      "typeName": {
                        "id": 631,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 630,
                          "name": "AggregatorV3Interface",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1786,
                          "src": "6382:21:7"
                        },
                        "referencedDeclaration": 1786,
                        "src": "6382:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$1786",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 636,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 634,
                        "name": "addressBtcUSDFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 163,
                        "src": "6438:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 633,
                      "name": "AggregatorV3Interface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1786,
                      "src": "6416:21:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$1786_$",
                        "typeString": "type(contract AggregatorV3Interface)"
                      }
                    },
                    "id": 635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6416:40:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$1786",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6382:74:7"
                },
                {
                  "assignments": [
                    null,
                    638,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 638,
                      "mutability": "mutable",
                      "name": "answer",
                      "nodeType": "VariableDeclaration",
                      "scope": 648,
                      "src": "6468:13:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 637,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6468:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null
                  ],
                  "id": 642,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 639,
                        "name": "priceFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 632,
                        "src": "6488:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$1786",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 640,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1785,
                      "src": "6488:25:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6488:27:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6466:49:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 645,
                        "name": "answer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 638,
                        "src": "6542:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 644,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "6534:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 643,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6534:7:7",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6534:15:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 629,
                  "id": 647,
                  "nodeType": "Return",
                  "src": "6527:22:7"
                }
              ]
            },
            "functionSelector": "3a3610bc",
            "id": 649,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBtcPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 626,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6339:2:7"
            },
            "returnParameters": {
              "id": 629,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 628,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 649,
                  "src": "6363:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 627,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6363:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6362:9:7"
            },
            "scope": 778,
            "src": "6319:317:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 665,
              "nodeType": "Block",
              "src": "6713:38:7",
              "statements": [
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 660,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 658,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 651,
                        "src": "6730:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<=",
                      "rightExpression": {
                        "id": 659,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 653,
                        "src": "6735:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6730:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 662,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 653,
                      "src": "6743:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "6730:14:7",
                    "trueExpression": {
                      "id": 661,
                      "name": "a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 651,
                      "src": "6739:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 657,
                  "id": 664,
                  "nodeType": "Return",
                  "src": "6723:21:7"
                }
              ]
            },
            "id": 666,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "min",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 654,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 651,
                  "mutability": "mutable",
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 666,
                  "src": "6659:9:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 650,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6659:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 653,
                  "mutability": "mutable",
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 666,
                  "src": "6670:9:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 652,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6670:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6658:22:7"
            },
            "returnParameters": {
              "id": 657,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 656,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 666,
                  "src": "6704:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 655,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6704:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6703:9:7"
            },
            "scope": 778,
            "src": "6646:105:7",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 708,
              "nodeType": "Block",
              "src": "6811:171:7",
              "statements": [
                {
                  "assignments": [
                    674
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 674,
                      "mutability": "mutable",
                      "name": "denom",
                      "nodeType": "VariableDeclaration",
                      "scope": 708,
                      "src": "6847:13:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 673,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6847:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 693,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 688,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 684,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "39",
                          "id": 675,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6863:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_9_by_1",
                            "typeString": "int_const 9"
                          },
                          "value": "9"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 682,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 678,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 676,
                                  "name": "x",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 668,
                                  "src": "6868:1:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "hexValue": "32",
                                  "id": 677,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6873:1:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "src": "6868:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_rational_1000000_by_1",
                                  "typeString": "int_const 1000000"
                                },
                                "id": 681,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "3130",
                                  "id": 679,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6877:2:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10_by_1",
                                    "typeString": "int_const 10"
                                  },
                                  "value": "10"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "hexValue": "36",
                                  "id": 680,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6883:1:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_6_by_1",
                                    "typeString": "int_const 6"
                                  },
                                  "value": "6"
                                },
                                "src": "6877:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000_by_1",
                                  "typeString": "int_const 1000000"
                                }
                              },
                              "src": "6868:16:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 683,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "6867:18:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6863:22:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 687,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "33",
                          "id": 685,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6889:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "id": 686,
                          "name": "x",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 668,
                          "src": "6893:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6889:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6863:31:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_rational_1000000_by_1",
                        "typeString": "int_const 1000000"
                      },
                      "id": 691,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3130",
                        "id": 689,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6897:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "hexValue": "36",
                        "id": 690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6903:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        },
                        "value": "6"
                      },
                      "src": "6897:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000_by_1",
                        "typeString": "int_const 1000000"
                      }
                    },
                    "src": "6863:41:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6847:57:7"
                },
                {
                  "assignments": [
                    695
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 695,
                      "mutability": "mutable",
                      "name": "num",
                      "nodeType": "VariableDeclaration",
                      "scope": 708,
                      "src": "6914:11:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 694,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6914:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 699,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_rational_1000000000000_by_1",
                      "typeString": "int_const 1000000000000"
                    },
                    "id": 698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3130",
                      "id": 696,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6928:2:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "hexValue": "3132",
                      "id": 697,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6934:2:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_12_by_1",
                        "typeString": "int_const 12"
                      },
                      "value": "12"
                    },
                    "src": "6928:8:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000000_by_1",
                      "typeString": "int_const 1000000000000"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6914:22:7"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 706,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_rational_1000000_by_1",
                        "typeString": "int_const 1000000"
                      },
                      "id": 702,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3130",
                        "id": 700,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6954:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "hexValue": "36",
                        "id": 701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6960:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        },
                        "value": "6"
                      },
                      "src": "6954:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000_by_1",
                        "typeString": "int_const 1000000"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 705,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 703,
                        "name": "num",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 695,
                        "src": "6964:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "id": 704,
                        "name": "denom",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 674,
                        "src": "6970:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6964:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6954:21:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 672,
                  "id": 707,
                  "nodeType": "Return",
                  "src": "6947:28:7"
                }
              ]
            },
            "id": 709,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "L",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 669,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 668,
                  "mutability": "mutable",
                  "name": "x",
                  "nodeType": "VariableDeclaration",
                  "scope": 709,
                  "src": "6768:9:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 667,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6768:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6767:11:7"
            },
            "returnParameters": {
              "id": 672,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 671,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 709,
                  "src": "6802:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 670,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6802:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6801:9:7"
            },
            "scope": 778,
            "src": "6757:225:7",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 752,
              "nodeType": "Block",
              "src": "7060:246:7",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 716,
                      "name": "btcPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 711,
                      "src": "7091:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 717,
                      "name": "lastBtcPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 154,
                      "src": "7102:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7091:23:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 750,
                    "nodeType": "Block",
                    "src": "7215:84:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              },
                              "id": 747,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 745,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7280:2:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "36",
                                "id": 746,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7286:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_6_by_1",
                                  "typeString": "int_const 6"
                                },
                                "value": "6"
                              },
                              "src": "7280:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 742,
                                  "name": "btcPrice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 711,
                                  "src": "7266:8:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_rational_1000000_by_1",
                                        "typeString": "int_const 1000000"
                                      },
                                      "id": 739,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "hexValue": "3130",
                                        "id": 737,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7253:2:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_10_by_1",
                                          "typeString": "int_const 10"
                                        },
                                        "value": "10"
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "**",
                                      "rightExpression": {
                                        "hexValue": "36",
                                        "id": 738,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7259:1:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_6_by_1",
                                          "typeString": "int_const 6"
                                        },
                                        "value": "6"
                                      },
                                      "src": "7253:7:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1000000_by_1",
                                        "typeString": "int_const 1000000"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_1000000_by_1",
                                        "typeString": "int_const 1000000"
                                      }
                                    ],
                                    "expression": {
                                      "id": 735,
                                      "name": "lastBtcPrice",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 154,
                                      "src": "7236:12:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 736,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1634,
                                    "src": "7236:16:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 740,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7236:25:7",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 741,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1649,
                                "src": "7236:29:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 743,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7236:39:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 744,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1619,
                            "src": "7236:43:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 748,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7236:52:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 715,
                        "id": 749,
                        "nodeType": "Return",
                        "src": "7229:59:7"
                      }
                    ]
                  },
                  "id": 751,
                  "nodeType": "IfStatement",
                  "src": "7087:212:7",
                  "trueBody": {
                    "id": 734,
                    "nodeType": "Block",
                    "src": "7116:84:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              },
                              "id": 731,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 729,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7181:2:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "36",
                                "id": 730,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7187:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_6_by_1",
                                  "typeString": "int_const 6"
                                },
                                "value": "6"
                              },
                              "src": "7181:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 726,
                                  "name": "lastBtcPrice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 154,
                                  "src": "7163:12:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_rational_1000000_by_1",
                                        "typeString": "int_const 1000000"
                                      },
                                      "id": 723,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "hexValue": "3130",
                                        "id": 721,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7150:2:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_10_by_1",
                                          "typeString": "int_const 10"
                                        },
                                        "value": "10"
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "**",
                                      "rightExpression": {
                                        "hexValue": "36",
                                        "id": 722,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7156:1:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_6_by_1",
                                          "typeString": "int_const 6"
                                        },
                                        "value": "6"
                                      },
                                      "src": "7150:7:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1000000_by_1",
                                        "typeString": "int_const 1000000"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_1000000_by_1",
                                        "typeString": "int_const 1000000"
                                      }
                                    ],
                                    "expression": {
                                      "id": 719,
                                      "name": "btcPrice",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 711,
                                      "src": "7137:8:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 720,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1634,
                                    "src": "7137:12:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 724,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7137:21:7",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 725,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1649,
                                "src": "7137:25:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 727,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7137:39:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 728,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1619,
                            "src": "7137:43:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 732,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7137:52:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 715,
                        "id": 733,
                        "nodeType": "Return",
                        "src": "7130:59:7"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 753,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPriceDiff",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 712,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 711,
                  "mutability": "mutable",
                  "name": "btcPrice",
                  "nodeType": "VariableDeclaration",
                  "scope": 753,
                  "src": "7010:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 710,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7010:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7009:18:7"
            },
            "returnParameters": {
              "id": 715,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 714,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 753,
                  "src": "7051:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 713,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7051:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7050:9:7"
            },
            "scope": 778,
            "src": "6988:318:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 764,
              "nodeType": "Block",
              "src": "7368:51:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 760,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7401:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7401:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 758,
                        "name": "btcUp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 170,
                        "src": "7385:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BTCUP_$80",
                          "typeString": "contract BTCUP"
                        }
                      },
                      "id": 759,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 981,
                      "src": "7385:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7385:27:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 757,
                  "id": 763,
                  "nodeType": "Return",
                  "src": "7378:34:7"
                }
              ]
            },
            "functionSelector": "157d0129",
            "id": 765,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBtcupBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 754,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7336:2:7"
            },
            "returnParameters": {
              "id": 757,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 756,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 765,
                  "src": "7359:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 755,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7359:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7358:9:7"
            },
            "scope": 778,
            "src": "7312:107:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 776,
              "nodeType": "Block",
              "src": "7483:53:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 772,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7518:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 773,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7518:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 770,
                        "name": "btcDown",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 177,
                        "src": "7500:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BTCDOWN_$124",
                          "typeString": "contract BTCDOWN"
                        }
                      },
                      "id": 771,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 981,
                      "src": "7500:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7500:29:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 769,
                  "id": 775,
                  "nodeType": "Return",
                  "src": "7493:36:7"
                }
              ]
            },
            "functionSelector": "c7e3b124",
            "id": 777,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBtcdownBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 766,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7451:2:7"
            },
            "returnParameters": {
              "id": 769,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 768,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 777,
                  "src": "7474:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 767,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7474:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7473:9:7"
            },
            "scope": 778,
            "src": "7425:111:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 779,
        "src": "1303:6236:7"
      }
    ],
    "src": "32:7509:7"
  },
  "bytecode": "",
  "bytecodeSha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.0+commit.c7dfd78e"
  },
  "contractName": "IERC20",
  "coverageMap": {
    "branches": {},
    "statements": {}
  },
  "dependencies": [],
  "deployedBytecode": "",
  "deployedSourceMap": "",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    316,
    599
  ],
  "opcodes": "",
  "pcMap": {},
  "sha1": "0f3d638418f8a3af66cc8fae0874533772fae681",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {ERC20} from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n\ninterface IERC20 {\n    function transfer(address recipient, uint256 amount) external returns (bool);\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n    function approve(address spender, uint256 amount) external returns (bool);\n}\n\ncontract BTCUP is ERC20 {\n    constructor() ERC20(\"Bitcoin Up\", \"BTCUP\") {\n    }\n\n    function mint(uint256 quantity) public {\n        _mint(tx.origin, quantity);\n    }\n\n    function burn(uint256 quantity) public {\n        _burn(tx.origin, quantity);\n    }\n\n    function decimals() public view override returns (uint8) {\n        return 6;\n    }\n}\n\ncontract BTCDOWN is ERC20 {\n    constructor() ERC20(\"Bitcoin Down\", \"BTCDOWN\") {\n    }\n\n    function mint(uint256 quantity) public {\n        _mint(tx.origin, quantity);\n    }\n\n    function burn(uint256 quantity) public {\n        _burn(tx.origin, quantity);\n    }\n\n    function decimals() public view override returns (uint8) {\n        return 6;\n    }\n}\n\ncontract LeveragedTrading is Ownable {\n    using SafeMath for uint256;\n\n    uint256 public priceBtcUp = 10 ** 6;\n    uint256 public priceBtcDown = 10 ** 6;        // 6 decimals\n\n    uint256 public collateralBtcUp = 0;          //6 decimals\n    uint256 public collateralBtcDown = 0;\n\n    uint256 public amountBtcUp = 0;           // 6 decimals\n    uint256 public amountBtcDown = 0;         // 6 decimals\n\n    uint256 public lastBtcPrice = 0;       // 8 decimals, chainlink conventions\n\n    bool public poolIsInitiated = false;\n\n    address addressUsdc = 0xb7a4F3E9097C08dA09517b5aB877F7a917224ede;  // <- Kovan  //0xeb8f08a975Ab53E34D8a0330E0D34de942C95926;\n    address addressBtcUSDFeed =  0x6135b13325bfC4B00278B4abC5e20bbce2D6580e; // <- Kovan          // 0xECe365B379E1dD183B20fc5f022230C044d51404;\n\n    BTCUP btcUp = new BTCUP();\n    BTCDOWN btcDown = new BTCDOWN();\n\n\n    function initiatePool(uint256 amountUsdc) public onlyOwner {\n        require(!poolIsInitiated, \"The pool was already initiated.\");\n\n        issueBtcUp(amountUsdc.div(2));\n        issueBtcDown(amountUsdc.div(2));\n\n        poolIsInitiated = true;\n    }\n\n    function issueBtcUp(uint256 amountUsdc) public {\n        rebalanceLeveragedTokens();\n        \n        priceBtcUp = getBtcUpPrice();\n        uint256 amountLeveragedTokens = amountUsdc.mul(10 ** 6).div(priceBtcUp);\n\n        btcUp.mint(amountLeveragedTokens);\n        amountBtcUp = amountBtcUp.add(amountLeveragedTokens);\n        collateralBtcUp = collateralBtcUp.add(amountUsdc);\n\n        IERC20 usdc = IERC20(addressUsdc);\n        require(usdc.transferFrom(msg.sender, address(this), amountUsdc), \"You don't have enough USDC.\");\n    }\n\n    function issueBtcDown(uint256 amountUsdc) public {\n        rebalanceLeveragedTokens();\n        \n        priceBtcDown = getBtcDownPrice();\n        uint256 amountLeveragedTokens = amountUsdc.mul(10 ** 6).div(priceBtcDown);\n\n        btcDown.mint(amountLeveragedTokens);\n        amountBtcDown = amountBtcDown.add(amountLeveragedTokens);\n        collateralBtcDown = collateralBtcDown.add(amountUsdc);\n\n        IERC20 usdc = IERC20(addressUsdc);\n        require(usdc.transferFrom(msg.sender, address(this), amountUsdc), \"You don't have enough USDC.\");\n    }\n\n    function redeemBtcUp(uint256 amountLeveragedTokens) public {\n        rebalanceLeveragedTokens();\n        btcUp.burn(amountLeveragedTokens);\n\n        priceBtcUp = getBtcUpPrice();\n        uint256 amountUsdc = amountLeveragedTokens.mul(priceBtcUp).div(10 ** 6);\n\n        amountBtcUp = amountBtcUp.sub(amountLeveragedTokens);\n        collateralBtcUp = collateralBtcUp.sub(amountUsdc);\n\n        IERC20 usdc = IERC20(addressUsdc);\n        require(usdc.transfer(msg.sender, amountUsdc), \"Not enough usdc available\");\n    }\n\n    function redeemBtcDown(uint256 amountLeveragedTokens) public {\n        rebalanceLeveragedTokens();\n        btcDown.burn(amountLeveragedTokens);\n\n        priceBtcDown = getBtcDownPrice();\n        uint256 amountUsdc = amountLeveragedTokens.mul(priceBtcDown).div(10 ** 6);\n        \n        amountBtcDown = amountBtcDown.sub(amountLeveragedTokens);\n        collateralBtcDown = collateralBtcDown.sub(amountUsdc);\n\n        IERC20 usdc = IERC20(addressUsdc);\n        require(usdc.transfer(msg.sender,  amountUsdc), \"Not enough usdc available\");\n\n    }\n\n    function rebalanceLeveragedTokens() public {\n        uint256 btcPrice = getBtcPrice();\n        if ((collateralBtcUp > 0) && (collateralBtcDown > 0)) {\n            uint256 rebalanceAmount = getRebalanceAmount(btcPrice);\n            if (getSign(btcPrice) > 0) {\n                collateralBtcUp = collateralBtcUp.add(rebalanceAmount);\n                collateralBtcDown = collateralBtcDown.sub(rebalanceAmount);\n            }\n\n            else {\n                collateralBtcUp = collateralBtcUp.sub(rebalanceAmount);\n                collateralBtcDown = collateralBtcDown.add(rebalanceAmount);\n            }\n\n        }\n\n        lastBtcPrice = btcPrice;\n    }\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    function getSign(uint256 btcPrice) internal view returns (int256){\n        if (btcPrice > lastBtcPrice) {\n            return 1;\n        }\n        else {\n            return -1;\n        }\n    }\n \n    function getRebalanceAmount(uint256 priceBtc) internal view returns (uint256){\n        uint256 priceDiff = getPriceDiff(priceBtc);\n\n        return min(collateralBtcUp, collateralBtcDown).mul(L(priceDiff)).div(10 ** 6);\n    }\n\n// getBtcUpPrice() 6 decimals\n    function getBtcUpPrice() public view returns (uint256) {\n        return amountBtcUp == 0 ?  priceBtcUp : collateralBtcUp.mul(10 ** 6).div(amountBtcUp);\n    }\n\n// getBtcDownPrice() 6 decimals\n    function getBtcDownPrice() public view returns (uint256) {//6 decimals\n        return amountBtcDown == 0 ?  priceBtcDown : collateralBtcDown.mul(10 ** 6).div(amountBtcDown);\n    }\n\n// get the price of our asset with 8 decimals\n    function getBtcPrice() public view returns (uint256) {\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(addressBtcUSDFeed);\n        (,int256 answer,,,) = priceFeed.latestRoundData();\n\n         return uint256(answer);             // we call chainlink oracle to get the price of the asset\n         \n    }\n    \n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a <= b ? a : b;\n    }\n\n    function L(uint256 x) internal pure returns (uint256) {            //6  decimals\n\n        uint256 denom = 9 * (x ** 2 / 10 ** 6)  + 3 * x + 10 ** 6;\n        uint256 num = 10 ** 12;\n\n        return 10 ** 6 - num / denom;\n    }\n\n    function getPriceDiff(uint256 btcPrice) internal view returns (uint256) {     //6 decimals\n        if (btcPrice > lastBtcPrice) {\n            return btcPrice.mul(10 ** 6).div(lastBtcPrice).sub(10 ** 6);\n        }\n\n        else {\n            return lastBtcPrice.mul(10 ** 6).div(btcPrice).sub(10 ** 6);\n        }\n\n    }\n\n    function getBtcupBalance() public view returns(uint256) {\n        return btcUp.balanceOf(msg.sender);\n    }\n\n    function getBtcdownBalance() public view returns(uint256) {\n        return btcDown.balanceOf(msg.sender);\n    }\n\n}\n\n",
  "sourceMap": "",
  "sourcePath": "contracts/LeveragedTrading.sol",
  "type": "interface"
}
},{}],4:[function(require,module,exports){
module.exports={"abi": [{"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "previousOwner", "type": "address"}, {"indexed": true, "internalType": "address", "name": "newOwner", "type": "address"}], "name": "OwnershipTransferred", "type": "event"}, {"inputs": [], "name": "amountBtcDown", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "amountBtcUp", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "collateralBtcDown", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "collateralBtcUp", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getBtcDownPrice", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getBtcPrice", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getBtcUpPrice", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getBtcdownBalance", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getBtcupBalance", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "amountUsdc", "type": "uint256"}], "name": "initiatePool", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "amountUsdc", "type": "uint256"}], "name": "issueBtcDown", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "amountUsdc", "type": "uint256"}], "name": "issueBtcUp", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "lastBtcPrice", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "owner", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "poolIsInitiated", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "priceBtcDown", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "priceBtcUp", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "rebalanceLeveragedTokens", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "amountLeveragedTokens", "type": "uint256"}], "name": "redeemBtcDown", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "amountLeveragedTokens", "type": "uint256"}], "name": "redeemBtcUp", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "renounceOwnership", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "newOwner", "type": "address"}], "name": "transferOwnership", "outputs": [], "stateMutability": "nonpayable", "type": "function"}], "allSourcePaths": {"0": "/home/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/access/Ownable.sol", "1": "/home/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/ERC20.sol", "2": "/home/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/IERC20.sol", "3": "/home/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/extensions/IERC20Metadata.sol", "4": "/home/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/Context.sol", "5": "/home/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/math/SafeMath.sol", "6": "/home/alex/.brownie/packages/smartcontractkit/chainlink@1.3.0/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol", "7": "contracts/LeveragedTrading.sol"}, "ast": {"absolutePath": "contracts/LeveragedTrading.sol", "exportedSymbols": {"AggregatorV3Interface": [1786], "BTCDOWN": [124], "BTCUP": [80], "Context": [1807], "ERC20": [1428], "IERC20": [36], "LeveragedTrading": [778], "Ownable": [882], "SafeMath": [1740]}, "id": 779, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{"id": 1, "literals": ["solidity", "^", "0.8", ".0"], "nodeType": "PragmaDirective", "src": "32:23:7"}, {"absolutePath": "/home/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/ERC20.sol", "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol", "id": 3, "nodeType": "ImportDirective", "scope": 779, "sourceUnit": 1429, "src": "57:68:7", "symbolAliases": [{"foreign": {"id": 2, "name": "ERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "src": "65:5:7", "typeDescriptions": {}}}], "unitAlias": ""}, {"absolutePath": "/home/alex/.brownie/packages/smartcontractkit/chainlink@1.3.0/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol", "file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol", "id": 4, "nodeType": "ImportDirective", "scope": 779, "sourceUnit": 1787, "src": "126:76:7", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "/home/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/math/SafeMath.sol", "file": "@openzeppelin/contracts/utils/math/SafeMath.sol", "id": 5, "nodeType": "ImportDirective", "scope": 779, "sourceUnit": 1741, "src": "203:57:7", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "/home/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/access/Ownable.sol", "file": "@openzeppelin/contracts/access/Ownable.sol", "id": 6, "nodeType": "ImportDirective", "scope": 779, "sourceUnit": 883, "src": "261:52:7", "symbolAliases": [], "unitAlias": ""}, {"abstract": false, "baseContracts": [], "contractDependencies": [], "contractKind": "interface", "fullyImplemented": false, "id": 36, "linearizedBaseContracts": [36], "name": "IERC20", "nodeType": "ContractDefinition", "nodes": [{"functionSelector": "a9059cbb", "id": 15, "implemented": false, "kind": "function", "modifiers": [], "name": "transfer", "nodeType": "FunctionDefinition", "parameters": {"id": 11, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 8, "mutability": "mutable", "name": "recipient", "nodeType": "VariableDeclaration", "scope": 15, "src": "357:17:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 7, "name": "address", "nodeType": "ElementaryTypeName", "src": "357:7:7", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 10, "mutability": "mutable", "name": "amount", "nodeType": "VariableDeclaration", "scope": 15, "src": "376:14:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 9, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "376:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "356:35:7"}, "returnParameters": {"id": 14, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 13, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 15, "src": "410:4:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 12, "name": "bool", "nodeType": "ElementaryTypeName", "src": "410:4:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "409:6:7"}, "scope": 36, "src": "339:77:7", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"functionSelector": "23b872dd", "id": 26, "implemented": false, "kind": "function", "modifiers": [], "name": "transferFrom", "nodeType": "FunctionDefinition", "parameters": {"id": 22, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 17, "mutability": "mutable", "name": "sender", "nodeType": "VariableDeclaration", "scope": 26, "src": "443:14:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 16, "name": "address", "nodeType": "ElementaryTypeName", "src": "443:7:7", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 19, "mutability": "mutable", "name": "recipient", "nodeType": "VariableDeclaration", "scope": 26, "src": "459:17:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 18, "name": "address", "nodeType": "ElementaryTypeName", "src": "459:7:7", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 21, "mutability": "mutable", "name": "amount", "nodeType": "VariableDeclaration", "scope": 26, "src": "478:14:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 20, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "478:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "442:51:7"}, "returnParameters": {"id": 25, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 24, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 26, "src": "512:4:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 23, "name": "bool", "nodeType": "ElementaryTypeName", "src": "512:4:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "511:6:7"}, "scope": 36, "src": "421:97:7", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"functionSelector": "095ea7b3", "id": 35, "implemented": false, "kind": "function", "modifiers": [], "name": "approve", "nodeType": "FunctionDefinition", "parameters": {"id": 31, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 28, "mutability": "mutable", "name": "spender", "nodeType": "VariableDeclaration", "scope": 35, "src": "540:15:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 27, "name": "address", "nodeType": "ElementaryTypeName", "src": "540:7:7", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 30, "mutability": "mutable", "name": "amount", "nodeType": "VariableDeclaration", "scope": 35, "src": "557:14:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 29, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "557:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "539:33:7"}, "returnParameters": {"id": 34, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 33, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 35, "src": "591:4:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 32, "name": "bool", "nodeType": "ElementaryTypeName", "src": "591:4:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "590:6:7"}, "scope": 36, "src": "523:74:7", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}], "scope": 779, "src": "316:283:7"}, {"abstract": false, "baseContracts": [{"baseName": {"id": 37, "name": "ERC20", "nodeType": "IdentifierPath", "referencedDeclaration": 1428, "src": "619:5:7"}, "id": 38, "nodeType": "InheritanceSpecifier", "src": "619:5:7"}], "contractDependencies": [1428, 1807, 1885, 1910], "contractKind": "contract", "fullyImplemented": true, "id": 80, "linearizedBaseContracts": [80, 1428, 1910, 1885, 1807], "name": "BTCUP", "nodeType": "ContractDefinition", "nodes": [{"body": {"id": 45, "nodeType": "Block", "src": "674:7:7", "statements": []}, "id": 46, "implemented": true, "kind": "constructor", "modifiers": [{"arguments": [{"hexValue": "426974636f696e205570", "id": 41, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "651:12:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_9cbc1d0721872492c3eae100dd6a7dad3b4b199dc4e72a46010b2b1c98a11964", "typeString": "literal_string \"Bitcoin Up\""}, "value": "Bitcoin Up"}, {"hexValue": "4254435550", "id": 42, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "665:7:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_f92903022a172a42cae03bdc1621474c2ab6bc2b8980d8251e05283c61f8c975", "typeString": "literal_string \"BTCUP\""}, "value": "BTCUP"}], "id": 43, "modifierName": {"id": 40, "name": "ERC20", "nodeType": "IdentifierPath", "referencedDeclaration": 1428, "src": "645:5:7"}, "nodeType": "ModifierInvocation", "src": "645:28:7"}], "name": "", "nodeType": "FunctionDefinition", "parameters": {"id": 39, "nodeType": "ParameterList", "parameters": [], "src": "642:2:7"}, "returnParameters": {"id": 44, "nodeType": "ParameterList", "parameters": [], "src": "674:0:7"}, "scope": 80, "src": "631:50:7", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 57, "nodeType": "Block", "src": "726:43:7", "statements": [{"expression": {"arguments": [{"expression": {"id": 52, "name": "tx", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -26, "src": "742:2:7", "typeDescriptions": {"typeIdentifier": "t_magic_transaction", "typeString": "tx"}}, "id": 53, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "origin", "nodeType": "MemberAccess", "src": "742:9:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 54, "name": "quantity", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 48, "src": "753:8:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 51, "name": "_mint", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1288, "src": "736:5:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256)"}}, "id": 55, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "736:26:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 56, "nodeType": "ExpressionStatement", "src": "736:26:7"}]}, "functionSelector": "a0712d68", "id": 58, "implemented": true, "kind": "function", "modifiers": [], "name": "mint", "nodeType": "FunctionDefinition", "parameters": {"id": 49, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 48, "mutability": "mutable", "name": "quantity", "nodeType": "VariableDeclaration", "scope": 58, "src": "701:16:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 47, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "701:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "700:18:7"}, "returnParameters": {"id": 50, "nodeType": "ParameterList", "parameters": [], "src": "726:0:7"}, "scope": 80, "src": "687:82:7", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 69, "nodeType": "Block", "src": "814:43:7", "statements": [{"expression": {"arguments": [{"expression": {"id": 64, "name": "tx", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -26, "src": "830:2:7", "typeDescriptions": {"typeIdentifier": "t_magic_transaction", "typeString": "tx"}}, "id": 65, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "origin", "nodeType": "MemberAccess", "src": "830:9:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 66, "name": "quantity", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 60, "src": "841:8:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 63, "name": "_burn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1360, "src": "824:5:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256)"}}, "id": 67, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "824:26:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 68, "nodeType": "ExpressionStatement", "src": "824:26:7"}]}, "functionSelector": "42966c68", "id": 70, "implemented": true, "kind": "function", "modifiers": [], "name": "burn", "nodeType": "FunctionDefinition", "parameters": {"id": 61, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 60, "mutability": "mutable", "name": "quantity", "nodeType": "VariableDeclaration", "scope": 70, "src": "789:16:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 59, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "789:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "788:18:7"}, "returnParameters": {"id": 62, "nodeType": "ParameterList", "parameters": [], "src": "814:0:7"}, "scope": 80, "src": "775:82:7", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"baseFunctions": [957], "body": {"id": 78, "nodeType": "Block", "src": "920:25:7", "statements": [{"expression": {"hexValue": "36", "id": 76, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "937:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_6_by_1", "typeString": "int_const 6"}, "value": "6"}, "functionReturnParameters": 75, "id": 77, "nodeType": "Return", "src": "930:8:7"}]}, "functionSelector": "313ce567", "id": 79, "implemented": true, "kind": "function", "modifiers": [], "name": "decimals", "nodeType": "FunctionDefinition", "overrides": {"id": 72, "nodeType": "OverrideSpecifier", "overrides": [], "src": "895:8:7"}, "parameters": {"id": 71, "nodeType": "ParameterList", "parameters": [], "src": "880:2:7"}, "returnParameters": {"id": 75, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 74, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 79, "src": "913:5:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}, "typeName": {"id": 73, "name": "uint8", "nodeType": "ElementaryTypeName", "src": "913:5:7", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "visibility": "internal"}], "src": "912:7:7"}, "scope": 80, "src": "863:82:7", "stateMutability": "view", "virtual": false, "visibility": "public"}], "scope": 779, "src": "601:346:7"}, {"abstract": false, "baseContracts": [{"baseName": {"id": 81, "name": "ERC20", "nodeType": "IdentifierPath", "referencedDeclaration": 1428, "src": "969:5:7"}, "id": 82, "nodeType": "InheritanceSpecifier", "src": "969:5:7"}], "contractDependencies": [1428, 1807, 1885, 1910], "contractKind": "contract", "fullyImplemented": true, "id": 124, "linearizedBaseContracts": [124, 1428, 1910, 1885, 1807], "name": "BTCDOWN", "nodeType": "ContractDefinition", "nodes": [{"body": {"id": 89, "nodeType": "Block", "src": "1028:7:7", "statements": []}, "id": 90, "implemented": true, "kind": "constructor", "modifiers": [{"arguments": [{"hexValue": "426974636f696e20446f776e", "id": 85, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "1001:14:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_165fe89d7acd7320260d3007f731660e2a452d2e9dbef2c2e44ee15c6b8bc1ec", "typeString": "literal_string \"Bitcoin Down\""}, "value": "Bitcoin Down"}, {"hexValue": "425443444f574e", "id": 86, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "1017:9:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_72f3d7098f717fcc170dbb6c7dad0b9049f1ed825e03177180edf7a0240d28f2", "typeString": "literal_string \"BTCDOWN\""}, "value": "BTCDOWN"}], "id": 87, "modifierName": {"id": 84, "name": "ERC20", "nodeType": "IdentifierPath", "referencedDeclaration": 1428, "src": "995:5:7"}, "nodeType": "ModifierInvocation", "src": "995:32:7"}], "name": "", "nodeType": "FunctionDefinition", "parameters": {"id": 83, "nodeType": "ParameterList", "parameters": [], "src": "992:2:7"}, "returnParameters": {"id": 88, "nodeType": "ParameterList", "parameters": [], "src": "1028:0:7"}, "scope": 124, "src": "981:54:7", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 101, "nodeType": "Block", "src": "1080:43:7", "statements": [{"expression": {"arguments": [{"expression": {"id": 96, "name": "tx", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -26, "src": "1096:2:7", "typeDescriptions": {"typeIdentifier": "t_magic_transaction", "typeString": "tx"}}, "id": 97, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "origin", "nodeType": "MemberAccess", "src": "1096:9:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 98, "name": "quantity", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 92, "src": "1107:8:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 95, "name": "_mint", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1288, "src": "1090:5:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256)"}}, "id": 99, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1090:26:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 100, "nodeType": "ExpressionStatement", "src": "1090:26:7"}]}, "functionSelector": "a0712d68", "id": 102, "implemented": true, "kind": "function", "modifiers": [], "name": "mint", "nodeType": "FunctionDefinition", "parameters": {"id": 93, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 92, "mutability": "mutable", "name": "quantity", "nodeType": "VariableDeclaration", "scope": 102, "src": "1055:16:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 91, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1055:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "1054:18:7"}, "returnParameters": {"id": 94, "nodeType": "ParameterList", "parameters": [], "src": "1080:0:7"}, "scope": 124, "src": "1041:82:7", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 113, "nodeType": "Block", "src": "1168:43:7", "statements": [{"expression": {"arguments": [{"expression": {"id": 108, "name": "tx", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -26, "src": "1184:2:7", "typeDescriptions": {"typeIdentifier": "t_magic_transaction", "typeString": "tx"}}, "id": 109, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "origin", "nodeType": "MemberAccess", "src": "1184:9:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 110, "name": "quantity", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 104, "src": "1195:8:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 107, "name": "_burn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1360, "src": "1178:5:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256)"}}, "id": 111, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1178:26:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 112, "nodeType": "ExpressionStatement", "src": "1178:26:7"}]}, "functionSelector": "42966c68", "id": 114, "implemented": true, "kind": "function", "modifiers": [], "name": "burn", "nodeType": "FunctionDefinition", "parameters": {"id": 105, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 104, "mutability": "mutable", "name": "quantity", "nodeType": "VariableDeclaration", "scope": 114, "src": "1143:16:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 103, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1143:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "1142:18:7"}, "returnParameters": {"id": 106, "nodeType": "ParameterList", "parameters": [], "src": "1168:0:7"}, "scope": 124, "src": "1129:82:7", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"baseFunctions": [957], "body": {"id": 122, "nodeType": "Block", "src": "1274:25:7", "statements": [{"expression": {"hexValue": "36", "id": 120, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1291:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_6_by_1", "typeString": "int_const 6"}, "value": "6"}, "functionReturnParameters": 119, "id": 121, "nodeType": "Return", "src": "1284:8:7"}]}, "functionSelector": "313ce567", "id": 123, "implemented": true, "kind": "function", "modifiers": [], "name": "decimals", "nodeType": "FunctionDefinition", "overrides": {"id": 116, "nodeType": "OverrideSpecifier", "overrides": [], "src": "1249:8:7"}, "parameters": {"id": 115, "nodeType": "ParameterList", "parameters": [], "src": "1234:2:7"}, "returnParameters": {"id": 119, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 118, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 123, "src": "1267:5:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}, "typeName": {"id": 117, "name": "uint8", "nodeType": "ElementaryTypeName", "src": "1267:5:7", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "visibility": "internal"}], "src": "1266:7:7"}, "scope": 124, "src": "1217:82:7", "stateMutability": "view", "virtual": false, "visibility": "public"}], "scope": 779, "src": "949:352:7"}, {"abstract": false, "baseContracts": [{"baseName": {"id": 125, "name": "Ownable", "nodeType": "IdentifierPath", "referencedDeclaration": 882, "src": "1332:7:7"}, "id": 126, "nodeType": "InheritanceSpecifier", "src": "1332:7:7"}], "contractDependencies": [80, 124, 882, 1807], "contractKind": "contract", "fullyImplemented": true, "id": 778, "linearizedBaseContracts": [778, 882, 1807], "name": "LeveragedTrading", "nodeType": "ContractDefinition", "nodes": [{"id": 129, "libraryName": {"id": 127, "name": "SafeMath", "nodeType": "IdentifierPath", "referencedDeclaration": 1740, "src": "1352:8:7"}, "nodeType": "UsingForDirective", "src": "1346:27:7", "typeName": {"id": 128, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1365:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}, {"constant": false, "functionSelector": "f0156e8a", "id": 134, "mutability": "mutable", "name": "priceBtcUp", "nodeType": "VariableDeclaration", "scope": 778, "src": "1379:35:7", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 130, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1379:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": {"commonType": {"typeIdentifier": "t_rational_1000000_by_1", "typeString": "int_const 1000000"}, "id": 133, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": {"hexValue": "3130", "id": 131, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1407:2:7", "typeDescriptions": {"typeIdentifier": "t_rational_10_by_1", "typeString": "int_const 10"}, "value": "10"}, "nodeType": "BinaryOperation", "operator": "**", "rightExpression": {"hexValue": "36", "id": 132, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1413:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_6_by_1", "typeString": "int_const 6"}, "value": "6"}, "src": "1407:7:7", "typeDescriptions": {"typeIdentifier": "t_rational_1000000_by_1", "typeString": "int_const 1000000"}}, "visibility": "public"}, {"constant": false, "functionSelector": "0c3e5343", "id": 139, "mutability": "mutable", "name": "priceBtcDown", "nodeType": "VariableDeclaration", "scope": 778, "src": "1420:37:7", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 135, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1420:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": {"commonType": {"typeIdentifier": "t_rational_1000000_by_1", "typeString": "int_const 1000000"}, "id": 138, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": {"hexValue": "3130", "id": 136, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1450:2:7", "typeDescriptions": {"typeIdentifier": "t_rational_10_by_1", "typeString": "int_const 10"}, "value": "10"}, "nodeType": "BinaryOperation", "operator": "**", "rightExpression": {"hexValue": "36", "id": 137, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1456:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_6_by_1", "typeString": "int_const 6"}, "value": "6"}, "src": "1450:7:7", "typeDescriptions": {"typeIdentifier": "t_rational_1000000_by_1", "typeString": "int_const 1000000"}}, "visibility": "public"}, {"constant": false, "functionSelector": "dde7be2c", "id": 142, "mutability": "mutable", "name": "collateralBtcUp", "nodeType": "VariableDeclaration", "scope": 778, "src": "1485:34:7", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 140, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1485:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": {"hexValue": "30", "id": 141, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1518:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "visibility": "public"}, {"constant": false, "functionSelector": "14d7c6d2", "id": 145, "mutability": "mutable", "name": "collateralBtcDown", "nodeType": "VariableDeclaration", "scope": 778, "src": "1547:36:7", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 143, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1547:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": {"hexValue": "30", "id": 144, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1582:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "visibility": "public"}, {"constant": false, "functionSelector": "0034b9cc", "id": 148, "mutability": "mutable", "name": "amountBtcUp", "nodeType": "VariableDeclaration", "scope": 778, "src": "1590:30:7", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 146, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1590:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": {"hexValue": "30", "id": 147, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1619:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "visibility": "public"}, {"constant": false, "functionSelector": "b75cbe0b", "id": 151, "mutability": "mutable", "name": "amountBtcDown", "nodeType": "VariableDeclaration", "scope": 778, "src": "1650:32:7", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 149, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1650:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": {"hexValue": "30", "id": 150, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1681:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "visibility": "public"}, {"constant": false, "functionSelector": "f4352c57", "id": 154, "mutability": "mutable", "name": "lastBtcPrice", "nodeType": "VariableDeclaration", "scope": 778, "src": "1711:31:7", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 152, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1711:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": {"hexValue": "30", "id": 153, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1741:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "visibility": "public"}, {"constant": false, "functionSelector": "3074fff7", "id": 157, "mutability": "mutable", "name": "poolIsInitiated", "nodeType": "VariableDeclaration", "scope": 778, "src": "1792:35:7", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 155, "name": "bool", "nodeType": "ElementaryTypeName", "src": "1792:4:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "value": {"hexValue": "66616c7365", "id": 156, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "1822:5:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}, "visibility": "public"}, {"constant": false, "id": 160, "mutability": "mutable", "name": "addressUsdc", "nodeType": "VariableDeclaration", "scope": 778, "src": "1834:64:7", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 158, "name": "address", "nodeType": "ElementaryTypeName", "src": "1834:7:7", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": {"hexValue": "307862376134463345393039374330386441303935313762356142383737463761393137323234656465", "id": 159, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1856:42:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "value": "0xb7a4F3E9097C08dA09517b5aB877F7a917224ede"}, "visibility": "internal"}, {"constant": false, "id": 163, "mutability": "mutable", "name": "addressBtcUSDFeed", "nodeType": "VariableDeclaration", "scope": 778, "src": "1964:71:7", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 161, "name": "address", "nodeType": "ElementaryTypeName", "src": "1964:7:7", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": {"hexValue": "307836313335623133333235626643344230303237384234616243356532306262636532443635383065", "id": 162, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1993:42:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "value": "0x6135b13325bfC4B00278B4abC5e20bbce2D6580e"}, "visibility": "internal"}, {"constant": false, "id": 170, "mutability": "mutable", "name": "btcUp", "nodeType": "VariableDeclaration", "scope": 778, "src": "2110:25:7", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_BTCUP_$80", "typeString": "contract BTCUP"}, "typeName": {"id": 165, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 164, "name": "BTCUP", "nodeType": "IdentifierPath", "referencedDeclaration": 80, "src": "2110:5:7"}, "referencedDeclaration": 80, "src": "2110:5:7", "typeDescriptions": {"typeIdentifier": "t_contract$_BTCUP_$80", "typeString": "contract BTCUP"}}, "value": {"arguments": [], "expression": {"argumentTypes": [], "id": 168, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "NewExpression", "src": "2124:9:7", "typeDescriptions": {"typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_BTCUP_$80_$", "typeString": "function () returns (contract BTCUP)"}, "typeName": {"id": 167, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 166, "name": "BTCUP", "nodeType": "IdentifierPath", "referencedDeclaration": 80, "src": "2128:5:7"}, "referencedDeclaration": 80, "src": "2128:5:7", "typeDescriptions": {"typeIdentifier": "t_contract$_BTCUP_$80", "typeString": "contract BTCUP"}}}, "id": 169, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2124:11:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_BTCUP_$80", "typeString": "contract BTCUP"}}, "visibility": "internal"}, {"constant": false, "id": 177, "mutability": "mutable", "name": "btcDown", "nodeType": "VariableDeclaration", "scope": 778, "src": "2141:31:7", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_BTCDOWN_$124", "typeString": "contract BTCDOWN"}, "typeName": {"id": 172, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 171, "name": "BTCDOWN", "nodeType": "IdentifierPath", "referencedDeclaration": 124, "src": "2141:7:7"}, "referencedDeclaration": 124, "src": "2141:7:7", "typeDescriptions": {"typeIdentifier": "t_contract$_BTCDOWN_$124", "typeString": "contract BTCDOWN"}}, "value": {"arguments": [], "expression": {"argumentTypes": [], "id": 175, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "NewExpression", "src": "2159:11:7", "typeDescriptions": {"typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_BTCDOWN_$124_$", "typeString": "function () returns (contract BTCDOWN)"}, "typeName": {"id": 174, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 173, "name": "BTCDOWN", "nodeType": "IdentifierPath", "referencedDeclaration": 124, "src": "2163:7:7"}, "referencedDeclaration": 124, "src": "2163:7:7", "typeDescriptions": {"typeIdentifier": "t_contract$_BTCDOWN_$124", "typeString": "contract BTCDOWN"}}}, "id": 176, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2159:13:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_BTCDOWN_$124", "typeString": "contract BTCDOWN"}}, "visibility": "internal"}, {"body": {"id": 208, "nodeType": "Block", "src": "2239:191:7", "statements": [{"expression": {"arguments": [{"id": 186, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "!", "prefix": true, "src": "2257:16:7", "subExpression": {"id": 185, "name": "poolIsInitiated", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 157, "src": "2258:15:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "54686520706f6f6c2077617320616c726561647920696e697469617465642e", "id": 187, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "2275:33:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_580e872a0bf3ae438081ad6284342a647742aae71fdfc53b8a10245734a22e81", "typeString": "literal_string \"The pool was already initiated.\""}, "value": "The pool was already initiated."}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_580e872a0bf3ae438081ad6284342a647742aae71fdfc53b8a10245734a22e81", "typeString": "literal_string \"The pool was already initiated.\""}], "id": 184, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "2249:7:7", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 188, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2249:60:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 189, "nodeType": "ExpressionStatement", "src": "2249:60:7"}, {"expression": {"arguments": [{"arguments": [{"hexValue": "32", "id": 193, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2346:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}], "expression": {"id": 191, "name": "amountUsdc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 179, "src": "2331:10:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 192, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "div", "nodeType": "MemberAccess", "referencedDeclaration": 1649, "src": "2331:14:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 194, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2331:17:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 190, "name": "issueBtcUp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 276, "src": "2320:10:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256)"}}, "id": 195, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2320:29:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 196, "nodeType": "ExpressionStatement", "src": "2320:29:7"}, {"expression": {"arguments": [{"arguments": [{"hexValue": "32", "id": 200, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2387:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}], "expression": {"id": 198, "name": "amountUsdc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 179, "src": "2372:10:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 199, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "div", "nodeType": "MemberAccess", "referencedDeclaration": 1649, "src": "2372:14:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 201, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2372:17:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 197, "name": "issueBtcDown", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 343, "src": "2359:12:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256)"}}, "id": 202, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2359:31:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 203, "nodeType": "ExpressionStatement", "src": "2359:31:7"}, {"expression": {"id": 206, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 204, "name": "poolIsInitiated", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 157, "src": "2401:15:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "74727565", "id": 205, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "2419:4:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "src": "2401:22:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 207, "nodeType": "ExpressionStatement", "src": "2401:22:7"}]}, "functionSelector": "9b3075a1", "id": 209, "implemented": true, "kind": "function", "modifiers": [{"id": 182, "modifierName": {"id": 181, "name": "onlyOwner", "nodeType": "IdentifierPath", "referencedDeclaration": 825, "src": "2229:9:7"}, "nodeType": "ModifierInvocation", "src": "2229:9:7"}], "name": "initiatePool", "nodeType": "FunctionDefinition", "parameters": {"id": 180, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 179, "mutability": "mutable", "name": "amountUsdc", "nodeType": "VariableDeclaration", "scope": 209, "src": "2202:18:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 178, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2202:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "2201:20:7"}, "returnParameters": {"id": 183, "nodeType": "ParameterList", "parameters": [], "src": "2239:0:7"}, "scope": 778, "src": "2180:250:7", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 275, "nodeType": "Block", "src": "2483:486:7", "statements": [{"expression": {"arguments": [], "expression": {"argumentTypes": [], "id": 214, "name": "rebalanceLeveragedTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 535, "src": "2493:24:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$", "typeString": "function ()"}}, "id": 215, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2493:26:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 216, "nodeType": "ExpressionStatement", "src": "2493:26:7"}, {"expression": {"id": 220, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 217, "name": "priceBtcUp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 134, "src": "2538:10:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [], "expression": {"argumentTypes": [], "id": 218, "name": "getBtcUpPrice", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 604, "src": "2551:13:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 219, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2551:15:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2538:28:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 221, "nodeType": "ExpressionStatement", "src": "2538:28:7"}, {"assignments": [223], "declarations": [{"constant": false, "id": 223, "mutability": "mutable", "name": "amountLeveragedTokens", "nodeType": "VariableDeclaration", "scope": 275, "src": "2576:29:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 222, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2576:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 233, "initialValue": {"arguments": [{"id": 231, "name": "priceBtcUp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 134, "src": "2636:10:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"commonType": {"typeIdentifier": "t_rational_1000000_by_1", "typeString": "int_const 1000000"}, "id": 228, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": {"hexValue": "3130", "id": 226, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2623:2:7", "typeDescriptions": {"typeIdentifier": "t_rational_10_by_1", "typeString": "int_const 10"}, "value": "10"}, "nodeType": "BinaryOperation", "operator": "**", "rightExpression": {"hexValue": "36", "id": 227, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2629:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_6_by_1", "typeString": "int_const 6"}, "value": "6"}, "src": "2623:7:7", "typeDescriptions": {"typeIdentifier": "t_rational_1000000_by_1", "typeString": "int_const 1000000"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_1000000_by_1", "typeString": "int_const 1000000"}], "expression": {"id": 224, "name": "amountUsdc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 211, "src": "2608:10:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 225, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "mul", "nodeType": "MemberAccess", "referencedDeclaration": 1634, "src": "2608:14:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 229, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2608:23:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 230, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "div", "nodeType": "MemberAccess", "referencedDeclaration": 1649, "src": "2608:27:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 232, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2608:39:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "2576:71:7"}, {"expression": {"arguments": [{"id": 237, "name": "amountLeveragedTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 223, "src": "2669:21:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 234, "name": "btcUp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 170, "src": "2658:5:7", "typeDescriptions": {"typeIdentifier": "t_contract$_BTCUP_$80", "typeString": "contract BTCUP"}}, "id": 236, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "mint", "nodeType": "MemberAccess", "referencedDeclaration": 58, "src": "2658:10:7", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256) external"}}, "id": 238, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2658:33:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 239, "nodeType": "ExpressionStatement", "src": "2658:33:7"}, {"expression": {"id": 245, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 240, "name": "amountBtcUp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 148, "src": "2701:11:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 243, "name": "amountLeveragedTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 223, "src": "2731:21:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 241, "name": "amountBtcUp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 148, "src": "2715:11:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 242, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 1604, "src": "2715:15:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 244, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2715:38:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2701:52:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 246, "nodeType": "ExpressionStatement", "src": "2701:52:7"}, {"expression": {"id": 252, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 247, "name": "collateralBtcUp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 142, "src": "2763:15:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 250, "name": "amountUsdc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 211, "src": "2801:10:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 248, "name": "collateralBtcUp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 142, "src": "2781:15:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 249, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 1604, "src": "2781:19:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 251, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2781:31:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2763:49:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 253, "nodeType": "ExpressionStatement", "src": "2763:49:7"}, {"assignments": [256], "declarations": [{"constant": false, "id": 256, "mutability": "mutable", "name": "usdc", "nodeType": "VariableDeclaration", "scope": 275, "src": "2823:11:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$36", "typeString": "contract IERC20"}, "typeName": {"id": 255, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 254, "name": "IERC20", "nodeType": "IdentifierPath", "referencedDeclaration": 36, "src": "2823:6:7"}, "referencedDeclaration": 36, "src": "2823:6:7", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$36", "typeString": "contract IERC20"}}, "visibility": "internal"}], "id": 260, "initialValue": {"arguments": [{"id": 258, "name": "addressUsdc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 160, "src": "2844:11:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 257, "name": "IERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 36, "src": "2837:6:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC20_$36_$", "typeString": "type(contract IERC20)"}}, "id": 259, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2837:19:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$36", "typeString": "contract IERC20"}}, "nodeType": "VariableDeclarationStatement", "src": "2823:33:7"}, {"expression": {"arguments": [{"arguments": [{"expression": {"id": 264, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "2892:3:7", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 265, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "2892:10:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"arguments": [{"id": 268, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "2912:4:7", "typeDescriptions": {"typeIdentifier": "t_contract$_LeveragedTrading_$778", "typeString": "contract LeveragedTrading"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_LeveragedTrading_$778", "typeString": "contract LeveragedTrading"}], "id": 267, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "2904:7:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 266, "name": "address", "nodeType": "ElementaryTypeName", "src": "2904:7:7", "typeDescriptions": {}}}, "id": 269, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2904:13:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 270, "name": "amountUsdc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 211, "src": "2919:10:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 262, "name": "usdc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 256, "src": "2874:4:7", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$36", "typeString": "contract IERC20"}}, "id": 263, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "transferFrom", "nodeType": "MemberAccess", "referencedDeclaration": 26, "src": "2874:17:7", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$", "typeString": "function (address,address,uint256) external returns (bool)"}}, "id": 271, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2874:56:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "596f7520646f6e2774206861766520656e6f75676820555344432e", "id": 272, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "2932:29:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_fa81e2605579e88471722381a01380eff7db3c869a8b4d6c5142c052f717215d", "typeString": "literal_string \"You don't have enough USDC.\""}, "value": "You don't have enough USDC."}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_fa81e2605579e88471722381a01380eff7db3c869a8b4d6c5142c052f717215d", "typeString": "literal_string \"You don't have enough USDC.\""}], "id": 261, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "2866:7:7", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 273, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2866:96:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 274, "nodeType": "ExpressionStatement", "src": "2866:96:7"}]}, "functionSelector": "f530c04a", "id": 276, "implemented": true, "kind": "function", "modifiers": [], "name": "issueBtcUp", "nodeType": "FunctionDefinition", "parameters": {"id": 212, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 211, "mutability": "mutable", "name": "amountUsdc", "nodeType": "VariableDeclaration", "scope": 276, "src": "2456:18:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 210, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2456:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "2455:20:7"}, "returnParameters": {"id": 213, "nodeType": "ParameterList", "parameters": [], "src": "2483:0:7"}, "scope": 778, "src": "2436:533:7", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 342, "nodeType": "Block", "src": "3024:502:7", "statements": [{"expression": {"arguments": [], "expression": {"argumentTypes": [], "id": 281, "name": "rebalanceLeveragedTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 535, "src": "3034:24:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$", "typeString": "function ()"}}, "id": 282, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3034:26:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 283, "nodeType": "ExpressionStatement", "src": "3034:26:7"}, {"expression": {"id": 287, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 284, "name": "priceBtcDown", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 139, "src": "3079:12:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [], "expression": {"argumentTypes": [], "id": 285, "name": "getBtcDownPrice", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 625, "src": "3094:15:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 286, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3094:17:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3079:32:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 288, "nodeType": "ExpressionStatement", "src": "3079:32:7"}, {"assignments": [290], "declarations": [{"constant": false, "id": 290, "mutability": "mutable", "name": "amountLeveragedTokens", "nodeType": "VariableDeclaration", "scope": 342, "src": "3121:29:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 289, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3121:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 300, "initialValue": {"arguments": [{"id": 298, "name": "priceBtcDown", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 139, "src": "3181:12:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"commonType": {"typeIdentifier": "t_rational_1000000_by_1", "typeString": "int_const 1000000"}, "id": 295, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": {"hexValue": "3130", "id": 293, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3168:2:7", "typeDescriptions": {"typeIdentifier": "t_rational_10_by_1", "typeString": "int_const 10"}, "value": "10"}, "nodeType": "BinaryOperation", "operator": "**", "rightExpression": {"hexValue": "36", "id": 294, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3174:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_6_by_1", "typeString": "int_const 6"}, "value": "6"}, "src": "3168:7:7", "typeDescriptions": {"typeIdentifier": "t_rational_1000000_by_1", "typeString": "int_const 1000000"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_1000000_by_1", "typeString": "int_const 1000000"}], "expression": {"id": 291, "name": "amountUsdc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 278, "src": "3153:10:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 292, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "mul", "nodeType": "MemberAccess", "referencedDeclaration": 1634, "src": "3153:14:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 296, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3153:23:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 297, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "div", "nodeType": "MemberAccess", "referencedDeclaration": 1649, "src": "3153:27:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 299, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3153:41:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "3121:73:7"}, {"expression": {"arguments": [{"id": 304, "name": "amountLeveragedTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 290, "src": "3218:21:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 301, "name": "btcDown", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 177, "src": "3205:7:7", "typeDescriptions": {"typeIdentifier": "t_contract$_BTCDOWN_$124", "typeString": "contract BTCDOWN"}}, "id": 303, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "mint", "nodeType": "MemberAccess", "referencedDeclaration": 102, "src": "3205:12:7", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256) external"}}, "id": 305, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3205:35:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 306, "nodeType": "ExpressionStatement", "src": "3205:35:7"}, {"expression": {"id": 312, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 307, "name": "amountBtcDown", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 151, "src": "3250:13:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 310, "name": "amountLeveragedTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 290, "src": "3284:21:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 308, "name": "amountBtcDown", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 151, "src": "3266:13:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 309, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 1604, "src": "3266:17:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 311, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3266:40:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3250:56:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 313, "nodeType": "ExpressionStatement", "src": "3250:56:7"}, {"expression": {"id": 319, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 314, "name": "collateralBtcDown", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 145, "src": "3316:17:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 317, "name": "amountUsdc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 278, "src": "3358:10:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 315, "name": "collateralBtcDown", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 145, "src": "3336:17:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 316, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 1604, "src": "3336:21:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 318, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3336:33:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3316:53:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 320, "nodeType": "ExpressionStatement", "src": "3316:53:7"}, {"assignments": [323], "declarations": [{"constant": false, "id": 323, "mutability": "mutable", "name": "usdc", "nodeType": "VariableDeclaration", "scope": 342, "src": "3380:11:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$36", "typeString": "contract IERC20"}, "typeName": {"id": 322, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 321, "name": "IERC20", "nodeType": "IdentifierPath", "referencedDeclaration": 36, "src": "3380:6:7"}, "referencedDeclaration": 36, "src": "3380:6:7", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$36", "typeString": "contract IERC20"}}, "visibility": "internal"}], "id": 327, "initialValue": {"arguments": [{"id": 325, "name": "addressUsdc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 160, "src": "3401:11:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 324, "name": "IERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 36, "src": "3394:6:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC20_$36_$", "typeString": "type(contract IERC20)"}}, "id": 326, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3394:19:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$36", "typeString": "contract IERC20"}}, "nodeType": "VariableDeclarationStatement", "src": "3380:33:7"}, {"expression": {"arguments": [{"arguments": [{"expression": {"id": 331, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "3449:3:7", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 332, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "3449:10:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"arguments": [{"id": 335, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "3469:4:7", "typeDescriptions": {"typeIdentifier": "t_contract$_LeveragedTrading_$778", "typeString": "contract LeveragedTrading"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_LeveragedTrading_$778", "typeString": "contract LeveragedTrading"}], "id": 334, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "3461:7:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 333, "name": "address", "nodeType": "ElementaryTypeName", "src": "3461:7:7", "typeDescriptions": {}}}, "id": 336, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3461:13:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 337, "name": "amountUsdc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 278, "src": "3476:10:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 329, "name": "usdc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 323, "src": "3431:4:7", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$36", "typeString": "contract IERC20"}}, "id": 330, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "transferFrom", "nodeType": "MemberAccess", "referencedDeclaration": 26, "src": "3431:17:7", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$", "typeString": "function (address,address,uint256) external returns (bool)"}}, "id": 338, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3431:56:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "596f7520646f6e2774206861766520656e6f75676820555344432e", "id": 339, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "3489:29:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_fa81e2605579e88471722381a01380eff7db3c869a8b4d6c5142c052f717215d", "typeString": "literal_string \"You don't have enough USDC.\""}, "value": "You don't have enough USDC."}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_fa81e2605579e88471722381a01380eff7db3c869a8b4d6c5142c052f717215d", "typeString": "literal_string \"You don't have enough USDC.\""}], "id": 328, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "3423:7:7", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 340, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3423:96:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 341, "nodeType": "ExpressionStatement", "src": "3423:96:7"}]}, "functionSelector": "c46d4f09", "id": 343, "implemented": true, "kind": "function", "modifiers": [], "name": "issueBtcDown", "nodeType": "FunctionDefinition", "parameters": {"id": 279, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 278, "mutability": "mutable", "name": "amountUsdc", "nodeType": "VariableDeclaration", "scope": 343, "src": "2997:18:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 277, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2997:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "2996:20:7"}, "returnParameters": {"id": 280, "nodeType": "ParameterList", "parameters": [], "src": "3024:0:7"}, "scope": 778, "src": "2975:551:7", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 405, "nodeType": "Block", "src": "3591:457:7", "statements": [{"expression": {"arguments": [], "expression": {"argumentTypes": [], "id": 348, "name": "rebalanceLeveragedTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 535, "src": "3601:24:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$", "typeString": "function ()"}}, "id": 349, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3601:26:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 350, "nodeType": "ExpressionStatement", "src": "3601:26:7"}, {"expression": {"arguments": [{"id": 354, "name": "amountLeveragedTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 345, "src": "3648:21:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 351, "name": "btcUp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 170, "src": "3637:5:7", "typeDescriptions": {"typeIdentifier": "t_contract$_BTCUP_$80", "typeString": "contract BTCUP"}}, "id": 353, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "burn", "nodeType": "MemberAccess", "referencedDeclaration": 70, "src": "3637:10:7", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256) external"}}, "id": 355, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3637:33:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 356, "nodeType": "ExpressionStatement", "src": "3637:33:7"}, {"expression": {"id": 360, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 357, "name": "priceBtcUp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 134, "src": "3681:10:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [], "expression": {"argumentTypes": [], "id": 358, "name": "getBtcUpPrice", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 604, "src": "3694:13:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 359, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3694:15:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3681:28:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 361, "nodeType": "ExpressionStatement", "src": "3681:28:7"}, {"assignments": [363], "declarations": [{"constant": false, "id": 363, "mutability": "mutable", "name": "amountUsdc", "nodeType": "VariableDeclaration", "scope": 405, "src": "3719:18:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 362, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3719:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 373, "initialValue": {"arguments": [{"commonType": {"typeIdentifier": "t_rational_1000000_by_1", "typeString": "int_const 1000000"}, "id": 371, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": {"hexValue": "3130", "id": 369, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3782:2:7", "typeDescriptions": {"typeIdentifier": "t_rational_10_by_1", "typeString": "int_const 10"}, "value": "10"}, "nodeType": "BinaryOperation", "operator": "**", "rightExpression": {"hexValue": "36", "id": 370, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3788:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_6_by_1", "typeString": "int_const 6"}, "value": "6"}, "src": "3782:7:7", "typeDescriptions": {"typeIdentifier": "t_rational_1000000_by_1", "typeString": "int_const 1000000"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_1000000_by_1", "typeString": "int_const 1000000"}], "expression": {"arguments": [{"id": 366, "name": "priceBtcUp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 134, "src": "3766:10:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 364, "name": "amountLeveragedTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 345, "src": "3740:21:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 365, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "mul", "nodeType": "MemberAccess", "referencedDeclaration": 1634, "src": "3740:25:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 367, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3740:37:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 368, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "div", "nodeType": "MemberAccess", "referencedDeclaration": 1649, "src": "3740:41:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 372, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3740:50:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "3719:71:7"}, {"expression": {"id": 379, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 374, "name": "amountBtcUp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 148, "src": "3801:11:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 377, "name": "amountLeveragedTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 345, "src": "3831:21:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 375, "name": "amountBtcUp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 148, "src": "3815:11:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 376, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sub", "nodeType": "MemberAccess", "referencedDeclaration": 1619, "src": "3815:15:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 378, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3815:38:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3801:52:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 380, "nodeType": "ExpressionStatement", "src": "3801:52:7"}, {"expression": {"id": 386, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 381, "name": "collateralBtcUp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 142, "src": "3863:15:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 384, "name": "amountUsdc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 363, "src": "3901:10:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 382, "name": "collateralBtcUp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 142, "src": "3881:15:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 383, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sub", "nodeType": "MemberAccess", "referencedDeclaration": 1619, "src": "3881:19:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 385, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3881:31:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3863:49:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 387, "nodeType": "ExpressionStatement", "src": "3863:49:7"}, {"assignments": [390], "declarations": [{"constant": false, "id": 390, "mutability": "mutable", "name": "usdc", "nodeType": "VariableDeclaration", "scope": 405, "src": "3923:11:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$36", "typeString": "contract IERC20"}, "typeName": {"id": 389, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 388, "name": "IERC20", "nodeType": "IdentifierPath", "referencedDeclaration": 36, "src": "3923:6:7"}, "referencedDeclaration": 36, "src": "3923:6:7", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$36", "typeString": "contract IERC20"}}, "visibility": "internal"}], "id": 394, "initialValue": {"arguments": [{"id": 392, "name": "addressUsdc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 160, "src": "3944:11:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 391, "name": "IERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 36, "src": "3937:6:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC20_$36_$", "typeString": "type(contract IERC20)"}}, "id": 393, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3937:19:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$36", "typeString": "contract IERC20"}}, "nodeType": "VariableDeclarationStatement", "src": "3923:33:7"}, {"expression": {"arguments": [{"arguments": [{"expression": {"id": 398, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "3988:3:7", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 399, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "3988:10:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 400, "name": "amountUsdc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 363, "src": "4000:10:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 396, "name": "usdc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 390, "src": "3974:4:7", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$36", "typeString": "contract IERC20"}}, "id": 397, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "transfer", "nodeType": "MemberAccess", "referencedDeclaration": 15, "src": "3974:13:7", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$", "typeString": "function (address,uint256) external returns (bool)"}}, "id": 401, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3974:37:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4e6f7420656e6f756768207573646320617661696c61626c65", "id": 402, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "4013:27:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_11e0d42ca67e4d2b1a22b36c1afaf70b8acf7fd68b23b01ee92fff5e749db362", "typeString": "literal_string \"Not enough usdc available\""}, "value": "Not enough usdc available"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_11e0d42ca67e4d2b1a22b36c1afaf70b8acf7fd68b23b01ee92fff5e749db362", "typeString": "literal_string \"Not enough usdc available\""}], "id": 395, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "3966:7:7", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 403, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3966:75:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 404, "nodeType": "ExpressionStatement", "src": "3966:75:7"}]}, "functionSelector": "d1ee539d", "id": 406, "implemented": true, "kind": "function", "modifiers": [], "name": "redeemBtcUp", "nodeType": "FunctionDefinition", "parameters": {"id": 346, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 345, "mutability": "mutable", "name": "amountLeveragedTokens", "nodeType": "VariableDeclaration", "scope": 406, "src": "3553:29:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 344, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3553:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "3552:31:7"}, "returnParameters": {"id": 347, "nodeType": "ParameterList", "parameters": [], "src": "3591:0:7"}, "scope": 778, "src": "3532:516:7", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 468, "nodeType": "Block", "src": "4115:483:7", "statements": [{"expression": {"arguments": [], "expression": {"argumentTypes": [], "id": 411, "name": "rebalanceLeveragedTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 535, "src": "4125:24:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$", "typeString": "function ()"}}, "id": 412, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4125:26:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 413, "nodeType": "ExpressionStatement", "src": "4125:26:7"}, {"expression": {"arguments": [{"id": 417, "name": "amountLeveragedTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 408, "src": "4174:21:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 414, "name": "btcDown", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 177, "src": "4161:7:7", "typeDescriptions": {"typeIdentifier": "t_contract$_BTCDOWN_$124", "typeString": "contract BTCDOWN"}}, "id": 416, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "burn", "nodeType": "MemberAccess", "referencedDeclaration": 114, "src": "4161:12:7", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256) external"}}, "id": 418, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4161:35:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 419, "nodeType": "ExpressionStatement", "src": "4161:35:7"}, {"expression": {"id": 423, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 420, "name": "priceBtcDown", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 139, "src": "4207:12:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [], "expression": {"argumentTypes": [], "id": 421, "name": "getBtcDownPrice", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 625, "src": "4222:15:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 422, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4222:17:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4207:32:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 424, "nodeType": "ExpressionStatement", "src": "4207:32:7"}, {"assignments": [426], "declarations": [{"constant": false, "id": 426, "mutability": "mutable", "name": "amountUsdc", "nodeType": "VariableDeclaration", "scope": 468, "src": "4249:18:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 425, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4249:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 436, "initialValue": {"arguments": [{"commonType": {"typeIdentifier": "t_rational_1000000_by_1", "typeString": "int_const 1000000"}, "id": 434, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": {"hexValue": "3130", "id": 432, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4314:2:7", "typeDescriptions": {"typeIdentifier": "t_rational_10_by_1", "typeString": "int_const 10"}, "value": "10"}, "nodeType": "BinaryOperation", "operator": "**", "rightExpression": {"hexValue": "36", "id": 433, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4320:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_6_by_1", "typeString": "int_const 6"}, "value": "6"}, "src": "4314:7:7", "typeDescriptions": {"typeIdentifier": "t_rational_1000000_by_1", "typeString": "int_const 1000000"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_1000000_by_1", "typeString": "int_const 1000000"}], "expression": {"arguments": [{"id": 429, "name": "priceBtcDown", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 139, "src": "4296:12:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 427, "name": "amountLeveragedTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 408, "src": "4270:21:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 428, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "mul", "nodeType": "MemberAccess", "referencedDeclaration": 1634, "src": "4270:25:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 430, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4270:39:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 431, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "div", "nodeType": "MemberAccess", "referencedDeclaration": 1649, "src": "4270:43:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 435, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4270:52:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "4249:73:7"}, {"expression": {"id": 442, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 437, "name": "amountBtcDown", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 151, "src": "4341:13:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 440, "name": "amountLeveragedTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 408, "src": "4375:21:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 438, "name": "amountBtcDown", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 151, "src": "4357:13:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 439, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sub", "nodeType": "MemberAccess", "referencedDeclaration": 1619, "src": "4357:17:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 441, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4357:40:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4341:56:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 443, "nodeType": "ExpressionStatement", "src": "4341:56:7"}, {"expression": {"id": 449, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 444, "name": "collateralBtcDown", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 145, "src": "4407:17:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 447, "name": "amountUsdc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 426, "src": "4449:10:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 445, "name": "collateralBtcDown", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 145, "src": "4427:17:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 446, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sub", "nodeType": "MemberAccess", "referencedDeclaration": 1619, "src": "4427:21:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 448, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4427:33:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4407:53:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 450, "nodeType": "ExpressionStatement", "src": "4407:53:7"}, {"assignments": [453], "declarations": [{"constant": false, "id": 453, "mutability": "mutable", "name": "usdc", "nodeType": "VariableDeclaration", "scope": 468, "src": "4471:11:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$36", "typeString": "contract IERC20"}, "typeName": {"id": 452, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 451, "name": "IERC20", "nodeType": "IdentifierPath", "referencedDeclaration": 36, "src": "4471:6:7"}, "referencedDeclaration": 36, "src": "4471:6:7", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$36", "typeString": "contract IERC20"}}, "visibility": "internal"}], "id": 457, "initialValue": {"arguments": [{"id": 455, "name": "addressUsdc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 160, "src": "4492:11:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 454, "name": "IERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 36, "src": "4485:6:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC20_$36_$", "typeString": "type(contract IERC20)"}}, "id": 456, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4485:19:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$36", "typeString": "contract IERC20"}}, "nodeType": "VariableDeclarationStatement", "src": "4471:33:7"}, {"expression": {"arguments": [{"arguments": [{"expression": {"id": 461, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "4536:3:7", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 462, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "4536:10:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 463, "name": "amountUsdc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 426, "src": "4549:10:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 459, "name": "usdc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 453, "src": "4522:4:7", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$36", "typeString": "contract IERC20"}}, "id": 460, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "transfer", "nodeType": "MemberAccess", "referencedDeclaration": 15, "src": "4522:13:7", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$", "typeString": "function (address,uint256) external returns (bool)"}}, "id": 464, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4522:38:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4e6f7420656e6f756768207573646320617661696c61626c65", "id": 465, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "4562:27:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_11e0d42ca67e4d2b1a22b36c1afaf70b8acf7fd68b23b01ee92fff5e749db362", "typeString": "literal_string \"Not enough usdc available\""}, "value": "Not enough usdc available"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_11e0d42ca67e4d2b1a22b36c1afaf70b8acf7fd68b23b01ee92fff5e749db362", "typeString": "literal_string \"Not enough usdc available\""}], "id": 458, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "4514:7:7", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 466, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4514:76:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 467, "nodeType": "ExpressionStatement", "src": "4514:76:7"}]}, "functionSelector": "a14274e8", "id": 469, "implemented": true, "kind": "function", "modifiers": [], "name": "redeemBtcDown", "nodeType": "FunctionDefinition", "parameters": {"id": 409, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 408, "mutability": "mutable", "name": "amountLeveragedTokens", "nodeType": "VariableDeclaration", "scope": 469, "src": "4077:29:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 407, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4077:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "4076:31:7"}, "returnParameters": {"id": 410, "nodeType": "ParameterList", "parameters": [], "src": "4115:0:7"}, "scope": 778, "src": "4054:544:7", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 534, "nodeType": "Block", "src": "4647:611:7", "statements": [{"assignments": [473], "declarations": [{"constant": false, "id": 473, "mutability": "mutable", "name": "btcPrice", "nodeType": "VariableDeclaration", "scope": 534, "src": "4657:16:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 472, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4657:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 476, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 474, "name": "getBtcPrice", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 649, "src": "4676:11:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 475, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4676:13:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "4657:32:7"}, {"condition": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 485, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"components": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 479, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 477, "name": "collateralBtcUp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 142, "src": "4704:15:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 478, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4722:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "4704:19:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "id": 480, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "4703:21:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"components": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 483, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 481, "name": "collateralBtcDown", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 145, "src": "4729:17:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 482, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4749:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "4729:21:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "id": 484, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "4728:23:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "4703:48:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 529, "nodeType": "IfStatement", "src": "4699:519:7", "trueBody": {"id": 528, "nodeType": "Block", "src": "4753:465:7", "statements": [{"assignments": [487], "declarations": [{"constant": false, "id": 487, "mutability": "mutable", "name": "rebalanceAmount", "nodeType": "VariableDeclaration", "scope": 528, "src": "4767:23:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 486, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4767:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 491, "initialValue": {"arguments": [{"id": 489, "name": "btcPrice", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 473, "src": "4812:8:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 488, "name": "getRebalanceAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 583, "src": "4793:18:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256) view returns (uint256)"}}, "id": 490, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4793:28:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "4767:54:7"}, {"condition": {"commonType": {"typeIdentifier": "t_int256", "typeString": "int256"}, "id": 496, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"id": 493, "name": "btcPrice", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 473, "src": "4847:8:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 492, "name": "getSign", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 554, "src": "4839:7:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_int256_$", "typeString": "function (uint256) view returns (int256)"}}, "id": 494, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4839:17:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 495, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4859:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "4839:21:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 526, "nodeType": "Block", "src": "5044:163:7", "statements": [{"expression": {"id": 517, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 512, "name": "collateralBtcUp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 142, "src": "5062:15:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 515, "name": "rebalanceAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 487, "src": "5100:15:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 513, "name": "collateralBtcUp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 142, "src": "5080:15:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 514, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sub", "nodeType": "MemberAccess", "referencedDeclaration": 1619, "src": "5080:19:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 516, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5080:36:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5062:54:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 518, "nodeType": "ExpressionStatement", "src": "5062:54:7"}, {"expression": {"id": 524, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 519, "name": "collateralBtcDown", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 145, "src": "5134:17:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 522, "name": "rebalanceAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 487, "src": "5176:15:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 520, "name": "collateralBtcDown", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 145, "src": "5154:17:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 521, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 1604, "src": "5154:21:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 523, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5154:38:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5134:58:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 525, "nodeType": "ExpressionStatement", "src": "5134:58:7"}]}, "id": 527, "nodeType": "IfStatement", "src": "4835:372:7", "trueBody": {"id": 511, "nodeType": "Block", "src": "4862:163:7", "statements": [{"expression": {"id": 502, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 497, "name": "collateralBtcUp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 142, "src": "4880:15:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 500, "name": "rebalanceAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 487, "src": "4918:15:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 498, "name": "collateralBtcUp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 142, "src": "4898:15:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 499, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 1604, "src": "4898:19:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 501, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4898:36:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4880:54:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 503, "nodeType": "ExpressionStatement", "src": "4880:54:7"}, {"expression": {"id": 509, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 504, "name": "collateralBtcDown", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 145, "src": "4952:17:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 507, "name": "rebalanceAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 487, "src": "4994:15:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 505, "name": "collateralBtcDown", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 145, "src": "4972:17:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 506, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sub", "nodeType": "MemberAccess", "referencedDeclaration": 1619, "src": "4972:21:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 508, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4972:38:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4952:58:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 510, "nodeType": "ExpressionStatement", "src": "4952:58:7"}]}}]}}, {"expression": {"id": 532, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 530, "name": "lastBtcPrice", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 154, "src": "5228:12:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 531, "name": "btcPrice", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 473, "src": "5243:8:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5228:23:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 533, "nodeType": "ExpressionStatement", "src": "5228:23:7"}]}, "functionSelector": "6e5d6615", "id": 535, "implemented": true, "kind": "function", "modifiers": [], "name": "rebalanceLeveragedTokens", "nodeType": "FunctionDefinition", "parameters": {"id": 470, "nodeType": "ParameterList", "parameters": [], "src": "4637:2:7"}, "returnParameters": {"id": 471, "nodeType": "ParameterList", "parameters": [], "src": "4647:0:7"}, "scope": 778, "src": "4604:654:7", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 553, "nodeType": "Block", "src": "5500:126:7", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 544, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 542, "name": "btcPrice", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 537, "src": "5514:8:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"id": 543, "name": "lastBtcPrice", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 154, "src": "5525:12:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5514:23:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 551, "nodeType": "Block", "src": "5586:34:7", "statements": [{"expression": {"id": 549, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "-", "prefix": true, "src": "5607:2:7", "subExpression": {"hexValue": "31", "id": 548, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5608:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "typeDescriptions": {"typeIdentifier": "t_rational_minus_1_by_1", "typeString": "int_const -1"}}, "functionReturnParameters": 541, "id": 550, "nodeType": "Return", "src": "5600:9:7"}]}, "id": 552, "nodeType": "IfStatement", "src": "5510:110:7", "trueBody": {"id": 547, "nodeType": "Block", "src": "5539:33:7", "statements": [{"expression": {"hexValue": "31", "id": 545, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5560:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "functionReturnParameters": 541, "id": 546, "nodeType": "Return", "src": "5553:8:7"}]}}]}, "id": 554, "implemented": true, "kind": "function", "modifiers": [], "name": "getSign", "nodeType": "FunctionDefinition", "parameters": {"id": 538, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 537, "mutability": "mutable", "name": "btcPrice", "nodeType": "VariableDeclaration", "scope": 554, "src": "5452:16:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 536, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5452:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "5451:18:7"}, "returnParameters": {"id": 541, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 540, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 554, "src": "5493:6:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 539, "name": "int256", "nodeType": "ElementaryTypeName", "src": "5493:6:7", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}], "src": "5492:8:7"}, "scope": 778, "src": "5435:191:7", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 582, "nodeType": "Block", "src": "5710:147:7", "statements": [{"assignments": [562], "declarations": [{"constant": false, "id": 562, "mutability": "mutable", "name": "priceDiff", "nodeType": "VariableDeclaration", "scope": 582, "src": "5720:17:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 561, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5720:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 566, "initialValue": {"arguments": [{"id": 564, "name": "priceBtc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 556, "src": "5753:8:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 563, "name": "getPriceDiff", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 753, "src": "5740:12:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256) view returns (uint256)"}}, "id": 565, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5740:22:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "5720:42:7"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_rational_1000000_by_1", "typeString": "int_const 1000000"}, "id": 579, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": {"hexValue": "3130", "id": 577, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5842:2:7", "typeDescriptions": {"typeIdentifier": "t_rational_10_by_1", "typeString": "int_const 10"}, "value": "10"}, "nodeType": "BinaryOperation", "operator": "**", "rightExpression": {"hexValue": "36", "id": 578, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5848:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_6_by_1", "typeString": "int_const 6"}, "value": "6"}, "src": "5842:7:7", "typeDescriptions": {"typeIdentifier": "t_rational_1000000_by_1", "typeString": "int_const 1000000"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_1000000_by_1", "typeString": "int_const 1000000"}], "expression": {"arguments": [{"arguments": [{"id": 573, "name": "priceDiff", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 562, "src": "5826:9:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 572, "name": "L", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 709, "src": "5824:1:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256) pure returns (uint256)"}}, "id": 574, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5824:12:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"id": 568, "name": "collateralBtcUp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 142, "src": "5784:15:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 569, "name": "collateralBtcDown", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 145, "src": "5801:17:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 567, "name": "min", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 666, "src": "5780:3:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 570, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5780:39:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 571, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "mul", "nodeType": "MemberAccess", "referencedDeclaration": 1634, "src": "5780:43:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 575, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5780:57:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 576, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "div", "nodeType": "MemberAccess", "referencedDeclaration": 1649, "src": "5780:61:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 580, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5780:70:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 560, "id": 581, "nodeType": "Return", "src": "5773:77:7"}]}, "id": 583, "implemented": true, "kind": "function", "modifiers": [], "name": "getRebalanceAmount", "nodeType": "FunctionDefinition", "parameters": {"id": 557, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 556, "mutability": "mutable", "name": "priceBtc", "nodeType": "VariableDeclaration", "scope": 583, "src": "5661:16:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 555, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5661:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "5660:18:7"}, "returnParameters": {"id": 560, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 559, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 583, "src": "5702:7:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 558, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5702:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "5701:9:7"}, "scope": 778, "src": "5633:224:7", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 603, "nodeType": "Block", "src": "5948:102:7", "statements": [{"expression": {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 590, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 588, "name": "amountBtcUp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 148, "src": "5965:11:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "30", "id": 589, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5980:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "5965:16:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"arguments": [{"id": 599, "name": "amountBtcUp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 148, "src": "6031:11:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"commonType": {"typeIdentifier": "t_rational_1000000_by_1", "typeString": "int_const 1000000"}, "id": 596, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": {"hexValue": "3130", "id": 594, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6018:2:7", "typeDescriptions": {"typeIdentifier": "t_rational_10_by_1", "typeString": "int_const 10"}, "value": "10"}, "nodeType": "BinaryOperation", "operator": "**", "rightExpression": {"hexValue": "36", "id": 595, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6024:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_6_by_1", "typeString": "int_const 6"}, "value": "6"}, "src": "6018:7:7", "typeDescriptions": {"typeIdentifier": "t_rational_1000000_by_1", "typeString": "int_const 1000000"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_1000000_by_1", "typeString": "int_const 1000000"}], "expression": {"id": 592, "name": "collateralBtcUp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 142, "src": "5998:15:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 593, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "mul", "nodeType": "MemberAccess", "referencedDeclaration": 1634, "src": "5998:19:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 597, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5998:28:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 598, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "div", "nodeType": "MemberAccess", "referencedDeclaration": 1649, "src": "5998:32:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 600, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5998:45:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 601, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "5965:78:7", "trueExpression": {"id": 591, "name": "priceBtcUp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 134, "src": "5985:10:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 587, "id": 602, "nodeType": "Return", "src": "5958:85:7"}]}, "functionSelector": "f06847d6", "id": 604, "implemented": true, "kind": "function", "modifiers": [], "name": "getBtcUpPrice", "nodeType": "FunctionDefinition", "parameters": {"id": 584, "nodeType": "ParameterList", "parameters": [], "src": "5915:2:7"}, "returnParameters": {"id": 587, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 586, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 604, "src": "5939:7:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 585, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5939:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "5938:9:7"}, "scope": 778, "src": "5893:157:7", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"body": {"id": 624, "nodeType": "Block", "src": "6145:122:7", "statements": [{"expression": {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 611, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 609, "name": "amountBtcDown", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 151, "src": "6174:13:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "30", "id": 610, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6191:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "6174:18:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"arguments": [{"id": 620, "name": "amountBtcDown", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 151, "src": "6246:13:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"commonType": {"typeIdentifier": "t_rational_1000000_by_1", "typeString": "int_const 1000000"}, "id": 617, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": {"hexValue": "3130", "id": 615, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6233:2:7", "typeDescriptions": {"typeIdentifier": "t_rational_10_by_1", "typeString": "int_const 10"}, "value": "10"}, "nodeType": "BinaryOperation", "operator": "**", "rightExpression": {"hexValue": "36", "id": 616, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6239:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_6_by_1", "typeString": "int_const 6"}, "value": "6"}, "src": "6233:7:7", "typeDescriptions": {"typeIdentifier": "t_rational_1000000_by_1", "typeString": "int_const 1000000"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_1000000_by_1", "typeString": "int_const 1000000"}], "expression": {"id": 613, "name": "collateralBtcDown", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 145, "src": "6211:17:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 614, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "mul", "nodeType": "MemberAccess", "referencedDeclaration": 1634, "src": "6211:21:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 618, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6211:30:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 619, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "div", "nodeType": "MemberAccess", "referencedDeclaration": 1649, "src": "6211:34:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 621, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6211:49:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 622, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "6174:86:7", "trueExpression": {"id": 612, "name": "priceBtcDown", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 139, "src": "6196:12:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 608, "id": 623, "nodeType": "Return", "src": "6167:93:7"}]}, "functionSelector": "81c2b29b", "id": 625, "implemented": true, "kind": "function", "modifiers": [], "name": "getBtcDownPrice", "nodeType": "FunctionDefinition", "parameters": {"id": 605, "nodeType": "ParameterList", "parameters": [], "src": "6112:2:7"}, "returnParameters": {"id": 608, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 607, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 625, "src": "6136:7:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 606, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6136:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "6135:9:7"}, "scope": 778, "src": "6088:179:7", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"body": {"id": 648, "nodeType": "Block", "src": "6372:264:7", "statements": [{"assignments": [632], "declarations": [{"constant": false, "id": 632, "mutability": "mutable", "name": "priceFeed", "nodeType": "VariableDeclaration", "scope": 648, "src": "6382:31:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_AggregatorV3Interface_$1786", "typeString": "contract AggregatorV3Interface"}, "typeName": {"id": 631, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 630, "name": "AggregatorV3Interface", "nodeType": "IdentifierPath", "referencedDeclaration": 1786, "src": "6382:21:7"}, "referencedDeclaration": 1786, "src": "6382:21:7", "typeDescriptions": {"typeIdentifier": "t_contract$_AggregatorV3Interface_$1786", "typeString": "contract AggregatorV3Interface"}}, "visibility": "internal"}], "id": 636, "initialValue": {"arguments": [{"id": 634, "name": "addressBtcUSDFeed", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 163, "src": "6438:17:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 633, "name": "AggregatorV3Interface", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1786, "src": "6416:21:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$1786_$", "typeString": "type(contract AggregatorV3Interface)"}}, "id": 635, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6416:40:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_AggregatorV3Interface_$1786", "typeString": "contract AggregatorV3Interface"}}, "nodeType": "VariableDeclarationStatement", "src": "6382:74:7"}, {"assignments": [null, 638, null, null, null], "declarations": [null, {"constant": false, "id": 638, "mutability": "mutable", "name": "answer", "nodeType": "VariableDeclaration", "scope": 648, "src": "6468:13:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 637, "name": "int256", "nodeType": "ElementaryTypeName", "src": "6468:6:7", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}, null, null, null], "id": 642, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 639, "name": "priceFeed", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 632, "src": "6488:9:7", "typeDescriptions": {"typeIdentifier": "t_contract$_AggregatorV3Interface_$1786", "typeString": "contract AggregatorV3Interface"}}, "id": 640, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "latestRoundData", "nodeType": "MemberAccess", "referencedDeclaration": 1785, "src": "6488:25:7", "typeDescriptions": {"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$", "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"}}, "id": 641, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6488:27:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$", "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"}}, "nodeType": "VariableDeclarationStatement", "src": "6466:49:7"}, {"expression": {"arguments": [{"id": 645, "name": "answer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 638, "src": "6542:6:7", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_int256", "typeString": "int256"}], "id": 644, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "6534:7:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 643, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6534:7:7", "typeDescriptions": {}}}, "id": 646, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6534:15:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 629, "id": 647, "nodeType": "Return", "src": "6527:22:7"}]}, "functionSelector": "3a3610bc", "id": 649, "implemented": true, "kind": "function", "modifiers": [], "name": "getBtcPrice", "nodeType": "FunctionDefinition", "parameters": {"id": 626, "nodeType": "ParameterList", "parameters": [], "src": "6339:2:7"}, "returnParameters": {"id": 629, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 628, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 649, "src": "6363:7:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 627, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6363:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "6362:9:7"}, "scope": 778, "src": "6319:317:7", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"body": {"id": 665, "nodeType": "Block", "src": "6713:38:7", "statements": [{"expression": {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 660, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 658, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 651, "src": "6730:1:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<=", "rightExpression": {"id": 659, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 653, "src": "6735:1:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6730:6:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"id": 662, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 653, "src": "6743:1:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 663, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "6730:14:7", "trueExpression": {"id": 661, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 651, "src": "6739:1:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 657, "id": 664, "nodeType": "Return", "src": "6723:21:7"}]}, "id": 666, "implemented": true, "kind": "function", "modifiers": [], "name": "min", "nodeType": "FunctionDefinition", "parameters": {"id": 654, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 651, "mutability": "mutable", "name": "a", "nodeType": "VariableDeclaration", "scope": 666, "src": "6659:9:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 650, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6659:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 653, "mutability": "mutable", "name": "b", "nodeType": "VariableDeclaration", "scope": 666, "src": "6670:9:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 652, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6670:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "6658:22:7"}, "returnParameters": {"id": 657, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 656, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 666, "src": "6704:7:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 655, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6704:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "6703:9:7"}, "scope": 778, "src": "6646:105:7", "stateMutability": "pure", "virtual": false, "visibility": "internal"}, {"body": {"id": 708, "nodeType": "Block", "src": "6811:171:7", "statements": [{"assignments": [674], "declarations": [{"constant": false, "id": 674, "mutability": "mutable", "name": "denom", "nodeType": "VariableDeclaration", "scope": 708, "src": "6847:13:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 673, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6847:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 693, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 692, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 688, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 684, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"hexValue": "39", "id": 675, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6863:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_9_by_1", "typeString": "int_const 9"}, "value": "9"}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"components": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 682, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 678, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 676, "name": "x", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 668, "src": "6868:1:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "**", "rightExpression": {"hexValue": "32", "id": 677, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6873:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "src": "6868:6:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": {"commonType": {"typeIdentifier": "t_rational_1000000_by_1", "typeString": "int_const 1000000"}, "id": 681, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": {"hexValue": "3130", "id": 679, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6877:2:7", "typeDescriptions": {"typeIdentifier": "t_rational_10_by_1", "typeString": "int_const 10"}, "value": "10"}, "nodeType": "BinaryOperation", "operator": "**", "rightExpression": {"hexValue": "36", "id": 680, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6883:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_6_by_1", "typeString": "int_const 6"}, "value": "6"}, "src": "6877:7:7", "typeDescriptions": {"typeIdentifier": "t_rational_1000000_by_1", "typeString": "int_const 1000000"}}, "src": "6868:16:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 683, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "6867:18:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6863:22:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 687, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"hexValue": "33", "id": 685, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6889:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_3_by_1", "typeString": "int_const 3"}, "value": "3"}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"id": 686, "name": "x", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 668, "src": "6893:1:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6889:5:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6863:31:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"commonType": {"typeIdentifier": "t_rational_1000000_by_1", "typeString": "int_const 1000000"}, "id": 691, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": {"hexValue": "3130", "id": 689, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6897:2:7", "typeDescriptions": {"typeIdentifier": "t_rational_10_by_1", "typeString": "int_const 10"}, "value": "10"}, "nodeType": "BinaryOperation", "operator": "**", "rightExpression": {"hexValue": "36", "id": 690, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6903:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_6_by_1", "typeString": "int_const 6"}, "value": "6"}, "src": "6897:7:7", "typeDescriptions": {"typeIdentifier": "t_rational_1000000_by_1", "typeString": "int_const 1000000"}}, "src": "6863:41:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "6847:57:7"}, {"assignments": [695], "declarations": [{"constant": false, "id": 695, "mutability": "mutable", "name": "num", "nodeType": "VariableDeclaration", "scope": 708, "src": "6914:11:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 694, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6914:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 699, "initialValue": {"commonType": {"typeIdentifier": "t_rational_1000000000000_by_1", "typeString": "int_const 1000000000000"}, "id": 698, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": {"hexValue": "3130", "id": 696, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6928:2:7", "typeDescriptions": {"typeIdentifier": "t_rational_10_by_1", "typeString": "int_const 10"}, "value": "10"}, "nodeType": "BinaryOperation", "operator": "**", "rightExpression": {"hexValue": "3132", "id": 697, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6934:2:7", "typeDescriptions": {"typeIdentifier": "t_rational_12_by_1", "typeString": "int_const 12"}, "value": "12"}, "src": "6928:8:7", "typeDescriptions": {"typeIdentifier": "t_rational_1000000000000_by_1", "typeString": "int_const 1000000000000"}}, "nodeType": "VariableDeclarationStatement", "src": "6914:22:7"}, {"expression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 706, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_rational_1000000_by_1", "typeString": "int_const 1000000"}, "id": 702, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": {"hexValue": "3130", "id": 700, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6954:2:7", "typeDescriptions": {"typeIdentifier": "t_rational_10_by_1", "typeString": "int_const 10"}, "value": "10"}, "nodeType": "BinaryOperation", "operator": "**", "rightExpression": {"hexValue": "36", "id": 701, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6960:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_6_by_1", "typeString": "int_const 6"}, "value": "6"}, "src": "6954:7:7", "typeDescriptions": {"typeIdentifier": "t_rational_1000000_by_1", "typeString": "int_const 1000000"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 705, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 703, "name": "num", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 695, "src": "6964:3:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": {"id": 704, "name": "denom", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 674, "src": "6970:5:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6964:11:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6954:21:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 672, "id": 707, "nodeType": "Return", "src": "6947:28:7"}]}, "id": 709, "implemented": true, "kind": "function", "modifiers": [], "name": "L", "nodeType": "FunctionDefinition", "parameters": {"id": 669, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 668, "mutability": "mutable", "name": "x", "nodeType": "VariableDeclaration", "scope": 709, "src": "6768:9:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 667, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6768:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "6767:11:7"}, "returnParameters": {"id": 672, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 671, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 709, "src": "6802:7:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 670, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6802:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "6801:9:7"}, "scope": 778, "src": "6757:225:7", "stateMutability": "pure", "virtual": false, "visibility": "internal"}, {"body": {"id": 752, "nodeType": "Block", "src": "7060:246:7", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 718, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 716, "name": "btcPrice", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 711, "src": "7091:8:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"id": 717, "name": "lastBtcPrice", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 154, "src": "7102:12:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7091:23:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 750, "nodeType": "Block", "src": "7215:84:7", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_rational_1000000_by_1", "typeString": "int_const 1000000"}, "id": 747, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": {"hexValue": "3130", "id": 745, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7280:2:7", "typeDescriptions": {"typeIdentifier": "t_rational_10_by_1", "typeString": "int_const 10"}, "value": "10"}, "nodeType": "BinaryOperation", "operator": "**", "rightExpression": {"hexValue": "36", "id": 746, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7286:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_6_by_1", "typeString": "int_const 6"}, "value": "6"}, "src": "7280:7:7", "typeDescriptions": {"typeIdentifier": "t_rational_1000000_by_1", "typeString": "int_const 1000000"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_1000000_by_1", "typeString": "int_const 1000000"}], "expression": {"arguments": [{"id": 742, "name": "btcPrice", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 711, "src": "7266:8:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"commonType": {"typeIdentifier": "t_rational_1000000_by_1", "typeString": "int_const 1000000"}, "id": 739, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": {"hexValue": "3130", "id": 737, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7253:2:7", "typeDescriptions": {"typeIdentifier": "t_rational_10_by_1", "typeString": "int_const 10"}, "value": "10"}, "nodeType": "BinaryOperation", "operator": "**", "rightExpression": {"hexValue": "36", "id": 738, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7259:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_6_by_1", "typeString": "int_const 6"}, "value": "6"}, "src": "7253:7:7", "typeDescriptions": {"typeIdentifier": "t_rational_1000000_by_1", "typeString": "int_const 1000000"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_1000000_by_1", "typeString": "int_const 1000000"}], "expression": {"id": 735, "name": "lastBtcPrice", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 154, "src": "7236:12:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 736, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "mul", "nodeType": "MemberAccess", "referencedDeclaration": 1634, "src": "7236:16:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 740, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7236:25:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 741, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "div", "nodeType": "MemberAccess", "referencedDeclaration": 1649, "src": "7236:29:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 743, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7236:39:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 744, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sub", "nodeType": "MemberAccess", "referencedDeclaration": 1619, "src": "7236:43:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 748, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7236:52:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 715, "id": 749, "nodeType": "Return", "src": "7229:59:7"}]}, "id": 751, "nodeType": "IfStatement", "src": "7087:212:7", "trueBody": {"id": 734, "nodeType": "Block", "src": "7116:84:7", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_rational_1000000_by_1", "typeString": "int_const 1000000"}, "id": 731, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": {"hexValue": "3130", "id": 729, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7181:2:7", "typeDescriptions": {"typeIdentifier": "t_rational_10_by_1", "typeString": "int_const 10"}, "value": "10"}, "nodeType": "BinaryOperation", "operator": "**", "rightExpression": {"hexValue": "36", "id": 730, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7187:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_6_by_1", "typeString": "int_const 6"}, "value": "6"}, "src": "7181:7:7", "typeDescriptions": {"typeIdentifier": "t_rational_1000000_by_1", "typeString": "int_const 1000000"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_1000000_by_1", "typeString": "int_const 1000000"}], "expression": {"arguments": [{"id": 726, "name": "lastBtcPrice", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 154, "src": "7163:12:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"commonType": {"typeIdentifier": "t_rational_1000000_by_1", "typeString": "int_const 1000000"}, "id": 723, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": {"hexValue": "3130", "id": 721, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7150:2:7", "typeDescriptions": {"typeIdentifier": "t_rational_10_by_1", "typeString": "int_const 10"}, "value": "10"}, "nodeType": "BinaryOperation", "operator": "**", "rightExpression": {"hexValue": "36", "id": 722, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7156:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_6_by_1", "typeString": "int_const 6"}, "value": "6"}, "src": "7150:7:7", "typeDescriptions": {"typeIdentifier": "t_rational_1000000_by_1", "typeString": "int_const 1000000"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_1000000_by_1", "typeString": "int_const 1000000"}], "expression": {"id": 719, "name": "btcPrice", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 711, "src": "7137:8:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 720, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "mul", "nodeType": "MemberAccess", "referencedDeclaration": 1634, "src": "7137:12:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 724, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7137:21:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 725, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "div", "nodeType": "MemberAccess", "referencedDeclaration": 1649, "src": "7137:25:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 727, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7137:39:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 728, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sub", "nodeType": "MemberAccess", "referencedDeclaration": 1619, "src": "7137:43:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 732, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7137:52:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 715, "id": 733, "nodeType": "Return", "src": "7130:59:7"}]}}]}, "id": 753, "implemented": true, "kind": "function", "modifiers": [], "name": "getPriceDiff", "nodeType": "FunctionDefinition", "parameters": {"id": 712, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 711, "mutability": "mutable", "name": "btcPrice", "nodeType": "VariableDeclaration", "scope": 753, "src": "7010:16:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 710, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7010:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "7009:18:7"}, "returnParameters": {"id": 715, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 714, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 753, "src": "7051:7:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 713, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7051:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "7050:9:7"}, "scope": 778, "src": "6988:318:7", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 764, "nodeType": "Block", "src": "7368:51:7", "statements": [{"expression": {"arguments": [{"expression": {"id": 760, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "7401:3:7", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 761, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "7401:10:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"id": 758, "name": "btcUp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 170, "src": "7385:5:7", "typeDescriptions": {"typeIdentifier": "t_contract$_BTCUP_$80", "typeString": "contract BTCUP"}}, "id": 759, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "balanceOf", "nodeType": "MemberAccess", "referencedDeclaration": 981, "src": "7385:15:7", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$", "typeString": "function (address) view external returns (uint256)"}}, "id": 762, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7385:27:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 757, "id": 763, "nodeType": "Return", "src": "7378:34:7"}]}, "functionSelector": "157d0129", "id": 765, "implemented": true, "kind": "function", "modifiers": [], "name": "getBtcupBalance", "nodeType": "FunctionDefinition", "parameters": {"id": 754, "nodeType": "ParameterList", "parameters": [], "src": "7336:2:7"}, "returnParameters": {"id": 757, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 756, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 765, "src": "7359:7:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 755, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7359:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "7358:9:7"}, "scope": 778, "src": "7312:107:7", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"body": {"id": 776, "nodeType": "Block", "src": "7483:53:7", "statements": [{"expression": {"arguments": [{"expression": {"id": 772, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "7518:3:7", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 773, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "7518:10:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"id": 770, "name": "btcDown", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 177, "src": "7500:7:7", "typeDescriptions": {"typeIdentifier": "t_contract$_BTCDOWN_$124", "typeString": "contract BTCDOWN"}}, "id": 771, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "balanceOf", "nodeType": "MemberAccess", "referencedDeclaration": 981, "src": "7500:17:7", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$", "typeString": "function (address) view external returns (uint256)"}}, "id": 774, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7500:29:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 769, "id": 775, "nodeType": "Return", "src": "7493:36:7"}]}, "functionSelector": "c7e3b124", "id": 777, "implemented": true, "kind": "function", "modifiers": [], "name": "getBtcdownBalance", "nodeType": "FunctionDefinition", "parameters": {"id": 766, "nodeType": "ParameterList", "parameters": [], "src": "7451:2:7"}, "returnParameters": {"id": 769, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 768, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 777, "src": "7474:7:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 767, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7474:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "7473:9:7"}, "scope": 778, "src": "7425:111:7", "stateMutability": "view", "virtual": false, "visibility": "public"}], "scope": 779, "src": "1303:6236:7"}], "src": "32:7509:7"}, "bytecode": "60806040819052620f42406001819055600255600060038190556004819055600581905560068190556007556008805474b7a4f3e9097c08da09517b5ab877f7a917224ede006001600160a81b0319909116179055600980546001600160a01b031916736135b13325bfc4b00278b4abc5e20bbce2d6580e1790556100839061017f565b604051809103906000f08015801561009f573d6000803e3d6000fd5b50600a80546001600160a01b0319166001600160a01b03929092169190911790556040516100cc9061018d565b604051809103906000f0801580156100e8573d6000803e3d6000fd5b50600b80546001600160a01b0319166001600160a01b039290921691909117905534801561011557600080fd5b5061012661012161012b565b61012f565b61019b565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610e41806200126e83390190565b610e4580620020af83390190565b6110c380620001ab6000396000f3fe608060405234801561001057600080fd5b50600436106101415760003560e01c8063a14274e8116100b8578063dde7be2c1161007c578063dde7be2c14610224578063f0156e8a1461022c578063f06847d614610234578063f2fde38b1461023c578063f4352c571461024f578063f530c04a1461025757610141565b8063a14274e8146101db578063b75cbe0b146101ee578063c46d4f09146101f6578063c7e3b12414610209578063d1ee539d1461021157610141565b80633a3610bc1161010a5780633a3610bc146101915780636e5d661514610199578063715018a6146101a357806381c2b29b146101ab5780638da5cb5b146101b35780639b3075a1146101c857610141565b806234b9cc146101465780630c3e53431461016457806314d7c6d21461016c578063157d0129146101745780633074fff71461017c575b600080fd5b61014e61026a565b60405161015b9190610ee9565b60405180910390f35b61014e610270565b61014e610276565b61014e61027c565b610184610302565b60405161015b9190610dbe565b61014e61030b565b6101a1610398565b005b6101a1610428565b61014e61047c565b6101bb6104b8565b60405161015b9190610d6d565b6101a16101d6366004610cee565b6104c7565b6101a16101e9366004610cee565b610555565b61014e6106b1565b6101a1610204366004610cee565b6106b7565b61014e61080c565b6101a161021f366004610cee565b61083d565b61014e610926565b61014e61092c565b61014e610932565b6101a161024a366004610ca7565b610963565b61014e6109d4565b6101a1610265366004610cee565b6109da565b60055481565b60025481565b60045481565b600a546040516370a0823160e01b81526000916001600160a01b0316906370a08231906102ad903390600401610d6d565b60206040518083038186803b1580156102c557600080fd5b505afa1580156102d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102fd9190610d06565b905090565b60085460ff1681565b60095460408051633fabe5a360e21b815290516000926001600160a01b0316918391839163feaf968c9160048083019260a0929190829003018186803b15801561035457600080fd5b505afa158015610368573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038c9190610d1e565b50919550505050505090565b60006103a261030b565b905060006003541180156103b857506000600454115b156104235760006103c882610ac1565b905060006103d583610aff565b1315610400576003546103e89082610b1c565b6003556004546103f89082610b2f565b600455610421565b60035461040d9082610b2f565b60035560045461041d9082610b1c565b6004555b505b600755565b610430610b3b565b6001600160a01b03166104416104b8565b6001600160a01b0316146104705760405162461bcd60e51b815260040161046790610e7d565b60405180910390fd5b61047a6000610b3f565b565b60006006546000146104b1576104ac6006546104a6620f4240600454610b8f90919063ffffffff16565b90610b9b565b6102fd565b5060025490565b6000546001600160a01b031690565b6104cf610b3b565b6001600160a01b03166104e06104b8565b6001600160a01b0316146105065760405162461bcd60e51b815260040161046790610e7d565b60085460ff16156105295760405162461bcd60e51b815260040161046790610e46565b610537610265826002610b9b565b610545610204826002610b9b565b506008805460ff19166001179055565b61055d610398565b600b54604051630852cd8d60e31b81526001600160a01b03909116906342966c689061058d908490600401610ee9565b600060405180830381600087803b1580156105a757600080fd5b505af11580156105bb573d6000803e3d6000fd5b505050506105c761047c565b60028190556000906105e390620f4240906104a6908590610b8f565b6006549091506105f39083610b2f565b6006556004546106039082610b2f565b600490815560085460405163a9059cbb60e01b81526101009091046001600160a01b031691829163a9059cbb9161063e913391879101610da5565b602060405180830381600087803b15801561065857600080fd5b505af115801561066c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106909190610cce565b6106ac5760405162461bcd60e51b815260040161046790610dc9565b505050565b60065481565b6106bf610398565b6106c761047c565b60028190556000906106e0906104a684620f4240610b8f565b600b5460405163140e25ad60e31b81529192506001600160a01b03169063a0712d6890610711908490600401610ee9565b600060405180830381600087803b15801561072b57600080fd5b505af115801561073f573d6000803e3d6000fd5b50506006546107519250905082610b1c565b6006556004546107619083610b1c565b60049081556008546040516323b872dd60e01b81526101009091046001600160a01b03169182916323b872dd9161079e9133913091899101610d81565b602060405180830381600087803b1580156107b857600080fd5b505af11580156107cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f09190610cce565b6106ac5760405162461bcd60e51b815260040161046790610eb2565b600b546040516370a0823160e01b81526000916001600160a01b0316906370a08231906102ad903390600401610d6d565b610845610398565b600a54604051630852cd8d60e31b81526001600160a01b03909116906342966c6890610875908490600401610ee9565b600060405180830381600087803b15801561088f57600080fd5b505af11580156108a3573d6000803e3d6000fd5b505050506108af610932565b60018190556000906108cb90620f4240906104a6908590610b8f565b6005549091506108db9083610b2f565b6005556003546108eb9082610b2f565b60035560085460405163a9059cbb60e01b81526101009091046001600160a01b031690819063a9059cbb9061063e9033908690600401610da5565b60035481565b60015481565b600060055460001461095c576104ac6005546104a6620f4240600354610b8f90919063ffffffff16565b5060015490565b61096b610b3b565b6001600160a01b031661097c6104b8565b6001600160a01b0316146109a25760405162461bcd60e51b815260040161046790610e7d565b6001600160a01b0381166109c85760405162461bcd60e51b815260040161046790610e00565b6109d181610b3f565b50565b60075481565b6109e2610398565b6109ea610932565b6001819055600090610a03906104a684620f4240610b8f565b600a5460405163140e25ad60e31b81529192506001600160a01b03169063a0712d6890610a34908490600401610ee9565b600060405180830381600087803b158015610a4e57600080fd5b505af1158015610a62573d6000803e3d6000fd5b5050600554610a749250905082610b1c565b600555600354610a849083610b1c565b6003556008546040516323b872dd60e01b81526101009091046001600160a01b03169081906323b872dd9061079e90339030908890600401610d81565b600080610acd83610ba7565b9050610af6620f42406104a6610ae284610c06565b610af0600354600454610c76565b90610b8f565b9150505b919050565b6000600754821115610b1357506001610afa565b50600019610afa565b6000610b288284610ef2565b9392505050565b6000610b288284611060565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000610b288284611041565b6000610b288284610f0a565b6000600754821115610be357610bdc620f4240610bd66007546104a6620f424087610b8f90919063ffffffff16565b90610b2f565b9050610afa565b610bdc620f4240610bd6846104a6620f4240600754610b8f90919063ffffffff16565b600080610c14836003611041565b620f4240610c23600286610f70565b610c2d9190610f0a565b610c38906009611041565b610c429190610ef2565b610c4f90620f4240610ef2565b905064e8d4a51000610c618282610f0a565b610c6e90620f4240611060565b949350505050565b600081831115610c865781610b28565b5090919050565b805169ffffffffffffffffffff81168114610afa57600080fd5b600060208284031215610cb8578081fd5b81356001600160a01b0381168114610b28578182fd5b600060208284031215610cdf578081fd5b81518015158114610b28578182fd5b600060208284031215610cff578081fd5b5035919050565b600060208284031215610d17578081fd5b5051919050565b600080600080600060a08688031215610d35578081fd5b610d3e86610c8d565b9450602086015193506040860151925060608601519150610d6160808701610c8d565b90509295509295909350565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b60208082526019908201527f4e6f7420656e6f756768207573646320617661696c61626c6500000000000000604082015260600190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252601f908201527f54686520706f6f6c2077617320616c726561647920696e697469617465642e00604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601b908201527f596f7520646f6e2774206861766520656e6f75676820555344432e0000000000604082015260600190565b90815260200190565b60008219821115610f0557610f05611077565b500190565b600082610f2557634e487b7160e01b81526012600452602481fd5b500490565b80825b6001808611610f3c5750610f67565b818704821115610f4e57610f4e611077565b80861615610f5b57918102915b9490941c938002610f2d565b94509492505050565b6000610b2860001960ff851684600082610f8c57506001610b28565b81610f9957506000610b28565b8160018114610faf5760028114610fb957610fe6565b6001915050610b28565b60ff841115610fca57610fca611077565b6001841b915084821115610fe057610fe0611077565b50610b28565b5060208310610133831016604e8410600b8410161715611019575081810a8381111561101457611014611077565b610b28565b6110268484846001610f2a565b80860482111561103857611038611077565b02949350505050565b600081600019048311821515161561105b5761105b611077565b500290565b60008282101561107257611072611077565b500390565b634e487b7160e01b600052601160045260246000fdfea26469706673582212201cba9de5a754d9fbf758f6828b25341843a30cee5dd54e3e3c87352d737dc2a464736f6c6343000800003360806040523480156200001157600080fd5b50604080518082018252600a8152690426974636f696e2055760b41b602080830191825283518085019094526005845264042544355560dc1b908401528151919291620000619160039162000080565b5080516200007790600490602084019062000080565b50505062000163565b8280546200008e9062000126565b90600052602060002090601f016020900481019282620000b25760008555620000fd565b82601f10620000cd57805160ff1916838001178555620000fd565b82800160010185558215620000fd579182015b82811115620000fd578251825591602001919060010190620000e0565b506200010b9291506200010f565b5090565b5b808211156200010b576000815560010162000110565b6002810460018216806200013b57607f821691505b602082108114156200015d57634e487b7160e01b600052602260045260246000fd5b50919050565b610cce80620001736000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806342966c681161008c578063a0712d6811610066578063a0712d6814610192578063a457c2d7146101a5578063a9059cbb146101b8578063dd62ed3e146101cb576100cf565b806342966c681461016257806370a082311461017757806395d89b411461018a576100cf565b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461011257806323b872dd14610127578063313ce5671461013a578063395093511461014f575b600080fd5b6100dc6101de565b6040516100e99190610913565b60405180910390f35b6101056101003660046108c7565b610270565b6040516100e99190610908565b61011a61028d565b6040516100e99190610c01565b61010561013536600461088c565b610293565b61014261032c565b6040516100e99190610c0a565b61010561015d3660046108c7565b610331565b6101756101703660046108f0565b610385565b005b61011a610185366004610839565b610392565b6100dc6103b1565b6101756101a03660046108f0565b6103c0565b6101056101b33660046108c7565b6103ca565b6101056101c63660046108c7565b610443565b61011a6101d936600461085a565b610457565b6060600380546101ed90610c47565b80601f016020809104026020016040519081016040528092919081815260200182805461021990610c47565b80156102665780601f1061023b57610100808354040283529160200191610266565b820191906000526020600020905b81548152906001019060200180831161024957829003601f168201915b5050505050905090565b600061028461027d610482565b8484610486565b50600192915050565b60025490565b60006102a084848461053a565b6001600160a01b0384166000908152600160205260408120816102c1610482565b6001600160a01b03166001600160a01b031681526020019081526020016000205490508281101561030d5760405162461bcd60e51b815260040161030490610a73565b60405180910390fd5b61032185610319610482565b858403610486565b506001949350505050565b600690565b600061028461033e610482565b84846001600061034c610482565b6001600160a01b03908116825260208083019390935260409182016000908120918b16815292529020546103809190610c18565b610486565b61038f3282610664565b50565b6001600160a01b0381166000908152602081905260409020545b919050565b6060600480546101ed90610c47565b61038f3282610756565b600080600160006103d9610482565b6001600160a01b03908116825260208083019390935260409182016000908120918816815292529020549050828110156104255760405162461bcd60e51b815260040161030490610b85565b610439610430610482565b85858403610486565b5060019392505050565b6000610284610450610482565b848461053a565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166104ac5760405162461bcd60e51b815260040161030490610b41565b6001600160a01b0382166104d25760405162461bcd60e51b8152600401610304906109eb565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061052d908590610c01565b60405180910390a3505050565b6001600160a01b0383166105605760405162461bcd60e51b815260040161030490610afc565b6001600160a01b0382166105865760405162461bcd60e51b815260040161030490610966565b610591838383610751565b6001600160a01b038316600090815260208190526040902054818110156105ca5760405162461bcd60e51b815260040161030490610a2d565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610601908490610c18565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161064b9190610c01565b60405180910390a361065e848484610751565b50505050565b6001600160a01b03821661068a5760405162461bcd60e51b815260040161030490610abb565b61069682600083610751565b6001600160a01b038216600090815260208190526040902054818110156106cf5760405162461bcd60e51b8152600401610304906109a9565b6001600160a01b03831660009081526020819052604081208383039055600280548492906106fe908490610c30565b90915550506040516000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610741908690610c01565b60405180910390a3610751836000845b505050565b6001600160a01b03821661077c5760405162461bcd60e51b815260040161030490610bca565b61078860008383610751565b806002600082825461079a9190610c18565b90915550506001600160a01b038216600090815260208190526040812080548392906107c7908490610c18565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061080a908590610c01565b60405180910390a361081e60008383610751565b5050565b80356001600160a01b03811681146103ac57600080fd5b60006020828403121561084a578081fd5b61085382610822565b9392505050565b6000806040838503121561086c578081fd5b61087583610822565b915061088360208401610822565b90509250929050565b6000806000606084860312156108a0578081fd5b6108a984610822565b92506108b760208501610822565b9150604084013590509250925092565b600080604083850312156108d9578182fd5b6108e283610822565b946020939093013593505050565b600060208284031215610901578081fd5b5035919050565b901515815260200190565b6000602080835283518082850152825b8181101561093f57858101830151858201604001528201610923565b818111156109505783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526022908201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604082015261636560f01b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b60208082526028908201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616040820152676c6c6f77616e636560c01b606082015260800190565b60208082526021908201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736040820152607360f81b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604082015264207a65726f60d81b606082015260800190565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b60ff91909116815260200190565b60008219821115610c2b57610c2b610c82565b500190565b600082821015610c4257610c42610c82565b500390565b600281046001821680610c5b57607f821691505b60208210811415610c7c57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220241f93fff893c0ad9b2f67fbac7729f578fe8ca6ec742ad73fcf9763c1ddca4164736f6c6343000800003360806040523480156200001157600080fd5b50604080518082018252600c81526b2134ba31b7b4b7102237bbb760a11b602080830191825283518085019094526007845266212a21a227aba760c91b908401528151919291620000659160039162000084565b5080516200007b90600490602084019062000084565b50505062000167565b82805462000092906200012a565b90600052602060002090601f016020900481019282620000b6576000855562000101565b82601f10620000d157805160ff191683800117855562000101565b8280016001018555821562000101579182015b8281111562000101578251825591602001919060010190620000e4565b506200010f92915062000113565b5090565b5b808211156200010f576000815560010162000114565b6002810460018216806200013f57607f821691505b602082108114156200016157634e487b7160e01b600052602260045260246000fd5b50919050565b610cce80620001776000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806342966c681161008c578063a0712d6811610066578063a0712d6814610192578063a457c2d7146101a5578063a9059cbb146101b8578063dd62ed3e146101cb576100cf565b806342966c681461016257806370a082311461017757806395d89b411461018a576100cf565b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461011257806323b872dd14610127578063313ce5671461013a578063395093511461014f575b600080fd5b6100dc6101de565b6040516100e99190610913565b60405180910390f35b6101056101003660046108c7565b610270565b6040516100e99190610908565b61011a61028d565b6040516100e99190610c01565b61010561013536600461088c565b610293565b61014261032c565b6040516100e99190610c0a565b61010561015d3660046108c7565b610331565b6101756101703660046108f0565b610385565b005b61011a610185366004610839565b610392565b6100dc6103b1565b6101756101a03660046108f0565b6103c0565b6101056101b33660046108c7565b6103ca565b6101056101c63660046108c7565b610443565b61011a6101d936600461085a565b610457565b6060600380546101ed90610c47565b80601f016020809104026020016040519081016040528092919081815260200182805461021990610c47565b80156102665780601f1061023b57610100808354040283529160200191610266565b820191906000526020600020905b81548152906001019060200180831161024957829003601f168201915b5050505050905090565b600061028461027d610482565b8484610486565b50600192915050565b60025490565b60006102a084848461053a565b6001600160a01b0384166000908152600160205260408120816102c1610482565b6001600160a01b03166001600160a01b031681526020019081526020016000205490508281101561030d5760405162461bcd60e51b815260040161030490610a73565b60405180910390fd5b61032185610319610482565b858403610486565b506001949350505050565b600690565b600061028461033e610482565b84846001600061034c610482565b6001600160a01b03908116825260208083019390935260409182016000908120918b16815292529020546103809190610c18565b610486565b61038f3282610664565b50565b6001600160a01b0381166000908152602081905260409020545b919050565b6060600480546101ed90610c47565b61038f3282610756565b600080600160006103d9610482565b6001600160a01b03908116825260208083019390935260409182016000908120918816815292529020549050828110156104255760405162461bcd60e51b815260040161030490610b85565b610439610430610482565b85858403610486565b5060019392505050565b6000610284610450610482565b848461053a565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166104ac5760405162461bcd60e51b815260040161030490610b41565b6001600160a01b0382166104d25760405162461bcd60e51b8152600401610304906109eb565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061052d908590610c01565b60405180910390a3505050565b6001600160a01b0383166105605760405162461bcd60e51b815260040161030490610afc565b6001600160a01b0382166105865760405162461bcd60e51b815260040161030490610966565b610591838383610751565b6001600160a01b038316600090815260208190526040902054818110156105ca5760405162461bcd60e51b815260040161030490610a2d565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610601908490610c18565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161064b9190610c01565b60405180910390a361065e848484610751565b50505050565b6001600160a01b03821661068a5760405162461bcd60e51b815260040161030490610abb565b61069682600083610751565b6001600160a01b038216600090815260208190526040902054818110156106cf5760405162461bcd60e51b8152600401610304906109a9565b6001600160a01b03831660009081526020819052604081208383039055600280548492906106fe908490610c30565b90915550506040516000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610741908690610c01565b60405180910390a3610751836000845b505050565b6001600160a01b03821661077c5760405162461bcd60e51b815260040161030490610bca565b61078860008383610751565b806002600082825461079a9190610c18565b90915550506001600160a01b038216600090815260208190526040812080548392906107c7908490610c18565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061080a908590610c01565b60405180910390a361081e60008383610751565b5050565b80356001600160a01b03811681146103ac57600080fd5b60006020828403121561084a578081fd5b61085382610822565b9392505050565b6000806040838503121561086c578081fd5b61087583610822565b915061088360208401610822565b90509250929050565b6000806000606084860312156108a0578081fd5b6108a984610822565b92506108b760208501610822565b9150604084013590509250925092565b600080604083850312156108d9578182fd5b6108e283610822565b946020939093013593505050565b600060208284031215610901578081fd5b5035919050565b901515815260200190565b6000602080835283518082850152825b8181101561093f57858101830151858201604001528201610923565b818111156109505783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526022908201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604082015261636560f01b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b60208082526028908201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616040820152676c6c6f77616e636560c01b606082015260800190565b60208082526021908201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736040820152607360f81b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604082015264207a65726f60d81b606082015260800190565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b60ff91909116815260200190565b60008219821115610c2b57610c2b610c82565b500190565b600082821015610c4257610c42610c82565b500390565b600281046001821680610c5b57607f821691505b60208210811415610c7c57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220b5d5cd953e1bf162f8b700eebe777107e3a180fc7935fdf9c14e656b2bcd4ace64736f6c63430008000033", "bytecodeSha1": "6cd804a82a30721a4a7486fdb40a36fe9da6e106", "compiler": {"evm_version": "istanbul", "optimizer": {"enabled": true, "runs": 200}, "version": "0.8.0+commit.c7dfd78e"}, "contractName": "LeveragedTrading", "coverageMap": {"branches": {"0": {"Ownable.transferOwnership": {"66": [1185, 1208, true], "67": [1934, 1956, true]}}, "1": {}, "2": {}, "3": {}, "4": {}, "5": {}, "6": {}, "7": {"LeveragedTrading.getBtcDownPrice": {"56": [6174, 6192, true]}, "LeveragedTrading.getBtcUpPrice": {"61": [5965, 5981, true]}, "LeveragedTrading.getPriceDiff": {"64": [7091, 7114, false]}, "LeveragedTrading.getSign": {"63": [5514, 5537, false]}, "LeveragedTrading.initiatePool": {"57": [2257, 2273, true]}, "LeveragedTrading.issueBtcDown": {"59": [3431, 3487, true]}, "LeveragedTrading.issueBtcUp": {"62": [2874, 2930, true]}, "LeveragedTrading.min": {"65": [6730, 6736, true]}, "LeveragedTrading.rebalanceLeveragedTokens": {"55": [4839, 4860, false]}, "LeveragedTrading.redeemBtcDown": {"58": [4522, 4560, true]}, "LeveragedTrading.redeemBtcUp": {"60": [3974, 4011, true]}}}, "statements": {"0": {"Ownable._setOwner": {"47": [2131, 2148], "48": [2158, 2203]}, "Ownable.owner": {"8": [1038, 1051]}, "Ownable.renounceOwnership": {"6": [1669, 1690]}, "Ownable.transferOwnership": {"33": [1926, 1999], "34": [2009, 2028]}}, "1": {}, "2": {}, "3": {}, "4": {"Context._msgSender": {"46": [658, 675]}}, "5": {"SafeMath.add": {"44": [2749, 2761]}, "SafeMath.div": {"50": [3844, 3856]}, "SafeMath.mul": {"49": [3459, 3471]}, "SafeMath.sub": {"45": [3116, 3128]}}, "6": {}, "7": {"LeveragedTrading.L": {"53": [6947, 6975]}, "LeveragedTrading.getBtcDownPrice": {"7": [6167, 6260]}, "LeveragedTrading.getBtcUpPrice": {"32": [5958, 6043]}, "LeveragedTrading.getBtcdownBalance": {"25": [7493, 7529]}, "LeveragedTrading.getBtcupBalance": {"0": [7378, 7412]}, "LeveragedTrading.getPriceDiff": {"51": [7130, 7189], "52": [7229, 7288]}, "LeveragedTrading.getRebalanceAmount": {"41": [5773, 5850]}, "LeveragedTrading.getSign": {"42": [5553, 5561], "43": [5600, 5609]}, "LeveragedTrading.initiatePool": {"9": [2249, 2309], "10": [2320, 2349], "11": [2359, 2390], "12": [2401, 2423]}, "LeveragedTrading.issueBtcDown": {"19": [3034, 3060], "20": [3079, 3111], "21": [3205, 3240], "22": [3250, 3306], "23": [3316, 3369], "24": [3423, 3519]}, "LeveragedTrading.issueBtcUp": {"35": [2493, 2519], "36": [2538, 2566], "37": [2658, 2691], "38": [2701, 2753], "39": [2763, 2812], "40": [2866, 2962]}, "LeveragedTrading.min": {"54": [6723, 6744]}, "LeveragedTrading.rebalanceLeveragedTokens": {"1": [4880, 4934], "2": [4952, 5010], "3": [5062, 5116], "4": [5134, 5192], "5": [5228, 5251]}, "LeveragedTrading.redeemBtcDown": {"13": [4125, 4151], "14": [4161, 4196], "15": [4207, 4239], "16": [4341, 4397], "17": [4407, 4460], "18": [4514, 4590]}, "LeveragedTrading.redeemBtcUp": {"26": [3601, 3627], "27": [3637, 3670], "28": [3681, 3709], "29": [3801, 3853], "30": [3863, 3912], "31": [3966, 4041]}}}}, "dependencies": ["smartcontractkit/chainlink@1.3.0/AggregatorV3Interface", "BTCDOWN", "BTCUP", "OpenZeppelin/openzeppelin-contracts@4.2.0/Context", "OpenZeppelin/openzeppelin-contracts@4.2.0/ERC20", "IERC20", "OpenZeppelin/openzeppelin-contracts@4.2.0/IERC20", "OpenZeppelin/openzeppelin-contracts@4.2.0/IERC20Metadata", "OpenZeppelin/openzeppelin-contracts@4.2.0/Ownable", "OpenZeppelin/openzeppelin-contracts@4.2.0/SafeMath"], "deployedBytecode": "", "deployedSourceMap": "1303:6236:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1590:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1420:37;;;:::i;1547:36::-;;;:::i;7312:107::-;;;:::i;1792:35::-;;;:::i;:::-;;;;;;;:::i;6319:317::-;;;:::i;4604:654::-;;;:::i;:::-;;1605:92:0;;;:::i;6088:179:7:-;;;:::i;973:85:0:-;;;:::i;:::-;;;;;;;:::i;2180:250:7:-;;;;;;:::i;:::-;;:::i;4054:544::-;;;;;;:::i;:::-;;:::i;1650:32::-;;;:::i;2975:551::-;;;;;;:::i;:::-;;:::i;7425:111::-;;;:::i;3532:516::-;;;;;;:::i;:::-;;:::i;1485:34::-;;;:::i;1379:35::-;;;:::i;5893:157::-;;;:::i;1846:189:0:-;;;;;;:::i;:::-;;:::i;1711:31:7:-;;;:::i;2436:533::-;;;;;;:::i;:::-;;:::i;1590:30::-;;;;:::o;1420:37::-;;;;:::o;1547:36::-;;;;:::o;7312:107::-;7385:5;;:27;;-1:-1:-1;;;7385:27:7;;7359:7;;-1:-1:-1;;;;;7385:5:7;;:15;;:27;;7401:10;;7385:27;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7378:34;;7312:107;:::o;1792:35::-;;;;;;:::o;6319:317::-;6438:17;;6488:27;;;-1:-1:-1;;;6488:27:7;;;;6363:7;;-1:-1:-1;;;;;6438:17:7;;6363:7;;6438:17;;6488:25;;:27;;;;;;;;;;;;;;6438:17;6488:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6466:49:7;;-1:-1:-1;;;;;;6319:317:7;:::o;4604:654::-;4657:16;4676:13;:11;:13::i;:::-;4657:32;;4722:1;4704:15;;:19;4703:48;;;;;4749:1;4729:17;;:21;4703:48;4699:519;;;4767:23;4793:28;4812:8;4793:18;:28::i;:::-;4767:54;;4859:1;4839:17;4847:8;4839:7;:17::i;:::-;:21;4835:372;;;4898:15;;:36;;4918:15;4898:19;:36::i;:::-;4880:15;:54;4972:17;;:38;;4994:15;4972:21;:38::i;:::-;4952:17;:58;4835:372;;;5080:15;;:36;;5100:15;5080:19;:36::i;:::-;5062:15;:54;5154:17;;:38;;5176:15;5154:21;:38::i;:::-;5134:17;:58;4835:372;4699:519;;5228:12;:23;4604:654::o;1605:92:0:-;1196:12;:10;:12::i;:::-;-1:-1:-1;;;;;1185:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:0;;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;;;;;;;;;1669:21:::1;1687:1;1669:9;:21::i;:::-;1605:92::o:0;6088:179:7:-;6136:7;6174:13;;6191:1;6174:18;:86;;6211:49;6246:13;;6211:30;6233:7;6211:17;;:21;;:30;;;;:::i;:::-;:34;;:49::i;:::-;6174:86;;;-1:-1:-1;6196:12:7;;;6088:179::o;973:85:0:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;973:85;:::o;2180:250:7:-;1196:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1185:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:0;;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;2258:15:7::1;::::0;::::1;;2257:16;2249:60;;;;-1:-1:-1::0;;;2249:60:7::1;;;;;;;:::i;:::-;2320:29;2331:17;:10:::0;2346:1:::1;2331:14;:17::i;2320:29::-;2359:31;2372:17;:10:::0;2387:1:::1;2372:14;:17::i;2359:31::-;-1:-1:-1::0;2401:15:7::1;:22:::0;;-1:-1:-1;;2401:22:7::1;2419:4;2401:22;::::0;;2180:250::o;4054:544::-;4125:26;:24;:26::i;:::-;4161:7;;:35;;-1:-1:-1;;;4161:35:7;;-1:-1:-1;;;;;4161:7:7;;;;:12;;:35;;4174:21;;4161:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4222:17;:15;:17::i;:::-;4207:12;:32;;;4249:18;;4270:52;;4314:7;;4270:39;;:21;;:25;:39::i;:52::-;4357:13;;4249:73;;-1:-1:-1;4357:40:7;;4375:21;4357:17;:40::i;:::-;4341:13;:56;4427:17;;:33;;4449:10;4427:21;:33::i;:::-;4407:17;:53;;;4492:11;;4522:38;;-1:-1:-1;;;4522:38:7;;4492:11;;;;-1:-1:-1;;;;;4492:11:7;;;;4522:13;;:38;;4536:10;;4549;;4522:38;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4514:76;;;;-1:-1:-1;;;4514:76:7;;;;;;;:::i;:::-;4054:544;;;:::o;1650:32::-;;;;:::o;2975:551::-;3034:26;:24;:26::i;:::-;3094:17;:15;:17::i;:::-;3079:12;:32;;;3121:29;;3153:41;;:23;:10;3168:7;3153:14;:23::i;:41::-;3205:7;;:35;;-1:-1:-1;;;3205:35:7;;3121:73;;-1:-1:-1;;;;;;3205:7:7;;:12;;:35;;3121:73;;3205:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3266:13:7;;:40;;-1:-1:-1;3266:13:7;-1:-1:-1;3284:21:7;3266:17;:40::i;:::-;3250:13;:56;3336:17;;:33;;3358:10;3336:21;:33::i;:::-;3316:17;:53;;;3401:11;;3431:56;;-1:-1:-1;;;3431:56:7;;3401:11;;;;-1:-1:-1;;;;;3401:11:7;;;;3431:17;;:56;;3449:10;;3469:4;;3476:10;;3431:56;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3423:96;;;;-1:-1:-1;;;3423:96:7;;;;;;;:::i;7425:111::-;7500:7;;:29;;-1:-1:-1;;;7500:29:7;;7474:7;;-1:-1:-1;;;;;7500:7:7;;:17;;:29;;7518:10;;7500:29;;;:::i;3532:516::-;3601:26;:24;:26::i;:::-;3637:5;;:33;;-1:-1:-1;;;3637:33:7;;-1:-1:-1;;;;;3637:5:7;;;;:10;;:33;;3648:21;;3637:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3694:15;:13;:15::i;:::-;3681:10;:28;;;3719:18;;3740:50;;3782:7;;3740:37;;:21;;:25;:37::i;:50::-;3815:11;;3719:71;;-1:-1:-1;3815:38:7;;3831:21;3815:15;:38::i;:::-;3801:11;:52;3881:15;;:31;;3901:10;3881:19;:31::i;:::-;3863:15;:49;3944:11;;3974:37;;-1:-1:-1;;;3974:37:7;;3944:11;;;;-1:-1:-1;;;;;3944:11:7;;;;3974:13;;:37;;3988:10;;4000;;3974:37;;;:::i;1485:34::-;;;;:::o;1379:35::-;;;;:::o;5893:157::-;5939:7;5965:11;;5980:1;5965:16;:78;;5998:45;6031:11;;5998:28;6018:7;5998:15;;:19;;:28;;;;:::i;5965:78::-;-1:-1:-1;5985:10:7;;;5893:157::o;1846:189:0:-;1196:12;:10;:12::i;:::-;-1:-1:-1;;;;;1185:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:0;;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;1934:22:0;::::1;1926:73;;;;-1:-1:-1::0;;;1926:73:0::1;;;;;;;:::i;:::-;2009:19;2019:8;2009:9;:19::i;:::-;1846:189:::0;:::o;1711:31:7:-;;;;:::o;2436:533::-;2493:26;:24;:26::i;:::-;2551:15;:13;:15::i;:::-;2538:10;:28;;;2576:29;;2608:39;;:23;:10;2623:7;2608:14;:23::i;:39::-;2658:5;;:33;;-1:-1:-1;;;2658:33:7;;2576:71;;-1:-1:-1;;;;;;2658:5:7;;:10;;:33;;2576:71;;2658:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2715:11:7;;:38;;-1:-1:-1;2715:11:7;-1:-1:-1;2731:21:7;2715:15;:38::i;:::-;2701:11;:52;2781:15;;:31;;2801:10;2781:19;:31::i;:::-;2763:15;:49;2844:11;;2874:56;;-1:-1:-1;;;2874:56:7;;2844:11;;;;-1:-1:-1;;;;;2844:11:7;;;;2874:17;;:56;;2892:10;;2912:4;;2919:10;;2874:56;;;:::i;5633:224::-;5702:7;5720:17;5740:22;5753:8;5740:12;:22::i;:::-;5720:42;;5780:70;5842:7;5780:57;5824:12;5826:9;5824:1;:12::i;:::-;5780:39;5784:15;;5801:17;;5780:3;:39::i;:::-;:43;;:57::i;:70::-;5773:77;;;5633:224;;;;:::o;5435:191::-;5493:6;5525:12;;5514:8;:23;5510:110;;;-1:-1:-1;5560:1:7;5553:8;;5510:110;-1:-1:-1;;;5600:9:7;;2672:96:5;2730:7;2756:5;2760:1;2756;:5;:::i;:::-;2749:12;2672:96;-1:-1:-1;;;2672:96:5:o;3039:::-;3097:7;3123:5;3127:1;3123;:5;:::i;586:96:4:-;665:10;586:96;:::o;2041:169:0:-;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2041:169;;:::o;3382:96:5:-;3440:7;3466:5;3470:1;3466;:5;:::i;3767:96::-;3825:7;3851:5;3855:1;3851;:5;:::i;6988:318:7:-;7051:7;7102:12;;7091:8;:23;7087:212;;;7137:52;7181:7;7137:39;7163:12;;7137:21;7150:7;7137:8;:12;;:21;;;;:::i;:39::-;:43;;:52::i;:::-;7130:59;;;;7087:212;7236:52;7280:7;7236:39;7266:8;7236:25;7253:7;7236:12;;:16;;:25;;;;:::i;6757:225::-;6802:7;;6889:5;6893:1;6889;:5;:::i;:::-;6877:7;6868:6;6873:1;6868;:6;:::i;:::-;:16;;;;:::i;:::-;6863:22;;:1;:22;:::i;:::-;:31;;;;:::i;:::-;:41;;6897:7;6863:41;:::i;:::-;6847:57;-1:-1:-1;6928:8:7;6964:11;6847:57;6928:8;6964:11;:::i;:::-;6954:21;;:7;:21;:::i;:::-;6947:28;6757:225;-1:-1:-1;;;;6757:225:7:o;6646:105::-;6704:7;6735:1;6730;:6;;:14;;6743:1;6730:14;;;-1:-1:-1;6739:1:7;;6646:105;-1:-1:-1;6646:105:7:o;14:181:8:-;94:13;;147:22;136:34;;126:45;;116:2;;185:1;182;175:12;200:306;;312:2;300:9;291:7;287:23;283:32;280:2;;;333:6;325;318:22;280:2;364:23;;-1:-1:-1;;;;;416:31:8;;406:42;;396:2;;467:6;459;452:22;511:297;;631:2;619:9;610:7;606:23;602:32;599:2;;;652:6;644;637:22;599:2;689:9;683:16;742:5;735:13;728:21;721:5;718:32;708:2;;769:6;761;754:22;813:190;;925:2;913:9;904:7;900:23;896:32;893:2;;;946:6;938;931:22;893:2;-1:-1:-1;974:23:8;;883:120;-1:-1:-1;883:120:8:o;1008:194::-;;1131:2;1119:9;1110:7;1106:23;1102:32;1099:2;;;1152:6;1144;1137:22;1099:2;-1:-1:-1;1180:16:8;;1089:113;-1:-1:-1;1089:113:8:o;1207:487::-;;;;;;1395:3;1383:9;1374:7;1370:23;1366:33;1363:2;;;1417:6;1409;1402:22;1363:2;1445:41;1476:9;1445:41;:::i;:::-;1435:51;;1526:2;1515:9;1511:18;1505:25;1495:35;;1570:2;1559:9;1555:18;1549:25;1539:35;;1614:2;1603:9;1599:18;1593:25;1583:35;;1637:51;1683:3;1672:9;1668:19;1637:51;:::i;:::-;1627:61;;1353:341;;;;;;;;:::o;1699:203::-;-1:-1:-1;;;;;1863:32:8;;;;1845:51;;1833:2;1818:18;;1800:102::o;1907:375::-;-1:-1:-1;;;;;2165:15:8;;;2147:34;;2217:15;;;;2212:2;2197:18;;2190:43;2264:2;2249:18;;2242:34;;;;2097:2;2082:18;;2064:218::o;2287:274::-;-1:-1:-1;;;;;2479:32:8;;;;2461:51;;2543:2;2528:18;;2521:34;2449:2;2434:18;;2416:145::o;2566:187::-;2731:14;;2724:22;2706:41;;2694:2;2679:18;;2661:92::o;2758:349::-;2960:2;2942:21;;;2999:2;2979:18;;;2972:30;3038:27;3033:2;3018:18;;3011:55;3098:2;3083:18;;2932:175::o;3112:402::-;3314:2;3296:21;;;3353:2;3333:18;;;3326:30;3392:34;3387:2;3372:18;;3365:62;-1:-1:-1;;;3458:2:8;3443:18;;3436:36;3504:3;3489:19;;3286:228::o;3519:355::-;3721:2;3703:21;;;3760:2;3740:18;;;3733:30;3799:33;3794:2;3779:18;;3772:61;3865:2;3850:18;;3693:181::o;3879:356::-;4081:2;4063:21;;;4100:18;;;4093:30;4159:34;4154:2;4139:18;;4132:62;4226:2;4211:18;;4053:182::o;4240:351::-;4442:2;4424:21;;;4481:2;4461:18;;;4454:30;4520:29;4515:2;4500:18;;4493:57;4582:2;4567:18;;4414:177::o;4596:::-;4742:25;;;4730:2;4715:18;;4697:76::o;4778:128::-;;4849:1;4845:6;4842:1;4839:13;4836:2;;;4855:18;;:::i;:::-;-1:-1:-1;4891:9:8;;4826:80::o;4911:217::-;;4977:1;4967:2;;-1:-1:-1;;;5002:31:8;;5056:4;5053:1;5046:15;5084:4;5009:1;5074:15;4967:2;-1:-1:-1;5113:9:8;;4957:171::o;5133:453::-;5229:6;5252:5;5266:314;5315:1;5352:2;5342:8;5339:16;5329:2;;5359:5;;;5329:2;5400:4;5395:3;5391:14;5385:4;5382:24;5379:2;;;5409:18;;:::i;:::-;5459:2;5449:8;5445:17;5442:2;;;5474:16;;;;5442:2;5553:17;;;;;5513:15;;5266:314;;;5210:376;;;;;;;:::o;5591:148::-;;5678:55;-1:-1:-1;;5719:4:8;5705:19;;5699:4;5744:922;5828:8;5818:2;;-1:-1:-1;5869:1:8;5883:5;;5818:2;5917:4;5907:2;;-1:-1:-1;5954:1:8;5968:5;;5907:2;5999:4;6017:1;6012:59;;;;6085:1;6080:183;;;;5992:271;;6012:59;6042:1;6033:10;;6056:5;;;6080:183;6117:3;6107:8;6104:17;6101:2;;;6124:18;;:::i;:::-;6180:1;6170:8;6166:16;6157:25;;6208:3;6201:5;6198:14;6195:2;;;6215:18;;:::i;:::-;6248:5;;;5992:271;;6347:2;6337:8;6334:16;6328:3;6322:4;6319:13;6315:36;6309:2;6299:8;6296:16;6291:2;6285:4;6282:12;6278:35;6275:77;6272:2;;;-1:-1:-1;6384:19:8;;;6419:14;;;6416:2;;;6436:18;;:::i;:::-;6469:5;;6272:2;6516:42;6554:3;6544:8;6538:4;6535:1;6516:42;:::i;:::-;6591:6;6586:3;6582:16;6573:7;6570:29;6567:2;;;6602:18;;:::i;:::-;6640:20;;5808:858;-1:-1:-1;;;;5808:858:8:o;6671:168::-;;6777:1;6773;6769:6;6765:14;6762:1;6759:21;6754:1;6747:9;6740:17;6736:45;6733:2;;;6784:18;;:::i;:::-;-1:-1:-1;6824:9:8;;6723:116::o;6844:125::-;;6912:1;6909;6906:8;6903:2;;;6917:18;;:::i;:::-;-1:-1:-1;6954:9:8;;6893:76::o;6974:127::-;7035:10;7030:3;7026:20;7023:1;7016:31;7066:4;7063:1;7056:15;7090:4;7087:1;7080:15", "language": "Solidity", "natspec": {"kind": "dev", "methods": {"owner()": {"details": "Returns the address of the current owner."}, "renounceOwnership()": {"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."}, "transferOwnership(address)": {"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}, "version": 1}, "offset": [1303, 7539], "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x141 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA14274E8 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xDDE7BE2C GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xDDE7BE2C EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xF0156E8A EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0xF06847D6 EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0xF4352C57 EQ PUSH2 0x24F JUMPI DUP1 PUSH4 0xF530C04A EQ PUSH2 0x257 JUMPI PUSH2 0x141 JUMP JUMPDEST DUP1 PUSH4 0xA14274E8 EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0xB75CBE0B EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0xC46D4F09 EQ PUSH2 0x1F6 JUMPI DUP1 PUSH4 0xC7E3B124 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0xD1EE539D EQ PUSH2 0x211 JUMPI PUSH2 0x141 JUMP JUMPDEST DUP1 PUSH4 0x3A3610BC GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x3A3610BC EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x6E5D6615 EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x81C2B29B EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x9B3075A1 EQ PUSH2 0x1C8 JUMPI PUSH2 0x141 JUMP JUMPDEST DUP1 PUSH3 0x34B9CC EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0xC3E5343 EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x14D7C6D2 EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x157D0129 EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x3074FFF7 EQ PUSH2 0x17C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14E PUSH2 0x26A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15B SWAP2 SWAP1 PUSH2 0xEE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14E PUSH2 0x270 JUMP JUMPDEST PUSH2 0x14E PUSH2 0x276 JUMP JUMPDEST PUSH2 0x14E PUSH2 0x27C JUMP JUMPDEST PUSH2 0x184 PUSH2 0x302 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15B SWAP2 SWAP1 PUSH2 0xDBE JUMP JUMPDEST PUSH2 0x14E PUSH2 0x30B JUMP JUMPDEST PUSH2 0x1A1 PUSH2 0x398 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A1 PUSH2 0x428 JUMP JUMPDEST PUSH2 0x14E PUSH2 0x47C JUMP JUMPDEST PUSH2 0x1BB PUSH2 0x4B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15B SWAP2 SWAP1 PUSH2 0xD6D JUMP JUMPDEST PUSH2 0x1A1 PUSH2 0x1D6 CALLDATASIZE PUSH1 0x4 PUSH2 0xCEE JUMP JUMPDEST PUSH2 0x4C7 JUMP JUMPDEST PUSH2 0x1A1 PUSH2 0x1E9 CALLDATASIZE PUSH1 0x4 PUSH2 0xCEE JUMP JUMPDEST PUSH2 0x555 JUMP JUMPDEST PUSH2 0x14E PUSH2 0x6B1 JUMP JUMPDEST PUSH2 0x1A1 PUSH2 0x204 CALLDATASIZE PUSH1 0x4 PUSH2 0xCEE JUMP JUMPDEST PUSH2 0x6B7 JUMP JUMPDEST PUSH2 0x14E PUSH2 0x80C JUMP JUMPDEST PUSH2 0x1A1 PUSH2 0x21F CALLDATASIZE PUSH1 0x4 PUSH2 0xCEE JUMP JUMPDEST PUSH2 0x83D JUMP JUMPDEST PUSH2 0x14E PUSH2 0x926 JUMP JUMPDEST PUSH2 0x14E PUSH2 0x92C JUMP JUMPDEST PUSH2 0x14E PUSH2 0x932 JUMP JUMPDEST PUSH2 0x1A1 PUSH2 0x24A CALLDATASIZE PUSH1 0x4 PUSH2 0xCA7 JUMP JUMPDEST PUSH2 0x963 JUMP JUMPDEST PUSH2 0x14E PUSH2 0x9D4 JUMP JUMPDEST PUSH2 0x1A1 PUSH2 0x265 CALLDATASIZE PUSH1 0x4 PUSH2 0xCEE JUMP JUMPDEST PUSH2 0x9DA JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x2AD SWAP1 CALLER SWAP1 PUSH1 0x4 ADD PUSH2 0xD6D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2D9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2FD SWAP2 SWAP1 PUSH2 0xD06 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x3FABE5A3 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP4 SWAP2 DUP4 SWAP2 PUSH4 0xFEAF968C SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0xA0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x354 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x368 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x38C SWAP2 SWAP1 PUSH2 0xD1E JUMP JUMPDEST POP SWAP2 SWAP6 POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A2 PUSH2 0x30B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x3 SLOAD GT DUP1 ISZERO PUSH2 0x3B8 JUMPI POP PUSH1 0x0 PUSH1 0x4 SLOAD GT JUMPDEST ISZERO PUSH2 0x423 JUMPI PUSH1 0x0 PUSH2 0x3C8 DUP3 PUSH2 0xAC1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3D5 DUP4 PUSH2 0xAFF JUMP JUMPDEST SGT ISZERO PUSH2 0x400 JUMPI PUSH1 0x3 SLOAD PUSH2 0x3E8 SWAP1 DUP3 PUSH2 0xB1C JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x4 SLOAD PUSH2 0x3F8 SWAP1 DUP3 PUSH2 0xB2F JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH2 0x421 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x40D SWAP1 DUP3 PUSH2 0xB2F JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x4 SLOAD PUSH2 0x41D SWAP1 DUP3 PUSH2 0xB1C JUMP JUMPDEST PUSH1 0x4 SSTORE JUMPDEST POP JUMPDEST PUSH1 0x7 SSTORE JUMP JUMPDEST PUSH2 0x430 PUSH2 0xB3B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x441 PUSH2 0x4B8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x470 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x467 SWAP1 PUSH2 0xE7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x47A PUSH1 0x0 PUSH2 0xB3F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD PUSH1 0x0 EQ PUSH2 0x4B1 JUMPI PUSH2 0x4AC PUSH1 0x6 SLOAD PUSH2 0x4A6 PUSH3 0xF4240 PUSH1 0x4 SLOAD PUSH2 0xB8F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0xB9B JUMP JUMPDEST PUSH2 0x2FD JUMP JUMPDEST POP PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x4CF PUSH2 0xB3B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4E0 PUSH2 0x4B8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x506 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x467 SWAP1 PUSH2 0xE7D JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x529 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x467 SWAP1 PUSH2 0xE46 JUMP JUMPDEST PUSH2 0x537 PUSH2 0x265 DUP3 PUSH1 0x2 PUSH2 0xB9B JUMP JUMPDEST PUSH2 0x545 PUSH2 0x204 DUP3 PUSH1 0x2 PUSH2 0xB9B JUMP JUMPDEST POP PUSH1 0x8 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x55D PUSH2 0x398 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x852CD8D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x42966C68 SWAP1 PUSH2 0x58D SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0xEE9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5BB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x5C7 PUSH2 0x47C JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE PUSH1 0x0 SWAP1 PUSH2 0x5E3 SWAP1 PUSH3 0xF4240 SWAP1 PUSH2 0x4A6 SWAP1 DUP6 SWAP1 PUSH2 0xB8F JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH2 0x5F3 SWAP1 DUP4 PUSH2 0xB2F JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH1 0x4 SLOAD PUSH2 0x603 SWAP1 DUP3 PUSH2 0xB2F JUMP JUMPDEST PUSH1 0x4 SWAP1 DUP2 SSTORE PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH2 0x100 SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH2 0x63E SWAP2 CALLER SWAP2 DUP8 SWAP2 ADD PUSH2 0xDA5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x658 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x66C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x690 SWAP2 SWAP1 PUSH2 0xCCE JUMP JUMPDEST PUSH2 0x6AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x467 SWAP1 PUSH2 0xDC9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x6BF PUSH2 0x398 JUMP JUMPDEST PUSH2 0x6C7 PUSH2 0x47C JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE PUSH1 0x0 SWAP1 PUSH2 0x6E0 SWAP1 PUSH2 0x4A6 DUP5 PUSH3 0xF4240 PUSH2 0xB8F JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x140E25AD PUSH1 0xE3 SHL DUP2 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA0712D68 SWAP1 PUSH2 0x711 SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0xEE9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x72B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x73F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x6 SLOAD PUSH2 0x751 SWAP3 POP SWAP1 POP DUP3 PUSH2 0xB1C JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH1 0x4 SLOAD PUSH2 0x761 SWAP1 DUP4 PUSH2 0xB1C JUMP JUMPDEST PUSH1 0x4 SWAP1 DUP2 SSTORE PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH2 0x100 SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 SWAP2 PUSH4 0x23B872DD SWAP2 PUSH2 0x79E SWAP2 CALLER SWAP2 ADDRESS SWAP2 DUP10 SWAP2 ADD PUSH2 0xD81 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7CC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7F0 SWAP2 SWAP1 PUSH2 0xCCE JUMP JUMPDEST PUSH2 0x6AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x467 SWAP1 PUSH2 0xEB2 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x2AD SWAP1 CALLER SWAP1 PUSH1 0x4 ADD PUSH2 0xD6D JUMP JUMPDEST PUSH2 0x845 PUSH2 0x398 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0x852CD8D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x42966C68 SWAP1 PUSH2 0x875 SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0xEE9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x88F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8A3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x8AF PUSH2 0x932 JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE PUSH1 0x0 SWAP1 PUSH2 0x8CB SWAP1 PUSH3 0xF4240 SWAP1 PUSH2 0x4A6 SWAP1 DUP6 SWAP1 PUSH2 0xB8F JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP1 SWAP2 POP PUSH2 0x8DB SWAP1 DUP4 PUSH2 0xB2F JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH1 0x3 SLOAD PUSH2 0x8EB SWAP1 DUP3 PUSH2 0xB2F JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH2 0x100 SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0x63E SWAP1 CALLER SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0xDA5 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 SLOAD PUSH1 0x0 EQ PUSH2 0x95C JUMPI PUSH2 0x4AC PUSH1 0x5 SLOAD PUSH2 0x4A6 PUSH3 0xF4240 PUSH1 0x3 SLOAD PUSH2 0xB8F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x96B PUSH2 0xB3B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x97C PUSH2 0x4B8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x9A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x467 SWAP1 PUSH2 0xE7D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x9C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x467 SWAP1 PUSH2 0xE00 JUMP JUMPDEST PUSH2 0x9D1 DUP2 PUSH2 0xB3F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x9E2 PUSH2 0x398 JUMP JUMPDEST PUSH2 0x9EA PUSH2 0x932 JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE PUSH1 0x0 SWAP1 PUSH2 0xA03 SWAP1 PUSH2 0x4A6 DUP5 PUSH3 0xF4240 PUSH2 0xB8F JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0x140E25AD PUSH1 0xE3 SHL DUP2 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA0712D68 SWAP1 PUSH2 0xA34 SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0xEE9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA62 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x5 SLOAD PUSH2 0xA74 SWAP3 POP SWAP1 POP DUP3 PUSH2 0xB1C JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH1 0x3 SLOAD PUSH2 0xA84 SWAP1 DUP4 PUSH2 0xB1C JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH2 0x100 SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x79E SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0xD81 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xACD DUP4 PUSH2 0xBA7 JUMP JUMPDEST SWAP1 POP PUSH2 0xAF6 PUSH3 0xF4240 PUSH2 0x4A6 PUSH2 0xAE2 DUP5 PUSH2 0xC06 JUMP JUMPDEST PUSH2 0xAF0 PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH2 0xC76 JUMP JUMPDEST SWAP1 PUSH2 0xB8F JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD DUP3 GT ISZERO PUSH2 0xB13 JUMPI POP PUSH1 0x1 PUSH2 0xAFA JUMP JUMPDEST POP PUSH1 0x0 NOT PUSH2 0xAFA JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB28 DUP3 DUP5 PUSH2 0xEF2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB28 DUP3 DUP5 PUSH2 0x1060 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB28 DUP3 DUP5 PUSH2 0x1041 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB28 DUP3 DUP5 PUSH2 0xF0A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD DUP3 GT ISZERO PUSH2 0xBE3 JUMPI PUSH2 0xBDC PUSH3 0xF4240 PUSH2 0xBD6 PUSH1 0x7 SLOAD PUSH2 0x4A6 PUSH3 0xF4240 DUP8 PUSH2 0xB8F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0xB2F JUMP JUMPDEST SWAP1 POP PUSH2 0xAFA JUMP JUMPDEST PUSH2 0xBDC PUSH3 0xF4240 PUSH2 0xBD6 DUP5 PUSH2 0x4A6 PUSH3 0xF4240 PUSH1 0x7 SLOAD PUSH2 0xB8F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xC14 DUP4 PUSH1 0x3 PUSH2 0x1041 JUMP JUMPDEST PUSH3 0xF4240 PUSH2 0xC23 PUSH1 0x2 DUP7 PUSH2 0xF70 JUMP JUMPDEST PUSH2 0xC2D SWAP2 SWAP1 PUSH2 0xF0A JUMP JUMPDEST PUSH2 0xC38 SWAP1 PUSH1 0x9 PUSH2 0x1041 JUMP JUMPDEST PUSH2 0xC42 SWAP2 SWAP1 PUSH2 0xEF2 JUMP JUMPDEST PUSH2 0xC4F SWAP1 PUSH3 0xF4240 PUSH2 0xEF2 JUMP JUMPDEST SWAP1 POP PUSH5 0xE8D4A51000 PUSH2 0xC61 DUP3 DUP3 PUSH2 0xF0A JUMP JUMPDEST PUSH2 0xC6E SWAP1 PUSH3 0xF4240 PUSH2 0x1060 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 GT ISZERO PUSH2 0xC86 JUMPI DUP2 PUSH2 0xB28 JUMP JUMPDEST POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xAFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCB8 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB28 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCDF JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xB28 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCFF JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD17 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xD35 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xD3E DUP7 PUSH2 0xC8D JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH2 0xD61 PUSH1 0x80 DUP8 ADD PUSH2 0xC8D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x19 SWAP1 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F756768207573646320617661696C61626C6500000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x54686520706F6F6C2077617320616C726561647920696E697469617465642E00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH32 0x596F7520646F6E2774206861766520656E6F75676820555344432E0000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xF05 JUMPI PUSH2 0xF05 PUSH2 0x1077 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xF25 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 JUMPDEST PUSH1 0x1 DUP1 DUP7 GT PUSH2 0xF3C JUMPI POP PUSH2 0xF67 JUMP JUMPDEST DUP2 DUP8 DIV DUP3 GT ISZERO PUSH2 0xF4E JUMPI PUSH2 0xF4E PUSH2 0x1077 JUMP JUMPDEST DUP1 DUP7 AND ISZERO PUSH2 0xF5B JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP5 SWAP1 SWAP5 SHR SWAP4 DUP1 MUL PUSH2 0xF2D JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB28 PUSH1 0x0 NOT PUSH1 0xFF DUP6 AND DUP5 PUSH1 0x0 DUP3 PUSH2 0xF8C JUMPI POP PUSH1 0x1 PUSH2 0xB28 JUMP JUMPDEST DUP2 PUSH2 0xF99 JUMPI POP PUSH1 0x0 PUSH2 0xB28 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xFAF JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xFB9 JUMPI PUSH2 0xFE6 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xB28 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xFCA JUMPI PUSH2 0xFCA PUSH2 0x1077 JUMP JUMPDEST PUSH1 0x1 DUP5 SHL SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0xFE0 JUMPI PUSH2 0xFE0 PUSH2 0x1077 JUMP JUMPDEST POP PUSH2 0xB28 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1019 JUMPI POP DUP2 DUP2 EXP DUP4 DUP2 GT ISZERO PUSH2 0x1014 JUMPI PUSH2 0x1014 PUSH2 0x1077 JUMP JUMPDEST PUSH2 0xB28 JUMP JUMPDEST PUSH2 0x1026 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0xF2A JUMP JUMPDEST DUP1 DUP7 DIV DUP3 GT ISZERO PUSH2 0x1038 JUMPI PUSH2 0x1038 PUSH2 0x1077 JUMP JUMPDEST MUL SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x105B JUMPI PUSH2 0x105B PUSH2 0x1077 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1072 JUMPI PUSH2 0x1072 PUSH2 0x1077 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR 0xBA SWAP14 0xE5 0xA7 SLOAD 0xD9 0xFB 0xF7 PC 0xF6 DUP3 DUP12 0x25 CALLVALUE XOR NUMBER LOG3 0xC 0xEE 0x5D 0xD5 0x4E RETURNDATACOPY EXTCODECOPY DUP8 CALLDATALOAD 0x2D PUSH20 0x7DC2A464736F6C63430008000033000000000000 ", "pcMap": {"0": {"offset": [1303, 7539], "op": "PUSH1", "path": "7", "value": "0x80"}, "2": {"fn": null, "offset": [1303, 7539], "op": "PUSH1", "path": "7", "value": "0x40"}, "4": {"fn": null, "offset": [1303, 7539], "op": "MSTORE", "path": "7"}, "5": {"fn": null, "offset": [1303, 7539], "op": "CALLVALUE", "path": "7"}, "6": {"fn": null, "offset": [1303, 7539], "op": "DUP1", "path": "7"}, "7": {"fn": null, "offset": [1303, 7539], "op": "ISZERO", "path": "7"}, "8": {"fn": null, "offset": [1303, 7539], "op": "PUSH2", "path": "7", "value": "0x10"}, "11": {"fn": null, "offset": [1303, 7539], "op": "JUMPI", "path": "7"}, "12": {"fn": null, "offset": [1303, 7539], "op": "PUSH1", "path": "7", "value": "0x0"}, "14": {"fn": null, "offset": [1303, 7539], "op": "DUP1", "path": "7"}, "15": {"dev": "Cannot send ether to nonpayable function", "fn": null, "offset": [1303, 7539], "op": "REVERT", "path": "7"}, "16": {"fn": null, "offset": [1303, 7539], "op": "JUMPDEST", "path": "7"}, "17": {"fn": null, "offset": [1303, 7539], "op": "POP", "path": "7"}, "18": {"fn": null, "offset": [1303, 7539], "op": "PUSH1", "path": "7", "value": "0x4"}, "20": {"fn": null, "offset": [1303, 7539], "op": "CALLDATASIZE", "path": "7"}, "21": {"fn": null, "offset": [1303, 7539], "op": "LT", "path": "7"}, "22": {"fn": null, "offset": [1303, 7539], "op": "PUSH2", "path": "7", "value": "0x141"}, "25": {"fn": null, "offset": [1303, 7539], "op": "JUMPI", "path": "7"}, "26": {"fn": null, "offset": [1303, 7539], "op": "PUSH1", "path": "7", "value": "0x0"}, "28": {"fn": null, "offset": [1303, 7539], "op": "CALLDATALOAD", "path": "7"}, "29": {"fn": null, "offset": [1303, 7539], "op": "PUSH1", "path": "7", "value": "0xE0"}, "31": {"fn": null, "offset": [1303, 7539], "op": "SHR", "path": "7"}, "32": {"fn": null, "offset": [1303, 7539], "op": "DUP1", "path": "7"}, "33": {"fn": null, "offset": [1303, 7539], "op": "PUSH4", "path": "7", "value": "0xA14274E8"}, "38": {"fn": null, "offset": [1303, 7539], "op": "GT", "path": "7"}, "39": {"fn": null, "offset": [1303, 7539], "op": "PUSH2", "path": "7", "value": "0xB8"}, "42": {"fn": null, "offset": [1303, 7539], "op": "JUMPI", "path": "7"}, "43": {"fn": null, "offset": [1303, 7539], "op": "DUP1", "path": "7"}, "44": {"fn": null, "offset": [1303, 7539], "op": "PUSH4", "path": "7", "value": "0xDDE7BE2C"}, "49": {"fn": null, "offset": [1303, 7539], "op": "GT", "path": "7"}, "50": {"fn": null, "offset": [1303, 7539], "op": "PUSH2", "path": "7", "value": "0x7C"}, "53": {"fn": null, "offset": [1303, 7539], "op": "JUMPI", "path": "7"}, "54": {"fn": null, "offset": [1303, 7539], "op": "DUP1", "path": "7"}, "55": {"fn": null, "offset": [1303, 7539], "op": "PUSH4", "path": "7", "value": "0xDDE7BE2C"}, "60": {"fn": null, "offset": [1303, 7539], "op": "EQ", "path": "7"}, "61": {"fn": null, "offset": [1303, 7539], "op": "PUSH2", "path": "7", "value": "0x224"}, "64": {"fn": null, "offset": [1303, 7539], "op": "JUMPI", "path": "7"}, "65": {"fn": null, "offset": [1303, 7539], "op": "DUP1", "path": "7"}, "66": {"fn": null, "offset": [1303, 7539], "op": "PUSH4", "path": "7", "value": "0xF0156E8A"}, "71": {"fn": null, "offset": [1303, 7539], "op": "EQ", "path": "7"}, "72": {"fn": null, "offset": [1303, 7539], "op": "PUSH2", "path": "7", "value": "0x22C"}, "75": {"fn": null, "offset": [1303, 7539], "op": "JUMPI", "path": "7"}, "76": {"fn": null, "offset": [1303, 7539], "op": "DUP1", "path": "7"}, "77": {"fn": null, "offset": [1303, 7539], "op": "PUSH4", "path": "7", "value": "0xF06847D6"}, "82": {"fn": null, "offset": [1303, 7539], "op": "EQ", "path": "7"}, "83": {"fn": null, "offset": [1303, 7539], "op": "PUSH2", "path": "7", "value": "0x234"}, "86": {"fn": null, "offset": [1303, 7539], "op": "JUMPI", "path": "7"}, "87": {"fn": null, "offset": [1303, 7539], "op": "DUP1", "path": "7"}, "88": {"fn": null, "offset": [1303, 7539], "op": "PUSH4", "path": "7", "value": "0xF2FDE38B"}, "93": {"fn": null, "offset": [1303, 7539], "op": "EQ", "path": "7"}, "94": {"fn": null, "offset": [1303, 7539], "op": "PUSH2", "path": "7", "value": "0x23C"}, "97": {"fn": null, "offset": [1303, 7539], "op": "JUMPI", "path": "7"}, "98": {"fn": null, "offset": [1303, 7539], "op": "DUP1", "path": "7"}, "99": {"fn": null, "offset": [1303, 7539], "op": "PUSH4", "path": "7", "value": "0xF4352C57"}, "104": {"fn": null, "offset": [1303, 7539], "op": "EQ", "path": "7"}, "105": {"fn": null, "offset": [1303, 7539], "op": "PUSH2", "path": "7", "value": "0x24F"}, "108": {"fn": null, "offset": [1303, 7539], "op": "JUMPI", "path": "7"}, "109": {"fn": null, "offset": [1303, 7539], "op": "DUP1", "path": "7"}, "110": {"fn": null, "offset": [1303, 7539], "op": "PUSH4", "path": "7", "value": "0xF530C04A"}, "115": {"fn": null, "offset": [1303, 7539], "op": "EQ", "path": "7"}, "116": {"fn": null, "offset": [1303, 7539], "op": "PUSH2", "path": "7", "value": "0x257"}, "119": {"fn": null, "offset": [1303, 7539], "op": "JUMPI", "path": "7"}, "120": {"fn": null, "offset": [1303, 7539], "op": "PUSH2", "path": "7", "value": "0x141"}, "123": {"fn": null, "offset": [1303, 7539], "op": "JUMP", "path": "7"}, "124": {"fn": null, "offset": [1303, 7539], "op": "JUMPDEST", "path": "7"}, "125": {"fn": null, "offset": [1303, 7539], "op": "DUP1", "path": "7"}, "126": {"fn": null, "offset": [1303, 7539], "op": "PUSH4", "path": "7", "value": "0xA14274E8"}, "131": {"fn": null, "offset": [1303, 7539], "op": "EQ", "path": "7"}, "132": {"fn": null, "offset": [1303, 7539], "op": "PUSH2", "path": "7", "value": "0x1DB"}, "135": {"fn": null, "offset": [1303, 7539], "op": "JUMPI", "path": "7"}, "136": {"fn": null, "offset": [1303, 7539], "op": "DUP1", "path": "7"}, "137": {"fn": null, "offset": [1303, 7539], "op": "PUSH4", "path": "7", "value": "0xB75CBE0B"}, "142": {"fn": null, "offset": [1303, 7539], "op": "EQ", "path": "7"}, "143": {"fn": null, "offset": [1303, 7539], "op": "PUSH2", "path": "7", "value": "0x1EE"}, "146": {"fn": null, "offset": [1303, 7539], "op": "JUMPI", "path": "7"}, "147": {"fn": null, "offset": [1303, 7539], "op": "DUP1", "path": "7"}, "148": {"fn": null, "offset": [1303, 7539], "op": "PUSH4", "path": "7", "value": "0xC46D4F09"}, "153": {"fn": null, "offset": [1303, 7539], "op": "EQ", "path": "7"}, "154": {"fn": null, "offset": [1303, 7539], "op": "PUSH2", "path": "7", "value": "0x1F6"}, "157": {"fn": null, "offset": [1303, 7539], "op": "JUMPI", "path": "7"}, "158": {"fn": null, "offset": [1303, 7539], "op": "DUP1", "path": "7"}, "159": {"fn": null, "offset": [1303, 7539], "op": "PUSH4", "path": "7", "value": "0xC7E3B124"}, "164": {"fn": null, "offset": [1303, 7539], "op": "EQ", "path": "7"}, "165": {"fn": null, "offset": [1303, 7539], "op": "PUSH2", "path": "7", "value": "0x209"}, "168": {"fn": null, "offset": [1303, 7539], "op": "JUMPI", "path": "7"}, "169": {"fn": null, "offset": [1303, 7539], "op": "DUP1", "path": "7"}, "170": {"fn": null, "offset": [1303, 7539], "op": "PUSH4", "path": "7", "value": "0xD1EE539D"}, "175": {"fn": null, "offset": [1303, 7539], "op": "EQ", "path": "7"}, "176": {"fn": null, "offset": [1303, 7539], "op": "PUSH2", "path": "7", "value": "0x211"}, "179": {"fn": null, "offset": [1303, 7539], "op": "JUMPI", "path": "7"}, "180": {"fn": null, "offset": [1303, 7539], "op": "PUSH2", "path": "7", "value": "0x141"}, "183": {"fn": null, "offset": [1303, 7539], "op": "JUMP", "path": "7"}, "184": {"fn": null, "offset": [1303, 7539], "op": "JUMPDEST", "path": "7"}, "185": {"fn": null, "offset": [1303, 7539], "op": "DUP1", "path": "7"}, "186": {"fn": null, "offset": [1303, 7539], "op": "PUSH4", "path": "7", "value": "0x3A3610BC"}, "191": {"fn": null, "offset": [1303, 7539], "op": "GT", "path": "7"}, "192": {"fn": null, "offset": [1303, 7539], "op": "PUSH2", "path": "7", "value": "0x10A"}, "195": {"fn": null, "offset": [1303, 7539], "op": "JUMPI", "path": "7"}, "196": {"fn": null, "offset": [1303, 7539], "op": "DUP1", "path": "7"}, "197": {"fn": null, "offset": [1303, 7539], "op": "PUSH4", "path": "7", "value": "0x3A3610BC"}, "202": {"fn": null, "offset": [1303, 7539], "op": "EQ", "path": "7"}, "203": {"fn": null, "offset": [1303, 7539], "op": "PUSH2", "path": "7", "value": "0x191"}, "206": {"fn": null, "offset": [1303, 7539], "op": "JUMPI", "path": "7"}, "207": {"fn": null, "offset": [1303, 7539], "op": "DUP1", "path": "7"}, "208": {"fn": null, "offset": [1303, 7539], "op": "PUSH4", "path": "7", "value": "0x6E5D6615"}, "213": {"fn": null, "offset": [1303, 7539], "op": "EQ", "path": "7"}, "214": {"fn": null, "offset": [1303, 7539], "op": "PUSH2", "path": "7", "value": "0x199"}, "217": {"fn": null, "offset": [1303, 7539], "op": "JUMPI", "path": "7"}, "218": {"fn": null, "offset": [1303, 7539], "op": "DUP1", "path": "7"}, "219": {"fn": null, "offset": [1303, 7539], "op": "PUSH4", "path": "7", "value": "0x715018A6"}, "224": {"fn": null, "offset": [1303, 7539], "op": "EQ", "path": "7"}, "225": {"fn": null, "offset": [1303, 7539], "op": "PUSH2", "path": "7", "value": "0x1A3"}, "228": {"fn": null, "offset": [1303, 7539], "op": "JUMPI", "path": "7"}, "229": {"fn": null, "offset": [1303, 7539], "op": "DUP1", "path": "7"}, "230": {"fn": null, "offset": [1303, 7539], "op": "PUSH4", "path": "7", "value": "0x81C2B29B"}, "235": {"fn": null, "offset": [1303, 7539], "op": "EQ", "path": "7"}, "236": {"fn": null, "offset": [1303, 7539], "op": "PUSH2", "path": "7", "value": "0x1AB"}, "239": {"fn": null, "offset": [1303, 7539], "op": "JUMPI", "path": "7"}, "240": {"fn": null, "offset": [1303, 7539], "op": "DUP1", "path": "7"}, "241": {"fn": null, "offset": [1303, 7539], "op": "PUSH4", "path": "7", "value": "0x8DA5CB5B"}, "246": {"fn": null, "offset": [1303, 7539], "op": "EQ", "path": "7"}, "247": {"fn": null, "offset": [1303, 7539], "op": "PUSH2", "path": "7", "value": "0x1B3"}, "250": {"fn": null, "offset": [1303, 7539], "op": "JUMPI", "path": "7"}, "251": {"fn": null, "offset": [1303, 7539], "op": "DUP1", "path": "7"}, "252": {"fn": null, "offset": [1303, 7539], "op": "PUSH4", "path": "7", "value": "0x9B3075A1"}, "257": {"fn": null, "offset": [1303, 7539], "op": "EQ", "path": "7"}, "258": {"fn": null, "offset": [1303, 7539], "op": "PUSH2", "path": "7", "value": "0x1C8"}, "261": {"fn": null, "offset": [1303, 7539], "op": "JUMPI", "path": "7"}, "262": {"fn": null, "offset": [1303, 7539], "op": "PUSH2", "path": "7", "value": "0x141"}, "265": {"fn": null, "offset": [1303, 7539], "op": "JUMP", "path": "7"}, "266": {"fn": null, "offset": [1303, 7539], "op": "JUMPDEST", "path": "7"}, "267": {"fn": null, "offset": [1303, 7539], "op": "DUP1", "path": "7"}, "268": {"fn": null, "offset": [1303, 7539], "op": "PUSH3", "path": "7", "value": "0x34B9CC"}, "272": {"fn": null, "offset": [1303, 7539], "op": "EQ", "path": "7"}, "273": {"fn": null, "offset": [1303, 7539], "op": "PUSH2", "path": "7", "value": "0x146"}, "276": {"fn": null, "offset": [1303, 7539], "op": "JUMPI", "path": "7"}, "277": {"fn": null, "offset": [1303, 7539], "op": "DUP1", "path": "7"}, "278": {"fn": null, "offset": [1303, 7539], "op": "PUSH4", "path": "7", "value": "0xC3E5343"}, "283": {"fn": null, "offset": [1303, 7539], "op": "EQ", "path": "7"}, "284": {"fn": null, "offset": [1303, 7539], "op": "PUSH2", "path": "7", "value": "0x164"}, "287": {"fn": null, "offset": [1303, 7539], "op": "JUMPI", "path": "7"}, "288": {"fn": null, "offset": [1303, 7539], "op": "DUP1", "path": "7"}, "289": {"fn": null, "offset": [1303, 7539], "op": "PUSH4", "path": "7", "value": "0x14D7C6D2"}, "294": {"fn": null, "offset": [1303, 7539], "op": "EQ", "path": "7"}, "295": {"fn": null, "offset": [1303, 7539], "op": "PUSH2", "path": "7", "value": "0x16C"}, "298": {"fn": null, "offset": [1303, 7539], "op": "JUMPI", "path": "7"}, "299": {"fn": null, "offset": [1303, 7539], "op": "DUP1", "path": "7"}, "300": {"fn": null, "offset": [1303, 7539], "op": "PUSH4", "path": "7", "value": "0x157D0129"}, "305": {"fn": null, "offset": [1303, 7539], "op": "EQ", "path": "7"}, "306": {"fn": null, "offset": [1303, 7539], "op": "PUSH2", "path": "7", "value": "0x174"}, "309": {"fn": null, "offset": [1303, 7539], "op": "JUMPI", "path": "7"}, "310": {"fn": null, "offset": [1303, 7539], "op": "DUP1", "path": "7"}, "311": {"fn": null, "offset": [1303, 7539], "op": "PUSH4", "path": "7", "value": "0x3074FFF7"}, "316": {"fn": null, "offset": [1303, 7539], "op": "EQ", "path": "7"}, "317": {"fn": null, "offset": [1303, 7539], "op": "PUSH2", "path": "7", "value": "0x17C"}, "320": {"fn": null, "offset": [1303, 7539], "op": "JUMPI", "path": "7"}, "321": {"fn": null, "offset": [1303, 7539], "op": "JUMPDEST", "path": "7"}, "322": {"fn": null, "offset": [1303, 7539], "op": "PUSH1", "path": "7", "value": "0x0"}, "324": {"fn": null, "offset": [1303, 7539], "op": "DUP1", "path": "7"}, "325": {"first_revert": true, "fn": null, "offset": [1303, 7539], "op": "REVERT", "path": "7"}, "326": {"offset": [1590, 1620], "op": "JUMPDEST", "path": "7"}, "327": {"fn": null, "offset": [1590, 1620], "op": "PUSH2", "path": "7", "value": "0x14E"}, "330": {"fn": null, "offset": [1590, 1620], "op": "PUSH2", "path": "7", "value": "0x26A"}, "333": {"fn": null, "jump": "i", "offset": [1590, 1620], "op": "JUMP", "path": "7"}, "334": {"fn": null, "offset": [1590, 1620], "op": "JUMPDEST", "path": "7"}, "335": {"fn": null, "offset": [1590, 1620], "op": "PUSH1", "path": "7", "value": "0x40"}, "337": {"fn": null, "offset": [1590, 1620], "op": "MLOAD", "path": "7"}, "338": {"fn": null, "offset": [1590, 1620], "op": "PUSH2", "path": "7", "value": "0x15B"}, "341": {"fn": null, "offset": [1590, 1620], "op": "SWAP2", "path": "7"}, "342": {"fn": null, "offset": [1590, 1620], "op": "SWAP1", "path": "7"}, "343": {"fn": null, "offset": [1590, 1620], "op": "PUSH2", "path": "7", "value": "0xEE9"}, "346": {"fn": null, "jump": "i", "offset": [1590, 1620], "op": "JUMP", "path": "7"}, "347": {"fn": null, "offset": [1590, 1620], "op": "JUMPDEST", "path": "7"}, "348": {"fn": null, "offset": [1590, 1620], "op": "PUSH1", "path": "7", "value": "0x40"}, "350": {"fn": null, "offset": [1590, 1620], "op": "MLOAD", "path": "7"}, "351": {"fn": null, "offset": [1590, 1620], "op": "DUP1", "path": "7"}, "352": {"fn": null, "offset": [1590, 1620], "op": "SWAP2", "path": "7"}, "353": {"fn": null, "offset": [1590, 1620], "op": "SUB", "path": "7"}, "354": {"fn": null, "offset": [1590, 1620], "op": "SWAP1", "path": "7"}, "355": {"fn": null, "offset": [1590, 1620], "op": "RETURN", "path": "7"}, "356": {"offset": [1420, 1457], "op": "JUMPDEST", "path": "7"}, "357": {"fn": null, "offset": [1420, 1457], "op": "PUSH2", "path": "7", "value": "0x14E"}, "360": {"fn": null, "offset": [1420, 1457], "op": "PUSH2", "path": "7", "value": "0x270"}, "363": {"fn": null, "jump": "i", "offset": [1420, 1457], "op": "JUMP", "path": "7"}, "364": {"offset": [1547, 1583], "op": "JUMPDEST", "path": "7"}, "365": {"fn": null, "offset": [1547, 1583], "op": "PUSH2", "path": "7", "value": "0x14E"}, "368": {"fn": null, "offset": [1547, 1583], "op": "PUSH2", "path": "7", "value": "0x276"}, "371": {"fn": null, "jump": "i", "offset": [1547, 1583], "op": "JUMP", "path": "7"}, "372": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7312, 7419], "op": "JUMPDEST", "path": "7"}, "373": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7312, 7419], "op": "PUSH2", "path": "7", "value": "0x14E"}, "376": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7312, 7419], "op": "PUSH2", "path": "7", "value": "0x27C"}, "379": {"fn": "LeveragedTrading.getBtcupBalance", "jump": "i", "offset": [7312, 7419], "op": "JUMP", "path": "7"}, "380": {"offset": [1792, 1827], "op": "JUMPDEST", "path": "7"}, "381": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [1792, 1827], "op": "PUSH2", "path": "7", "value": "0x184"}, "384": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [1792, 1827], "op": "PUSH2", "path": "7", "value": "0x302"}, "387": {"fn": "LeveragedTrading.getBtcupBalance", "jump": "i", "offset": [1792, 1827], "op": "JUMP", "path": "7"}, "388": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [1792, 1827], "op": "JUMPDEST", "path": "7"}, "389": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [1792, 1827], "op": "PUSH1", "path": "7", "value": "0x40"}, "391": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [1792, 1827], "op": "MLOAD", "path": "7"}, "392": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [1792, 1827], "op": "PUSH2", "path": "7", "value": "0x15B"}, "395": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [1792, 1827], "op": "SWAP2", "path": "7"}, "396": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [1792, 1827], "op": "SWAP1", "path": "7"}, "397": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [1792, 1827], "op": "PUSH2", "path": "7", "value": "0xDBE"}, "400": {"fn": "LeveragedTrading.getBtcupBalance", "jump": "i", "offset": [1792, 1827], "op": "JUMP", "path": "7"}, "401": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6319, 6636], "op": "JUMPDEST", "path": "7"}, "402": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6319, 6636], "op": "PUSH2", "path": "7", "value": "0x14E"}, "405": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6319, 6636], "op": "PUSH2", "path": "7", "value": "0x30B"}, "408": {"fn": "LeveragedTrading.getBtcPrice", "jump": "i", "offset": [6319, 6636], "op": "JUMP", "path": "7"}, "409": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [4604, 5258], "op": "JUMPDEST", "path": "7"}, "410": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [4604, 5258], "op": "PUSH2", "path": "7", "value": "0x1A1"}, "413": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [4604, 5258], "op": "PUSH2", "path": "7", "value": "0x398"}, "416": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "jump": "i", "offset": [4604, 5258], "op": "JUMP", "path": "7"}, "417": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [4604, 5258], "op": "JUMPDEST", "path": "7"}, "418": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [4604, 5258], "op": "STOP", "path": "7"}, "419": {"fn": "Ownable.renounceOwnership", "offset": [1605, 1697], "op": "JUMPDEST", "path": "0"}, "420": {"fn": "Ownable.renounceOwnership", "offset": [1605, 1697], "op": "PUSH2", "path": "0", "value": "0x1A1"}, "423": {"fn": "Ownable.renounceOwnership", "offset": [1605, 1697], "op": "PUSH2", "path": "0", "value": "0x428"}, "426": {"fn": "Ownable.renounceOwnership", "jump": "i", "offset": [1605, 1697], "op": "JUMP", "path": "0"}, "427": {"fn": "LeveragedTrading.getBtcDownPrice", "offset": [6088, 6267], "op": "JUMPDEST", "path": "7"}, "428": {"fn": "LeveragedTrading.getBtcDownPrice", "offset": [6088, 6267], "op": "PUSH2", "path": "7", "value": "0x14E"}, "431": {"fn": "LeveragedTrading.getBtcDownPrice", "offset": [6088, 6267], "op": "PUSH2", "path": "7", "value": "0x47C"}, "434": {"fn": "LeveragedTrading.getBtcDownPrice", "jump": "i", "offset": [6088, 6267], "op": "JUMP", "path": "7"}, "435": {"fn": "Ownable.owner", "offset": [973, 1058], "op": "JUMPDEST", "path": "0"}, "436": {"fn": "Ownable.owner", "offset": [973, 1058], "op": "PUSH2", "path": "0", "value": "0x1BB"}, "439": {"fn": "Ownable.owner", "offset": [973, 1058], "op": "PUSH2", "path": "0", "value": "0x4B8"}, "442": {"fn": "Ownable.owner", "jump": "i", "offset": [973, 1058], "op": "JUMP", "path": "0"}, "443": {"fn": "Ownable.owner", "offset": [973, 1058], "op": "JUMPDEST", "path": "0"}, "444": {"fn": "Ownable.owner", "offset": [973, 1058], "op": "PUSH1", "path": "0", "value": "0x40"}, "446": {"fn": "Ownable.owner", "offset": [973, 1058], "op": "MLOAD", "path": "0"}, "447": {"fn": "Ownable.owner", "offset": [973, 1058], "op": "PUSH2", "path": "0", "value": "0x15B"}, "450": {"fn": "Ownable.owner", "offset": [973, 1058], "op": "SWAP2", "path": "0"}, "451": {"fn": "Ownable.owner", "offset": [973, 1058], "op": "SWAP1", "path": "0"}, "452": {"fn": "Ownable.owner", "offset": [973, 1058], "op": "PUSH2", "path": "0", "value": "0xD6D"}, "455": {"fn": "Ownable.owner", "jump": "i", "offset": [973, 1058], "op": "JUMP", "path": "0"}, "456": {"fn": "LeveragedTrading.initiatePool", "offset": [2180, 2430], "op": "JUMPDEST", "path": "7"}, "457": {"fn": "LeveragedTrading.initiatePool", "offset": [2180, 2430], "op": "PUSH2", "path": "7", "value": "0x1A1"}, "460": {"fn": "LeveragedTrading.initiatePool", "offset": [2180, 2430], "op": "PUSH2", "path": "7", "value": "0x1D6"}, "463": {"fn": "LeveragedTrading.initiatePool", "offset": [2180, 2430], "op": "CALLDATASIZE", "path": "7"}, "464": {"fn": "LeveragedTrading.initiatePool", "offset": [2180, 2430], "op": "PUSH1", "path": "7", "value": "0x4"}, "466": {"fn": "LeveragedTrading.initiatePool", "offset": [2180, 2430], "op": "PUSH2", "path": "7", "value": "0xCEE"}, "469": {"fn": "LeveragedTrading.initiatePool", "jump": "i", "offset": [2180, 2430], "op": "JUMP", "path": "7"}, "470": {"fn": "LeveragedTrading.initiatePool", "offset": [2180, 2430], "op": "JUMPDEST", "path": "7"}, "471": {"fn": "LeveragedTrading.initiatePool", "offset": [2180, 2430], "op": "PUSH2", "path": "7", "value": "0x4C7"}, "474": {"fn": "LeveragedTrading.initiatePool", "jump": "i", "offset": [2180, 2430], "op": "JUMP", "path": "7"}, "475": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4054, 4598], "op": "JUMPDEST", "path": "7"}, "476": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4054, 4598], "op": "PUSH2", "path": "7", "value": "0x1A1"}, "479": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4054, 4598], "op": "PUSH2", "path": "7", "value": "0x1E9"}, "482": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4054, 4598], "op": "CALLDATASIZE", "path": "7"}, "483": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4054, 4598], "op": "PUSH1", "path": "7", "value": "0x4"}, "485": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4054, 4598], "op": "PUSH2", "path": "7", "value": "0xCEE"}, "488": {"fn": "LeveragedTrading.redeemBtcDown", "jump": "i", "offset": [4054, 4598], "op": "JUMP", "path": "7"}, "489": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4054, 4598], "op": "JUMPDEST", "path": "7"}, "490": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4054, 4598], "op": "PUSH2", "path": "7", "value": "0x555"}, "493": {"fn": "LeveragedTrading.redeemBtcDown", "jump": "i", "offset": [4054, 4598], "op": "JUMP", "path": "7"}, "494": {"offset": [1650, 1682], "op": "JUMPDEST", "path": "7"}, "495": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [1650, 1682], "op": "PUSH2", "path": "7", "value": "0x14E"}, "498": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [1650, 1682], "op": "PUSH2", "path": "7", "value": "0x6B1"}, "501": {"fn": "LeveragedTrading.redeemBtcDown", "jump": "i", "offset": [1650, 1682], "op": "JUMP", "path": "7"}, "502": {"fn": "LeveragedTrading.issueBtcDown", "offset": [2975, 3526], "op": "JUMPDEST", "path": "7"}, "503": {"fn": "LeveragedTrading.issueBtcDown", "offset": [2975, 3526], "op": "PUSH2", "path": "7", "value": "0x1A1"}, "506": {"fn": "LeveragedTrading.issueBtcDown", "offset": [2975, 3526], "op": "PUSH2", "path": "7", "value": "0x204"}, "509": {"fn": "LeveragedTrading.issueBtcDown", "offset": [2975, 3526], "op": "CALLDATASIZE", "path": "7"}, "510": {"fn": "LeveragedTrading.issueBtcDown", "offset": [2975, 3526], "op": "PUSH1", "path": "7", "value": "0x4"}, "512": {"fn": "LeveragedTrading.issueBtcDown", "offset": [2975, 3526], "op": "PUSH2", "path": "7", "value": "0xCEE"}, "515": {"fn": "LeveragedTrading.issueBtcDown", "jump": "i", "offset": [2975, 3526], "op": "JUMP", "path": "7"}, "516": {"fn": "LeveragedTrading.issueBtcDown", "offset": [2975, 3526], "op": "JUMPDEST", "path": "7"}, "517": {"fn": "LeveragedTrading.issueBtcDown", "offset": [2975, 3526], "op": "PUSH2", "path": "7", "value": "0x6B7"}, "520": {"fn": "LeveragedTrading.issueBtcDown", "jump": "i", "offset": [2975, 3526], "op": "JUMP", "path": "7"}, "521": {"fn": "LeveragedTrading.getBtcdownBalance", "offset": [7425, 7536], "op": "JUMPDEST", "path": "7"}, "522": {"fn": "LeveragedTrading.getBtcdownBalance", "offset": [7425, 7536], "op": "PUSH2", "path": "7", "value": "0x14E"}, "525": {"fn": "LeveragedTrading.getBtcdownBalance", "offset": [7425, 7536], "op": "PUSH2", "path": "7", "value": "0x80C"}, "528": {"fn": "LeveragedTrading.getBtcdownBalance", "jump": "i", "offset": [7425, 7536], "op": "JUMP", "path": "7"}, "529": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3532, 4048], "op": "JUMPDEST", "path": "7"}, "530": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3532, 4048], "op": "PUSH2", "path": "7", "value": "0x1A1"}, "533": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3532, 4048], "op": "PUSH2", "path": "7", "value": "0x21F"}, "536": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3532, 4048], "op": "CALLDATASIZE", "path": "7"}, "537": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3532, 4048], "op": "PUSH1", "path": "7", "value": "0x4"}, "539": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3532, 4048], "op": "PUSH2", "path": "7", "value": "0xCEE"}, "542": {"fn": "LeveragedTrading.redeemBtcUp", "jump": "i", "offset": [3532, 4048], "op": "JUMP", "path": "7"}, "543": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3532, 4048], "op": "JUMPDEST", "path": "7"}, "544": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3532, 4048], "op": "PUSH2", "path": "7", "value": "0x83D"}, "547": {"fn": "LeveragedTrading.redeemBtcUp", "jump": "i", "offset": [3532, 4048], "op": "JUMP", "path": "7"}, "548": {"offset": [1485, 1519], "op": "JUMPDEST", "path": "7"}, "549": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [1485, 1519], "op": "PUSH2", "path": "7", "value": "0x14E"}, "552": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [1485, 1519], "op": "PUSH2", "path": "7", "value": "0x926"}, "555": {"fn": "LeveragedTrading.redeemBtcUp", "jump": "i", "offset": [1485, 1519], "op": "JUMP", "path": "7"}, "556": {"offset": [1379, 1414], "op": "JUMPDEST", "path": "7"}, "557": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [1379, 1414], "op": "PUSH2", "path": "7", "value": "0x14E"}, "560": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [1379, 1414], "op": "PUSH2", "path": "7", "value": "0x92C"}, "563": {"fn": "LeveragedTrading.redeemBtcUp", "jump": "i", "offset": [1379, 1414], "op": "JUMP", "path": "7"}, "564": {"fn": "LeveragedTrading.getBtcUpPrice", "offset": [5893, 6050], "op": "JUMPDEST", "path": "7"}, "565": {"fn": "LeveragedTrading.getBtcUpPrice", "offset": [5893, 6050], "op": "PUSH2", "path": "7", "value": "0x14E"}, "568": {"fn": "LeveragedTrading.getBtcUpPrice", "offset": [5893, 6050], "op": "PUSH2", "path": "7", "value": "0x932"}, "571": {"fn": "LeveragedTrading.getBtcUpPrice", "jump": "i", "offset": [5893, 6050], "op": "JUMP", "path": "7"}, "572": {"fn": "Ownable.transferOwnership", "offset": [1846, 2035], "op": "JUMPDEST", "path": "0"}, "573": {"fn": "Ownable.transferOwnership", "offset": [1846, 2035], "op": "PUSH2", "path": "0", "value": "0x1A1"}, "576": {"fn": "Ownable.transferOwnership", "offset": [1846, 2035], "op": "PUSH2", "path": "0", "value": "0x24A"}, "579": {"fn": "Ownable.transferOwnership", "offset": [1846, 2035], "op": "CALLDATASIZE", "path": "0"}, "580": {"fn": "Ownable.transferOwnership", "offset": [1846, 2035], "op": "PUSH1", "path": "0", "value": "0x4"}, "582": {"fn": "Ownable.transferOwnership", "offset": [1846, 2035], "op": "PUSH2", "path": "0", "value": "0xCA7"}, "585": {"fn": "Ownable.transferOwnership", "jump": "i", "offset": [1846, 2035], "op": "JUMP", "path": "0"}, "586": {"fn": "Ownable.transferOwnership", "offset": [1846, 2035], "op": "JUMPDEST", "path": "0"}, "587": {"fn": "Ownable.transferOwnership", "offset": [1846, 2035], "op": "PUSH2", "path": "0", "value": "0x963"}, "590": {"fn": "Ownable.transferOwnership", "jump": "i", "offset": [1846, 2035], "op": "JUMP", "path": "0"}, "591": {"offset": [1711, 1742], "op": "JUMPDEST", "path": "7"}, "592": {"fn": "Ownable.transferOwnership", "offset": [1711, 1742], "op": "PUSH2", "path": "7", "value": "0x14E"}, "595": {"fn": "Ownable.transferOwnership", "offset": [1711, 1742], "op": "PUSH2", "path": "7", "value": "0x9D4"}, "598": {"fn": "Ownable.transferOwnership", "jump": "i", "offset": [1711, 1742], "op": "JUMP", "path": "7"}, "599": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2436, 2969], "op": "JUMPDEST", "path": "7"}, "600": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2436, 2969], "op": "PUSH2", "path": "7", "value": "0x1A1"}, "603": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2436, 2969], "op": "PUSH2", "path": "7", "value": "0x265"}, "606": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2436, 2969], "op": "CALLDATASIZE", "path": "7"}, "607": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2436, 2969], "op": "PUSH1", "path": "7", "value": "0x4"}, "609": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2436, 2969], "op": "PUSH2", "path": "7", "value": "0xCEE"}, "612": {"fn": "LeveragedTrading.issueBtcUp", "jump": "i", "offset": [2436, 2969], "op": "JUMP", "path": "7"}, "613": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2436, 2969], "op": "JUMPDEST", "path": "7"}, "614": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2436, 2969], "op": "PUSH2", "path": "7", "value": "0x9DA"}, "617": {"fn": "LeveragedTrading.issueBtcUp", "jump": "i", "offset": [2436, 2969], "op": "JUMP", "path": "7"}, "618": {"offset": [1590, 1620], "op": "JUMPDEST", "path": "7"}, "619": {"fn": "LeveragedTrading.issueBtcUp", "offset": [1590, 1620], "op": "PUSH1", "path": "7", "value": "0x5"}, "621": {"fn": "LeveragedTrading.issueBtcUp", "offset": [1590, 1620], "op": "SLOAD", "path": "7"}, "622": {"fn": "LeveragedTrading.issueBtcUp", "offset": [1590, 1620], "op": "DUP2", "path": "7"}, "623": {"fn": "LeveragedTrading.issueBtcUp", "jump": "o", "offset": [1590, 1620], "op": "JUMP", "path": "7"}, "624": {"offset": [1420, 1457], "op": "JUMPDEST", "path": "7"}, "625": {"fn": "LeveragedTrading.issueBtcUp", "offset": [1420, 1457], "op": "PUSH1", "path": "7", "value": "0x2"}, "627": {"fn": "LeveragedTrading.issueBtcUp", "offset": [1420, 1457], "op": "SLOAD", "path": "7"}, "628": {"fn": "LeveragedTrading.issueBtcUp", "offset": [1420, 1457], "op": "DUP2", "path": "7"}, "629": {"fn": "LeveragedTrading.issueBtcUp", "jump": "o", "offset": [1420, 1457], "op": "JUMP", "path": "7"}, "630": {"offset": [1547, 1583], "op": "JUMPDEST", "path": "7"}, "631": {"fn": "LeveragedTrading.issueBtcUp", "offset": [1547, 1583], "op": "PUSH1", "path": "7", "value": "0x4"}, "633": {"fn": "LeveragedTrading.issueBtcUp", "offset": [1547, 1583], "op": "SLOAD", "path": "7"}, "634": {"fn": "LeveragedTrading.issueBtcUp", "offset": [1547, 1583], "op": "DUP2", "path": "7"}, "635": {"fn": "LeveragedTrading.issueBtcUp", "jump": "o", "offset": [1547, 1583], "op": "JUMP", "path": "7"}, "636": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7312, 7419], "op": "JUMPDEST", "path": "7"}, "637": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7385, 7390], "op": "PUSH1", "path": "7", "statement": 0, "value": "0xA"}, "639": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7385, 7390], "op": "SLOAD", "path": "7"}, "640": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7385, 7412], "op": "PUSH1", "path": "7", "value": "0x40"}, "642": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7385, 7412], "op": "MLOAD", "path": "7"}, "643": {"op": "PUSH4", "value": "0x70A08231"}, "648": {"op": "PUSH1", "value": "0xE0"}, "650": {"op": "SHL"}, "651": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7385, 7412], "op": "DUP2", "path": "7"}, "652": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7385, 7412], "op": "MSTORE", "path": "7"}, "653": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7359, 7366], "op": "PUSH1", "path": "7", "value": "0x0"}, "655": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7359, 7366], "op": "SWAP2", "path": "7"}, "656": {"op": "PUSH1", "value": "0x1"}, "658": {"op": "PUSH1", "value": "0x1"}, "660": {"op": "PUSH1", "value": "0xA0"}, "662": {"op": "SHL"}, "663": {"op": "SUB"}, "664": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7385, 7390], "op": "AND", "path": "7"}, "665": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7385, 7390], "op": "SWAP1", "path": "7"}, "666": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7385, 7400], "op": "PUSH4", "path": "7", "value": "0x70A08231"}, "671": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7385, 7400], "op": "SWAP1", "path": "7"}, "672": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7385, 7412], "op": "PUSH2", "path": "7", "value": "0x2AD"}, "675": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7385, 7412], "op": "SWAP1", "path": "7"}, "676": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7401, 7411], "op": "CALLER", "path": "7"}, "677": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7401, 7411], "op": "SWAP1", "path": "7"}, "678": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7385, 7412], "op": "PUSH1", "path": "7", "value": "0x4"}, "680": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7385, 7412], "op": "ADD", "path": "7"}, "681": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7385, 7412], "op": "PUSH2", "path": "7", "value": "0xD6D"}, "684": {"fn": "LeveragedTrading.getBtcupBalance", "jump": "i", "offset": [7385, 7412], "op": "JUMP", "path": "7"}, "685": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7385, 7412], "op": "JUMPDEST", "path": "7"}, "686": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7385, 7412], "op": "PUSH1", "path": "7", "value": "0x20"}, "688": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7385, 7412], "op": "PUSH1", "path": "7", "value": "0x40"}, "690": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7385, 7412], "op": "MLOAD", "path": "7"}, "691": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7385, 7412], "op": "DUP1", "path": "7"}, "692": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7385, 7412], "op": "DUP4", "path": "7"}, "693": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7385, 7412], "op": "SUB", "path": "7"}, "694": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7385, 7412], "op": "DUP2", "path": "7"}, "695": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7385, 7412], "op": "DUP7", "path": "7"}, "696": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7385, 7412], "op": "DUP1", "path": "7"}, "697": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7385, 7412], "op": "EXTCODESIZE", "path": "7"}, "698": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7385, 7412], "op": "ISZERO", "path": "7"}, "699": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7385, 7412], "op": "DUP1", "path": "7"}, "700": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7385, 7412], "op": "ISZERO", "path": "7"}, "701": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7385, 7412], "op": "PUSH2", "path": "7", "value": "0x2C5"}, "704": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7385, 7412], "op": "JUMPI", "path": "7"}, "705": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7385, 7412], "op": "PUSH1", "path": "7", "value": "0x0"}, "707": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7385, 7412], "op": "DUP1", "path": "7"}, "708": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7385, 7412], "op": "REVERT", "path": "7"}, "709": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7385, 7412], "op": "JUMPDEST", "path": "7"}, "710": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7385, 7412], "op": "POP", "path": "7"}, "711": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7385, 7412], "op": "GAS", "path": "7"}, "712": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7385, 7412], "op": "STATICCALL", "path": "7"}, "713": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7385, 7412], "op": "ISZERO", "path": "7"}, "714": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7385, 7412], "op": "DUP1", "path": "7"}, "715": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7385, 7412], "op": "ISZERO", "path": "7"}, "716": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7385, 7412], "op": "PUSH2", "path": "7", "value": "0x2D9"}, "719": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7385, 7412], "op": "JUMPI", "path": "7"}, "720": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7385, 7412], "op": "RETURNDATASIZE", "path": "7"}, "721": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7385, 7412], "op": "PUSH1", "path": "7", "value": "0x0"}, "723": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7385, 7412], "op": "DUP1", "path": "7"}, "724": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7385, 7412], "op": "RETURNDATACOPY", "path": "7"}, "725": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7385, 7412], "op": "RETURNDATASIZE", "path": "7"}, "726": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7385, 7412], "op": "PUSH1", "path": "7", "value": "0x0"}, "728": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7385, 7412], "op": "REVERT", "path": "7"}, "729": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7385, 7412], "op": "JUMPDEST", "path": "7"}, "730": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7385, 7412], "op": "POP", "path": "7"}, "731": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7385, 7412], "op": "POP", "path": "7"}, "732": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7385, 7412], "op": "POP", "path": "7"}, "733": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7385, 7412], "op": "POP", "path": "7"}, "734": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7385, 7412], "op": "PUSH1", "path": "7", "value": "0x40"}, "736": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7385, 7412], "op": "MLOAD", "path": "7"}, "737": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7385, 7412], "op": "RETURNDATASIZE", "path": "7"}, "738": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7385, 7412], "op": "PUSH1", "path": "7", "value": "0x1F"}, "740": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7385, 7412], "op": "NOT", "path": "7"}, "741": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7385, 7412], "op": "PUSH1", "path": "7", "value": "0x1F"}, "743": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7385, 7412], "op": "DUP3", "path": "7"}, "744": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7385, 7412], "op": "ADD", "path": "7"}, "745": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7385, 7412], "op": "AND", "path": "7"}, "746": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7385, 7412], "op": "DUP3", "path": "7"}, "747": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7385, 7412], "op": "ADD", "path": "7"}, "748": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7385, 7412], "op": "DUP1", "path": "7"}, "749": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7385, 7412], "op": "PUSH1", "path": "7", "value": "0x40"}, "751": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7385, 7412], "op": "MSTORE", "path": "7"}, "752": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7385, 7412], "op": "POP", "path": "7"}, "753": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7385, 7412], "op": "DUP2", "path": "7"}, "754": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7385, 7412], "op": "ADD", "path": "7"}, "755": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7385, 7412], "op": "SWAP1", "path": "7"}, "756": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7385, 7412], "op": "PUSH2", "path": "7", "value": "0x2FD"}, "759": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7385, 7412], "op": "SWAP2", "path": "7"}, "760": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7385, 7412], "op": "SWAP1", "path": "7"}, "761": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7385, 7412], "op": "PUSH2", "path": "7", "value": "0xD06"}, "764": {"fn": "LeveragedTrading.getBtcupBalance", "jump": "i", "offset": [7385, 7412], "op": "JUMP", "path": "7"}, "765": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7385, 7412], "op": "JUMPDEST", "path": "7"}, "766": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7378, 7412], "op": "SWAP1", "path": "7"}, "767": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7378, 7412], "op": "POP", "path": "7"}, "768": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [7312, 7419], "op": "SWAP1", "path": "7"}, "769": {"fn": "LeveragedTrading.getBtcupBalance", "jump": "o", "offset": [7312, 7419], "op": "JUMP", "path": "7"}, "770": {"offset": [1792, 1827], "op": "JUMPDEST", "path": "7"}, "771": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [1792, 1827], "op": "PUSH1", "path": "7", "value": "0x8"}, "773": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [1792, 1827], "op": "SLOAD", "path": "7"}, "774": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [1792, 1827], "op": "PUSH1", "path": "7", "value": "0xFF"}, "776": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [1792, 1827], "op": "AND", "path": "7"}, "777": {"fn": "LeveragedTrading.getBtcupBalance", "offset": [1792, 1827], "op": "DUP2", "path": "7"}, "778": {"fn": "LeveragedTrading.getBtcupBalance", "jump": "o", "offset": [1792, 1827], "op": "JUMP", "path": "7"}, "779": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6319, 6636], "op": "JUMPDEST", "path": "7"}, "780": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6438, 6455], "op": "PUSH1", "path": "7", "value": "0x9"}, "782": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6438, 6455], "op": "SLOAD", "path": "7"}, "783": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6488, 6515], "op": "PUSH1", "path": "7", "value": "0x40"}, "785": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6488, 6515], "op": "DUP1", "path": "7"}, "786": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6488, 6515], "op": "MLOAD", "path": "7"}, "787": {"op": "PUSH4", "value": "0x3FABE5A3"}, "792": {"op": "PUSH1", "value": "0xE2"}, "794": {"op": "SHL"}, "795": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6488, 6515], "op": "DUP2", "path": "7"}, "796": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6488, 6515], "op": "MSTORE", "path": "7"}, "797": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6488, 6515], "op": "SWAP1", "path": "7"}, "798": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6488, 6515], "op": "MLOAD", "path": "7"}, "799": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6363, 6370], "op": "PUSH1", "path": "7", "value": "0x0"}, "801": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6363, 6370], "op": "SWAP3", "path": "7"}, "802": {"op": "PUSH1", "value": "0x1"}, "804": {"op": "PUSH1", "value": "0x1"}, "806": {"op": "PUSH1", "value": "0xA0"}, "808": {"op": "SHL"}, "809": {"op": "SUB"}, "810": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6438, 6455], "op": "AND", "path": "7"}, "811": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6438, 6455], "op": "SWAP2", "path": "7"}, "812": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6363, 6370], "op": "DUP4", "path": "7"}, "813": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6363, 6370], "op": "SWAP2", "path": "7"}, "814": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6438, 6455], "op": "DUP4", "path": "7"}, "815": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6438, 6455], "op": "SWAP2", "path": "7"}, "816": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6488, 6513], "op": "PUSH4", "path": "7", "value": "0xFEAF968C"}, "821": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6488, 6513], "op": "SWAP2", "path": "7"}, "822": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6488, 6515], "op": "PUSH1", "path": "7", "value": "0x4"}, "824": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6488, 6515], "op": "DUP1", "path": "7"}, "825": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6488, 6515], "op": "DUP4", "path": "7"}, "826": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6488, 6515], "op": "ADD", "path": "7"}, "827": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6488, 6515], "op": "SWAP3", "path": "7"}, "828": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6488, 6515], "op": "PUSH1", "path": "7", "value": "0xA0"}, "830": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6488, 6515], "op": "SWAP3", "path": "7"}, "831": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6488, 6515], "op": "SWAP2", "path": "7"}, "832": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6488, 6515], "op": "SWAP1", "path": "7"}, "833": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6488, 6515], "op": "DUP3", "path": "7"}, "834": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6488, 6515], "op": "SWAP1", "path": "7"}, "835": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6488, 6515], "op": "SUB", "path": "7"}, "836": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6488, 6515], "op": "ADD", "path": "7"}, "837": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6488, 6515], "op": "DUP2", "path": "7"}, "838": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6438, 6455], "op": "DUP7", "path": "7"}, "839": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6488, 6515], "op": "DUP1", "path": "7"}, "840": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6488, 6515], "op": "EXTCODESIZE", "path": "7"}, "841": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6488, 6515], "op": "ISZERO", "path": "7"}, "842": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6488, 6515], "op": "DUP1", "path": "7"}, "843": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6488, 6515], "op": "ISZERO", "path": "7"}, "844": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6488, 6515], "op": "PUSH2", "path": "7", "value": "0x354"}, "847": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6488, 6515], "op": "JUMPI", "path": "7"}, "848": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6488, 6515], "op": "PUSH1", "path": "7", "value": "0x0"}, "850": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6488, 6515], "op": "DUP1", "path": "7"}, "851": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6488, 6515], "op": "REVERT", "path": "7"}, "852": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6488, 6515], "op": "JUMPDEST", "path": "7"}, "853": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6488, 6515], "op": "POP", "path": "7"}, "854": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6488, 6515], "op": "GAS", "path": "7"}, "855": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6488, 6515], "op": "STATICCALL", "path": "7"}, "856": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6488, 6515], "op": "ISZERO", "path": "7"}, "857": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6488, 6515], "op": "DUP1", "path": "7"}, "858": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6488, 6515], "op": "ISZERO", "path": "7"}, "859": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6488, 6515], "op": "PUSH2", "path": "7", "value": "0x368"}, "862": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6488, 6515], "op": "JUMPI", "path": "7"}, "863": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6488, 6515], "op": "RETURNDATASIZE", "path": "7"}, "864": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6488, 6515], "op": "PUSH1", "path": "7", "value": "0x0"}, "866": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6488, 6515], "op": "DUP1", "path": "7"}, "867": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6488, 6515], "op": "RETURNDATACOPY", "path": "7"}, "868": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6488, 6515], "op": "RETURNDATASIZE", "path": "7"}, "869": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6488, 6515], "op": "PUSH1", "path": "7", "value": "0x0"}, "871": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6488, 6515], "op": "REVERT", "path": "7"}, "872": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6488, 6515], "op": "JUMPDEST", "path": "7"}, "873": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6488, 6515], "op": "POP", "path": "7"}, "874": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6488, 6515], "op": "POP", "path": "7"}, "875": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6488, 6515], "op": "POP", "path": "7"}, "876": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6488, 6515], "op": "POP", "path": "7"}, "877": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6488, 6515], "op": "PUSH1", "path": "7", "value": "0x40"}, "879": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6488, 6515], "op": "MLOAD", "path": "7"}, "880": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6488, 6515], "op": "RETURNDATASIZE", "path": "7"}, "881": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6488, 6515], "op": "PUSH1", "path": "7", "value": "0x1F"}, "883": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6488, 6515], "op": "NOT", "path": "7"}, "884": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6488, 6515], "op": "PUSH1", "path": "7", "value": "0x1F"}, "886": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6488, 6515], "op": "DUP3", "path": "7"}, "887": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6488, 6515], "op": "ADD", "path": "7"}, "888": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6488, 6515], "op": "AND", "path": "7"}, "889": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6488, 6515], "op": "DUP3", "path": "7"}, "890": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6488, 6515], "op": "ADD", "path": "7"}, "891": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6488, 6515], "op": "DUP1", "path": "7"}, "892": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6488, 6515], "op": "PUSH1", "path": "7", "value": "0x40"}, "894": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6488, 6515], "op": "MSTORE", "path": "7"}, "895": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6488, 6515], "op": "POP", "path": "7"}, "896": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6488, 6515], "op": "DUP2", "path": "7"}, "897": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6488, 6515], "op": "ADD", "path": "7"}, "898": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6488, 6515], "op": "SWAP1", "path": "7"}, "899": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6488, 6515], "op": "PUSH2", "path": "7", "value": "0x38C"}, "902": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6488, 6515], "op": "SWAP2", "path": "7"}, "903": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6488, 6515], "op": "SWAP1", "path": "7"}, "904": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6488, 6515], "op": "PUSH2", "path": "7", "value": "0xD1E"}, "907": {"fn": "LeveragedTrading.getBtcPrice", "jump": "i", "offset": [6488, 6515], "op": "JUMP", "path": "7"}, "908": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6488, 6515], "op": "JUMPDEST", "path": "7"}, "909": {"op": "POP"}, "910": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6466, 6515], "op": "SWAP2", "path": "7"}, "911": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6466, 6515], "op": "SWAP6", "path": "7"}, "912": {"op": "POP"}, "913": {"op": "POP"}, "914": {"op": "POP"}, "915": {"op": "POP"}, "916": {"op": "POP"}, "917": {"op": "POP"}, "918": {"fn": "LeveragedTrading.getBtcPrice", "offset": [6319, 6636], "op": "SWAP1", "path": "7"}, "919": {"fn": "LeveragedTrading.getBtcPrice", "jump": "o", "offset": [6319, 6636], "op": "JUMP", "path": "7"}, "920": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [4604, 5258], "op": "JUMPDEST", "path": "7"}, "921": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [4657, 4673], "op": "PUSH1", "path": "7", "value": "0x0"}, "923": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [4676, 4689], "op": "PUSH2", "path": "7", "value": "0x3A2"}, "926": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [4676, 4687], "op": "PUSH2", "path": "7", "value": "0x30B"}, "929": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "jump": "i", "offset": [4676, 4689], "op": "JUMP", "path": "7"}, "930": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [4676, 4689], "op": "JUMPDEST", "path": "7"}, "931": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [4657, 4689], "op": "SWAP1", "path": "7"}, "932": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [4657, 4689], "op": "POP", "path": "7"}, "933": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [4722, 4723], "op": "PUSH1", "path": "7", "value": "0x0"}, "935": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [4704, 4719], "op": "PUSH1", "path": "7", "value": "0x3"}, "937": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [4704, 4719], "op": "SLOAD", "path": "7"}, "938": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [4704, 4723], "op": "GT", "path": "7"}, "939": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [4703, 4751], "op": "DUP1", "path": "7"}, "940": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [4703, 4751], "op": "ISZERO", "path": "7"}, "941": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [4703, 4751], "op": "PUSH2", "path": "7", "value": "0x3B8"}, "944": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [4703, 4751], "op": "JUMPI", "path": "7"}, "945": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [4703, 4751], "op": "POP", "path": "7"}, "946": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [4749, 4750], "op": "PUSH1", "path": "7", "value": "0x0"}, "948": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [4729, 4746], "op": "PUSH1", "path": "7", "value": "0x4"}, "950": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [4729, 4746], "op": "SLOAD", "path": "7"}, "951": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [4729, 4750], "op": "GT", "path": "7"}, "952": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [4703, 4751], "op": "JUMPDEST", "path": "7"}, "953": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [4699, 5218], "op": "ISZERO", "path": "7"}, "954": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [4699, 5218], "op": "PUSH2", "path": "7", "value": "0x423"}, "957": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [4699, 5218], "op": "JUMPI", "path": "7"}, "958": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [4767, 4790], "op": "PUSH1", "path": "7", "value": "0x0"}, "960": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [4793, 4821], "op": "PUSH2", "path": "7", "value": "0x3C8"}, "963": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [4812, 4820], "op": "DUP3", "path": "7"}, "964": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [4793, 4811], "op": "PUSH2", "path": "7", "value": "0xAC1"}, "967": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "jump": "i", "offset": [4793, 4821], "op": "JUMP", "path": "7"}, "968": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [4793, 4821], "op": "JUMPDEST", "path": "7"}, "969": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [4767, 4821], "op": "SWAP1", "path": "7"}, "970": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [4767, 4821], "op": "POP", "path": "7"}, "971": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [4859, 4860], "op": "PUSH1", "path": "7", "value": "0x0"}, "973": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [4839, 4856], "op": "PUSH2", "path": "7", "value": "0x3D5"}, "976": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [4847, 4855], "op": "DUP4", "path": "7"}, "977": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [4839, 4846], "op": "PUSH2", "path": "7", "value": "0xAFF"}, "980": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "jump": "i", "offset": [4839, 4856], "op": "JUMP", "path": "7"}, "981": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [4839, 4856], "op": "JUMPDEST", "path": "7"}, "982": {"branch": 55, "fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [4839, 4860], "op": "SGT", "path": "7"}, "983": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [4835, 5207], "op": "ISZERO", "path": "7"}, "984": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [4835, 5207], "op": "PUSH2", "path": "7", "value": "0x400"}, "987": {"branch": 55, "fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [4835, 5207], "op": "JUMPI", "path": "7"}, "988": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [4898, 4913], "op": "PUSH1", "path": "7", "statement": 1, "value": "0x3"}, "990": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [4898, 4913], "op": "SLOAD", "path": "7"}, "991": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [4898, 4934], "op": "PUSH2", "path": "7", "value": "0x3E8"}, "994": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [4898, 4934], "op": "SWAP1", "path": "7"}, "995": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [4918, 4933], "op": "DUP3", "path": "7"}, "996": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [4898, 4917], "op": "PUSH2", "path": "7", "value": "0xB1C"}, "999": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "jump": "i", "offset": [4898, 4934], "op": "JUMP", "path": "7"}, "1000": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [4898, 4934], "op": "JUMPDEST", "path": "7"}, "1001": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [4880, 4895], "op": "PUSH1", "path": "7", "value": "0x3"}, "1003": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [4880, 4934], "op": "SSTORE", "path": "7"}, "1004": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [4972, 4989], "op": "PUSH1", "path": "7", "statement": 2, "value": "0x4"}, "1006": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [4972, 4989], "op": "SLOAD", "path": "7"}, "1007": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [4972, 5010], "op": "PUSH2", "path": "7", "value": "0x3F8"}, "1010": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [4972, 5010], "op": "SWAP1", "path": "7"}, "1011": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [4994, 5009], "op": "DUP3", "path": "7"}, "1012": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [4972, 4993], "op": "PUSH2", "path": "7", "value": "0xB2F"}, "1015": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "jump": "i", "offset": [4972, 5010], "op": "JUMP", "path": "7"}, "1016": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [4972, 5010], "op": "JUMPDEST", "path": "7"}, "1017": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [4952, 4969], "op": "PUSH1", "path": "7", "value": "0x4"}, "1019": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [4952, 5010], "op": "SSTORE", "path": "7"}, "1020": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [4835, 5207], "op": "PUSH2", "path": "7", "value": "0x421"}, "1023": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [4835, 5207], "op": "JUMP", "path": "7"}, "1024": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [4835, 5207], "op": "JUMPDEST", "path": "7"}, "1025": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [5080, 5095], "op": "PUSH1", "path": "7", "statement": 3, "value": "0x3"}, "1027": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [5080, 5095], "op": "SLOAD", "path": "7"}, "1028": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [5080, 5116], "op": "PUSH2", "path": "7", "value": "0x40D"}, "1031": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [5080, 5116], "op": "SWAP1", "path": "7"}, "1032": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [5100, 5115], "op": "DUP3", "path": "7"}, "1033": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [5080, 5099], "op": "PUSH2", "path": "7", "value": "0xB2F"}, "1036": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "jump": "i", "offset": [5080, 5116], "op": "JUMP", "path": "7"}, "1037": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [5080, 5116], "op": "JUMPDEST", "path": "7"}, "1038": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [5062, 5077], "op": "PUSH1", "path": "7", "value": "0x3"}, "1040": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [5062, 5116], "op": "SSTORE", "path": "7"}, "1041": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [5154, 5171], "op": "PUSH1", "path": "7", "statement": 4, "value": "0x4"}, "1043": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [5154, 5171], "op": "SLOAD", "path": "7"}, "1044": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [5154, 5192], "op": "PUSH2", "path": "7", "value": "0x41D"}, "1047": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [5154, 5192], "op": "SWAP1", "path": "7"}, "1048": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [5176, 5191], "op": "DUP3", "path": "7"}, "1049": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [5154, 5175], "op": "PUSH2", "path": "7", "value": "0xB1C"}, "1052": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "jump": "i", "offset": [5154, 5192], "op": "JUMP", "path": "7"}, "1053": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [5154, 5192], "op": "JUMPDEST", "path": "7"}, "1054": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [5134, 5151], "op": "PUSH1", "path": "7", "value": "0x4"}, "1056": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [5134, 5192], "op": "SSTORE", "path": "7"}, "1057": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [4835, 5207], "op": "JUMPDEST", "path": "7"}, "1058": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [4699, 5218], "op": "POP", "path": "7"}, "1059": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [4699, 5218], "op": "JUMPDEST", "path": "7"}, "1060": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [5228, 5240], "op": "PUSH1", "path": "7", "statement": 5, "value": "0x7"}, "1062": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "offset": [5228, 5251], "op": "SSTORE", "path": "7"}, "1063": {"fn": "LeveragedTrading.rebalanceLeveragedTokens", "jump": "o", "offset": [4604, 5258], "op": "JUMP", "path": "7"}, "1064": {"fn": "Ownable.renounceOwnership", "offset": [1605, 1697], "op": "JUMPDEST", "path": "0"}, "1065": {"offset": [1196, 1208], "op": "PUSH2", "path": "0", "value": "0x430"}, "1068": {"offset": [1196, 1206], "op": "PUSH2", "path": "0", "value": "0xB3B"}, "1071": {"jump": "i", "offset": [1196, 1208], "op": "JUMP", "path": "0"}, "1072": {"fn": "Ownable.renounceOwnership", "offset": [1196, 1208], "op": "JUMPDEST", "path": "0"}, "1073": {"op": "PUSH1", "value": "0x1"}, "1075": {"op": "PUSH1", "value": "0x1"}, "1077": {"op": "PUSH1", "value": "0xA0"}, "1079": {"op": "SHL"}, "1080": {"op": "SUB"}, "1081": {"offset": [1185, 1208], "op": "AND", "path": "0"}, "1082": {"offset": [1185, 1192], "op": "PUSH2", "path": "0", "value": "0x441"}, "1085": {"offset": [1185, 1190], "op": "PUSH2", "path": "0", "value": "0x4B8"}, "1088": {"jump": "i", "offset": [1185, 1192], "op": "JUMP", "path": "0"}, "1089": {"fn": "Ownable.renounceOwnership", "offset": [1185, 1192], "op": "JUMPDEST", "path": "0"}, "1090": {"op": "PUSH1", "value": "0x1"}, "1092": {"op": "PUSH1", "value": "0x1"}, "1094": {"op": "PUSH1", "value": "0xA0"}, "1096": {"op": "SHL"}, "1097": {"op": "SUB"}, "1098": {"offset": [1185, 1208], "op": "AND", "path": "0"}, "1099": {"fn": "Ownable.renounceOwnership", "offset": [1185, 1208], "op": "EQ", "path": "0"}, "1100": {"offset": [1177, 1245], "op": "PUSH2", "path": "0", "value": "0x470"}, "1103": {"offset": [1177, 1245], "op": "JUMPI", "path": "0"}, "1104": {"fn": "Ownable.renounceOwnership", "offset": [1177, 1245], "op": "PUSH1", "path": "0", "value": "0x40"}, "1106": {"fn": "Ownable.renounceOwnership", "offset": [1177, 1245], "op": "MLOAD", "path": "0"}, "1107": {"op": "PUSH3", "value": "0x461BCD"}, "1111": {"op": "PUSH1", "value": "0xE5"}, "1113": {"op": "SHL"}, "1114": {"offset": [1177, 1245], "op": "DUP2", "path": "0"}, "1115": {"fn": "Ownable.renounceOwnership", "offset": [1177, 1245], "op": "MSTORE", "path": "0"}, "1116": {"fn": "Ownable.renounceOwnership", "offset": [1177, 1245], "op": "PUSH1", "path": "0", "value": "0x4"}, "1118": {"fn": "Ownable.renounceOwnership", "offset": [1177, 1245], "op": "ADD", "path": "0"}, "1119": {"fn": "Ownable.renounceOwnership", "offset": [1177, 1245], "op": "PUSH2", "path": "0", "value": "0x467"}, "1122": {"fn": "Ownable.renounceOwnership", "offset": [1177, 1245], "op": "SWAP1", "path": "0"}, "1123": {"fn": "Ownable.renounceOwnership", "offset": [1177, 1245], "op": "PUSH2", "path": "0", "value": "0xE7D"}, "1126": {"fn": "Ownable.renounceOwnership", "jump": "i", "offset": [1177, 1245], "op": "JUMP", "path": "0"}, "1127": {"fn": "Ownable.renounceOwnership", "offset": [1177, 1245], "op": "JUMPDEST", "path": "0"}, "1128": {"fn": "Ownable.renounceOwnership", "offset": [1177, 1245], "op": "PUSH1", "path": "0", "value": "0x40"}, "1130": {"fn": "Ownable.renounceOwnership", "offset": [1177, 1245], "op": "MLOAD", "path": "0"}, "1131": {"fn": "Ownable.renounceOwnership", "offset": [1177, 1245], "op": "DUP1", "path": "0"}, "1132": {"fn": "Ownable.renounceOwnership", "offset": [1177, 1245], "op": "SWAP2", "path": "0"}, "1133": {"fn": "Ownable.renounceOwnership", "offset": [1177, 1245], "op": "SUB", "path": "0"}, "1134": {"fn": "Ownable.renounceOwnership", "offset": [1177, 1245], "op": "SWAP1", "path": "0"}, "1135": {"fn": "Ownable.renounceOwnership", "offset": [1177, 1245], "op": "REVERT", "optimizer_revert": true, "path": "0"}, "1136": {"fn": "Ownable.renounceOwnership", "offset": [1177, 1245], "op": "JUMPDEST", "path": "0"}, "1137": {"fn": "Ownable.renounceOwnership", "offset": [1669, 1690], "op": "PUSH2", "path": "0", "statement": 6, "value": "0x47A"}, "1140": {"fn": "Ownable.renounceOwnership", "offset": [1687, 1688], "op": "PUSH1", "path": "0", "value": "0x0"}, "1142": {"fn": "Ownable.renounceOwnership", "offset": [1669, 1678], "op": "PUSH2", "path": "0", "value": "0xB3F"}, "1145": {"fn": "Ownable.renounceOwnership", "jump": "i", "offset": [1669, 1690], "op": "JUMP", "path": "0"}, "1146": {"fn": "Ownable.renounceOwnership", "offset": [1669, 1690], "op": "JUMPDEST", "path": "0"}, "1147": {"fn": "Ownable.renounceOwnership", "jump": "o", "offset": [1605, 1697], "op": "JUMP", "path": "0"}, "1148": {"fn": "LeveragedTrading.getBtcDownPrice", "offset": [6088, 6267], "op": "JUMPDEST", "path": "7"}, "1149": {"fn": "LeveragedTrading.getBtcDownPrice", "offset": [6136, 6143], "op": "PUSH1", "path": "7", "value": "0x0"}, "1151": {"fn": "LeveragedTrading.getBtcDownPrice", "offset": [6174, 6187], "op": "PUSH1", "path": "7", "statement": 7, "value": "0x6"}, "1153": {"fn": "LeveragedTrading.getBtcDownPrice", "offset": [6174, 6187], "op": "SLOAD", "path": "7"}, "1154": {"fn": "LeveragedTrading.getBtcDownPrice", "offset": [6191, 6192], "op": "PUSH1", "path": "7", "value": "0x0"}, "1156": {"branch": 56, "fn": "LeveragedTrading.getBtcDownPrice", "offset": [6174, 6192], "op": "EQ", "path": "7"}, "1157": {"fn": "LeveragedTrading.getBtcDownPrice", "offset": [6174, 6260], "op": "PUSH2", "path": "7", "value": "0x4B1"}, "1160": {"branch": 56, "fn": "LeveragedTrading.getBtcDownPrice", "offset": [6174, 6260], "op": "JUMPI", "path": "7"}, "1161": {"fn": "LeveragedTrading.getBtcDownPrice", "offset": [6211, 6260], "op": "PUSH2", "path": "7", "value": "0x4AC"}, "1164": {"fn": "LeveragedTrading.getBtcDownPrice", "offset": [6246, 6259], "op": "PUSH1", "path": "7", "value": "0x6"}, "1166": {"fn": "LeveragedTrading.getBtcDownPrice", "offset": [6246, 6259], "op": "SLOAD", "path": "7"}, "1167": {"fn": "LeveragedTrading.getBtcDownPrice", "offset": [6211, 6241], "op": "PUSH2", "path": "7", "value": "0x4A6"}, "1170": {"fn": "LeveragedTrading.getBtcDownPrice", "offset": [6233, 6240], "op": "PUSH3", "path": "7", "value": "0xF4240"}, "1174": {"fn": "LeveragedTrading.getBtcDownPrice", "offset": [6211, 6228], "op": "PUSH1", "path": "7", "value": "0x4"}, "1176": {"fn": "LeveragedTrading.getBtcDownPrice", "offset": [6211, 6228], "op": "SLOAD", "path": "7"}, "1177": {"fn": "LeveragedTrading.getBtcDownPrice", "offset": [6211, 6232], "op": "PUSH2", "path": "7", "value": "0xB8F"}, "1180": {"fn": "LeveragedTrading.getBtcDownPrice", "offset": [6211, 6232], "op": "SWAP1", "path": "7"}, "1181": {"fn": "LeveragedTrading.getBtcDownPrice", "offset": [6211, 6241], "op": "SWAP2", "path": "7"}, "1182": {"fn": "LeveragedTrading.getBtcDownPrice", "offset": [6211, 6241], "op": "SWAP1", "path": "7"}, "1183": {"fn": "LeveragedTrading.getBtcDownPrice", "offset": [6211, 6241], "op": "PUSH4", "path": "7", "value": "0xFFFFFFFF"}, "1188": {"fn": "LeveragedTrading.getBtcDownPrice", "offset": [6211, 6241], "op": "AND", "path": "7"}, "1189": {"fn": "LeveragedTrading.getBtcDownPrice", "jump": "i", "offset": [6211, 6241], "op": "JUMP", "path": "7"}, "1190": {"fn": "LeveragedTrading.getBtcDownPrice", "offset": [6211, 6241], "op": "JUMPDEST", "path": "7"}, "1191": {"fn": "LeveragedTrading.getBtcDownPrice", "offset": [6211, 6245], "op": "SWAP1", "path": "7"}, "1192": {"fn": "LeveragedTrading.getBtcDownPrice", "offset": [6211, 6245], "op": "PUSH2", "path": "7", "value": "0xB9B"}, "1195": {"fn": "LeveragedTrading.getBtcDownPrice", "jump": "i", "offset": [6211, 6260], "op": "JUMP", "path": "7"}, "1196": {"fn": "LeveragedTrading.getBtcDownPrice", "offset": [6211, 6260], "op": "JUMPDEST", "path": "7"}, "1197": {"fn": "LeveragedTrading.getBtcDownPrice", "offset": [6174, 6260], "op": "PUSH2", "path": "7", "value": "0x2FD"}, "1200": {"fn": "LeveragedTrading.getBtcDownPrice", "offset": [6174, 6260], "op": "JUMP", "path": "7"}, "1201": {"fn": "LeveragedTrading.getBtcDownPrice", "offset": [6174, 6260], "op": "JUMPDEST", "path": "7"}, "1202": {"op": "POP"}, "1203": {"fn": "LeveragedTrading.getBtcDownPrice", "offset": [6196, 6208], "op": "PUSH1", "path": "7", "value": "0x2"}, "1205": {"fn": "LeveragedTrading.getBtcDownPrice", "offset": [6196, 6208], "op": "SLOAD", "path": "7"}, "1206": {"fn": "LeveragedTrading.getBtcDownPrice", "offset": [6196, 6208], "op": "SWAP1", "path": "7"}, "1207": {"fn": "LeveragedTrading.getBtcDownPrice", "jump": "o", "offset": [6088, 6267], "op": "JUMP", "path": "7"}, "1208": {"fn": "Ownable.owner", "offset": [973, 1058], "op": "JUMPDEST", "path": "0"}, "1209": {"fn": "Ownable.owner", "offset": [1019, 1026], "op": "PUSH1", "path": "0", "value": "0x0"}, "1211": {"fn": "Ownable.owner", "offset": [1045, 1051], "op": "SLOAD", "path": "0", "statement": 8}, "1212": {"op": "PUSH1", "value": "0x1"}, "1214": {"op": "PUSH1", "value": "0x1"}, "1216": {"op": "PUSH1", "value": "0xA0"}, "1218": {"op": "SHL"}, "1219": {"op": "SUB"}, "1220": {"fn": "Ownable.owner", "offset": [1045, 1051], "op": "AND", "path": "0"}, "1221": {"fn": "Ownable.owner", "offset": [973, 1058], "op": "SWAP1", "path": "0"}, "1222": {"fn": "Ownable.owner", "jump": "o", "offset": [973, 1058], "op": "JUMP", "path": "0"}, "1223": {"fn": "LeveragedTrading.initiatePool", "offset": [2180, 2430], "op": "JUMPDEST", "path": "7"}, "1224": {"offset": [1196, 1208], "op": "PUSH2", "path": "0", "value": "0x4CF"}, "1227": {"offset": [1196, 1206], "op": "PUSH2", "path": "0", "value": "0xB3B"}, "1230": {"jump": "i", "offset": [1196, 1208], "op": "JUMP", "path": "0"}, "1231": {"fn": "LeveragedTrading.initiatePool", "offset": [1196, 1208], "op": "JUMPDEST", "path": "0"}, "1232": {"op": "PUSH1", "value": "0x1"}, "1234": {"op": "PUSH1", "value": "0x1"}, "1236": {"op": "PUSH1", "value": "0xA0"}, "1238": {"op": "SHL"}, "1239": {"op": "SUB"}, "1240": {"offset": [1185, 1208], "op": "AND", "path": "0"}, "1241": {"offset": [1185, 1192], "op": "PUSH2", "path": "0", "value": "0x4E0"}, "1244": {"offset": [1185, 1190], "op": "PUSH2", "path": "0", "value": "0x4B8"}, "1247": {"jump": "i", "offset": [1185, 1192], "op": "JUMP", "path": "0"}, "1248": {"fn": "LeveragedTrading.initiatePool", "offset": [1185, 1192], "op": "JUMPDEST", "path": "0"}, "1249": {"op": "PUSH1", "value": "0x1"}, "1251": {"op": "PUSH1", "value": "0x1"}, "1253": {"op": "PUSH1", "value": "0xA0"}, "1255": {"op": "SHL"}, "1256": {"op": "SUB"}, "1257": {"offset": [1185, 1208], "op": "AND", "path": "0"}, "1258": {"fn": "LeveragedTrading.initiatePool", "offset": [1185, 1208], "op": "EQ", "path": "0"}, "1259": {"offset": [1177, 1245], "op": "PUSH2", "path": "0", "value": "0x506"}, "1262": {"offset": [1177, 1245], "op": "JUMPI", "path": "0"}, "1263": {"fn": "LeveragedTrading.initiatePool", "offset": [1177, 1245], "op": "PUSH1", "path": "0", "value": "0x40"}, "1265": {"fn": "LeveragedTrading.initiatePool", "offset": [1177, 1245], "op": "MLOAD", "path": "0"}, "1266": {"op": "PUSH3", "value": "0x461BCD"}, "1270": {"op": "PUSH1", "value": "0xE5"}, "1272": {"op": "SHL"}, "1273": {"offset": [1177, 1245], "op": "DUP2", "path": "0"}, "1274": {"fn": "LeveragedTrading.initiatePool", "offset": [1177, 1245], "op": "MSTORE", "path": "0"}, "1275": {"fn": "LeveragedTrading.initiatePool", "offset": [1177, 1245], "op": "PUSH1", "path": "0", "value": "0x4"}, "1277": {"fn": "LeveragedTrading.initiatePool", "offset": [1177, 1245], "op": "ADD", "path": "0"}, "1278": {"fn": "LeveragedTrading.initiatePool", "offset": [1177, 1245], "op": "PUSH2", "path": "0", "value": "0x467"}, "1281": {"fn": "LeveragedTrading.initiatePool", "offset": [1177, 1245], "op": "SWAP1", "path": "0"}, "1282": {"fn": "LeveragedTrading.initiatePool", "offset": [1177, 1245], "op": "PUSH2", "path": "0", "value": "0xE7D"}, "1285": {"fn": "LeveragedTrading.initiatePool", "jump": "i", "offset": [1177, 1245], "op": "JUMP", "path": "0"}, "1286": {"fn": "LeveragedTrading.initiatePool", "offset": [1177, 1245], "op": "JUMPDEST", "path": "0"}, "1287": {"fn": "LeveragedTrading.initiatePool", "offset": [2258, 2273], "op": "PUSH1", "path": "7", "statement": 9, "value": "0x8"}, "1289": {"fn": "LeveragedTrading.initiatePool", "offset": [2258, 2273], "op": "SLOAD", "path": "7"}, "1290": {"fn": "LeveragedTrading.initiatePool", "offset": [2258, 2273], "op": "PUSH1", "path": "7", "value": "0xFF"}, "1292": {"fn": "LeveragedTrading.initiatePool", "offset": [2258, 2273], "op": "AND", "path": "7"}, "1293": {"branch": 57, "fn": "LeveragedTrading.initiatePool", "offset": [2257, 2273], "op": "ISZERO", "path": "7"}, "1294": {"fn": "LeveragedTrading.initiatePool", "offset": [2249, 2309], "op": "PUSH2", "path": "7", "value": "0x529"}, "1297": {"branch": 57, "fn": "LeveragedTrading.initiatePool", "offset": [2249, 2309], "op": "JUMPI", "path": "7"}, "1298": {"fn": "LeveragedTrading.initiatePool", "offset": [2249, 2309], "op": "PUSH1", "path": "7", "value": "0x40"}, "1300": {"fn": "LeveragedTrading.initiatePool", "offset": [2249, 2309], "op": "MLOAD", "path": "7"}, "1301": {"op": "PUSH3", "value": "0x461BCD"}, "1305": {"op": "PUSH1", "value": "0xE5"}, "1307": {"op": "SHL"}, "1308": {"fn": "LeveragedTrading.initiatePool", "offset": [2249, 2309], "op": "DUP2", "path": "7"}, "1309": {"fn": "LeveragedTrading.initiatePool", "offset": [2249, 2309], "op": "MSTORE", "path": "7"}, "1310": {"fn": "LeveragedTrading.initiatePool", "offset": [2249, 2309], "op": "PUSH1", "path": "7", "value": "0x4"}, "1312": {"fn": "LeveragedTrading.initiatePool", "offset": [2249, 2309], "op": "ADD", "path": "7"}, "1313": {"fn": "LeveragedTrading.initiatePool", "offset": [2249, 2309], "op": "PUSH2", "path": "7", "value": "0x467"}, "1316": {"fn": "LeveragedTrading.initiatePool", "offset": [2249, 2309], "op": "SWAP1", "path": "7"}, "1317": {"fn": "LeveragedTrading.initiatePool", "offset": [2249, 2309], "op": "PUSH2", "path": "7", "value": "0xE46"}, "1320": {"fn": "LeveragedTrading.initiatePool", "jump": "i", "offset": [2249, 2309], "op": "JUMP", "path": "7"}, "1321": {"fn": "LeveragedTrading.initiatePool", "offset": [2249, 2309], "op": "JUMPDEST", "path": "7"}, "1322": {"fn": "LeveragedTrading.initiatePool", "offset": [2320, 2349], "op": "PUSH2", "path": "7", "statement": 10, "value": "0x537"}, "1325": {"fn": "LeveragedTrading.initiatePool", "offset": [2331, 2348], "op": "PUSH2", "path": "7", "value": "0x265"}, "1328": {"fn": "LeveragedTrading.initiatePool", "offset": [2331, 2341], "op": "DUP3", "path": "7"}, "1329": {"fn": "LeveragedTrading.initiatePool", "offset": [2346, 2347], "op": "PUSH1", "path": "7", "value": "0x2"}, "1331": {"fn": "LeveragedTrading.initiatePool", "offset": [2331, 2345], "op": "PUSH2", "path": "7", "value": "0xB9B"}, "1334": {"fn": "LeveragedTrading.initiatePool", "jump": "i", "offset": [2331, 2348], "op": "JUMP", "path": "7"}, "1335": {"fn": "LeveragedTrading.initiatePool", "offset": [2320, 2349], "op": "JUMPDEST", "path": "7"}, "1336": {"fn": "LeveragedTrading.initiatePool", "offset": [2359, 2390], "op": "PUSH2", "path": "7", "statement": 11, "value": "0x545"}, "1339": {"fn": "LeveragedTrading.initiatePool", "offset": [2372, 2389], "op": "PUSH2", "path": "7", "value": "0x204"}, "1342": {"fn": "LeveragedTrading.initiatePool", "offset": [2372, 2382], "op": "DUP3", "path": "7"}, "1343": {"fn": "LeveragedTrading.initiatePool", "offset": [2387, 2388], "op": "PUSH1", "path": "7", "value": "0x2"}, "1345": {"fn": "LeveragedTrading.initiatePool", "offset": [2372, 2386], "op": "PUSH2", "path": "7", "value": "0xB9B"}, "1348": {"fn": "LeveragedTrading.initiatePool", "jump": "i", "offset": [2372, 2389], "op": "JUMP", "path": "7"}, "1349": {"fn": "LeveragedTrading.initiatePool", "offset": [2359, 2390], "op": "JUMPDEST", "path": "7"}, "1350": {"op": "POP"}, "1351": {"fn": "LeveragedTrading.initiatePool", "offset": [2401, 2416], "op": "PUSH1", "path": "7", "statement": 12, "value": "0x8"}, "1353": {"fn": "LeveragedTrading.initiatePool", "offset": [2401, 2423], "op": "DUP1", "path": "7"}, "1354": {"fn": "LeveragedTrading.initiatePool", "offset": [2401, 2423], "op": "SLOAD", "path": "7"}, "1355": {"op": "PUSH1", "value": "0xFF"}, "1357": {"op": "NOT"}, "1358": {"fn": "LeveragedTrading.initiatePool", "offset": [2401, 2423], "op": "AND", "path": "7"}, "1359": {"fn": "LeveragedTrading.initiatePool", "offset": [2419, 2423], "op": "PUSH1", "path": "7", "value": "0x1"}, "1361": {"fn": "LeveragedTrading.initiatePool", "offset": [2401, 2423], "op": "OR", "path": "7"}, "1362": {"fn": "LeveragedTrading.initiatePool", "offset": [2401, 2423], "op": "SWAP1", "path": "7"}, "1363": {"fn": "LeveragedTrading.initiatePool", "offset": [2401, 2423], "op": "SSTORE", "path": "7"}, "1364": {"fn": "LeveragedTrading.initiatePool", "jump": "o", "offset": [2180, 2430], "op": "JUMP", "path": "7"}, "1365": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4054, 4598], "op": "JUMPDEST", "path": "7"}, "1366": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4125, 4151], "op": "PUSH2", "path": "7", "statement": 13, "value": "0x55D"}, "1369": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4125, 4149], "op": "PUSH2", "path": "7", "value": "0x398"}, "1372": {"fn": "LeveragedTrading.redeemBtcDown", "jump": "i", "offset": [4125, 4151], "op": "JUMP", "path": "7"}, "1373": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4125, 4151], "op": "JUMPDEST", "path": "7"}, "1374": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4161, 4168], "op": "PUSH1", "path": "7", "statement": 14, "value": "0xB"}, "1376": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4161, 4168], "op": "SLOAD", "path": "7"}, "1377": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4161, 4196], "op": "PUSH1", "path": "7", "value": "0x40"}, "1379": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4161, 4196], "op": "MLOAD", "path": "7"}, "1380": {"op": "PUSH4", "value": "0x852CD8D"}, "1385": {"op": "PUSH1", "value": "0xE3"}, "1387": {"op": "SHL"}, "1388": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4161, 4196], "op": "DUP2", "path": "7"}, "1389": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4161, 4196], "op": "MSTORE", "path": "7"}, "1390": {"op": "PUSH1", "value": "0x1"}, "1392": {"op": "PUSH1", "value": "0x1"}, "1394": {"op": "PUSH1", "value": "0xA0"}, "1396": {"op": "SHL"}, "1397": {"op": "SUB"}, "1398": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4161, 4168], "op": "SWAP1", "path": "7"}, "1399": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4161, 4168], "op": "SWAP2", "path": "7"}, "1400": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4161, 4168], "op": "AND", "path": "7"}, "1401": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4161, 4168], "op": "SWAP1", "path": "7"}, "1402": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4161, 4173], "op": "PUSH4", "path": "7", "value": "0x42966C68"}, "1407": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4161, 4173], "op": "SWAP1", "path": "7"}, "1408": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4161, 4196], "op": "PUSH2", "path": "7", "value": "0x58D"}, "1411": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4161, 4196], "op": "SWAP1", "path": "7"}, "1412": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4174, 4195], "op": "DUP5", "path": "7"}, "1413": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4174, 4195], "op": "SWAP1", "path": "7"}, "1414": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4161, 4196], "op": "PUSH1", "path": "7", "value": "0x4"}, "1416": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4161, 4196], "op": "ADD", "path": "7"}, "1417": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4161, 4196], "op": "PUSH2", "path": "7", "value": "0xEE9"}, "1420": {"fn": "LeveragedTrading.redeemBtcDown", "jump": "i", "offset": [4161, 4196], "op": "JUMP", "path": "7"}, "1421": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4161, 4196], "op": "JUMPDEST", "path": "7"}, "1422": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4161, 4196], "op": "PUSH1", "path": "7", "value": "0x0"}, "1424": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4161, 4196], "op": "PUSH1", "path": "7", "value": "0x40"}, "1426": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4161, 4196], "op": "MLOAD", "path": "7"}, "1427": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4161, 4196], "op": "DUP1", "path": "7"}, "1428": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4161, 4196], "op": "DUP4", "path": "7"}, "1429": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4161, 4196], "op": "SUB", "path": "7"}, "1430": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4161, 4196], "op": "DUP2", "path": "7"}, "1431": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4161, 4196], "op": "PUSH1", "path": "7", "value": "0x0"}, "1433": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4161, 4196], "op": "DUP8", "path": "7"}, "1434": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4161, 4196], "op": "DUP1", "path": "7"}, "1435": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4161, 4196], "op": "EXTCODESIZE", "path": "7"}, "1436": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4161, 4196], "op": "ISZERO", "path": "7"}, "1437": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4161, 4196], "op": "DUP1", "path": "7"}, "1438": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4161, 4196], "op": "ISZERO", "path": "7"}, "1439": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4161, 4196], "op": "PUSH2", "path": "7", "value": "0x5A7"}, "1442": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4161, 4196], "op": "JUMPI", "path": "7"}, "1443": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4161, 4196], "op": "PUSH1", "path": "7", "value": "0x0"}, "1445": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4161, 4196], "op": "DUP1", "path": "7"}, "1446": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4161, 4196], "op": "REVERT", "path": "7"}, "1447": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4161, 4196], "op": "JUMPDEST", "path": "7"}, "1448": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4161, 4196], "op": "POP", "path": "7"}, "1449": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4161, 4196], "op": "GAS", "path": "7"}, "1450": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4161, 4196], "op": "CALL", "path": "7"}, "1451": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4161, 4196], "op": "ISZERO", "path": "7"}, "1452": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4161, 4196], "op": "DUP1", "path": "7"}, "1453": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4161, 4196], "op": "ISZERO", "path": "7"}, "1454": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4161, 4196], "op": "PUSH2", "path": "7", "value": "0x5BB"}, "1457": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4161, 4196], "op": "JUMPI", "path": "7"}, "1458": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4161, 4196], "op": "RETURNDATASIZE", "path": "7"}, "1459": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4161, 4196], "op": "PUSH1", "path": "7", "value": "0x0"}, "1461": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4161, 4196], "op": "DUP1", "path": "7"}, "1462": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4161, 4196], "op": "RETURNDATACOPY", "path": "7"}, "1463": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4161, 4196], "op": "RETURNDATASIZE", "path": "7"}, "1464": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4161, 4196], "op": "PUSH1", "path": "7", "value": "0x0"}, "1466": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4161, 4196], "op": "REVERT", "path": "7"}, "1467": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4161, 4196], "op": "JUMPDEST", "path": "7"}, "1468": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4161, 4196], "op": "POP", "path": "7"}, "1469": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4161, 4196], "op": "POP", "path": "7"}, "1470": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4161, 4196], "op": "POP", "path": "7"}, "1471": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4161, 4196], "op": "POP", "path": "7"}, "1472": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4222, 4239], "op": "PUSH2", "path": "7", "statement": 15, "value": "0x5C7"}, "1475": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4222, 4237], "op": "PUSH2", "path": "7", "value": "0x47C"}, "1478": {"fn": "LeveragedTrading.redeemBtcDown", "jump": "i", "offset": [4222, 4239], "op": "JUMP", "path": "7"}, "1479": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4222, 4239], "op": "JUMPDEST", "path": "7"}, "1480": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4207, 4219], "op": "PUSH1", "path": "7", "value": "0x2"}, "1482": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4207, 4239], "op": "DUP2", "path": "7"}, "1483": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4207, 4239], "op": "SWAP1", "path": "7"}, "1484": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4207, 4239], "op": "SSTORE", "path": "7"}, "1485": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4249, 4267], "op": "PUSH1", "path": "7", "value": "0x0"}, "1487": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4249, 4267], "op": "SWAP1", "path": "7"}, "1488": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4270, 4322], "op": "PUSH2", "path": "7", "value": "0x5E3"}, "1491": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4270, 4322], "op": "SWAP1", "path": "7"}, "1492": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4314, 4321], "op": "PUSH3", "path": "7", "value": "0xF4240"}, "1496": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4314, 4321], "op": "SWAP1", "path": "7"}, "1497": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4270, 4309], "op": "PUSH2", "path": "7", "value": "0x4A6"}, "1500": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4270, 4309], "op": "SWAP1", "path": "7"}, "1501": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4270, 4291], "op": "DUP6", "path": "7"}, "1502": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4270, 4291], "op": "SWAP1", "path": "7"}, "1503": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4270, 4295], "op": "PUSH2", "path": "7", "value": "0xB8F"}, "1506": {"fn": "LeveragedTrading.redeemBtcDown", "jump": "i", "offset": [4270, 4309], "op": "JUMP", "path": "7"}, "1507": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4270, 4322], "op": "JUMPDEST", "path": "7"}, "1508": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4357, 4370], "op": "PUSH1", "path": "7", "statement": 16, "value": "0x6"}, "1510": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4357, 4370], "op": "SLOAD", "path": "7"}, "1511": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4249, 4322], "op": "SWAP1", "path": "7"}, "1512": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4249, 4322], "op": "SWAP2", "path": "7"}, "1513": {"op": "POP"}, "1514": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4357, 4397], "op": "PUSH2", "path": "7", "value": "0x5F3"}, "1517": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4357, 4397], "op": "SWAP1", "path": "7"}, "1518": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4375, 4396], "op": "DUP4", "path": "7"}, "1519": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4357, 4374], "op": "PUSH2", "path": "7", "value": "0xB2F"}, "1522": {"fn": "LeveragedTrading.redeemBtcDown", "jump": "i", "offset": [4357, 4397], "op": "JUMP", "path": "7"}, "1523": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4357, 4397], "op": "JUMPDEST", "path": "7"}, "1524": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4341, 4354], "op": "PUSH1", "path": "7", "value": "0x6"}, "1526": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4341, 4397], "op": "SSTORE", "path": "7"}, "1527": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4427, 4444], "op": "PUSH1", "path": "7", "statement": 17, "value": "0x4"}, "1529": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4427, 4444], "op": "SLOAD", "path": "7"}, "1530": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4427, 4460], "op": "PUSH2", "path": "7", "value": "0x603"}, "1533": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4427, 4460], "op": "SWAP1", "path": "7"}, "1534": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4449, 4459], "op": "DUP3", "path": "7"}, "1535": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4427, 4448], "op": "PUSH2", "path": "7", "value": "0xB2F"}, "1538": {"fn": "LeveragedTrading.redeemBtcDown", "jump": "i", "offset": [4427, 4460], "op": "JUMP", "path": "7"}, "1539": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4427, 4460], "op": "JUMPDEST", "path": "7"}, "1540": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4407, 4424], "op": "PUSH1", "path": "7", "value": "0x4"}, "1542": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4407, 4460], "op": "SWAP1", "path": "7"}, "1543": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4407, 4460], "op": "DUP2", "path": "7"}, "1544": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4407, 4460], "op": "SSTORE", "path": "7"}, "1545": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4492, 4503], "op": "PUSH1", "path": "7", "value": "0x8"}, "1547": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4492, 4503], "op": "SLOAD", "path": "7"}, "1548": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4522, 4560], "op": "PUSH1", "path": "7", "statement": 18, "value": "0x40"}, "1550": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4522, 4560], "op": "MLOAD", "path": "7"}, "1551": {"op": "PUSH4", "value": "0xA9059CBB"}, "1556": {"op": "PUSH1", "value": "0xE0"}, "1558": {"op": "SHL"}, "1559": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4522, 4560], "op": "DUP2", "path": "7"}, "1560": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4522, 4560], "op": "MSTORE", "path": "7"}, "1561": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4492, 4503], "op": "PUSH2", "path": "7", "value": "0x100"}, "1564": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4492, 4503], "op": "SWAP1", "path": "7"}, "1565": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4492, 4503], "op": "SWAP2", "path": "7"}, "1566": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4492, 4503], "op": "DIV", "path": "7"}, "1567": {"op": "PUSH1", "value": "0x1"}, "1569": {"op": "PUSH1", "value": "0x1"}, "1571": {"op": "PUSH1", "value": "0xA0"}, "1573": {"op": "SHL"}, "1574": {"op": "SUB"}, "1575": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4492, 4503], "op": "AND", "path": "7"}, "1576": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4492, 4503], "op": "SWAP2", "path": "7"}, "1577": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4492, 4503], "op": "DUP3", "path": "7"}, "1578": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4492, 4503], "op": "SWAP2", "path": "7"}, "1579": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4522, 4535], "op": "PUSH4", "path": "7", "value": "0xA9059CBB"}, "1584": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4522, 4535], "op": "SWAP2", "path": "7"}, "1585": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4522, 4560], "op": "PUSH2", "path": "7", "value": "0x63E"}, "1588": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4522, 4560], "op": "SWAP2", "path": "7"}, "1589": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4536, 4546], "op": "CALLER", "path": "7"}, "1590": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4536, 4546], "op": "SWAP2", "path": "7"}, "1591": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4549, 4559], "op": "DUP8", "path": "7"}, "1592": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4549, 4559], "op": "SWAP2", "path": "7"}, "1593": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4522, 4560], "op": "ADD", "path": "7"}, "1594": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4522, 4560], "op": "PUSH2", "path": "7", "value": "0xDA5"}, "1597": {"fn": "LeveragedTrading.redeemBtcDown", "jump": "i", "offset": [4522, 4560], "op": "JUMP", "path": "7"}, "1598": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4522, 4560], "op": "JUMPDEST", "path": "7"}, "1599": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4522, 4560], "op": "PUSH1", "path": "7", "value": "0x20"}, "1601": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4522, 4560], "op": "PUSH1", "path": "7", "value": "0x40"}, "1603": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4522, 4560], "op": "MLOAD", "path": "7"}, "1604": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4522, 4560], "op": "DUP1", "path": "7"}, "1605": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4522, 4560], "op": "DUP4", "path": "7"}, "1606": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4522, 4560], "op": "SUB", "path": "7"}, "1607": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4522, 4560], "op": "DUP2", "path": "7"}, "1608": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4522, 4560], "op": "PUSH1", "path": "7", "value": "0x0"}, "1610": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4522, 4560], "op": "DUP8", "path": "7"}, "1611": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4522, 4560], "op": "DUP1", "path": "7"}, "1612": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4522, 4560], "op": "EXTCODESIZE", "path": "7"}, "1613": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4522, 4560], "op": "ISZERO", "path": "7"}, "1614": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4522, 4560], "op": "DUP1", "path": "7"}, "1615": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4522, 4560], "op": "ISZERO", "path": "7"}, "1616": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4522, 4560], "op": "PUSH2", "path": "7", "value": "0x658"}, "1619": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4522, 4560], "op": "JUMPI", "path": "7"}, "1620": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4522, 4560], "op": "PUSH1", "path": "7", "value": "0x0"}, "1622": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4522, 4560], "op": "DUP1", "path": "7"}, "1623": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4522, 4560], "op": "REVERT", "path": "7"}, "1624": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4522, 4560], "op": "JUMPDEST", "path": "7"}, "1625": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4522, 4560], "op": "POP", "path": "7"}, "1626": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4522, 4560], "op": "GAS", "path": "7"}, "1627": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4522, 4560], "op": "CALL", "path": "7"}, "1628": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4522, 4560], "op": "ISZERO", "path": "7"}, "1629": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4522, 4560], "op": "DUP1", "path": "7"}, "1630": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4522, 4560], "op": "ISZERO", "path": "7"}, "1631": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4522, 4560], "op": "PUSH2", "path": "7", "value": "0x66C"}, "1634": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4522, 4560], "op": "JUMPI", "path": "7"}, "1635": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4522, 4560], "op": "RETURNDATASIZE", "path": "7"}, "1636": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4522, 4560], "op": "PUSH1", "path": "7", "value": "0x0"}, "1638": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4522, 4560], "op": "DUP1", "path": "7"}, "1639": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4522, 4560], "op": "RETURNDATACOPY", "path": "7"}, "1640": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4522, 4560], "op": "RETURNDATASIZE", "path": "7"}, "1641": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4522, 4560], "op": "PUSH1", "path": "7", "value": "0x0"}, "1643": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4522, 4560], "op": "REVERT", "path": "7"}, "1644": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4522, 4560], "op": "JUMPDEST", "path": "7"}, "1645": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4522, 4560], "op": "POP", "path": "7"}, "1646": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4522, 4560], "op": "POP", "path": "7"}, "1647": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4522, 4560], "op": "POP", "path": "7"}, "1648": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4522, 4560], "op": "POP", "path": "7"}, "1649": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4522, 4560], "op": "PUSH1", "path": "7", "value": "0x40"}, "1651": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4522, 4560], "op": "MLOAD", "path": "7"}, "1652": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4522, 4560], "op": "RETURNDATASIZE", "path": "7"}, "1653": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4522, 4560], "op": "PUSH1", "path": "7", "value": "0x1F"}, "1655": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4522, 4560], "op": "NOT", "path": "7"}, "1656": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4522, 4560], "op": "PUSH1", "path": "7", "value": "0x1F"}, "1658": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4522, 4560], "op": "DUP3", "path": "7"}, "1659": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4522, 4560], "op": "ADD", "path": "7"}, "1660": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4522, 4560], "op": "AND", "path": "7"}, "1661": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4522, 4560], "op": "DUP3", "path": "7"}, "1662": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4522, 4560], "op": "ADD", "path": "7"}, "1663": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4522, 4560], "op": "DUP1", "path": "7"}, "1664": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4522, 4560], "op": "PUSH1", "path": "7", "value": "0x40"}, "1666": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4522, 4560], "op": "MSTORE", "path": "7"}, "1667": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4522, 4560], "op": "POP", "path": "7"}, "1668": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4522, 4560], "op": "DUP2", "path": "7"}, "1669": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4522, 4560], "op": "ADD", "path": "7"}, "1670": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4522, 4560], "op": "SWAP1", "path": "7"}, "1671": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4522, 4560], "op": "PUSH2", "path": "7", "value": "0x690"}, "1674": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4522, 4560], "op": "SWAP2", "path": "7"}, "1675": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4522, 4560], "op": "SWAP1", "path": "7"}, "1676": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4522, 4560], "op": "PUSH2", "path": "7", "value": "0xCCE"}, "1679": {"fn": "LeveragedTrading.redeemBtcDown", "jump": "i", "offset": [4522, 4560], "op": "JUMP", "path": "7"}, "1680": {"branch": 58, "fn": "LeveragedTrading.redeemBtcDown", "offset": [4522, 4560], "op": "JUMPDEST", "path": "7"}, "1681": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4514, 4590], "op": "PUSH2", "path": "7", "value": "0x6AC"}, "1684": {"branch": 58, "fn": "LeveragedTrading.redeemBtcDown", "offset": [4514, 4590], "op": "JUMPI", "path": "7"}, "1685": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4514, 4590], "op": "PUSH1", "path": "7", "value": "0x40"}, "1687": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4514, 4590], "op": "MLOAD", "path": "7"}, "1688": {"op": "PUSH3", "value": "0x461BCD"}, "1692": {"op": "PUSH1", "value": "0xE5"}, "1694": {"op": "SHL"}, "1695": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4514, 4590], "op": "DUP2", "path": "7"}, "1696": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4514, 4590], "op": "MSTORE", "path": "7"}, "1697": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4514, 4590], "op": "PUSH1", "path": "7", "value": "0x4"}, "1699": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4514, 4590], "op": "ADD", "path": "7"}, "1700": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4514, 4590], "op": "PUSH2", "path": "7", "value": "0x467"}, "1703": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4514, 4590], "op": "SWAP1", "path": "7"}, "1704": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4514, 4590], "op": "PUSH2", "path": "7", "value": "0xDC9"}, "1707": {"fn": "LeveragedTrading.redeemBtcDown", "jump": "i", "offset": [4514, 4590], "op": "JUMP", "path": "7"}, "1708": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4514, 4590], "op": "JUMPDEST", "path": "7"}, "1709": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4054, 4598], "op": "POP", "path": "7"}, "1710": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4054, 4598], "op": "POP", "path": "7"}, "1711": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [4054, 4598], "op": "POP", "path": "7"}, "1712": {"fn": "LeveragedTrading.redeemBtcDown", "jump": "o", "offset": [4054, 4598], "op": "JUMP", "path": "7"}, "1713": {"offset": [1650, 1682], "op": "JUMPDEST", "path": "7"}, "1714": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [1650, 1682], "op": "PUSH1", "path": "7", "value": "0x6"}, "1716": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [1650, 1682], "op": "SLOAD", "path": "7"}, "1717": {"fn": "LeveragedTrading.redeemBtcDown", "offset": [1650, 1682], "op": "DUP2", "path": "7"}, "1718": {"fn": "LeveragedTrading.redeemBtcDown", "jump": "o", "offset": [1650, 1682], "op": "JUMP", "path": "7"}, "1719": {"fn": "LeveragedTrading.issueBtcDown", "offset": [2975, 3526], "op": "JUMPDEST", "path": "7"}, "1720": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3034, 3060], "op": "PUSH2", "path": "7", "statement": 19, "value": "0x6BF"}, "1723": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3034, 3058], "op": "PUSH2", "path": "7", "value": "0x398"}, "1726": {"fn": "LeveragedTrading.issueBtcDown", "jump": "i", "offset": [3034, 3060], "op": "JUMP", "path": "7"}, "1727": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3034, 3060], "op": "JUMPDEST", "path": "7"}, "1728": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3094, 3111], "op": "PUSH2", "path": "7", "statement": 20, "value": "0x6C7"}, "1731": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3094, 3109], "op": "PUSH2", "path": "7", "value": "0x47C"}, "1734": {"fn": "LeveragedTrading.issueBtcDown", "jump": "i", "offset": [3094, 3111], "op": "JUMP", "path": "7"}, "1735": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3094, 3111], "op": "JUMPDEST", "path": "7"}, "1736": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3079, 3091], "op": "PUSH1", "path": "7", "value": "0x2"}, "1738": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3079, 3111], "op": "DUP2", "path": "7"}, "1739": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3079, 3111], "op": "SWAP1", "path": "7"}, "1740": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3079, 3111], "op": "SSTORE", "path": "7"}, "1741": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3121, 3150], "op": "PUSH1", "path": "7", "value": "0x0"}, "1743": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3121, 3150], "op": "SWAP1", "path": "7"}, "1744": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3153, 3194], "op": "PUSH2", "path": "7", "value": "0x6E0"}, "1747": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3153, 3194], "op": "SWAP1", "path": "7"}, "1748": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3153, 3176], "op": "PUSH2", "path": "7", "value": "0x4A6"}, "1751": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3153, 3163], "op": "DUP5", "path": "7"}, "1752": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3168, 3175], "op": "PUSH3", "path": "7", "value": "0xF4240"}, "1756": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3153, 3167], "op": "PUSH2", "path": "7", "value": "0xB8F"}, "1759": {"fn": "LeveragedTrading.issueBtcDown", "jump": "i", "offset": [3153, 3176], "op": "JUMP", "path": "7"}, "1760": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3153, 3194], "op": "JUMPDEST", "path": "7"}, "1761": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3205, 3212], "op": "PUSH1", "path": "7", "statement": 21, "value": "0xB"}, "1763": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3205, 3212], "op": "SLOAD", "path": "7"}, "1764": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3205, 3240], "op": "PUSH1", "path": "7", "value": "0x40"}, "1766": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3205, 3240], "op": "MLOAD", "path": "7"}, "1767": {"op": "PUSH4", "value": "0x140E25AD"}, "1772": {"op": "PUSH1", "value": "0xE3"}, "1774": {"op": "SHL"}, "1775": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3205, 3240], "op": "DUP2", "path": "7"}, "1776": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3205, 3240], "op": "MSTORE", "path": "7"}, "1777": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3121, 3194], "op": "SWAP2", "path": "7"}, "1778": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3121, 3194], "op": "SWAP3", "path": "7"}, "1779": {"op": "POP"}, "1780": {"op": "PUSH1", "value": "0x1"}, "1782": {"op": "PUSH1", "value": "0x1"}, "1784": {"op": "PUSH1", "value": "0xA0"}, "1786": {"op": "SHL"}, "1787": {"op": "SUB"}, "1788": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3205, 3212], "op": "AND", "path": "7"}, "1789": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3205, 3212], "op": "SWAP1", "path": "7"}, "1790": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3205, 3217], "op": "PUSH4", "path": "7", "value": "0xA0712D68"}, "1795": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3205, 3217], "op": "SWAP1", "path": "7"}, "1796": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3205, 3240], "op": "PUSH2", "path": "7", "value": "0x711"}, "1799": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3205, 3240], "op": "SWAP1", "path": "7"}, "1800": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3121, 3194], "op": "DUP5", "path": "7"}, "1801": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3121, 3194], "op": "SWAP1", "path": "7"}, "1802": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3205, 3240], "op": "PUSH1", "path": "7", "value": "0x4"}, "1804": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3205, 3240], "op": "ADD", "path": "7"}, "1805": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3205, 3240], "op": "PUSH2", "path": "7", "value": "0xEE9"}, "1808": {"fn": "LeveragedTrading.issueBtcDown", "jump": "i", "offset": [3205, 3240], "op": "JUMP", "path": "7"}, "1809": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3205, 3240], "op": "JUMPDEST", "path": "7"}, "1810": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3205, 3240], "op": "PUSH1", "path": "7", "value": "0x0"}, "1812": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3205, 3240], "op": "PUSH1", "path": "7", "value": "0x40"}, "1814": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3205, 3240], "op": "MLOAD", "path": "7"}, "1815": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3205, 3240], "op": "DUP1", "path": "7"}, "1816": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3205, 3240], "op": "DUP4", "path": "7"}, "1817": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3205, 3240], "op": "SUB", "path": "7"}, "1818": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3205, 3240], "op": "DUP2", "path": "7"}, "1819": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3205, 3240], "op": "PUSH1", "path": "7", "value": "0x0"}, "1821": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3205, 3240], "op": "DUP8", "path": "7"}, "1822": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3205, 3240], "op": "DUP1", "path": "7"}, "1823": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3205, 3240], "op": "EXTCODESIZE", "path": "7"}, "1824": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3205, 3240], "op": "ISZERO", "path": "7"}, "1825": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3205, 3240], "op": "DUP1", "path": "7"}, "1826": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3205, 3240], "op": "ISZERO", "path": "7"}, "1827": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3205, 3240], "op": "PUSH2", "path": "7", "value": "0x72B"}, "1830": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3205, 3240], "op": "JUMPI", "path": "7"}, "1831": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3205, 3240], "op": "PUSH1", "path": "7", "value": "0x0"}, "1833": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3205, 3240], "op": "DUP1", "path": "7"}, "1834": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3205, 3240], "op": "REVERT", "path": "7"}, "1835": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3205, 3240], "op": "JUMPDEST", "path": "7"}, "1836": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3205, 3240], "op": "POP", "path": "7"}, "1837": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3205, 3240], "op": "GAS", "path": "7"}, "1838": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3205, 3240], "op": "CALL", "path": "7"}, "1839": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3205, 3240], "op": "ISZERO", "path": "7"}, "1840": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3205, 3240], "op": "DUP1", "path": "7"}, "1841": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3205, 3240], "op": "ISZERO", "path": "7"}, "1842": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3205, 3240], "op": "PUSH2", "path": "7", "value": "0x73F"}, "1845": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3205, 3240], "op": "JUMPI", "path": "7"}, "1846": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3205, 3240], "op": "RETURNDATASIZE", "path": "7"}, "1847": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3205, 3240], "op": "PUSH1", "path": "7", "value": "0x0"}, "1849": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3205, 3240], "op": "DUP1", "path": "7"}, "1850": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3205, 3240], "op": "RETURNDATACOPY", "path": "7"}, "1851": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3205, 3240], "op": "RETURNDATASIZE", "path": "7"}, "1852": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3205, 3240], "op": "PUSH1", "path": "7", "value": "0x0"}, "1854": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3205, 3240], "op": "REVERT", "path": "7"}, "1855": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3205, 3240], "op": "JUMPDEST", "path": "7"}, "1856": {"op": "POP"}, "1857": {"op": "POP"}, "1858": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3266, 3279], "op": "PUSH1", "path": "7", "statement": 22, "value": "0x6"}, "1860": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3266, 3279], "op": "SLOAD", "path": "7"}, "1861": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3266, 3306], "op": "PUSH2", "path": "7", "value": "0x751"}, "1864": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3266, 3306], "op": "SWAP3", "path": "7"}, "1865": {"op": "POP"}, "1866": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3266, 3279], "op": "SWAP1", "path": "7"}, "1867": {"op": "POP"}, "1868": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3284, 3305], "op": "DUP3", "path": "7"}, "1869": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3266, 3283], "op": "PUSH2", "path": "7", "value": "0xB1C"}, "1872": {"fn": "LeveragedTrading.issueBtcDown", "jump": "i", "offset": [3266, 3306], "op": "JUMP", "path": "7"}, "1873": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3266, 3306], "op": "JUMPDEST", "path": "7"}, "1874": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3250, 3263], "op": "PUSH1", "path": "7", "value": "0x6"}, "1876": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3250, 3306], "op": "SSTORE", "path": "7"}, "1877": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3336, 3353], "op": "PUSH1", "path": "7", "statement": 23, "value": "0x4"}, "1879": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3336, 3353], "op": "SLOAD", "path": "7"}, "1880": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3336, 3369], "op": "PUSH2", "path": "7", "value": "0x761"}, "1883": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3336, 3369], "op": "SWAP1", "path": "7"}, "1884": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3358, 3368], "op": "DUP4", "path": "7"}, "1885": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3336, 3357], "op": "PUSH2", "path": "7", "value": "0xB1C"}, "1888": {"fn": "LeveragedTrading.issueBtcDown", "jump": "i", "offset": [3336, 3369], "op": "JUMP", "path": "7"}, "1889": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3336, 3369], "op": "JUMPDEST", "path": "7"}, "1890": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3316, 3333], "op": "PUSH1", "path": "7", "value": "0x4"}, "1892": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3316, 3369], "op": "SWAP1", "path": "7"}, "1893": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3316, 3369], "op": "DUP2", "path": "7"}, "1894": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3316, 3369], "op": "SSTORE", "path": "7"}, "1895": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3401, 3412], "op": "PUSH1", "path": "7", "value": "0x8"}, "1897": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3401, 3412], "op": "SLOAD", "path": "7"}, "1898": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3431, 3487], "op": "PUSH1", "path": "7", "statement": 24, "value": "0x40"}, "1900": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3431, 3487], "op": "MLOAD", "path": "7"}, "1901": {"op": "PUSH4", "value": "0x23B872DD"}, "1906": {"op": "PUSH1", "value": "0xE0"}, "1908": {"op": "SHL"}, "1909": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3431, 3487], "op": "DUP2", "path": "7"}, "1910": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3431, 3487], "op": "MSTORE", "path": "7"}, "1911": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3401, 3412], "op": "PUSH2", "path": "7", "value": "0x100"}, "1914": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3401, 3412], "op": "SWAP1", "path": "7"}, "1915": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3401, 3412], "op": "SWAP2", "path": "7"}, "1916": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3401, 3412], "op": "DIV", "path": "7"}, "1917": {"op": "PUSH1", "value": "0x1"}, "1919": {"op": "PUSH1", "value": "0x1"}, "1921": {"op": "PUSH1", "value": "0xA0"}, "1923": {"op": "SHL"}, "1924": {"op": "SUB"}, "1925": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3401, 3412], "op": "AND", "path": "7"}, "1926": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3401, 3412], "op": "SWAP2", "path": "7"}, "1927": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3401, 3412], "op": "DUP3", "path": "7"}, "1928": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3401, 3412], "op": "SWAP2", "path": "7"}, "1929": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3431, 3448], "op": "PUSH4", "path": "7", "value": "0x23B872DD"}, "1934": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3431, 3448], "op": "SWAP2", "path": "7"}, "1935": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3431, 3487], "op": "PUSH2", "path": "7", "value": "0x79E"}, "1938": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3431, 3487], "op": "SWAP2", "path": "7"}, "1939": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3449, 3459], "op": "CALLER", "path": "7"}, "1940": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3449, 3459], "op": "SWAP2", "path": "7"}, "1941": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3469, 3473], "op": "ADDRESS", "path": "7"}, "1942": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3469, 3473], "op": "SWAP2", "path": "7"}, "1943": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3476, 3486], "op": "DUP10", "path": "7"}, "1944": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3476, 3486], "op": "SWAP2", "path": "7"}, "1945": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3431, 3487], "op": "ADD", "path": "7"}, "1946": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3431, 3487], "op": "PUSH2", "path": "7", "value": "0xD81"}, "1949": {"fn": "LeveragedTrading.issueBtcDown", "jump": "i", "offset": [3431, 3487], "op": "JUMP", "path": "7"}, "1950": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3431, 3487], "op": "JUMPDEST", "path": "7"}, "1951": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3431, 3487], "op": "PUSH1", "path": "7", "value": "0x20"}, "1953": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3431, 3487], "op": "PUSH1", "path": "7", "value": "0x40"}, "1955": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3431, 3487], "op": "MLOAD", "path": "7"}, "1956": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3431, 3487], "op": "DUP1", "path": "7"}, "1957": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3431, 3487], "op": "DUP4", "path": "7"}, "1958": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3431, 3487], "op": "SUB", "path": "7"}, "1959": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3431, 3487], "op": "DUP2", "path": "7"}, "1960": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3431, 3487], "op": "PUSH1", "path": "7", "value": "0x0"}, "1962": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3431, 3487], "op": "DUP8", "path": "7"}, "1963": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3431, 3487], "op": "DUP1", "path": "7"}, "1964": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3431, 3487], "op": "EXTCODESIZE", "path": "7"}, "1965": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3431, 3487], "op": "ISZERO", "path": "7"}, "1966": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3431, 3487], "op": "DUP1", "path": "7"}, "1967": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3431, 3487], "op": "ISZERO", "path": "7"}, "1968": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3431, 3487], "op": "PUSH2", "path": "7", "value": "0x7B8"}, "1971": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3431, 3487], "op": "JUMPI", "path": "7"}, "1972": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3431, 3487], "op": "PUSH1", "path": "7", "value": "0x0"}, "1974": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3431, 3487], "op": "DUP1", "path": "7"}, "1975": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3431, 3487], "op": "REVERT", "path": "7"}, "1976": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3431, 3487], "op": "JUMPDEST", "path": "7"}, "1977": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3431, 3487], "op": "POP", "path": "7"}, "1978": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3431, 3487], "op": "GAS", "path": "7"}, "1979": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3431, 3487], "op": "CALL", "path": "7"}, "1980": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3431, 3487], "op": "ISZERO", "path": "7"}, "1981": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3431, 3487], "op": "DUP1", "path": "7"}, "1982": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3431, 3487], "op": "ISZERO", "path": "7"}, "1983": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3431, 3487], "op": "PUSH2", "path": "7", "value": "0x7CC"}, "1986": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3431, 3487], "op": "JUMPI", "path": "7"}, "1987": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3431, 3487], "op": "RETURNDATASIZE", "path": "7"}, "1988": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3431, 3487], "op": "PUSH1", "path": "7", "value": "0x0"}, "1990": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3431, 3487], "op": "DUP1", "path": "7"}, "1991": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3431, 3487], "op": "RETURNDATACOPY", "path": "7"}, "1992": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3431, 3487], "op": "RETURNDATASIZE", "path": "7"}, "1993": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3431, 3487], "op": "PUSH1", "path": "7", "value": "0x0"}, "1995": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3431, 3487], "op": "REVERT", "path": "7"}, "1996": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3431, 3487], "op": "JUMPDEST", "path": "7"}, "1997": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3431, 3487], "op": "POP", "path": "7"}, "1998": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3431, 3487], "op": "POP", "path": "7"}, "1999": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3431, 3487], "op": "POP", "path": "7"}, "2000": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3431, 3487], "op": "POP", "path": "7"}, "2001": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3431, 3487], "op": "PUSH1", "path": "7", "value": "0x40"}, "2003": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3431, 3487], "op": "MLOAD", "path": "7"}, "2004": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3431, 3487], "op": "RETURNDATASIZE", "path": "7"}, "2005": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3431, 3487], "op": "PUSH1", "path": "7", "value": "0x1F"}, "2007": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3431, 3487], "op": "NOT", "path": "7"}, "2008": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3431, 3487], "op": "PUSH1", "path": "7", "value": "0x1F"}, "2010": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3431, 3487], "op": "DUP3", "path": "7"}, "2011": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3431, 3487], "op": "ADD", "path": "7"}, "2012": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3431, 3487], "op": "AND", "path": "7"}, "2013": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3431, 3487], "op": "DUP3", "path": "7"}, "2014": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3431, 3487], "op": "ADD", "path": "7"}, "2015": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3431, 3487], "op": "DUP1", "path": "7"}, "2016": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3431, 3487], "op": "PUSH1", "path": "7", "value": "0x40"}, "2018": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3431, 3487], "op": "MSTORE", "path": "7"}, "2019": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3431, 3487], "op": "POP", "path": "7"}, "2020": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3431, 3487], "op": "DUP2", "path": "7"}, "2021": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3431, 3487], "op": "ADD", "path": "7"}, "2022": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3431, 3487], "op": "SWAP1", "path": "7"}, "2023": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3431, 3487], "op": "PUSH2", "path": "7", "value": "0x7F0"}, "2026": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3431, 3487], "op": "SWAP2", "path": "7"}, "2027": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3431, 3487], "op": "SWAP1", "path": "7"}, "2028": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3431, 3487], "op": "PUSH2", "path": "7", "value": "0xCCE"}, "2031": {"fn": "LeveragedTrading.issueBtcDown", "jump": "i", "offset": [3431, 3487], "op": "JUMP", "path": "7"}, "2032": {"branch": 59, "fn": "LeveragedTrading.issueBtcDown", "offset": [3431, 3487], "op": "JUMPDEST", "path": "7"}, "2033": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3423, 3519], "op": "PUSH2", "path": "7", "value": "0x6AC"}, "2036": {"branch": 59, "fn": "LeveragedTrading.issueBtcDown", "offset": [3423, 3519], "op": "JUMPI", "path": "7"}, "2037": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3423, 3519], "op": "PUSH1", "path": "7", "value": "0x40"}, "2039": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3423, 3519], "op": "MLOAD", "path": "7"}, "2040": {"op": "PUSH3", "value": "0x461BCD"}, "2044": {"op": "PUSH1", "value": "0xE5"}, "2046": {"op": "SHL"}, "2047": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3423, 3519], "op": "DUP2", "path": "7"}, "2048": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3423, 3519], "op": "MSTORE", "path": "7"}, "2049": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3423, 3519], "op": "PUSH1", "path": "7", "value": "0x4"}, "2051": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3423, 3519], "op": "ADD", "path": "7"}, "2052": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3423, 3519], "op": "PUSH2", "path": "7", "value": "0x467"}, "2055": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3423, 3519], "op": "SWAP1", "path": "7"}, "2056": {"fn": "LeveragedTrading.issueBtcDown", "offset": [3423, 3519], "op": "PUSH2", "path": "7", "value": "0xEB2"}, "2059": {"fn": "LeveragedTrading.issueBtcDown", "jump": "i", "offset": [3423, 3519], "op": "JUMP", "path": "7"}, "2060": {"fn": "LeveragedTrading.getBtcdownBalance", "offset": [7425, 7536], "op": "JUMPDEST", "path": "7"}, "2061": {"fn": "LeveragedTrading.getBtcdownBalance", "offset": [7500, 7507], "op": "PUSH1", "path": "7", "statement": 25, "value": "0xB"}, "2063": {"fn": "LeveragedTrading.getBtcdownBalance", "offset": [7500, 7507], "op": "SLOAD", "path": "7"}, "2064": {"fn": "LeveragedTrading.getBtcdownBalance", "offset": [7500, 7529], "op": "PUSH1", "path": "7", "value": "0x40"}, "2066": {"fn": "LeveragedTrading.getBtcdownBalance", "offset": [7500, 7529], "op": "MLOAD", "path": "7"}, "2067": {"op": "PUSH4", "value": "0x70A08231"}, "2072": {"op": "PUSH1", "value": "0xE0"}, "2074": {"op": "SHL"}, "2075": {"fn": "LeveragedTrading.getBtcdownBalance", "offset": [7500, 7529], "op": "DUP2", "path": "7"}, "2076": {"fn": "LeveragedTrading.getBtcdownBalance", "offset": [7500, 7529], "op": "MSTORE", "path": "7"}, "2077": {"fn": "LeveragedTrading.getBtcdownBalance", "offset": [7474, 7481], "op": "PUSH1", "path": "7", "value": "0x0"}, "2079": {"fn": "LeveragedTrading.getBtcdownBalance", "offset": [7474, 7481], "op": "SWAP2", "path": "7"}, "2080": {"op": "PUSH1", "value": "0x1"}, "2082": {"op": "PUSH1", "value": "0x1"}, "2084": {"op": "PUSH1", "value": "0xA0"}, "2086": {"op": "SHL"}, "2087": {"op": "SUB"}, "2088": {"fn": "LeveragedTrading.getBtcdownBalance", "offset": [7500, 7507], "op": "AND", "path": "7"}, "2089": {"fn": "LeveragedTrading.getBtcdownBalance", "offset": [7500, 7507], "op": "SWAP1", "path": "7"}, "2090": {"fn": "LeveragedTrading.getBtcdownBalance", "offset": [7500, 7517], "op": "PUSH4", "path": "7", "value": "0x70A08231"}, "2095": {"fn": "LeveragedTrading.getBtcdownBalance", "offset": [7500, 7517], "op": "SWAP1", "path": "7"}, "2096": {"fn": "LeveragedTrading.getBtcdownBalance", "offset": [7500, 7529], "op": "PUSH2", "path": "7", "value": "0x2AD"}, "2099": {"fn": "LeveragedTrading.getBtcdownBalance", "offset": [7500, 7529], "op": "SWAP1", "path": "7"}, "2100": {"fn": "LeveragedTrading.getBtcdownBalance", "offset": [7518, 7528], "op": "CALLER", "path": "7"}, "2101": {"fn": "LeveragedTrading.getBtcdownBalance", "offset": [7518, 7528], "op": "SWAP1", "path": "7"}, "2102": {"fn": "LeveragedTrading.getBtcdownBalance", "offset": [7500, 7529], "op": "PUSH1", "path": "7", "value": "0x4"}, "2104": {"fn": "LeveragedTrading.getBtcdownBalance", "offset": [7500, 7529], "op": "ADD", "path": "7"}, "2105": {"fn": "LeveragedTrading.getBtcdownBalance", "offset": [7500, 7529], "op": "PUSH2", "path": "7", "value": "0xD6D"}, "2108": {"fn": "LeveragedTrading.getBtcdownBalance", "jump": "i", "offset": [7500, 7529], "op": "JUMP", "path": "7"}, "2109": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3532, 4048], "op": "JUMPDEST", "path": "7"}, "2110": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3601, 3627], "op": "PUSH2", "path": "7", "statement": 26, "value": "0x845"}, "2113": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3601, 3625], "op": "PUSH2", "path": "7", "value": "0x398"}, "2116": {"fn": "LeveragedTrading.redeemBtcUp", "jump": "i", "offset": [3601, 3627], "op": "JUMP", "path": "7"}, "2117": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3601, 3627], "op": "JUMPDEST", "path": "7"}, "2118": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3637, 3642], "op": "PUSH1", "path": "7", "statement": 27, "value": "0xA"}, "2120": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3637, 3642], "op": "SLOAD", "path": "7"}, "2121": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3637, 3670], "op": "PUSH1", "path": "7", "value": "0x40"}, "2123": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3637, 3670], "op": "MLOAD", "path": "7"}, "2124": {"op": "PUSH4", "value": "0x852CD8D"}, "2129": {"op": "PUSH1", "value": "0xE3"}, "2131": {"op": "SHL"}, "2132": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3637, 3670], "op": "DUP2", "path": "7"}, "2133": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3637, 3670], "op": "MSTORE", "path": "7"}, "2134": {"op": "PUSH1", "value": "0x1"}, "2136": {"op": "PUSH1", "value": "0x1"}, "2138": {"op": "PUSH1", "value": "0xA0"}, "2140": {"op": "SHL"}, "2141": {"op": "SUB"}, "2142": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3637, 3642], "op": "SWAP1", "path": "7"}, "2143": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3637, 3642], "op": "SWAP2", "path": "7"}, "2144": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3637, 3642], "op": "AND", "path": "7"}, "2145": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3637, 3642], "op": "SWAP1", "path": "7"}, "2146": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3637, 3647], "op": "PUSH4", "path": "7", "value": "0x42966C68"}, "2151": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3637, 3647], "op": "SWAP1", "path": "7"}, "2152": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3637, 3670], "op": "PUSH2", "path": "7", "value": "0x875"}, "2155": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3637, 3670], "op": "SWAP1", "path": "7"}, "2156": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3648, 3669], "op": "DUP5", "path": "7"}, "2157": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3648, 3669], "op": "SWAP1", "path": "7"}, "2158": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3637, 3670], "op": "PUSH1", "path": "7", "value": "0x4"}, "2160": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3637, 3670], "op": "ADD", "path": "7"}, "2161": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3637, 3670], "op": "PUSH2", "path": "7", "value": "0xEE9"}, "2164": {"fn": "LeveragedTrading.redeemBtcUp", "jump": "i", "offset": [3637, 3670], "op": "JUMP", "path": "7"}, "2165": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3637, 3670], "op": "JUMPDEST", "path": "7"}, "2166": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3637, 3670], "op": "PUSH1", "path": "7", "value": "0x0"}, "2168": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3637, 3670], "op": "PUSH1", "path": "7", "value": "0x40"}, "2170": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3637, 3670], "op": "MLOAD", "path": "7"}, "2171": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3637, 3670], "op": "DUP1", "path": "7"}, "2172": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3637, 3670], "op": "DUP4", "path": "7"}, "2173": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3637, 3670], "op": "SUB", "path": "7"}, "2174": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3637, 3670], "op": "DUP2", "path": "7"}, "2175": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3637, 3670], "op": "PUSH1", "path": "7", "value": "0x0"}, "2177": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3637, 3670], "op": "DUP8", "path": "7"}, "2178": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3637, 3670], "op": "DUP1", "path": "7"}, "2179": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3637, 3670], "op": "EXTCODESIZE", "path": "7"}, "2180": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3637, 3670], "op": "ISZERO", "path": "7"}, "2181": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3637, 3670], "op": "DUP1", "path": "7"}, "2182": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3637, 3670], "op": "ISZERO", "path": "7"}, "2183": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3637, 3670], "op": "PUSH2", "path": "7", "value": "0x88F"}, "2186": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3637, 3670], "op": "JUMPI", "path": "7"}, "2187": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3637, 3670], "op": "PUSH1", "path": "7", "value": "0x0"}, "2189": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3637, 3670], "op": "DUP1", "path": "7"}, "2190": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3637, 3670], "op": "REVERT", "path": "7"}, "2191": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3637, 3670], "op": "JUMPDEST", "path": "7"}, "2192": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3637, 3670], "op": "POP", "path": "7"}, "2193": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3637, 3670], "op": "GAS", "path": "7"}, "2194": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3637, 3670], "op": "CALL", "path": "7"}, "2195": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3637, 3670], "op": "ISZERO", "path": "7"}, "2196": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3637, 3670], "op": "DUP1", "path": "7"}, "2197": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3637, 3670], "op": "ISZERO", "path": "7"}, "2198": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3637, 3670], "op": "PUSH2", "path": "7", "value": "0x8A3"}, "2201": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3637, 3670], "op": "JUMPI", "path": "7"}, "2202": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3637, 3670], "op": "RETURNDATASIZE", "path": "7"}, "2203": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3637, 3670], "op": "PUSH1", "path": "7", "value": "0x0"}, "2205": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3637, 3670], "op": "DUP1", "path": "7"}, "2206": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3637, 3670], "op": "RETURNDATACOPY", "path": "7"}, "2207": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3637, 3670], "op": "RETURNDATASIZE", "path": "7"}, "2208": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3637, 3670], "op": "PUSH1", "path": "7", "value": "0x0"}, "2210": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3637, 3670], "op": "REVERT", "path": "7"}, "2211": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3637, 3670], "op": "JUMPDEST", "path": "7"}, "2212": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3637, 3670], "op": "POP", "path": "7"}, "2213": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3637, 3670], "op": "POP", "path": "7"}, "2214": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3637, 3670], "op": "POP", "path": "7"}, "2215": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3637, 3670], "op": "POP", "path": "7"}, "2216": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3694, 3709], "op": "PUSH2", "path": "7", "statement": 28, "value": "0x8AF"}, "2219": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3694, 3707], "op": "PUSH2", "path": "7", "value": "0x932"}, "2222": {"fn": "LeveragedTrading.redeemBtcUp", "jump": "i", "offset": [3694, 3709], "op": "JUMP", "path": "7"}, "2223": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3694, 3709], "op": "JUMPDEST", "path": "7"}, "2224": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3681, 3691], "op": "PUSH1", "path": "7", "value": "0x1"}, "2226": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3681, 3709], "op": "DUP2", "path": "7"}, "2227": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3681, 3709], "op": "SWAP1", "path": "7"}, "2228": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3681, 3709], "op": "SSTORE", "path": "7"}, "2229": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3719, 3737], "op": "PUSH1", "path": "7", "value": "0x0"}, "2231": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3719, 3737], "op": "SWAP1", "path": "7"}, "2232": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3740, 3790], "op": "PUSH2", "path": "7", "value": "0x8CB"}, "2235": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3740, 3790], "op": "SWAP1", "path": "7"}, "2236": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3782, 3789], "op": "PUSH3", "path": "7", "value": "0xF4240"}, "2240": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3782, 3789], "op": "SWAP1", "path": "7"}, "2241": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3740, 3777], "op": "PUSH2", "path": "7", "value": "0x4A6"}, "2244": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3740, 3777], "op": "SWAP1", "path": "7"}, "2245": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3740, 3761], "op": "DUP6", "path": "7"}, "2246": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3740, 3761], "op": "SWAP1", "path": "7"}, "2247": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3740, 3765], "op": "PUSH2", "path": "7", "value": "0xB8F"}, "2250": {"fn": "LeveragedTrading.redeemBtcUp", "jump": "i", "offset": [3740, 3777], "op": "JUMP", "path": "7"}, "2251": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3740, 3790], "op": "JUMPDEST", "path": "7"}, "2252": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3815, 3826], "op": "PUSH1", "path": "7", "statement": 29, "value": "0x5"}, "2254": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3815, 3826], "op": "SLOAD", "path": "7"}, "2255": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3719, 3790], "op": "SWAP1", "path": "7"}, "2256": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3719, 3790], "op": "SWAP2", "path": "7"}, "2257": {"op": "POP"}, "2258": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3815, 3853], "op": "PUSH2", "path": "7", "value": "0x8DB"}, "2261": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3815, 3853], "op": "SWAP1", "path": "7"}, "2262": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3831, 3852], "op": "DUP4", "path": "7"}, "2263": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3815, 3830], "op": "PUSH2", "path": "7", "value": "0xB2F"}, "2266": {"fn": "LeveragedTrading.redeemBtcUp", "jump": "i", "offset": [3815, 3853], "op": "JUMP", "path": "7"}, "2267": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3815, 3853], "op": "JUMPDEST", "path": "7"}, "2268": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3801, 3812], "op": "PUSH1", "path": "7", "value": "0x5"}, "2270": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3801, 3853], "op": "SSTORE", "path": "7"}, "2271": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3881, 3896], "op": "PUSH1", "path": "7", "statement": 30, "value": "0x3"}, "2273": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3881, 3896], "op": "SLOAD", "path": "7"}, "2274": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3881, 3912], "op": "PUSH2", "path": "7", "value": "0x8EB"}, "2277": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3881, 3912], "op": "SWAP1", "path": "7"}, "2278": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3901, 3911], "op": "DUP3", "path": "7"}, "2279": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3881, 3900], "op": "PUSH2", "path": "7", "value": "0xB2F"}, "2282": {"fn": "LeveragedTrading.redeemBtcUp", "jump": "i", "offset": [3881, 3912], "op": "JUMP", "path": "7"}, "2283": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3881, 3912], "op": "JUMPDEST", "path": "7"}, "2284": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3863, 3878], "op": "PUSH1", "path": "7", "value": "0x3"}, "2286": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3863, 3912], "op": "SSTORE", "path": "7"}, "2287": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3944, 3955], "op": "PUSH1", "path": "7", "value": "0x8"}, "2289": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3944, 3955], "op": "SLOAD", "path": "7"}, "2290": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3974, 4011], "op": "PUSH1", "path": "7", "statement": 31, "value": "0x40"}, "2292": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3974, 4011], "op": "MLOAD", "path": "7"}, "2293": {"op": "PUSH4", "value": "0xA9059CBB"}, "2298": {"op": "PUSH1", "value": "0xE0"}, "2300": {"op": "SHL"}, "2301": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3974, 4011], "op": "DUP2", "path": "7"}, "2302": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3974, 4011], "op": "MSTORE", "path": "7"}, "2303": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3944, 3955], "op": "PUSH2", "path": "7", "value": "0x100"}, "2306": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3944, 3955], "op": "SWAP1", "path": "7"}, "2307": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3944, 3955], "op": "SWAP2", "path": "7"}, "2308": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3944, 3955], "op": "DIV", "path": "7"}, "2309": {"op": "PUSH1", "value": "0x1"}, "2311": {"op": "PUSH1", "value": "0x1"}, "2313": {"op": "PUSH1", "value": "0xA0"}, "2315": {"op": "SHL"}, "2316": {"op": "SUB"}, "2317": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3944, 3955], "op": "AND", "path": "7"}, "2318": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3944, 3955], "op": "SWAP1", "path": "7"}, "2319": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3944, 3955], "op": "DUP2", "path": "7"}, "2320": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3944, 3955], "op": "SWAP1", "path": "7"}, "2321": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3974, 3987], "op": "PUSH4", "path": "7", "value": "0xA9059CBB"}, "2326": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3974, 3987], "op": "SWAP1", "path": "7"}, "2327": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3974, 4011], "op": "PUSH2", "path": "7", "value": "0x63E"}, "2330": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3974, 4011], "op": "SWAP1", "path": "7"}, "2331": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3988, 3998], "op": "CALLER", "path": "7"}, "2332": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3988, 3998], "op": "SWAP1", "path": "7"}, "2333": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [4000, 4010], "op": "DUP7", "path": "7"}, "2334": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [4000, 4010], "op": "SWAP1", "path": "7"}, "2335": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3974, 4011], "op": "PUSH1", "path": "7", "value": "0x4"}, "2337": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3974, 4011], "op": "ADD", "path": "7"}, "2338": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [3974, 4011], "op": "PUSH2", "path": "7", "value": "0xDA5"}, "2341": {"branch": 60, "fn": "LeveragedTrading.redeemBtcUp", "jump": "i", "offset": [3974, 4011], "op": "JUMP", "path": "7"}, "2342": {"offset": [1485, 1519], "op": "JUMPDEST", "path": "7"}, "2343": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [1485, 1519], "op": "PUSH1", "path": "7", "value": "0x3"}, "2345": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [1485, 1519], "op": "SLOAD", "path": "7"}, "2346": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [1485, 1519], "op": "DUP2", "path": "7"}, "2347": {"fn": "LeveragedTrading.redeemBtcUp", "jump": "o", "offset": [1485, 1519], "op": "JUMP", "path": "7"}, "2348": {"offset": [1379, 1414], "op": "JUMPDEST", "path": "7"}, "2349": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [1379, 1414], "op": "PUSH1", "path": "7", "value": "0x1"}, "2351": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [1379, 1414], "op": "SLOAD", "path": "7"}, "2352": {"fn": "LeveragedTrading.redeemBtcUp", "offset": [1379, 1414], "op": "DUP2", "path": "7"}, "2353": {"fn": "LeveragedTrading.redeemBtcUp", "jump": "o", "offset": [1379, 1414], "op": "JUMP", "path": "7"}, "2354": {"fn": "LeveragedTrading.getBtcUpPrice", "offset": [5893, 6050], "op": "JUMPDEST", "path": "7"}, "2355": {"fn": "LeveragedTrading.getBtcUpPrice", "offset": [5939, 5946], "op": "PUSH1", "path": "7", "value": "0x0"}, "2357": {"fn": "LeveragedTrading.getBtcUpPrice", "offset": [5965, 5976], "op": "PUSH1", "path": "7", "statement": 32, "value": "0x5"}, "2359": {"fn": "LeveragedTrading.getBtcUpPrice", "offset": [5965, 5976], "op": "SLOAD", "path": "7"}, "2360": {"fn": "LeveragedTrading.getBtcUpPrice", "offset": [5980, 5981], "op": "PUSH1", "path": "7", "value": "0x0"}, "2362": {"branch": 61, "fn": "LeveragedTrading.getBtcUpPrice", "offset": [5965, 5981], "op": "EQ", "path": "7"}, "2363": {"fn": "LeveragedTrading.getBtcUpPrice", "offset": [5965, 6043], "op": "PUSH2", "path": "7", "value": "0x95C"}, "2366": {"branch": 61, "fn": "LeveragedTrading.getBtcUpPrice", "offset": [5965, 6043], "op": "JUMPI", "path": "7"}, "2367": {"fn": "LeveragedTrading.getBtcUpPrice", "offset": [5998, 6043], "op": "PUSH2", "path": "7", "value": "0x4AC"}, "2370": {"fn": "LeveragedTrading.getBtcUpPrice", "offset": [6031, 6042], "op": "PUSH1", "path": "7", "value": "0x5"}, "2372": {"fn": "LeveragedTrading.getBtcUpPrice", "offset": [6031, 6042], "op": "SLOAD", "path": "7"}, "2373": {"fn": "LeveragedTrading.getBtcUpPrice", "offset": [5998, 6026], "op": "PUSH2", "path": "7", "value": "0x4A6"}, "2376": {"fn": "LeveragedTrading.getBtcUpPrice", "offset": [6018, 6025], "op": "PUSH3", "path": "7", "value": "0xF4240"}, "2380": {"fn": "LeveragedTrading.getBtcUpPrice", "offset": [5998, 6013], "op": "PUSH1", "path": "7", "value": "0x3"}, "2382": {"fn": "LeveragedTrading.getBtcUpPrice", "offset": [5998, 6013], "op": "SLOAD", "path": "7"}, "2383": {"fn": "LeveragedTrading.getBtcUpPrice", "offset": [5998, 6017], "op": "PUSH2", "path": "7", "value": "0xB8F"}, "2386": {"fn": "LeveragedTrading.getBtcUpPrice", "offset": [5998, 6017], "op": "SWAP1", "path": "7"}, "2387": {"fn": "LeveragedTrading.getBtcUpPrice", "offset": [5998, 6026], "op": "SWAP2", "path": "7"}, "2388": {"fn": "LeveragedTrading.getBtcUpPrice", "offset": [5998, 6026], "op": "SWAP1", "path": "7"}, "2389": {"fn": "LeveragedTrading.getBtcUpPrice", "offset": [5998, 6026], "op": "PUSH4", "path": "7", "value": "0xFFFFFFFF"}, "2394": {"fn": "LeveragedTrading.getBtcUpPrice", "offset": [5998, 6026], "op": "AND", "path": "7"}, "2395": {"fn": "LeveragedTrading.getBtcUpPrice", "jump": "i", "offset": [5998, 6026], "op": "JUMP", "path": "7"}, "2396": {"fn": "LeveragedTrading.getBtcUpPrice", "offset": [5965, 6043], "op": "JUMPDEST", "path": "7"}, "2397": {"op": "POP"}, "2398": {"fn": "LeveragedTrading.getBtcUpPrice", "offset": [5985, 5995], "op": "PUSH1", "path": "7", "value": "0x1"}, "2400": {"fn": "LeveragedTrading.getBtcUpPrice", "offset": [5985, 5995], "op": "SLOAD", "path": "7"}, "2401": {"fn": "LeveragedTrading.getBtcUpPrice", "offset": [5985, 5995], "op": "SWAP1", "path": "7"}, "2402": {"fn": "LeveragedTrading.getBtcUpPrice", "jump": "o", "offset": [5893, 6050], "op": "JUMP", "path": "7"}, "2403": {"fn": "Ownable.transferOwnership", "offset": [1846, 2035], "op": "JUMPDEST", "path": "0"}, "2404": {"offset": [1196, 1208], "op": "PUSH2", "path": "0", "value": "0x96B"}, "2407": {"offset": [1196, 1206], "op": "PUSH2", "path": "0", "value": "0xB3B"}, "2410": {"jump": "i", "offset": [1196, 1208], "op": "JUMP", "path": "0"}, "2411": {"fn": "Ownable.transferOwnership", "offset": [1196, 1208], "op": "JUMPDEST", "path": "0"}, "2412": {"op": "PUSH1", "value": "0x1"}, "2414": {"op": "PUSH1", "value": "0x1"}, "2416": {"op": "PUSH1", "value": "0xA0"}, "2418": {"op": "SHL"}, "2419": {"op": "SUB"}, "2420": {"offset": [1185, 1208], "op": "AND", "path": "0"}, "2421": {"offset": [1185, 1192], "op": "PUSH2", "path": "0", "value": "0x97C"}, "2424": {"offset": [1185, 1190], "op": "PUSH2", "path": "0", "value": "0x4B8"}, "2427": {"jump": "i", "offset": [1185, 1192], "op": "JUMP", "path": "0"}, "2428": {"fn": "Ownable.transferOwnership", "offset": [1185, 1192], "op": "JUMPDEST", "path": "0"}, "2429": {"op": "PUSH1", "value": "0x1"}, "2431": {"op": "PUSH1", "value": "0x1"}, "2433": {"op": "PUSH1", "value": "0xA0"}, "2435": {"op": "SHL"}, "2436": {"op": "SUB"}, "2437": {"offset": [1185, 1208], "op": "AND", "path": "0"}, "2438": {"branch": 66, "fn": "Ownable.transferOwnership", "offset": [1185, 1208], "op": "EQ", "path": "0"}, "2439": {"offset": [1177, 1245], "op": "PUSH2", "path": "0", "value": "0x9A2"}, "2442": {"branch": 66, "offset": [1177, 1245], "op": "JUMPI", "path": "0"}, "2443": {"fn": "Ownable.transferOwnership", "offset": [1177, 1245], "op": "PUSH1", "path": "0", "value": "0x40"}, "2445": {"fn": "Ownable.transferOwnership", "offset": [1177, 1245], "op": "MLOAD", "path": "0"}, "2446": {"op": "PUSH3", "value": "0x461BCD"}, "2450": {"op": "PUSH1", "value": "0xE5"}, "2452": {"op": "SHL"}, "2453": {"offset": [1177, 1245], "op": "DUP2", "path": "0"}, "2454": {"fn": "Ownable.transferOwnership", "offset": [1177, 1245], "op": "MSTORE", "path": "0"}, "2455": {"fn": "Ownable.transferOwnership", "offset": [1177, 1245], "op": "PUSH1", "path": "0", "value": "0x4"}, "2457": {"fn": "Ownable.transferOwnership", "offset": [1177, 1245], "op": "ADD", "path": "0"}, "2458": {"fn": "Ownable.transferOwnership", "offset": [1177, 1245], "op": "PUSH2", "path": "0", "value": "0x467"}, "2461": {"fn": "Ownable.transferOwnership", "offset": [1177, 1245], "op": "SWAP1", "path": "0"}, "2462": {"fn": "Ownable.transferOwnership", "offset": [1177, 1245], "op": "PUSH2", "path": "0", "value": "0xE7D"}, "2465": {"fn": "Ownable.transferOwnership", "jump": "i", "offset": [1177, 1245], "op": "JUMP", "path": "0"}, "2466": {"fn": "Ownable.transferOwnership", "offset": [1177, 1245], "op": "JUMPDEST", "path": "0"}, "2467": {"op": "PUSH1", "value": "0x1"}, "2469": {"op": "PUSH1", "value": "0x1"}, "2471": {"op": "PUSH1", "value": "0xA0"}, "2473": {"op": "SHL"}, "2474": {"op": "SUB"}, "2475": {"fn": "Ownable.transferOwnership", "offset": [1934, 1956], "op": "DUP2", "path": "0", "statement": 33}, "2476": {"branch": 67, "fn": "Ownable.transferOwnership", "offset": [1934, 1956], "op": "AND", "path": "0"}, "2477": {"fn": "Ownable.transferOwnership", "offset": [1926, 1999], "op": "PUSH2", "path": "0", "value": "0x9C8"}, "2480": {"branch": 67, "fn": "Ownable.transferOwnership", "offset": [1926, 1999], "op": "JUMPI", "path": "0"}, "2481": {"fn": "Ownable.transferOwnership", "offset": [1926, 1999], "op": "PUSH1", "path": "0", "value": "0x40"}, "2483": {"fn": "Ownable.transferOwnership", "offset": [1926, 1999], "op": "MLOAD", "path": "0"}, "2484": {"op": "PUSH3", "value": "0x461BCD"}, "2488": {"op": "PUSH1", "value": "0xE5"}, "2490": {"op": "SHL"}, "2491": {"fn": "Ownable.transferOwnership", "offset": [1926, 1999], "op": "DUP2", "path": "0"}, "2492": {"fn": "Ownable.transferOwnership", "offset": [1926, 1999], "op": "MSTORE", "path": "0"}, "2493": {"fn": "Ownable.transferOwnership", "offset": [1926, 1999], "op": "PUSH1", "path": "0", "value": "0x4"}, "2495": {"fn": "Ownable.transferOwnership", "offset": [1926, 1999], "op": "ADD", "path": "0"}, "2496": {"fn": "Ownable.transferOwnership", "offset": [1926, 1999], "op": "PUSH2", "path": "0", "value": "0x467"}, "2499": {"fn": "Ownable.transferOwnership", "offset": [1926, 1999], "op": "SWAP1", "path": "0"}, "2500": {"fn": "Ownable.transferOwnership", "offset": [1926, 1999], "op": "PUSH2", "path": "0", "value": "0xE00"}, "2503": {"fn": "Ownable.transferOwnership", "jump": "i", "offset": [1926, 1999], "op": "JUMP", "path": "0"}, "2504": {"fn": "Ownable.transferOwnership", "offset": [1926, 1999], "op": "JUMPDEST", "path": "0"}, "2505": {"fn": "Ownable.transferOwnership", "offset": [2009, 2028], "op": "PUSH2", "path": "0", "statement": 34, "value": "0x9D1"}, "2508": {"fn": "Ownable.transferOwnership", "offset": [2019, 2027], "op": "DUP2", "path": "0"}, "2509": {"fn": "Ownable.transferOwnership", "offset": [2009, 2018], "op": "PUSH2", "path": "0", "value": "0xB3F"}, "2512": {"fn": "Ownable.transferOwnership", "jump": "i", "offset": [2009, 2028], "op": "JUMP", "path": "0"}, "2513": {"fn": "Ownable.transferOwnership", "offset": [2009, 2028], "op": "JUMPDEST", "path": "0"}, "2514": {"fn": "Ownable.transferOwnership", "offset": [1846, 2035], "op": "POP", "path": "0"}, "2515": {"fn": "Ownable.transferOwnership", "jump": "o", "offset": [1846, 2035], "op": "JUMP", "path": "0"}, "2516": {"offset": [1711, 1742], "op": "JUMPDEST", "path": "7"}, "2517": {"fn": "Ownable.transferOwnership", "offset": [1711, 1742], "op": "PUSH1", "path": "7", "value": "0x7"}, "2519": {"fn": "Ownable.transferOwnership", "offset": [1711, 1742], "op": "SLOAD", "path": "7"}, "2520": {"fn": "Ownable.transferOwnership", "offset": [1711, 1742], "op": "DUP2", "path": "7"}, "2521": {"fn": "Ownable.transferOwnership", "jump": "o", "offset": [1711, 1742], "op": "JUMP", "path": "7"}, "2522": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2436, 2969], "op": "JUMPDEST", "path": "7"}, "2523": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2493, 2519], "op": "PUSH2", "path": "7", "statement": 35, "value": "0x9E2"}, "2526": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2493, 2517], "op": "PUSH2", "path": "7", "value": "0x398"}, "2529": {"fn": "LeveragedTrading.issueBtcUp", "jump": "i", "offset": [2493, 2519], "op": "JUMP", "path": "7"}, "2530": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2493, 2519], "op": "JUMPDEST", "path": "7"}, "2531": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2551, 2566], "op": "PUSH2", "path": "7", "statement": 36, "value": "0x9EA"}, "2534": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2551, 2564], "op": "PUSH2", "path": "7", "value": "0x932"}, "2537": {"fn": "LeveragedTrading.issueBtcUp", "jump": "i", "offset": [2551, 2566], "op": "JUMP", "path": "7"}, "2538": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2551, 2566], "op": "JUMPDEST", "path": "7"}, "2539": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2538, 2548], "op": "PUSH1", "path": "7", "value": "0x1"}, "2541": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2538, 2566], "op": "DUP2", "path": "7"}, "2542": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2538, 2566], "op": "SWAP1", "path": "7"}, "2543": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2538, 2566], "op": "SSTORE", "path": "7"}, "2544": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2576, 2605], "op": "PUSH1", "path": "7", "value": "0x0"}, "2546": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2576, 2605], "op": "SWAP1", "path": "7"}, "2547": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2608, 2647], "op": "PUSH2", "path": "7", "value": "0xA03"}, "2550": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2608, 2647], "op": "SWAP1", "path": "7"}, "2551": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2608, 2631], "op": "PUSH2", "path": "7", "value": "0x4A6"}, "2554": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2608, 2618], "op": "DUP5", "path": "7"}, "2555": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2623, 2630], "op": "PUSH3", "path": "7", "value": "0xF4240"}, "2559": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2608, 2622], "op": "PUSH2", "path": "7", "value": "0xB8F"}, "2562": {"fn": "LeveragedTrading.issueBtcUp", "jump": "i", "offset": [2608, 2631], "op": "JUMP", "path": "7"}, "2563": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2608, 2647], "op": "JUMPDEST", "path": "7"}, "2564": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2658, 2663], "op": "PUSH1", "path": "7", "statement": 37, "value": "0xA"}, "2566": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2658, 2663], "op": "SLOAD", "path": "7"}, "2567": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2658, 2691], "op": "PUSH1", "path": "7", "value": "0x40"}, "2569": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2658, 2691], "op": "MLOAD", "path": "7"}, "2570": {"op": "PUSH4", "value": "0x140E25AD"}, "2575": {"op": "PUSH1", "value": "0xE3"}, "2577": {"op": "SHL"}, "2578": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2658, 2691], "op": "DUP2", "path": "7"}, "2579": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2658, 2691], "op": "MSTORE", "path": "7"}, "2580": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2576, 2647], "op": "SWAP2", "path": "7"}, "2581": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2576, 2647], "op": "SWAP3", "path": "7"}, "2582": {"op": "POP"}, "2583": {"op": "PUSH1", "value": "0x1"}, "2585": {"op": "PUSH1", "value": "0x1"}, "2587": {"op": "PUSH1", "value": "0xA0"}, "2589": {"op": "SHL"}, "2590": {"op": "SUB"}, "2591": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2658, 2663], "op": "AND", "path": "7"}, "2592": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2658, 2663], "op": "SWAP1", "path": "7"}, "2593": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2658, 2668], "op": "PUSH4", "path": "7", "value": "0xA0712D68"}, "2598": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2658, 2668], "op": "SWAP1", "path": "7"}, "2599": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2658, 2691], "op": "PUSH2", "path": "7", "value": "0xA34"}, "2602": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2658, 2691], "op": "SWAP1", "path": "7"}, "2603": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2576, 2647], "op": "DUP5", "path": "7"}, "2604": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2576, 2647], "op": "SWAP1", "path": "7"}, "2605": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2658, 2691], "op": "PUSH1", "path": "7", "value": "0x4"}, "2607": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2658, 2691], "op": "ADD", "path": "7"}, "2608": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2658, 2691], "op": "PUSH2", "path": "7", "value": "0xEE9"}, "2611": {"fn": "LeveragedTrading.issueBtcUp", "jump": "i", "offset": [2658, 2691], "op": "JUMP", "path": "7"}, "2612": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2658, 2691], "op": "JUMPDEST", "path": "7"}, "2613": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2658, 2691], "op": "PUSH1", "path": "7", "value": "0x0"}, "2615": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2658, 2691], "op": "PUSH1", "path": "7", "value": "0x40"}, "2617": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2658, 2691], "op": "MLOAD", "path": "7"}, "2618": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2658, 2691], "op": "DUP1", "path": "7"}, "2619": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2658, 2691], "op": "DUP4", "path": "7"}, "2620": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2658, 2691], "op": "SUB", "path": "7"}, "2621": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2658, 2691], "op": "DUP2", "path": "7"}, "2622": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2658, 2691], "op": "PUSH1", "path": "7", "value": "0x0"}, "2624": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2658, 2691], "op": "DUP8", "path": "7"}, "2625": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2658, 2691], "op": "DUP1", "path": "7"}, "2626": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2658, 2691], "op": "EXTCODESIZE", "path": "7"}, "2627": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2658, 2691], "op": "ISZERO", "path": "7"}, "2628": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2658, 2691], "op": "DUP1", "path": "7"}, "2629": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2658, 2691], "op": "ISZERO", "path": "7"}, "2630": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2658, 2691], "op": "PUSH2", "path": "7", "value": "0xA4E"}, "2633": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2658, 2691], "op": "JUMPI", "path": "7"}, "2634": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2658, 2691], "op": "PUSH1", "path": "7", "value": "0x0"}, "2636": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2658, 2691], "op": "DUP1", "path": "7"}, "2637": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2658, 2691], "op": "REVERT", "path": "7"}, "2638": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2658, 2691], "op": "JUMPDEST", "path": "7"}, "2639": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2658, 2691], "op": "POP", "path": "7"}, "2640": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2658, 2691], "op": "GAS", "path": "7"}, "2641": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2658, 2691], "op": "CALL", "path": "7"}, "2642": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2658, 2691], "op": "ISZERO", "path": "7"}, "2643": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2658, 2691], "op": "DUP1", "path": "7"}, "2644": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2658, 2691], "op": "ISZERO", "path": "7"}, "2645": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2658, 2691], "op": "PUSH2", "path": "7", "value": "0xA62"}, "2648": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2658, 2691], "op": "JUMPI", "path": "7"}, "2649": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2658, 2691], "op": "RETURNDATASIZE", "path": "7"}, "2650": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2658, 2691], "op": "PUSH1", "path": "7", "value": "0x0"}, "2652": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2658, 2691], "op": "DUP1", "path": "7"}, "2653": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2658, 2691], "op": "RETURNDATACOPY", "path": "7"}, "2654": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2658, 2691], "op": "RETURNDATASIZE", "path": "7"}, "2655": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2658, 2691], "op": "PUSH1", "path": "7", "value": "0x0"}, "2657": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2658, 2691], "op": "REVERT", "path": "7"}, "2658": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2658, 2691], "op": "JUMPDEST", "path": "7"}, "2659": {"op": "POP"}, "2660": {"op": "POP"}, "2661": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2715, 2726], "op": "PUSH1", "path": "7", "statement": 38, "value": "0x5"}, "2663": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2715, 2726], "op": "SLOAD", "path": "7"}, "2664": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2715, 2753], "op": "PUSH2", "path": "7", "value": "0xA74"}, "2667": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2715, 2753], "op": "SWAP3", "path": "7"}, "2668": {"op": "POP"}, "2669": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2715, 2726], "op": "SWAP1", "path": "7"}, "2670": {"op": "POP"}, "2671": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2731, 2752], "op": "DUP3", "path": "7"}, "2672": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2715, 2730], "op": "PUSH2", "path": "7", "value": "0xB1C"}, "2675": {"fn": "LeveragedTrading.issueBtcUp", "jump": "i", "offset": [2715, 2753], "op": "JUMP", "path": "7"}, "2676": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2715, 2753], "op": "JUMPDEST", "path": "7"}, "2677": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2701, 2712], "op": "PUSH1", "path": "7", "value": "0x5"}, "2679": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2701, 2753], "op": "SSTORE", "path": "7"}, "2680": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2781, 2796], "op": "PUSH1", "path": "7", "statement": 39, "value": "0x3"}, "2682": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2781, 2796], "op": "SLOAD", "path": "7"}, "2683": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2781, 2812], "op": "PUSH2", "path": "7", "value": "0xA84"}, "2686": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2781, 2812], "op": "SWAP1", "path": "7"}, "2687": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2801, 2811], "op": "DUP4", "path": "7"}, "2688": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2781, 2800], "op": "PUSH2", "path": "7", "value": "0xB1C"}, "2691": {"fn": "LeveragedTrading.issueBtcUp", "jump": "i", "offset": [2781, 2812], "op": "JUMP", "path": "7"}, "2692": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2781, 2812], "op": "JUMPDEST", "path": "7"}, "2693": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2763, 2778], "op": "PUSH1", "path": "7", "value": "0x3"}, "2695": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2763, 2812], "op": "SSTORE", "path": "7"}, "2696": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2844, 2855], "op": "PUSH1", "path": "7", "value": "0x8"}, "2698": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2844, 2855], "op": "SLOAD", "path": "7"}, "2699": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2874, 2930], "op": "PUSH1", "path": "7", "statement": 40, "value": "0x40"}, "2701": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2874, 2930], "op": "MLOAD", "path": "7"}, "2702": {"op": "PUSH4", "value": "0x23B872DD"}, "2707": {"op": "PUSH1", "value": "0xE0"}, "2709": {"op": "SHL"}, "2710": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2874, 2930], "op": "DUP2", "path": "7"}, "2711": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2874, 2930], "op": "MSTORE", "path": "7"}, "2712": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2844, 2855], "op": "PUSH2", "path": "7", "value": "0x100"}, "2715": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2844, 2855], "op": "SWAP1", "path": "7"}, "2716": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2844, 2855], "op": "SWAP2", "path": "7"}, "2717": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2844, 2855], "op": "DIV", "path": "7"}, "2718": {"op": "PUSH1", "value": "0x1"}, "2720": {"op": "PUSH1", "value": "0x1"}, "2722": {"op": "PUSH1", "value": "0xA0"}, "2724": {"op": "SHL"}, "2725": {"op": "SUB"}, "2726": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2844, 2855], "op": "AND", "path": "7"}, "2727": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2844, 2855], "op": "SWAP1", "path": "7"}, "2728": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2844, 2855], "op": "DUP2", "path": "7"}, "2729": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2844, 2855], "op": "SWAP1", "path": "7"}, "2730": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2874, 2891], "op": "PUSH4", "path": "7", "value": "0x23B872DD"}, "2735": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2874, 2891], "op": "SWAP1", "path": "7"}, "2736": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2874, 2930], "op": "PUSH2", "path": "7", "value": "0x79E"}, "2739": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2874, 2930], "op": "SWAP1", "path": "7"}, "2740": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2892, 2902], "op": "CALLER", "path": "7"}, "2741": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2892, 2902], "op": "SWAP1", "path": "7"}, "2742": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2912, 2916], "op": "ADDRESS", "path": "7"}, "2743": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2912, 2916], "op": "SWAP1", "path": "7"}, "2744": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2919, 2929], "op": "DUP9", "path": "7"}, "2745": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2919, 2929], "op": "SWAP1", "path": "7"}, "2746": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2874, 2930], "op": "PUSH1", "path": "7", "value": "0x4"}, "2748": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2874, 2930], "op": "ADD", "path": "7"}, "2749": {"fn": "LeveragedTrading.issueBtcUp", "offset": [2874, 2930], "op": "PUSH2", "path": "7", "value": "0xD81"}, "2752": {"branch": 62, "fn": "LeveragedTrading.issueBtcUp", "jump": "i", "offset": [2874, 2930], "op": "JUMP", "path": "7"}, "2753": {"fn": "LeveragedTrading.getRebalanceAmount", "offset": [5633, 5857], "op": "JUMPDEST", "path": "7"}, "2754": {"fn": "LeveragedTrading.getRebalanceAmount", "offset": [5702, 5709], "op": "PUSH1", "path": "7", "value": "0x0"}, "2756": {"fn": "LeveragedTrading.getRebalanceAmount", "offset": [5720, 5737], "op": "DUP1", "path": "7"}, "2757": {"fn": "LeveragedTrading.getRebalanceAmount", "offset": [5740, 5762], "op": "PUSH2", "path": "7", "value": "0xACD"}, "2760": {"fn": "LeveragedTrading.getRebalanceAmount", "offset": [5753, 5761], "op": "DUP4", "path": "7"}, "2761": {"fn": "LeveragedTrading.getRebalanceAmount", "offset": [5740, 5752], "op": "PUSH2", "path": "7", "value": "0xBA7"}, "2764": {"fn": "LeveragedTrading.getRebalanceAmount", "jump": "i", "offset": [5740, 5762], "op": "JUMP", "path": "7"}, "2765": {"fn": "LeveragedTrading.getRebalanceAmount", "offset": [5740, 5762], "op": "JUMPDEST", "path": "7"}, "2766": {"fn": "LeveragedTrading.getRebalanceAmount", "offset": [5720, 5762], "op": "SWAP1", "path": "7"}, "2767": {"fn": "LeveragedTrading.getRebalanceAmount", "offset": [5720, 5762], "op": "POP", "path": "7"}, "2768": {"fn": "LeveragedTrading.getRebalanceAmount", "offset": [5780, 5850], "op": "PUSH2", "path": "7", "statement": 41, "value": "0xAF6"}, "2771": {"fn": "LeveragedTrading.getRebalanceAmount", "offset": [5842, 5849], "op": "PUSH3", "path": "7", "value": "0xF4240"}, "2775": {"fn": "LeveragedTrading.getRebalanceAmount", "offset": [5780, 5837], "op": "PUSH2", "path": "7", "value": "0x4A6"}, "2778": {"fn": "LeveragedTrading.getRebalanceAmount", "offset": [5824, 5836], "op": "PUSH2", "path": "7", "value": "0xAE2"}, "2781": {"fn": "LeveragedTrading.getRebalanceAmount", "offset": [5826, 5835], "op": "DUP5", "path": "7"}, "2782": {"fn": "LeveragedTrading.getRebalanceAmount", "offset": [5824, 5825], "op": "PUSH2", "path": "7", "value": "0xC06"}, "2785": {"fn": "LeveragedTrading.getRebalanceAmount", "jump": "i", "offset": [5824, 5836], "op": "JUMP", "path": "7"}, "2786": {"fn": "LeveragedTrading.getRebalanceAmount", "offset": [5824, 5836], "op": "JUMPDEST", "path": "7"}, "2787": {"fn": "LeveragedTrading.getRebalanceAmount", "offset": [5780, 5819], "op": "PUSH2", "path": "7", "value": "0xAF0"}, "2790": {"fn": "LeveragedTrading.getRebalanceAmount", "offset": [5784, 5799], "op": "PUSH1", "path": "7", "value": "0x3"}, "2792": {"fn": "LeveragedTrading.getRebalanceAmount", "offset": [5784, 5799], "op": "SLOAD", "path": "7"}, "2793": {"fn": "LeveragedTrading.getRebalanceAmount", "offset": [5801, 5818], "op": "PUSH1", "path": "7", "value": "0x4"}, "2795": {"fn": "LeveragedTrading.getRebalanceAmount", "offset": [5801, 5818], "op": "SLOAD", "path": "7"}, "2796": {"fn": "LeveragedTrading.getRebalanceAmount", "offset": [5780, 5783], "op": "PUSH2", "path": "7", "value": "0xC76"}, "2799": {"fn": "LeveragedTrading.getRebalanceAmount", "jump": "i", "offset": [5780, 5819], "op": "JUMP", "path": "7"}, "2800": {"fn": "LeveragedTrading.getRebalanceAmount", "offset": [5780, 5819], "op": "JUMPDEST", "path": "7"}, "2801": {"fn": "LeveragedTrading.getRebalanceAmount", "offset": [5780, 5823], "op": "SWAP1", "path": "7"}, "2802": {"fn": "LeveragedTrading.getRebalanceAmount", "offset": [5780, 5823], "op": "PUSH2", "path": "7", "value": "0xB8F"}, "2805": {"fn": "LeveragedTrading.getRebalanceAmount", "jump": "i", "offset": [5780, 5837], "op": "JUMP", "path": "7"}, "2806": {"fn": "LeveragedTrading.getRebalanceAmount", "offset": [5780, 5850], "op": "JUMPDEST", "path": "7"}, "2807": {"fn": "LeveragedTrading.getRebalanceAmount", "offset": [5773, 5850], "op": "SWAP2", "path": "7"}, "2808": {"fn": "LeveragedTrading.getRebalanceAmount", "offset": [5773, 5850], "op": "POP", "path": "7"}, "2809": {"fn": "LeveragedTrading.getRebalanceAmount", "offset": [5773, 5850], "op": "POP", "path": "7"}, "2810": {"fn": "LeveragedTrading.getRebalanceAmount", "offset": [5633, 5857], "op": "JUMPDEST", "path": "7"}, "2811": {"fn": "LeveragedTrading.getRebalanceAmount", "offset": [5633, 5857], "op": "SWAP2", "path": "7"}, "2812": {"fn": "LeveragedTrading.getRebalanceAmount", "offset": [5633, 5857], "op": "SWAP1", "path": "7"}, "2813": {"fn": "LeveragedTrading.getRebalanceAmount", "offset": [5633, 5857], "op": "POP", "path": "7"}, "2814": {"fn": "LeveragedTrading.getRebalanceAmount", "jump": "o", "offset": [5633, 5857], "op": "JUMP", "path": "7"}, "2815": {"fn": "LeveragedTrading.getSign", "offset": [5435, 5626], "op": "JUMPDEST", "path": "7"}, "2816": {"fn": "LeveragedTrading.getSign", "offset": [5493, 5499], "op": "PUSH1", "path": "7", "value": "0x0"}, "2818": {"fn": "LeveragedTrading.getSign", "offset": [5525, 5537], "op": "PUSH1", "path": "7", "value": "0x7"}, "2820": {"fn": "LeveragedTrading.getSign", "offset": [5525, 5537], "op": "SLOAD", "path": "7"}, "2821": {"fn": "LeveragedTrading.getSign", "offset": [5514, 5522], "op": "DUP3", "path": "7"}, "2822": {"branch": 63, "fn": "LeveragedTrading.getSign", "offset": [5514, 5537], "op": "GT", "path": "7"}, "2823": {"fn": "LeveragedTrading.getSign", "offset": [5510, 5620], "op": "ISZERO", "path": "7"}, "2824": {"fn": "LeveragedTrading.getSign", "offset": [5510, 5620], "op": "PUSH2", "path": "7", "value": "0xB13"}, "2827": {"branch": 63, "fn": "LeveragedTrading.getSign", "offset": [5510, 5620], "op": "JUMPI", "path": "7"}, "2828": {"op": "POP"}, "2829": {"fn": "LeveragedTrading.getSign", "offset": [5560, 5561], "op": "PUSH1", "path": "7", "statement": 42, "value": "0x1"}, "2831": {"fn": "LeveragedTrading.getSign", "offset": [5553, 5561], "op": "PUSH2", "path": "7", "value": "0xAFA"}, "2834": {"fn": "LeveragedTrading.getSign", "offset": [5553, 5561], "op": "JUMP", "path": "7"}, "2835": {"fn": "LeveragedTrading.getSign", "offset": [5510, 5620], "op": "JUMPDEST", "path": "7"}, "2836": {"op": "POP"}, "2837": {"op": "PUSH1", "value": "0x0"}, "2839": {"op": "NOT"}, "2840": {"fn": "LeveragedTrading.getSign", "offset": [5600, 5609], "op": "PUSH2", "path": "7", "statement": 43, "value": "0xAFA"}, "2843": {"fn": "LeveragedTrading.getSign", "offset": [5600, 5609], "op": "JUMP", "path": "7"}, "2844": {"fn": "SafeMath.add", "offset": [2672, 2768], "op": "JUMPDEST", "path": "5"}, "2845": {"fn": "SafeMath.add", "offset": [2730, 2737], "op": "PUSH1", "path": "5", "value": "0x0"}, "2847": {"fn": "SafeMath.add", "offset": [2756, 2761], "op": "PUSH2", "path": "5", "statement": 44, "value": "0xB28"}, "2850": {"fn": "SafeMath.add", "offset": [2760, 2761], "op": "DUP3", "path": "5"}, "2851": {"fn": "SafeMath.add", "offset": [2756, 2757], "op": "DUP5", "path": "5"}, "2852": {"fn": "SafeMath.add", "offset": [2756, 2761], "op": "PUSH2", "path": "5", "value": "0xEF2"}, "2855": {"fn": "SafeMath.add", "jump": "i", "offset": [2756, 2761], "op": "JUMP", "path": "5"}, "2856": {"fn": "SafeMath.add", "offset": [2756, 2761], "op": "JUMPDEST", "path": "5"}, "2857": {"fn": "SafeMath.add", "offset": [2749, 2761], "op": "SWAP4", "path": "5"}, "2858": {"fn": "SafeMath.add", "offset": [2672, 2768], "op": "SWAP3", "path": "5"}, "2859": {"op": "POP"}, "2860": {"op": "POP"}, "2861": {"op": "POP"}, "2862": {"fn": "SafeMath.add", "jump": "o", "offset": [2672, 2768], "op": "JUMP", "path": "5"}, "2863": {"fn": "SafeMath.sub", "offset": [3039, 3135], "op": "JUMPDEST", "path": "5"}, "2864": {"fn": "SafeMath.sub", "offset": [3097, 3104], "op": "PUSH1", "path": "5", "value": "0x0"}, "2866": {"fn": "SafeMath.sub", "offset": [3123, 3128], "op": "PUSH2", "path": "5", "statement": 45, "value": "0xB28"}, "2869": {"fn": "SafeMath.sub", "offset": [3127, 3128], "op": "DUP3", "path": "5"}, "2870": {"fn": "SafeMath.sub", "offset": [3123, 3124], "op": "DUP5", "path": "5"}, "2871": {"fn": "SafeMath.sub", "offset": [3123, 3128], "op": "PUSH2", "path": "5", "value": "0x1060"}, "2874": {"fn": "SafeMath.sub", "jump": "i", "offset": [3123, 3128], "op": "JUMP", "path": "5"}, "2875": {"fn": "Context._msgSender", "offset": [586, 682], "op": "JUMPDEST", "path": "4"}, "2876": {"fn": "Context._msgSender", "offset": [665, 675], "op": "CALLER", "path": "4", "statement": 46}, "2877": {"fn": "Context._msgSender", "offset": [586, 682], "op": "SWAP1", "path": "4"}, "2878": {"fn": "Context._msgSender", "jump": "o", "offset": [586, 682], "op": "JUMP", "path": "4"}, "2879": {"fn": "Ownable._setOwner", "offset": [2041, 2210], "op": "JUMPDEST", "path": "0"}, "2880": {"fn": "Ownable._setOwner", "offset": [2096, 2112], "op": "PUSH1", "path": "0", "value": "0x0"}, "2882": {"fn": "Ownable._setOwner", "offset": [2115, 2121], "op": "DUP1", "path": "0"}, "2883": {"fn": "Ownable._setOwner", "offset": [2115, 2121], "op": "SLOAD", "path": "0"}, "2884": {"op": "PUSH1", "value": "0x1"}, "2886": {"op": "PUSH1", "value": "0x1"}, "2888": {"op": "PUSH1", "value": "0xA0"}, "2890": {"op": "SHL"}, "2891": {"op": "SUB"}, "2892": {"fn": "Ownable._setOwner", "offset": [2131, 2148], "op": "DUP4", "path": "0", "statement": 47}, "2893": {"fn": "Ownable._setOwner", "offset": [2131, 2148], "op": "DUP2", "path": "0"}, "2894": {"fn": "Ownable._setOwner", "offset": [2131, 2148], "op": "AND", "path": "0"}, "2895": {"op": "PUSH1", "value": "0x1"}, "2897": {"op": "PUSH1", "value": "0x1"}, "2899": {"op": "PUSH1", "value": "0xA0"}, "2901": {"op": "SHL"}, "2902": {"op": "SUB"}, "2903": {"op": "NOT"}, "2904": {"fn": "Ownable._setOwner", "offset": [2131, 2148], "op": "DUP4", "path": "0"}, "2905": {"fn": "Ownable._setOwner", "offset": [2131, 2148], "op": "AND", "path": "0"}, "2906": {"fn": "Ownable._setOwner", "offset": [2131, 2148], "op": "DUP2", "path": "0"}, "2907": {"fn": "Ownable._setOwner", "offset": [2131, 2148], "op": "OR", "path": "0"}, "2908": {"fn": "Ownable._setOwner", "offset": [2131, 2148], "op": "DUP5", "path": "0"}, "2909": {"fn": "Ownable._setOwner", "offset": [2131, 2148], "op": "SSTORE", "path": "0"}, "2910": {"fn": "Ownable._setOwner", "offset": [2163, 2203], "op": "PUSH1", "path": "0", "statement": 48, "value": "0x40"}, "2912": {"fn": "Ownable._setOwner", "offset": [2163, 2203], "op": "MLOAD", "path": "0"}, "2913": {"fn": "Ownable._setOwner", "offset": [2115, 2121], "op": "SWAP2", "path": "0"}, "2914": {"fn": "Ownable._setOwner", "offset": [2115, 2121], "op": "SWAP1", "path": "0"}, "2915": {"fn": "Ownable._setOwner", "offset": [2115, 2121], "op": "SWAP3", "path": "0"}, "2916": {"fn": "Ownable._setOwner", "offset": [2115, 2121], "op": "AND", "path": "0"}, "2917": {"fn": "Ownable._setOwner", "offset": [2115, 2121], "op": "SWAP3", "path": "0"}, "2918": {"fn": "Ownable._setOwner", "offset": [2115, 2121], "op": "DUP4", "path": "0"}, "2919": {"fn": "Ownable._setOwner", "offset": [2115, 2121], "op": "SWAP2", "path": "0"}, "2920": {"fn": "Ownable._setOwner", "offset": [2163, 2203], "op": "PUSH32", "path": "0", "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"}, "2953": {"fn": "Ownable._setOwner", "offset": [2163, 2203], "op": "SWAP2", "path": "0"}, "2954": {"fn": "Ownable._setOwner", "offset": [2096, 2112], "op": "SWAP1", "path": "0"}, "2955": {"fn": "Ownable._setOwner", "offset": [2163, 2203], "op": "LOG3", "path": "0"}, "2956": {"fn": "Ownable._setOwner", "offset": [2041, 2210], "op": "POP", "path": "0"}, "2957": {"fn": "Ownable._setOwner", "offset": [2041, 2210], "op": "POP", "path": "0"}, "2958": {"fn": "Ownable._setOwner", "jump": "o", "offset": [2041, 2210], "op": "JUMP", "path": "0"}, "2959": {"fn": "SafeMath.mul", "offset": [3382, 3478], "op": "JUMPDEST", "path": "5"}, "2960": {"fn": "SafeMath.mul", "offset": [3440, 3447], "op": "PUSH1", "path": "5", "value": "0x0"}, "2962": {"fn": "SafeMath.mul", "offset": [3466, 3471], "op": "PUSH2", "path": "5", "statement": 49, "value": "0xB28"}, "2965": {"fn": "SafeMath.mul", "offset": [3470, 3471], "op": "DUP3", "path": "5"}, "2966": {"fn": "SafeMath.mul", "offset": [3466, 3467], "op": "DUP5", "path": "5"}, "2967": {"fn": "SafeMath.mul", "offset": [3466, 3471], "op": "PUSH2", "path": "5", "value": "0x1041"}, "2970": {"fn": "SafeMath.mul", "jump": "i", "offset": [3466, 3471], "op": "JUMP", "path": "5"}, "2971": {"fn": "SafeMath.div", "offset": [3767, 3863], "op": "JUMPDEST", "path": "5"}, "2972": {"fn": "SafeMath.div", "offset": [3825, 3832], "op": "PUSH1", "path": "5", "value": "0x0"}, "2974": {"fn": "SafeMath.div", "offset": [3851, 3856], "op": "PUSH2", "path": "5", "statement": 50, "value": "0xB28"}, "2977": {"fn": "SafeMath.div", "offset": [3855, 3856], "op": "DUP3", "path": "5"}, "2978": {"fn": "SafeMath.div", "offset": [3851, 3852], "op": "DUP5", "path": "5"}, "2979": {"fn": "SafeMath.div", "offset": [3851, 3856], "op": "PUSH2", "path": "5", "value": "0xF0A"}, "2982": {"fn": "SafeMath.div", "jump": "i", "offset": [3851, 3856], "op": "JUMP", "path": "5"}, "2983": {"fn": "LeveragedTrading.getPriceDiff", "offset": [6988, 7306], "op": "JUMPDEST", "path": "7"}, "2984": {"fn": "LeveragedTrading.getPriceDiff", "offset": [7051, 7058], "op": "PUSH1", "path": "7", "value": "0x0"}, "2986": {"fn": "LeveragedTrading.getPriceDiff", "offset": [7102, 7114], "op": "PUSH1", "path": "7", "value": "0x7"}, "2988": {"fn": "LeveragedTrading.getPriceDiff", "offset": [7102, 7114], "op": "SLOAD", "path": "7"}, "2989": {"fn": "LeveragedTrading.getPriceDiff", "offset": [7091, 7099], "op": "DUP3", "path": "7"}, "2990": {"branch": 64, "fn": "LeveragedTrading.getPriceDiff", "offset": [7091, 7114], "op": "GT", "path": "7"}, "2991": {"fn": "LeveragedTrading.getPriceDiff", "offset": [7087, 7299], "op": "ISZERO", "path": "7"}, "2992": {"fn": "LeveragedTrading.getPriceDiff", "offset": [7087, 7299], "op": "PUSH2", "path": "7", "value": "0xBE3"}, "2995": {"branch": 64, "fn": "LeveragedTrading.getPriceDiff", "offset": [7087, 7299], "op": "JUMPI", "path": "7"}, "2996": {"fn": "LeveragedTrading.getPriceDiff", "offset": [7137, 7189], "op": "PUSH2", "path": "7", "statement": 51, "value": "0xBDC"}, "2999": {"fn": "LeveragedTrading.getPriceDiff", "offset": [7181, 7188], "op": "PUSH3", "path": "7", "value": "0xF4240"}, "3003": {"fn": "LeveragedTrading.getPriceDiff", "offset": [7137, 7176], "op": "PUSH2", "path": "7", "value": "0xBD6"}, "3006": {"fn": "LeveragedTrading.getPriceDiff", "offset": [7163, 7175], "op": "PUSH1", "path": "7", "value": "0x7"}, "3008": {"fn": "LeveragedTrading.getPriceDiff", "offset": [7163, 7175], "op": "SLOAD", "path": "7"}, "3009": {"fn": "LeveragedTrading.getPriceDiff", "offset": [7137, 7158], "op": "PUSH2", "path": "7", "value": "0x4A6"}, "3012": {"fn": "LeveragedTrading.getPriceDiff", "offset": [7150, 7157], "op": "PUSH3", "path": "7", "value": "0xF4240"}, "3016": {"fn": "LeveragedTrading.getPriceDiff", "offset": [7137, 7145], "op": "DUP8", "path": "7"}, "3017": {"fn": "LeveragedTrading.getPriceDiff", "offset": [7137, 7149], "op": "PUSH2", "path": "7", "value": "0xB8F"}, "3020": {"fn": "LeveragedTrading.getPriceDiff", "offset": [7137, 7149], "op": "SWAP1", "path": "7"}, "3021": {"fn": "LeveragedTrading.getPriceDiff", "offset": [7137, 7158], "op": "SWAP2", "path": "7"}, "3022": {"fn": "LeveragedTrading.getPriceDiff", "offset": [7137, 7158], "op": "SWAP1", "path": "7"}, "3023": {"fn": "LeveragedTrading.getPriceDiff", "offset": [7137, 7158], "op": "PUSH4", "path": "7", "value": "0xFFFFFFFF"}, "3028": {"fn": "LeveragedTrading.getPriceDiff", "offset": [7137, 7158], "op": "AND", "path": "7"}, "3029": {"fn": "LeveragedTrading.getPriceDiff", "jump": "i", "offset": [7137, 7158], "op": "JUMP", "path": "7"}, "3030": {"fn": "LeveragedTrading.getPriceDiff", "offset": [7137, 7176], "op": "JUMPDEST", "path": "7"}, "3031": {"fn": "LeveragedTrading.getPriceDiff", "offset": [7137, 7180], "op": "SWAP1", "path": "7"}, "3032": {"fn": "LeveragedTrading.getPriceDiff", "offset": [7137, 7180], "op": "PUSH2", "path": "7", "value": "0xB2F"}, "3035": {"fn": "LeveragedTrading.getPriceDiff", "jump": "i", "offset": [7137, 7189], "op": "JUMP", "path": "7"}, "3036": {"fn": "LeveragedTrading.getPriceDiff", "offset": [7137, 7189], "op": "JUMPDEST", "path": "7"}, "3037": {"fn": "LeveragedTrading.getPriceDiff", "offset": [7130, 7189], "op": "SWAP1", "path": "7"}, "3038": {"fn": "LeveragedTrading.getPriceDiff", "offset": [7130, 7189], "op": "POP", "path": "7"}, "3039": {"fn": "LeveragedTrading.getPriceDiff", "offset": [7130, 7189], "op": "PUSH2", "path": "7", "value": "0xAFA"}, "3042": {"fn": "LeveragedTrading.getPriceDiff", "offset": [7130, 7189], "op": "JUMP", "path": "7"}, "3043": {"fn": "LeveragedTrading.getPriceDiff", "offset": [7087, 7299], "op": "JUMPDEST", "path": "7"}, "3044": {"fn": "LeveragedTrading.getPriceDiff", "offset": [7236, 7288], "op": "PUSH2", "path": "7", "statement": 52, "value": "0xBDC"}, "3047": {"fn": "LeveragedTrading.getPriceDiff", "offset": [7280, 7287], "op": "PUSH3", "path": "7", "value": "0xF4240"}, "3051": {"fn": "LeveragedTrading.getPriceDiff", "offset": [7236, 7275], "op": "PUSH2", "path": "7", "value": "0xBD6"}, "3054": {"fn": "LeveragedTrading.getPriceDiff", "offset": [7266, 7274], "op": "DUP5", "path": "7"}, "3055": {"fn": "LeveragedTrading.getPriceDiff", "offset": [7236, 7261], "op": "PUSH2", "path": "7", "value": "0x4A6"}, "3058": {"fn": "LeveragedTrading.getPriceDiff", "offset": [7253, 7260], "op": "PUSH3", "path": "7", "value": "0xF4240"}, "3062": {"fn": "LeveragedTrading.getPriceDiff", "offset": [7236, 7248], "op": "PUSH1", "path": "7", "value": "0x7"}, "3064": {"fn": "LeveragedTrading.getPriceDiff", "offset": [7236, 7248], "op": "SLOAD", "path": "7"}, "3065": {"fn": "LeveragedTrading.getPriceDiff", "offset": [7236, 7252], "op": "PUSH2", "path": "7", "value": "0xB8F"}, "3068": {"fn": "LeveragedTrading.getPriceDiff", "offset": [7236, 7252], "op": "SWAP1", "path": "7"}, "3069": {"fn": "LeveragedTrading.getPriceDiff", "offset": [7236, 7261], "op": "SWAP2", "path": "7"}, "3070": {"fn": "LeveragedTrading.getPriceDiff", "offset": [7236, 7261], "op": "SWAP1", "path": "7"}, "3071": {"fn": "LeveragedTrading.getPriceDiff", "offset": [7236, 7261], "op": "PUSH4", "path": "7", "value": "0xFFFFFFFF"}, "3076": {"fn": "LeveragedTrading.getPriceDiff", "offset": [7236, 7261], "op": "AND", "path": "7"}, "3077": {"fn": "LeveragedTrading.getPriceDiff", "jump": "i", "offset": [7236, 7261], "op": "JUMP", "path": "7"}, "3078": {"fn": "LeveragedTrading.L", "offset": [6757, 6982], "op": "JUMPDEST", "path": "7"}, "3079": {"fn": "LeveragedTrading.L", "offset": [6802, 6809], "op": "PUSH1", "path": "7", "value": "0x0"}, "3081": {"fn": "LeveragedTrading.L", "offset": [6802, 6809], "op": "DUP1", "path": "7"}, "3082": {"fn": "LeveragedTrading.L", "offset": [6889, 6894], "op": "PUSH2", "path": "7", "value": "0xC14"}, "3085": {"fn": "LeveragedTrading.L", "offset": [6893, 6894], "op": "DUP4", "path": "7"}, "3086": {"fn": "LeveragedTrading.L", "offset": [6889, 6890], "op": "PUSH1", "path": "7", "value": "0x3"}, "3088": {"fn": "LeveragedTrading.L", "offset": [6889, 6894], "op": "PUSH2", "path": "7", "value": "0x1041"}, "3091": {"fn": "LeveragedTrading.L", "jump": "i", "offset": [6889, 6894], "op": "JUMP", "path": "7"}, "3092": {"fn": "LeveragedTrading.L", "offset": [6889, 6894], "op": "JUMPDEST", "path": "7"}, "3093": {"fn": "LeveragedTrading.L", "offset": [6877, 6884], "op": "PUSH3", "path": "7", "value": "0xF4240"}, "3097": {"fn": "LeveragedTrading.L", "offset": [6868, 6874], "op": "PUSH2", "path": "7", "value": "0xC23"}, "3100": {"fn": "LeveragedTrading.L", "offset": [6873, 6874], "op": "PUSH1", "path": "7", "value": "0x2"}, "3102": {"fn": "LeveragedTrading.L", "offset": [6868, 6869], "op": "DUP7", "path": "7"}, "3103": {"fn": "LeveragedTrading.L", "offset": [6868, 6874], "op": "PUSH2", "path": "7", "value": "0xF70"}, "3106": {"fn": "LeveragedTrading.L", "jump": "i", "offset": [6868, 6874], "op": "JUMP", "path": "7"}, "3107": {"fn": "LeveragedTrading.L", "offset": [6868, 6874], "op": "JUMPDEST", "path": "7"}, "3108": {"fn": "LeveragedTrading.L", "offset": [6868, 6884], "op": "PUSH2", "path": "7", "value": "0xC2D"}, "3111": {"fn": "LeveragedTrading.L", "offset": [6868, 6884], "op": "SWAP2", "path": "7"}, "3112": {"fn": "LeveragedTrading.L", "offset": [6868, 6884], "op": "SWAP1", "path": "7"}, "3113": {"fn": "LeveragedTrading.L", "offset": [6868, 6884], "op": "PUSH2", "path": "7", "value": "0xF0A"}, "3116": {"fn": "LeveragedTrading.L", "jump": "i", "offset": [6868, 6884], "op": "JUMP", "path": "7"}, "3117": {"fn": "LeveragedTrading.L", "offset": [6868, 6884], "op": "JUMPDEST", "path": "7"}, "3118": {"fn": "LeveragedTrading.L", "offset": [6863, 6885], "op": "PUSH2", "path": "7", "value": "0xC38"}, "3121": {"fn": "LeveragedTrading.L", "offset": [6863, 6885], "op": "SWAP1", "path": "7"}, "3122": {"fn": "LeveragedTrading.L", "offset": [6863, 6864], "op": "PUSH1", "path": "7", "value": "0x9"}, "3124": {"fn": "LeveragedTrading.L", "offset": [6863, 6885], "op": "PUSH2", "path": "7", "value": "0x1041"}, "3127": {"fn": "LeveragedTrading.L", "jump": "i", "offset": [6863, 6885], "op": "JUMP", "path": "7"}, "3128": {"fn": "LeveragedTrading.L", "offset": [6863, 6885], "op": "JUMPDEST", "path": "7"}, "3129": {"fn": "LeveragedTrading.L", "offset": [6863, 6894], "op": "PUSH2", "path": "7", "value": "0xC42"}, "3132": {"fn": "LeveragedTrading.L", "offset": [6863, 6894], "op": "SWAP2", "path": "7"}, "3133": {"fn": "LeveragedTrading.L", "offset": [6863, 6894], "op": "SWAP1", "path": "7"}, "3134": {"fn": "LeveragedTrading.L", "offset": [6863, 6894], "op": "PUSH2", "path": "7", "value": "0xEF2"}, "3137": {"fn": "LeveragedTrading.L", "jump": "i", "offset": [6863, 6894], "op": "JUMP", "path": "7"}, "3138": {"fn": "LeveragedTrading.L", "offset": [6863, 6894], "op": "JUMPDEST", "path": "7"}, "3139": {"fn": "LeveragedTrading.L", "offset": [6863, 6904], "op": "PUSH2", "path": "7", "value": "0xC4F"}, "3142": {"fn": "LeveragedTrading.L", "offset": [6863, 6904], "op": "SWAP1", "path": "7"}, "3143": {"fn": "LeveragedTrading.L", "offset": [6897, 6904], "op": "PUSH3", "path": "7", "value": "0xF4240"}, "3147": {"fn": "LeveragedTrading.L", "offset": [6863, 6904], "op": "PUSH2", "path": "7", "value": "0xEF2"}, "3150": {"fn": "LeveragedTrading.L", "jump": "i", "offset": [6863, 6904], "op": "JUMP", "path": "7"}, "3151": {"fn": "LeveragedTrading.L", "offset": [6863, 6904], "op": "JUMPDEST", "path": "7"}, "3152": {"fn": "LeveragedTrading.L", "offset": [6847, 6904], "op": "SWAP1", "path": "7"}, "3153": {"op": "POP"}, "3154": {"fn": "LeveragedTrading.L", "offset": [6928, 6936], "op": "PUSH5", "path": "7", "value": "0xE8D4A51000"}, "3160": {"fn": "LeveragedTrading.L", "offset": [6964, 6975], "op": "PUSH2", "path": "7", "statement": 53, "value": "0xC61"}, "3163": {"fn": "LeveragedTrading.L", "offset": [6847, 6904], "op": "DUP3", "path": "7"}, "3164": {"fn": "LeveragedTrading.L", "offset": [6928, 6936], "op": "DUP3", "path": "7"}, "3165": {"fn": "LeveragedTrading.L", "offset": [6964, 6975], "op": "PUSH2", "path": "7", "value": "0xF0A"}, "3168": {"fn": "LeveragedTrading.L", "jump": "i", "offset": [6964, 6975], "op": "JUMP", "path": "7"}, "3169": {"fn": "LeveragedTrading.L", "offset": [6964, 6975], "op": "JUMPDEST", "path": "7"}, "3170": {"fn": "LeveragedTrading.L", "offset": [6954, 6975], "op": "PUSH2", "path": "7", "value": "0xC6E"}, "3173": {"fn": "LeveragedTrading.L", "offset": [6954, 6975], "op": "SWAP1", "path": "7"}, "3174": {"fn": "LeveragedTrading.L", "offset": [6954, 6961], "op": "PUSH3", "path": "7", "value": "0xF4240"}, "3178": {"fn": "LeveragedTrading.L", "offset": [6954, 6975], "op": "PUSH2", "path": "7", "value": "0x1060"}, "3181": {"fn": "LeveragedTrading.L", "jump": "i", "offset": [6954, 6975], "op": "JUMP", "path": "7"}, "3182": {"fn": "LeveragedTrading.L", "offset": [6954, 6975], "op": "JUMPDEST", "path": "7"}, "3183": {"fn": "LeveragedTrading.L", "offset": [6947, 6975], "op": "SWAP5", "path": "7"}, "3184": {"fn": "LeveragedTrading.L", "offset": [6757, 6982], "op": "SWAP4", "path": "7"}, "3185": {"op": "POP"}, "3186": {"op": "POP"}, "3187": {"op": "POP"}, "3188": {"op": "POP"}, "3189": {"fn": "LeveragedTrading.L", "jump": "o", "offset": [6757, 6982], "op": "JUMP", "path": "7"}, "3190": {"fn": "LeveragedTrading.min", "offset": [6646, 6751], "op": "JUMPDEST", "path": "7"}, "3191": {"fn": "LeveragedTrading.min", "offset": [6704, 6711], "op": "PUSH1", "path": "7", "value": "0x0"}, "3193": {"fn": "LeveragedTrading.min", "offset": [6735, 6736], "op": "DUP2", "path": "7", "statement": 54}, "3194": {"fn": "LeveragedTrading.min", "offset": [6730, 6731], "op": "DUP4", "path": "7"}, "3195": {"fn": "LeveragedTrading.min", "offset": [6730, 6736], "op": "GT", "path": "7"}, "3196": {"branch": 65, "fn": "LeveragedTrading.min", "offset": [6730, 6736], "op": "ISZERO", "path": "7"}, "3197": {"fn": "LeveragedTrading.min", "offset": [6730, 6744], "op": "PUSH2", "path": "7", "value": "0xC86"}, "3200": {"branch": 65, "fn": "LeveragedTrading.min", "offset": [6730, 6744], "op": "JUMPI", "path": "7"}, "3201": {"fn": "LeveragedTrading.min", "offset": [6743, 6744], "op": "DUP2", "path": "7"}, "3202": {"fn": "LeveragedTrading.min", "offset": [6730, 6744], "op": "PUSH2", "path": "7", "value": "0xB28"}, "3205": {"fn": "LeveragedTrading.min", "offset": [6730, 6744], "op": "JUMP", "path": "7"}, "3206": {"fn": "LeveragedTrading.min", "offset": [6730, 6744], "op": "JUMPDEST", "path": "7"}, "3207": {"op": "POP"}, "3208": {"fn": "LeveragedTrading.min", "offset": [6739, 6740], "op": "SWAP1", "path": "7"}, "3209": {"fn": "LeveragedTrading.min", "offset": [6739, 6740], "op": "SWAP2", "path": "7"}, "3210": {"fn": "LeveragedTrading.min", "offset": [6646, 6751], "op": "SWAP1", "path": "7"}, "3211": {"op": "POP"}, "3212": {"fn": "LeveragedTrading.min", "jump": "o", "offset": [6646, 6751], "op": "JUMP", "path": "7"}, "3213": {"op": "JUMPDEST"}, "3214": {"op": "DUP1"}, "3215": {"op": "MLOAD"}, "3216": {"op": "PUSH10", "value": "0xFFFFFFFFFFFFFFFFFFFF"}, "3227": {"op": "DUP2"}, "3228": {"op": "AND"}, "3229": {"op": "DUP2"}, "3230": {"op": "EQ"}, "3231": {"op": "PUSH2", "value": "0xAFA"}, "3234": {"op": "JUMPI"}, "3235": {"op": "PUSH1", "value": "0x0"}, "3237": {"op": "DUP1"}, "3238": {"op": "REVERT"}, "3239": {"op": "JUMPDEST"}, "3240": {"op": "PUSH1", "value": "0x0"}, "3242": {"op": "PUSH1", "value": "0x20"}, "3244": {"op": "DUP3"}, "3245": {"op": "DUP5"}, "3246": {"op": "SUB"}, "3247": {"op": "SLT"}, "3248": {"op": "ISZERO"}, "3249": {"op": "PUSH2", "value": "0xCB8"}, "3252": {"op": "JUMPI"}, "3253": {"op": "DUP1"}, "3254": {"op": "DUP2"}, "3255": {"op": "REVERT"}, "3256": {"op": "JUMPDEST"}, "3257": {"op": "DUP2"}, "3258": {"op": "CALLDATALOAD"}, "3259": {"op": "PUSH1", "value": "0x1"}, "3261": {"op": "PUSH1", "value": "0x1"}, "3263": {"op": "PUSH1", "value": "0xA0"}, "3265": {"op": "SHL"}, "3266": {"op": "SUB"}, "3267": {"op": "DUP2"}, "3268": {"op": "AND"}, "3269": {"op": "DUP2"}, "3270": {"op": "EQ"}, "3271": {"op": "PUSH2", "value": "0xB28"}, "3274": {"op": "JUMPI"}, "3275": {"op": "DUP2"}, "3276": {"op": "DUP3"}, "3277": {"op": "REVERT"}, "3278": {"op": "JUMPDEST"}, "3279": {"op": "PUSH1", "value": "0x0"}, "3281": {"op": "PUSH1", "value": "0x20"}, "3283": {"op": "DUP3"}, "3284": {"op": "DUP5"}, "3285": {"op": "SUB"}, "3286": {"op": "SLT"}, "3287": {"op": "ISZERO"}, "3288": {"op": "PUSH2", "value": "0xCDF"}, "3291": {"op": "JUMPI"}, "3292": {"op": "DUP1"}, "3293": {"op": "DUP2"}, "3294": {"op": "REVERT"}, "3295": {"op": "JUMPDEST"}, "3296": {"op": "DUP2"}, "3297": {"op": "MLOAD"}, "3298": {"op": "DUP1"}, "3299": {"op": "ISZERO"}, "3300": {"op": "ISZERO"}, "3301": {"op": "DUP2"}, "3302": {"op": "EQ"}, "3303": {"op": "PUSH2", "value": "0xB28"}, "3306": {"op": "JUMPI"}, "3307": {"op": "DUP2"}, "3308": {"op": "DUP3"}, "3309": {"op": "REVERT"}, "3310": {"op": "JUMPDEST"}, "3311": {"op": "PUSH1", "value": "0x0"}, "3313": {"op": "PUSH1", "value": "0x20"}, "3315": {"op": "DUP3"}, "3316": {"op": "DUP5"}, "3317": {"op": "SUB"}, "3318": {"op": "SLT"}, "3319": {"op": "ISZERO"}, "3320": {"op": "PUSH2", "value": "0xCFF"}, "3323": {"op": "JUMPI"}, "3324": {"op": "DUP1"}, "3325": {"op": "DUP2"}, "3326": {"op": "REVERT"}, "3327": {"op": "JUMPDEST"}, "3328": {"op": "POP"}, "3329": {"op": "CALLDATALOAD"}, "3330": {"op": "SWAP2"}, "3331": {"op": "SWAP1"}, "3332": {"op": "POP"}, "3333": {"jump": "o", "op": "JUMP"}, "3334": {"op": "JUMPDEST"}, "3335": {"op": "PUSH1", "value": "0x0"}, "3337": {"op": "PUSH1", "value": "0x20"}, "3339": {"op": "DUP3"}, "3340": {"op": "DUP5"}, "3341": {"op": "SUB"}, "3342": {"op": "SLT"}, "3343": {"op": "ISZERO"}, "3344": {"op": "PUSH2", "value": "0xD17"}, "3347": {"op": "JUMPI"}, "3348": {"op": "DUP1"}, "3349": {"op": "DUP2"}, "3350": {"op": "REVERT"}, "3351": {"op": "JUMPDEST"}, "3352": {"op": "POP"}, "3353": {"op": "MLOAD"}, "3354": {"op": "SWAP2"}, "3355": {"op": "SWAP1"}, "3356": {"op": "POP"}, "3357": {"jump": "o", "op": "JUMP"}, "3358": {"op": "JUMPDEST"}, "3359": {"op": "PUSH1", "value": "0x0"}, "3361": {"op": "DUP1"}, "3362": {"op": "PUSH1", "value": "0x0"}, "3364": {"op": "DUP1"}, "3365": {"op": "PUSH1", "value": "0x0"}, "3367": {"op": "PUSH1", "value": "0xA0"}, "3369": {"op": "DUP7"}, "3370": {"op": "DUP9"}, "3371": {"op": "SUB"}, "3372": {"op": "SLT"}, "3373": {"op": "ISZERO"}, "3374": {"op": "PUSH2", "value": "0xD35"}, "3377": {"op": "JUMPI"}, "3378": {"op": "DUP1"}, "3379": {"op": "DUP2"}, "3380": {"op": "REVERT"}, "3381": {"op": "JUMPDEST"}, "3382": {"op": "PUSH2", "value": "0xD3E"}, "3385": {"op": "DUP7"}, "3386": {"op": "PUSH2", "value": "0xC8D"}, "3389": {"jump": "i", "op": "JUMP"}, "3390": {"op": "JUMPDEST"}, "3391": {"op": "SWAP5"}, "3392": {"op": "POP"}, "3393": {"op": "PUSH1", "value": "0x20"}, "3395": {"op": "DUP7"}, "3396": {"op": "ADD"}, "3397": {"op": "MLOAD"}, "3398": {"op": "SWAP4"}, "3399": {"op": "POP"}, "3400": {"op": "PUSH1", "value": "0x40"}, "3402": {"op": "DUP7"}, "3403": {"op": "ADD"}, "3404": {"op": "MLOAD"}, "3405": {"op": "SWAP3"}, "3406": {"op": "POP"}, "3407": {"op": "PUSH1", "value": "0x60"}, "3409": {"op": "DUP7"}, "3410": {"op": "ADD"}, "3411": {"op": "MLOAD"}, "3412": {"op": "SWAP2"}, "3413": {"op": "POP"}, "3414": {"op": "PUSH2", "value": "0xD61"}, "3417": {"op": "PUSH1", "value": "0x80"}, "3419": {"op": "DUP8"}, "3420": {"op": "ADD"}, "3421": {"op": "PUSH2", "value": "0xC8D"}, "3424": {"jump": "i", "op": "JUMP"}, "3425": {"op": "JUMPDEST"}, "3426": {"op": "SWAP1"}, "3427": {"op": "POP"}, "3428": {"op": "SWAP3"}, "3429": {"op": "SWAP6"}, "3430": {"op": "POP"}, "3431": {"op": "SWAP3"}, "3432": {"op": "SWAP6"}, "3433": {"op": "SWAP1"}, "3434": {"op": "SWAP4"}, "3435": {"op": "POP"}, "3436": {"jump": "o", "op": "JUMP"}, "3437": {"op": "JUMPDEST"}, "3438": {"op": "PUSH1", "value": "0x1"}, "3440": {"op": "PUSH1", "value": "0x1"}, "3442": {"op": "PUSH1", "value": "0xA0"}, "3444": {"op": "SHL"}, "3445": {"op": "SUB"}, "3446": {"op": "SWAP2"}, "3447": {"op": "SWAP1"}, "3448": {"op": "SWAP2"}, "3449": {"op": "AND"}, "3450": {"op": "DUP2"}, "3451": {"op": "MSTORE"}, "3452": {"op": "PUSH1", "value": "0x20"}, "3454": {"op": "ADD"}, "3455": {"op": "SWAP1"}, "3456": {"jump": "o", "op": "JUMP"}, "3457": {"op": "JUMPDEST"}, "3458": {"op": "PUSH1", "value": "0x1"}, "3460": {"op": "PUSH1", "value": "0x1"}, "3462": {"op": "PUSH1", "value": "0xA0"}, "3464": {"op": "SHL"}, "3465": {"op": "SUB"}, "3466": {"op": "SWAP4"}, "3467": {"op": "DUP5"}, "3468": {"op": "AND"}, "3469": {"op": "DUP2"}, "3470": {"op": "MSTORE"}, "3471": {"op": "SWAP2"}, "3472": {"op": "SWAP1"}, "3473": {"op": "SWAP3"}, "3474": {"op": "AND"}, "3475": {"op": "PUSH1", "value": "0x20"}, "3477": {"op": "DUP3"}, "3478": {"op": "ADD"}, "3479": {"op": "MSTORE"}, "3480": {"op": "PUSH1", "value": "0x40"}, "3482": {"op": "DUP2"}, "3483": {"op": "ADD"}, "3484": {"op": "SWAP2"}, "3485": {"op": "SWAP1"}, "3486": {"op": "SWAP2"}, "3487": {"op": "MSTORE"}, "3488": {"op": "PUSH1", "value": "0x60"}, "3490": {"op": "ADD"}, "3491": {"op": "SWAP1"}, "3492": {"jump": "o", "op": "JUMP"}, "3493": {"op": "JUMPDEST"}, "3494": {"op": "PUSH1", "value": "0x1"}, "3496": {"op": "PUSH1", "value": "0x1"}, "3498": {"op": "PUSH1", "value": "0xA0"}, "3500": {"op": "SHL"}, "3501": {"op": "SUB"}, "3502": {"op": "SWAP3"}, "3503": {"op": "SWAP1"}, "3504": {"op": "SWAP3"}, "3505": {"op": "AND"}, "3506": {"op": "DUP3"}, "3507": {"op": "MSTORE"}, "3508": {"op": "PUSH1", "value": "0x20"}, "3510": {"op": "DUP3"}, "3511": {"op": "ADD"}, "3512": {"op": "MSTORE"}, "3513": {"op": "PUSH1", "value": "0x40"}, "3515": {"op": "ADD"}, "3516": {"op": "SWAP1"}, "3517": {"jump": "o", "op": "JUMP"}, "3518": {"op": "JUMPDEST"}, "3519": {"op": "SWAP1"}, "3520": {"op": "ISZERO"}, "3521": {"op": "ISZERO"}, "3522": {"op": "DUP2"}, "3523": {"op": "MSTORE"}, "3524": {"op": "PUSH1", "value": "0x20"}, "3526": {"op": "ADD"}, "3527": {"op": "SWAP1"}, "3528": {"jump": "o", "op": "JUMP"}, "3529": {"op": "JUMPDEST"}, "3530": {"op": "PUSH1", "value": "0x20"}, "3532": {"op": "DUP1"}, "3533": {"op": "DUP3"}, "3534": {"op": "MSTORE"}, "3535": {"op": "PUSH1", "value": "0x19"}, "3537": {"op": "SWAP1"}, "3538": {"op": "DUP3"}, "3539": {"op": "ADD"}, "3540": {"op": "MSTORE"}, "3541": {"op": "PUSH32", "value": "0x4E6F7420656E6F756768207573646320617661696C61626C6500000000000000"}, "3574": {"op": "PUSH1", "value": "0x40"}, "3576": {"op": "DUP3"}, "3577": {"op": "ADD"}, "3578": {"op": "MSTORE"}, "3579": {"op": "PUSH1", "value": "0x60"}, "3581": {"op": "ADD"}, "3582": {"op": "SWAP1"}, "3583": {"jump": "o", "op": "JUMP"}, "3584": {"op": "JUMPDEST"}, "3585": {"op": "PUSH1", "value": "0x20"}, "3587": {"op": "DUP1"}, "3588": {"op": "DUP3"}, "3589": {"op": "MSTORE"}, "3590": {"op": "PUSH1", "value": "0x26"}, "3592": {"op": "SWAP1"}, "3593": {"op": "DUP3"}, "3594": {"op": "ADD"}, "3595": {"op": "MSTORE"}, "3596": {"op": "PUSH32", "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"}, "3629": {"op": "PUSH1", "value": "0x40"}, "3631": {"op": "DUP3"}, "3632": {"op": "ADD"}, "3633": {"op": "MSTORE"}, "3634": {"op": "PUSH6", "value": "0x646472657373"}, "3641": {"op": "PUSH1", "value": "0xD0"}, "3643": {"op": "SHL"}, "3644": {"op": "PUSH1", "value": "0x60"}, "3646": {"op": "DUP3"}, "3647": {"op": "ADD"}, "3648": {"op": "MSTORE"}, "3649": {"op": "PUSH1", "value": "0x80"}, "3651": {"op": "ADD"}, "3652": {"op": "SWAP1"}, "3653": {"jump": "o", "op": "JUMP"}, "3654": {"op": "JUMPDEST"}, "3655": {"op": "PUSH1", "value": "0x20"}, "3657": {"op": "DUP1"}, "3658": {"op": "DUP3"}, "3659": {"op": "MSTORE"}, "3660": {"op": "PUSH1", "value": "0x1F"}, "3662": {"op": "SWAP1"}, "3663": {"op": "DUP3"}, "3664": {"op": "ADD"}, "3665": {"op": "MSTORE"}, "3666": {"op": "PUSH32", "value": "0x54686520706F6F6C2077617320616C726561647920696E697469617465642E00"}, "3699": {"op": "PUSH1", "value": "0x40"}, "3701": {"op": "DUP3"}, "3702": {"op": "ADD"}, "3703": {"op": "MSTORE"}, "3704": {"op": "PUSH1", "value": "0x60"}, "3706": {"op": "ADD"}, "3707": {"op": "SWAP1"}, "3708": {"jump": "o", "op": "JUMP"}, "3709": {"op": "JUMPDEST"}, "3710": {"op": "PUSH1", "value": "0x20"}, "3712": {"op": "DUP1"}, "3713": {"op": "DUP3"}, "3714": {"op": "MSTORE"}, "3715": {"op": "DUP2"}, "3716": {"op": "DUP2"}, "3717": {"op": "ADD"}, "3718": {"op": "MSTORE"}, "3719": {"op": "PUSH32", "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"}, "3752": {"op": "PUSH1", "value": "0x40"}, "3754": {"op": "DUP3"}, "3755": {"op": "ADD"}, "3756": {"op": "MSTORE"}, "3757": {"op": "PUSH1", "value": "0x60"}, "3759": {"op": "ADD"}, "3760": {"op": "SWAP1"}, "3761": {"jump": "o", "op": "JUMP"}, "3762": {"op": "JUMPDEST"}, "3763": {"op": "PUSH1", "value": "0x20"}, "3765": {"op": "DUP1"}, "3766": {"op": "DUP3"}, "3767": {"op": "MSTORE"}, "3768": {"op": "PUSH1", "value": "0x1B"}, "3770": {"op": "SWAP1"}, "3771": {"op": "DUP3"}, "3772": {"op": "ADD"}, "3773": {"op": "MSTORE"}, "3774": {"op": "PUSH32", "value": "0x596F7520646F6E2774206861766520656E6F75676820555344432E0000000000"}, "3807": {"op": "PUSH1", "value": "0x40"}, "3809": {"op": "DUP3"}, "3810": {"op": "ADD"}, "3811": {"op": "MSTORE"}, "3812": {"op": "PUSH1", "value": "0x60"}, "3814": {"op": "ADD"}, "3815": {"op": "SWAP1"}, "3816": {"jump": "o", "op": "JUMP"}, "3817": {"op": "JUMPDEST"}, "3818": {"op": "SWAP1"}, "3819": {"op": "DUP2"}, "3820": {"op": "MSTORE"}, "3821": {"op": "PUSH1", "value": "0x20"}, "3823": {"op": "ADD"}, "3824": {"op": "SWAP1"}, "3825": {"jump": "o", "op": "JUMP"}, "3826": {"op": "JUMPDEST"}, "3827": {"op": "PUSH1", "value": "0x0"}, "3829": {"op": "DUP3"}, "3830": {"op": "NOT"}, "3831": {"op": "DUP3"}, "3832": {"op": "GT"}, "3833": {"op": "ISZERO"}, "3834": {"op": "PUSH2", "value": "0xF05"}, "3837": {"op": "JUMPI"}, "3838": {"op": "PUSH2", "value": "0xF05"}, "3841": {"op": "PUSH2", "value": "0x1077"}, "3844": {"jump": "i", "op": "JUMP"}, "3845": {"op": "JUMPDEST"}, "3846": {"op": "POP"}, "3847": {"op": "ADD"}, "3848": {"op": "SWAP1"}, "3849": {"jump": "o", "op": "JUMP"}, "3850": {"op": "JUMPDEST"}, "3851": {"op": "PUSH1", "value": "0x0"}, "3853": {"op": "DUP3"}, "3854": {"op": "PUSH2", "value": "0xF25"}, "3857": {"op": "JUMPI"}, "3858": {"op": "PUSH4", "value": "0x4E487B71"}, "3863": {"op": "PUSH1", "value": "0xE0"}, "3865": {"op": "SHL"}, "3866": {"op": "DUP2"}, "3867": {"op": "MSTORE"}, "3868": {"op": "PUSH1", "value": "0x12"}, "3870": {"op": "PUSH1", "value": "0x4"}, "3872": {"op": "MSTORE"}, "3873": {"op": "PUSH1", "value": "0x24"}, "3875": {"op": "DUP2"}, "3876": {"op": "REVERT"}, "3877": {"op": "JUMPDEST"}, "3878": {"op": "POP"}, "3879": {"op": "DIV"}, "3880": {"op": "SWAP1"}, "3881": {"jump": "o", "op": "JUMP"}, "3882": {"op": "JUMPDEST"}, "3883": {"op": "DUP1"}, "3884": {"op": "DUP3"}, "3885": {"op": "JUMPDEST"}, "3886": {"op": "PUSH1", "value": "0x1"}, "3888": {"op": "DUP1"}, "3889": {"op": "DUP7"}, "3890": {"op": "GT"}, "3891": {"op": "PUSH2", "value": "0xF3C"}, "3894": {"op": "JUMPI"}, "3895": {"op": "POP"}, "3896": {"op": "PUSH2", "value": "0xF67"}, "3899": {"op": "JUMP"}, "3900": {"op": "JUMPDEST"}, "3901": {"op": "DUP2"}, "3902": {"op": "DUP8"}, "3903": {"op": "DIV"}, "3904": {"op": "DUP3"}, "3905": {"op": "GT"}, "3906": {"op": "ISZERO"}, "3907": {"op": "PUSH2", "value": "0xF4E"}, "3910": {"op": "JUMPI"}, "3911": {"op": "PUSH2", "value": "0xF4E"}, "3914": {"op": "PUSH2", "value": "0x1077"}, "3917": {"jump": "i", "op": "JUMP"}, "3918": {"op": "JUMPDEST"}, "3919": {"op": "DUP1"}, "3920": {"op": "DUP7"}, "3921": {"op": "AND"}, "3922": {"op": "ISZERO"}, "3923": {"op": "PUSH2", "value": "0xF5B"}, "3926": {"op": "JUMPI"}, "3927": {"op": "SWAP2"}, "3928": {"op": "DUP2"}, "3929": {"op": "MUL"}, "3930": {"op": "SWAP2"}, "3931": {"op": "JUMPDEST"}, "3932": {"op": "SWAP5"}, "3933": {"op": "SWAP1"}, "3934": {"op": "SWAP5"}, "3935": {"op": "SHR"}, "3936": {"op": "SWAP4"}, "3937": {"op": "DUP1"}, "3938": {"op": "MUL"}, "3939": {"op": "PUSH2", "value": "0xF2D"}, "3942": {"op": "JUMP"}, "3943": {"op": "JUMPDEST"}, "3944": {"op": "SWAP5"}, "3945": {"op": "POP"}, "3946": {"op": "SWAP5"}, "3947": {"op": "SWAP3"}, "3948": {"op": "POP"}, "3949": {"op": "POP"}, "3950": {"op": "POP"}, "3951": {"jump": "o", "op": "JUMP"}, "3952": {"op": "JUMPDEST"}, "3953": {"op": "PUSH1", "value": "0x0"}, "3955": {"op": "PUSH2", "value": "0xB28"}, "3958": {"op": "PUSH1", "value": "0x0"}, "3960": {"op": "NOT"}, "3961": {"op": "PUSH1", "value": "0xFF"}, "3963": {"op": "DUP6"}, "3964": {"op": "AND"}, "3965": {"op": "DUP5"}, "3966": {"op": "PUSH1", "value": "0x0"}, "3968": {"op": "DUP3"}, "3969": {"op": "PUSH2", "value": "0xF8C"}, "3972": {"op": "JUMPI"}, "3973": {"op": "POP"}, "3974": {"op": "PUSH1", "value": "0x1"}, "3976": {"op": "PUSH2", "value": "0xB28"}, "3979": {"op": "JUMP"}, "3980": {"op": "JUMPDEST"}, "3981": {"op": "DUP2"}, "3982": {"op": "PUSH2", "value": "0xF99"}, "3985": {"op": "JUMPI"}, "3986": {"op": "POP"}, "3987": {"op": "PUSH1", "value": "0x0"}, "3989": {"op": "PUSH2", "value": "0xB28"}, "3992": {"op": "JUMP"}, "3993": {"op": "JUMPDEST"}, "3994": {"op": "DUP2"}, "3995": {"op": "PUSH1", "value": "0x1"}, "3997": {"op": "DUP2"}, "3998": {"op": "EQ"}, "3999": {"op": "PUSH2", "value": "0xFAF"}, "4002": {"op": "JUMPI"}, "4003": {"op": "PUSH1", "value": "0x2"}, "4005": {"op": "DUP2"}, "4006": {"op": "EQ"}, "4007": {"op": "PUSH2", "value": "0xFB9"}, "4010": {"op": "JUMPI"}, "4011": {"op": "PUSH2", "value": "0xFE6"}, "4014": {"op": "JUMP"}, "4015": {"op": "JUMPDEST"}, "4016": {"op": "PUSH1", "value": "0x1"}, "4018": {"op": "SWAP2"}, "4019": {"op": "POP"}, "4020": {"op": "POP"}, "4021": {"op": "PUSH2", "value": "0xB28"}, "4024": {"op": "JUMP"}, "4025": {"op": "JUMPDEST"}, "4026": {"op": "PUSH1", "value": "0xFF"}, "4028": {"op": "DUP5"}, "4029": {"op": "GT"}, "4030": {"op": "ISZERO"}, "4031": {"op": "PUSH2", "value": "0xFCA"}, "4034": {"op": "JUMPI"}, "4035": {"op": "PUSH2", "value": "0xFCA"}, "4038": {"op": "PUSH2", "value": "0x1077"}, "4041": {"jump": "i", "op": "JUMP"}, "4042": {"op": "JUMPDEST"}, "4043": {"op": "PUSH1", "value": "0x1"}, "4045": {"op": "DUP5"}, "4046": {"op": "SHL"}, "4047": {"op": "SWAP2"}, "4048": {"op": "POP"}, "4049": {"op": "DUP5"}, "4050": {"op": "DUP3"}, "4051": {"op": "GT"}, "4052": {"op": "ISZERO"}, "4053": {"op": "PUSH2", "value": "0xFE0"}, "4056": {"op": "JUMPI"}, "4057": {"op": "PUSH2", "value": "0xFE0"}, "4060": {"op": "PUSH2", "value": "0x1077"}, "4063": {"jump": "i", "op": "JUMP"}, "4064": {"op": "JUMPDEST"}, "4065": {"op": "POP"}, "4066": {"op": "PUSH2", "value": "0xB28"}, "4069": {"op": "JUMP"}, "4070": {"op": "JUMPDEST"}, "4071": {"op": "POP"}, "4072": {"op": "PUSH1", "value": "0x20"}, "4074": {"op": "DUP4"}, "4075": {"op": "LT"}, "4076": {"op": "PUSH2", "value": "0x133"}, "4079": {"op": "DUP4"}, "4080": {"op": "LT"}, "4081": {"op": "AND"}, "4082": {"op": "PUSH1", "value": "0x4E"}, "4084": {"op": "DUP5"}, "4085": {"op": "LT"}, "4086": {"op": "PUSH1", "value": "0xB"}, "4088": {"op": "DUP5"}, "4089": {"op": "LT"}, "4090": {"op": "AND"}, "4091": {"op": "OR"}, "4092": {"op": "ISZERO"}, "4093": {"op": "PUSH2", "value": "0x1019"}, "4096": {"op": "JUMPI"}, "4097": {"op": "POP"}, "4098": {"op": "DUP2"}, "4099": {"op": "DUP2"}, "4100": {"op": "EXP"}, "4101": {"op": "DUP4"}, "4102": {"op": "DUP2"}, "4103": {"op": "GT"}, "4104": {"op": "ISZERO"}, "4105": {"op": "PUSH2", "value": "0x1014"}, "4108": {"op": "JUMPI"}, "4109": {"op": "PUSH2", "value": "0x1014"}, "4112": {"op": "PUSH2", "value": "0x1077"}, "4115": {"jump": "i", "op": "JUMP"}, "4116": {"op": "JUMPDEST"}, "4117": {"op": "PUSH2", "value": "0xB28"}, "4120": {"op": "JUMP"}, "4121": {"op": "JUMPDEST"}, "4122": {"op": "PUSH2", "value": "0x1026"}, "4125": {"op": "DUP5"}, "4126": {"op": "DUP5"}, "4127": {"op": "DUP5"}, "4128": {"op": "PUSH1", "value": "0x1"}, "4130": {"op": "PUSH2", "value": "0xF2A"}, "4133": {"jump": "i", "op": "JUMP"}, "4134": {"op": "JUMPDEST"}, "4135": {"op": "DUP1"}, "4136": {"op": "DUP7"}, "4137": {"op": "DIV"}, "4138": {"op": "DUP3"}, "4139": {"op": "GT"}, "4140": {"op": "ISZERO"}, "4141": {"op": "PUSH2", "value": "0x1038"}, "4144": {"op": "JUMPI"}, "4145": {"op": "PUSH2", "value": "0x1038"}, "4148": {"op": "PUSH2", "value": "0x1077"}, "4151": {"jump": "i", "op": "JUMP"}, "4152": {"op": "JUMPDEST"}, "4153": {"op": "MUL"}, "4154": {"op": "SWAP5"}, "4155": {"op": "SWAP4"}, "4156": {"op": "POP"}, "4157": {"op": "POP"}, "4158": {"op": "POP"}, "4159": {"op": "POP"}, "4160": {"jump": "o", "op": "JUMP"}, "4161": {"op": "JUMPDEST"}, "4162": {"op": "PUSH1", "value": "0x0"}, "4164": {"op": "DUP2"}, "4165": {"op": "PUSH1", "value": "0x0"}, "4167": {"op": "NOT"}, "4168": {"op": "DIV"}, "4169": {"op": "DUP4"}, "4170": {"op": "GT"}, "4171": {"op": "DUP3"}, "4172": {"op": "ISZERO"}, "4173": {"op": "ISZERO"}, "4174": {"op": "AND"}, "4175": {"op": "ISZERO"}, "4176": {"op": "PUSH2", "value": "0x105B"}, "4179": {"op": "JUMPI"}, "4180": {"op": "PUSH2", "value": "0x105B"}, "4183": {"op": "PUSH2", "value": "0x1077"}, "4186": {"jump": "i", "op": "JUMP"}, "4187": {"op": "JUMPDEST"}, "4188": {"op": "POP"}, "4189": {"op": "MUL"}, "4190": {"op": "SWAP1"}, "4191": {"jump": "o", "op": "JUMP"}, "4192": {"op": "JUMPDEST"}, "4193": {"op": "PUSH1", "value": "0x0"}, "4195": {"op": "DUP3"}, "4196": {"op": "DUP3"}, "4197": {"op": "LT"}, "4198": {"op": "ISZERO"}, "4199": {"op": "PUSH2", "value": "0x1072"}, "4202": {"op": "JUMPI"}, "4203": {"op": "PUSH2", "value": "0x1072"}, "4206": {"op": "PUSH2", "value": "0x1077"}, "4209": {"jump": "i", "op": "JUMP"}, "4210": {"op": "JUMPDEST"}, "4211": {"op": "POP"}, "4212": {"op": "SUB"}, "4213": {"op": "SWAP1"}, "4214": {"jump": "o", "op": "JUMP"}, "4215": {"op": "JUMPDEST"}, "4216": {"op": "PUSH4", "value": "0x4E487B71"}, "4221": {"op": "PUSH1", "value": "0xE0"}, "4223": {"op": "SHL"}, "4224": {"op": "PUSH1", "value": "0x0"}, "4226": {"op": "MSTORE"}, "4227": {"op": "PUSH1", "value": "0x11"}, "4229": {"op": "PUSH1", "value": "0x4"}, "4231": {"op": "MSTORE"}, "4232": {"op": "PUSH1", "value": "0x24"}, "4234": {"op": "PUSH1", "value": "0x0"}, "4236": {"op": "REVERT"}}, "sha1": "0f3d638418f8a3af66cc8fae0874533772fae681", "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {ERC20} from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n\ninterface IERC20 {\n    function transfer(address recipient, uint256 amount) external returns (bool);\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n    function approve(address spender, uint256 amount) external returns (bool);\n}\n\ncontract BTCUP is ERC20 {\n    constructor() ERC20(\"Bitcoin Up\", \"BTCUP\") {\n    }\n\n    function mint(uint256 quantity) public {\n        _mint(tx.origin, quantity);\n    }\n\n    function burn(uint256 quantity) public {\n        _burn(tx.origin, quantity);\n    }\n\n    function decimals() public view override returns (uint8) {\n        return 6;\n    }\n}\n\ncontract BTCDOWN is ERC20 {\n    constructor() ERC20(\"Bitcoin Down\", \"BTCDOWN\") {\n    }\n\n    function mint(uint256 quantity) public {\n        _mint(tx.origin, quantity);\n    }\n\n    function burn(uint256 quantity) public {\n        _burn(tx.origin, quantity);\n    }\n\n    function decimals() public view override returns (uint8) {\n        return 6;\n    }\n}\n\ncontract LeveragedTrading is Ownable {\n    using SafeMath for uint256;\n\n    uint256 public priceBtcUp = 10 ** 6;\n    uint256 public priceBtcDown = 10 ** 6;        // 6 decimals\n\n    uint256 public collateralBtcUp = 0;          //6 decimals\n    uint256 public collateralBtcDown = 0;\n\n    uint256 public amountBtcUp = 0;           // 6 decimals\n    uint256 public amountBtcDown = 0;         // 6 decimals\n\n    uint256 public lastBtcPrice = 0;       // 8 decimals, chainlink conventions\n\n    bool public poolIsInitiated = false;\n\n    address addressUsdc = 0xb7a4F3E9097C08dA09517b5aB877F7a917224ede;  // <- Kovan  //0xeb8f08a975Ab53E34D8a0330E0D34de942C95926;\n    address addressBtcUSDFeed =  0x6135b13325bfC4B00278B4abC5e20bbce2D6580e; // <- Kovan          // 0xECe365B379E1dD183B20fc5f022230C044d51404;\n\n    BTCUP btcUp = new BTCUP();\n    BTCDOWN btcDown = new BTCDOWN();\n\n\n    function initiatePool(uint256 amountUsdc) public onlyOwner {\n        require(!poolIsInitiated, \"The pool was already initiated.\");\n\n        issueBtcUp(amountUsdc.div(2));\n        issueBtcDown(amountUsdc.div(2));\n\n        poolIsInitiated = true;\n    }\n\n    function issueBtcUp(uint256 amountUsdc) public {\n        rebalanceLeveragedTokens();\n        \n        priceBtcUp = getBtcUpPrice();\n        uint256 amountLeveragedTokens = amountUsdc.mul(10 ** 6).div(priceBtcUp);\n\n        btcUp.mint(amountLeveragedTokens);\n        amountBtcUp = amountBtcUp.add(amountLeveragedTokens);\n        collateralBtcUp = collateralBtcUp.add(amountUsdc);\n\n        IERC20 usdc = IERC20(addressUsdc);\n        require(usdc.transferFrom(msg.sender, address(this), amountUsdc), \"You don't have enough USDC.\");\n    }\n\n    function issueBtcDown(uint256 amountUsdc) public {\n        rebalanceLeveragedTokens();\n        \n        priceBtcDown = getBtcDownPrice();\n        uint256 amountLeveragedTokens = amountUsdc.mul(10 ** 6).div(priceBtcDown);\n\n        btcDown.mint(amountLeveragedTokens);\n        amountBtcDown = amountBtcDown.add(amountLeveragedTokens);\n        collateralBtcDown = collateralBtcDown.add(amountUsdc);\n\n        IERC20 usdc = IERC20(addressUsdc);\n        require(usdc.transferFrom(msg.sender, address(this), amountUsdc), \"You don't have enough USDC.\");\n    }\n\n    function redeemBtcUp(uint256 amountLeveragedTokens) public {\n        rebalanceLeveragedTokens();\n        btcUp.burn(amountLeveragedTokens);\n\n        priceBtcUp = getBtcUpPrice();\n        uint256 amountUsdc = amountLeveragedTokens.mul(priceBtcUp).div(10 ** 6);\n\n        amountBtcUp = amountBtcUp.sub(amountLeveragedTokens);\n        collateralBtcUp = collateralBtcUp.sub(amountUsdc);\n\n        IERC20 usdc = IERC20(addressUsdc);\n        require(usdc.transfer(msg.sender, amountUsdc), \"Not enough usdc available\");\n    }\n\n    function redeemBtcDown(uint256 amountLeveragedTokens) public {\n        rebalanceLeveragedTokens();\n        btcDown.burn(amountLeveragedTokens);\n\n        priceBtcDown = getBtcDownPrice();\n        uint256 amountUsdc = amountLeveragedTokens.mul(priceBtcDown).div(10 ** 6);\n        \n        amountBtcDown = amountBtcDown.sub(amountLeveragedTokens);\n        collateralBtcDown = collateralBtcDown.sub(amountUsdc);\n\n        IERC20 usdc = IERC20(addressUsdc);\n        require(usdc.transfer(msg.sender,  amountUsdc), \"Not enough usdc available\");\n\n    }\n\n    function rebalanceLeveragedTokens() public {\n        uint256 btcPrice = getBtcPrice();\n        if ((collateralBtcUp > 0) && (collateralBtcDown > 0)) {\n            uint256 rebalanceAmount = getRebalanceAmount(btcPrice);\n            if (getSign(btcPrice) > 0) {\n                collateralBtcUp = collateralBtcUp.add(rebalanceAmount);\n                collateralBtcDown = collateralBtcDown.sub(rebalanceAmount);\n            }\n\n            else {\n                collateralBtcUp = collateralBtcUp.sub(rebalanceAmount);\n                collateralBtcDown = collateralBtcDown.add(rebalanceAmount);\n            }\n\n        }\n\n        lastBtcPrice = btcPrice;\n    }\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    function getSign(uint256 btcPrice) internal view returns (int256){\n        if (btcPrice > lastBtcPrice) {\n            return 1;\n        }\n        else {\n            return -1;\n        }\n    }\n \n    function getRebalanceAmount(uint256 priceBtc) internal view returns (uint256){\n        uint256 priceDiff = getPriceDiff(priceBtc);\n\n        return min(collateralBtcUp, collateralBtcDown).mul(L(priceDiff)).div(10 ** 6);\n    }\n\n// getBtcUpPrice() 6 decimals\n    function getBtcUpPrice() public view returns (uint256) {\n        return amountBtcUp == 0 ?  priceBtcUp : collateralBtcUp.mul(10 ** 6).div(amountBtcUp);\n    }\n\n// getBtcDownPrice() 6 decimals\n    function getBtcDownPrice() public view returns (uint256) {//6 decimals\n        return amountBtcDown == 0 ?  priceBtcDown : collateralBtcDown.mul(10 ** 6).div(amountBtcDown);\n    }\n\n// get the price of our asset with 8 decimals\n    function getBtcPrice() public view returns (uint256) {\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(addressBtcUSDFeed);\n        (,int256 answer,,,) = priceFeed.latestRoundData();\n\n         return uint256(answer);             // we call chainlink oracle to get the price of the asset\n         \n    }\n    \n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a <= b ? a : b;\n    }\n\n    function L(uint256 x) internal pure returns (uint256) {            //6  decimals\n\n        uint256 denom = 9 * (x ** 2 / 10 ** 6)  + 3 * x + 10 ** 6;\n        uint256 num = 10 ** 12;\n\n        return 10 ** 6 - num / denom;\n    }\n\n    function getPriceDiff(uint256 btcPrice) internal view returns (uint256) {     //6 decimals\n        if (btcPrice > lastBtcPrice) {\n            return btcPrice.mul(10 ** 6).div(lastBtcPrice).sub(10 ** 6);\n        }\n\n        else {\n            return lastBtcPrice.mul(10 ** 6).div(btcPrice).sub(10 ** 6);\n        }\n\n    }\n\n    function getBtcupBalance() public view returns(uint256) {\n        return btcUp.balanceOf(msg.sender);\n    }\n\n    function getBtcdownBalance() public view returns(uint256) {\n        return btcDown.balanceOf(msg.sender);\n    }\n\n}\n\n", "sourceMap": "1303:6236:7:-:0;;;;;1407:7;1379:35;;;;1420:37;;-1:-1:-1;1485:34:7;;;;1547:36;;;;1590:30;;;;1650:32;;;;1711:31;;1792:35;;;1834:64;-1:-1:-1;;;;;;1834:64:7;;;;;;1964:71;;;-1:-1:-1;;;;;;1964:71:7;1993:42;1964:71;;;2124:11;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2110:25:7;;;-1:-1:-1;;;;;;2110:25:7;-1:-1:-1;;;;;2110:25:7;;;;;;;;;;2159:13;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2141:31:7;;;-1:-1:-1;;;;;;2141:31:7;-1:-1:-1;;;;;2141:31:7;;;;;;;;;;1303:6236;;;;;;;;;-1:-1:-1;867:23:0;877:12;:10;:12::i;:::-;867:9;:23::i;:::-;1303:6236:7;;586:96:4;665:10;586:96;:::o;2041:169:0:-;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2041:169;;:::o;1303:6236:7:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;", "sourcePath": "contracts/LeveragedTrading.sol", "type": "contract", "deployment": {"address": "0xC27413247A150ae7D77f00C79e215AB1D3DE1956", "chainid": "42", "blockHeight": 32506836}}
},{}],5:[function(require,module,exports){
module.exports={
"serverUrl" : "https://rjfi3tltmxvh.usemoralis.com:2053/server",
"appId" : "97wagl7iRrfE4SiHD8Y0aR77PrX5Btie0sisKP26"
}
},{}],6:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.usdcInfo = exports.leverageTradingInfo = exports.btcupInfo = exports.btcdownInfo = void 0;
const leverageTradingInfo = {
  "contractAddress": "0xC27413247A150ae7D77f00C79e215AB1D3DE1956",
  "abi": require("../build/deployments/42/0xC27413247A150ae7D77f00C79e215AB1D3DE1956.json")["abi"]
};
exports.leverageTradingInfo = leverageTradingInfo;
const btcupInfo = {
  contractAddress: "0x257B106fcd747988F038E329797B6bE9b3182e34",
  abi: require("../build/contracts/BTCUP.json")["abi"]
};
exports.btcupInfo = btcupInfo;
const btcdownInfo = {
  contractAddress: "0x539704979542ca370D920f6BA9a004578953DF29",
  abi: require("../build/contracts/BTCDOWN.json")["abi"]
};
exports.btcdownInfo = btcdownInfo;
const usdcInfo = {
  contractAddress: "0xb7a4F3E9097C08dA09517b5aB877F7a917224ede",
  abi: require("../build/contracts/IERC20.json")["abi"]
};
exports.usdcInfo = usdcInfo;

},{"../build/contracts/BTCDOWN.json":1,"../build/contracts/BTCUP.json":2,"../build/contracts/IERC20.json":3,"../build/deployments/42/0xC27413247A150ae7D77f00C79e215AB1D3DE1956.json":4}],7:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "leverageTradingInfo", {
  enumerable: true,
  get: function () {
    return _contracts_and_abi.leverageTradingInfo;
  }
});

var _contracts_and_abi = require("./contracts_and_abi.js");

var _secondary_functions = require("./secondary_functions.js");

const BigNumber = require('bignumber.js');

const config = require("./.config.json");

const serverUrl = config["serverUrl"];
const appId = config["appId"];
Moralis.start({
  serverUrl,
  appId
});

if (Moralis.User.current()) {
  Moralis.User.logOut();
}

;

async function connect() {
  if (!Moralis.User.current()) {
    await Moralis.authenticate({
      signingMessage: "Log in using Moralis"
    });
  }
}

async function issueBtcUp() {
  const moneyForInvestment = parseFloat(document.getElementById("amount-btcup-issue").value);
  const moneyForInvestmentStr = (0, _secondary_functions.getBigNumberWithDecimals)(moneyForInvestment, 6).toString();
  const moneyForInvestmentMaxAllowedStr = (0, _secondary_functions.getBigNumberWithDecimals)(moneyForInvestment * 1.01, 6).toString();
  const tx = await (0, _secondary_functions.approve)(moneyForInvestmentMaxAllowedStr, _contracts_and_abi.leverageTradingInfo["contractAddress"], _contracts_and_abi.usdcInfo["contractAddress"], _contracts_and_abi.usdcInfo["abi"]);
  await tx.wait(1);
  const writeOptionsIssueBtcUp = {
    contractAddress: _contracts_and_abi.leverageTradingInfo["contractAddress"],
    functionName: "issueBtcUp",
    abi: _contracts_and_abi.leverageTradingInfo["abi"],
    params: {
      amountUsdc: moneyForInvestmentStr
    }
  };
  await Moralis.executeFunction(writeOptionsIssueBtcUp);
}

async function issueBtcDown() {
  const moneyForInvestment = parseFloat(document.getElementById("amount-btcdown-issue").value);
  const moneyForInvestmentStr = (0, _secondary_functions.getBigNumberWithDecimals)(moneyForInvestment, 6).toString();
  const moneyForInvestmentMaxAllowedStr = (0, _secondary_functions.getBigNumberWithDecimals)(moneyForInvestment * 1.01, 6).toString();
  const tx = await (0, _secondary_functions.approve)(moneyForInvestmentMaxAllowedStr, _contracts_and_abi.leverageTradingInfo["contractAddress"], _contracts_and_abi.usdcInfo["contractAddress"], _contracts_and_abi.usdcInfo["abi"]);
  await tx.wait(1);
  const writeOptionsIssueBtcDown = {
    contractAddress: _contracts_and_abi.leverageTradingInfo["contractAddress"],
    functionName: "issueBtcDown",
    abi: _contracts_and_abi.leverageTradingInfo["abi"],
    params: {
      amountUsdc: moneyForInvestmentStr
    }
  };
  await Moralis.executeFunction(writeOptionsIssueBtcDown);
}

async function redeemBtcUp() {
  let amountLeveragedTokens = parseFloat(document.getElementById("amount-btcdown-redeem").value);
  const amountLeveragedTokensStr = (0, _secondary_functions.getBigNumberWithDecimals)(amountLeveragedTokens, 6).toString();
  const tx = await (0, _secondary_functions.approve)(amountLeveragedTokensStr, _contracts_and_abi.leverageTradingInfo["contractAddress"], _contracts_and_abi.btcupInfo["contractAddress"], _contracts_and_abi.btcupInfo["abi"]);
  await tx.wait(1);
  const writeOptionsRedeemBtcUp = {
    contractAddress: _contracts_and_abi.leverageTradingInfo["contractAddress"],
    functionName: "redeemBtcUp",
    abi: _contracts_and_abi.leverageTradingInfo["abi"],
    params: {
      amountLeveragedTokens: amountLeveragedTokensStr
    }
  };
  await Moralis.executeFunction(writeOptionsRedeemBtcUp);
}

async function redeemBtcDown() {
  const amountLeveragedTokens = parseFloat(document.getElementById("amount-btcdown-redeem").value);
  const amountLeveragedTokensStr = (0, _secondary_functions.getBigNumberWithDecimals)(amountLeveragedTokens, 6).toString();
  const tx = await (0, _secondary_functions.approve)(amountLeveragedTokensStr, _contracts_and_abi.leverageTradingInfo["contractAddress"], _contracts_and_abi.btcdownInfo["contractAddress"], _contracts_and_abi.btcdownInfo["abi"]);
  await tx.wait(1);
  const writeOptionsRedeemBtcUp = {
    contractAddress: _contracts_and_abi.leverageTradingInfo["contractAddress"],
    functionName: "redeemBtcDown",
    abi: _contracts_and_abi.leverageTradingInfo["abi"],
    params: {
      amountLeveragedTokens: amountLeveragedTokensStr
    }
  };
  await Moralis.executeFunction(writeOptionsRedeemBtcUp);
}

document.getElementById("connect-btn").onclick = connect;
document.getElementById("issue-btcup-btn").onclick = issueBtcUp;
document.getElementById("issue-btcdown-btn").onclick = issueBtcDown;
document.getElementById("redeem-btcup-btn").onclick = redeemBtcUp;
document.getElementById("redeem-btcdown-btn").onclick = redeemBtcDown;

},{"./.config.json":5,"./contracts_and_abi.js":6,"./secondary_functions.js":8,"bignumber.js":9}],8:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.approve = approve;
exports.getBigNumberWithDecimals = getBigNumberWithDecimals;

const BigNumber = require('bignumber.js');

function getBigNumberWithDecimals(x, numberDecimals) {
  const xAsBigNumber = new BigNumber(x);
  const ScalingFactorAsBigNumber = new BigNumber("1".concat("0".repeat(numberDecimals)));
  return xAsBigNumber.multipliedBy(ScalingFactorAsBigNumber);
}

async function approve(amountBigNumberWithDecimalsStr, spenderAddress, contractAddress, abi) {
  const writeOptionsApproval = {
    contractAddress: contractAddress,
    functionName: "approve",
    abi: abi,
    params: {
      spender: spenderAddress,
      amount: amountBigNumberWithDecimalsStr
    }
  };
  return await Moralis.executeFunction(writeOptionsApproval);
}

},{"bignumber.js":9}],9:[function(require,module,exports){
;(function (globalObject) {
  'use strict';

/*
 *      bignumber.js v9.0.2
 *      A JavaScript library for arbitrary-precision arithmetic.
 *      https://github.com/MikeMcl/bignumber.js
 *      Copyright (c) 2021 Michael Mclaughlin <M8ch88l@gmail.com>
 *      MIT Licensed.
 *
 *      BigNumber.prototype methods     |  BigNumber methods
 *                                      |
 *      absoluteValue            abs    |  clone
 *      comparedTo                      |  config               set
 *      decimalPlaces            dp     |      DECIMAL_PLACES
 *      dividedBy                div    |      ROUNDING_MODE
 *      dividedToIntegerBy       idiv   |      EXPONENTIAL_AT
 *      exponentiatedBy          pow    |      RANGE
 *      integerValue                    |      CRYPTO
 *      isEqualTo                eq     |      MODULO_MODE
 *      isFinite                        |      POW_PRECISION
 *      isGreaterThan            gt     |      FORMAT
 *      isGreaterThanOrEqualTo   gte    |      ALPHABET
 *      isInteger                       |  isBigNumber
 *      isLessThan               lt     |  maximum              max
 *      isLessThanOrEqualTo      lte    |  minimum              min
 *      isNaN                           |  random
 *      isNegative                      |  sum
 *      isPositive                      |
 *      isZero                          |
 *      minus                           |
 *      modulo                   mod    |
 *      multipliedBy             times  |
 *      negated                         |
 *      plus                            |
 *      precision                sd     |
 *      shiftedBy                       |
 *      squareRoot               sqrt   |
 *      toExponential                   |
 *      toFixed                         |
 *      toFormat                        |
 *      toFraction                      |
 *      toJSON                          |
 *      toNumber                        |
 *      toPrecision                     |
 *      toString                        |
 *      valueOf                         |
 *
 */


  var BigNumber,
    isNumeric = /^-?(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?$/i,
    mathceil = Math.ceil,
    mathfloor = Math.floor,

    bignumberError = '[BigNumber Error] ',
    tooManyDigits = bignumberError + 'Number primitive has more than 15 significant digits: ',

    BASE = 1e14,
    LOG_BASE = 14,
    MAX_SAFE_INTEGER = 0x1fffffffffffff,         // 2^53 - 1
    // MAX_INT32 = 0x7fffffff,                   // 2^31 - 1
    POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],
    SQRT_BASE = 1e7,

    // EDITABLE
    // The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP, MAX_EXP, and
    // the arguments to toExponential, toFixed, toFormat, and toPrecision.
    MAX = 1E9;                                   // 0 to MAX_INT32


  /*
   * Create and return a BigNumber constructor.
   */
  function clone(configObject) {
    var div, convertBase, parseNumeric,
      P = BigNumber.prototype = { constructor: BigNumber, toString: null, valueOf: null },
      ONE = new BigNumber(1),


      //----------------------------- EDITABLE CONFIG DEFAULTS -------------------------------


      // The default values below must be integers within the inclusive ranges stated.
      // The values can also be changed at run-time using BigNumber.set.

      // The maximum number of decimal places for operations involving division.
      DECIMAL_PLACES = 20,                     // 0 to MAX

      // The rounding mode used when rounding to the above decimal places, and when using
      // toExponential, toFixed, toFormat and toPrecision, and round (default value).
      // UP         0 Away from zero.
      // DOWN       1 Towards zero.
      // CEIL       2 Towards +Infinity.
      // FLOOR      3 Towards -Infinity.
      // HALF_UP    4 Towards nearest neighbour. If equidistant, up.
      // HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.
      // HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.
      // HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.
      // HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.
      ROUNDING_MODE = 4,                       // 0 to 8

      // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]

      // The exponent value at and beneath which toString returns exponential notation.
      // Number type: -7
      TO_EXP_NEG = -7,                         // 0 to -MAX

      // The exponent value at and above which toString returns exponential notation.
      // Number type: 21
      TO_EXP_POS = 21,                         // 0 to MAX

      // RANGE : [MIN_EXP, MAX_EXP]

      // The minimum exponent value, beneath which underflow to zero occurs.
      // Number type: -324  (5e-324)
      MIN_EXP = -1e7,                          // -1 to -MAX

      // The maximum exponent value, above which overflow to Infinity occurs.
      // Number type:  308  (1.7976931348623157e+308)
      // For MAX_EXP > 1e7, e.g. new BigNumber('1e100000000').plus(1) may be slow.
      MAX_EXP = 1e7,                           // 1 to MAX

      // Whether to use cryptographically-secure random number generation, if available.
      CRYPTO = false,                          // true or false

      // The modulo mode used when calculating the modulus: a mod n.
      // The quotient (q = a / n) is calculated according to the corresponding rounding mode.
      // The remainder (r) is calculated as: r = a - n * q.
      //
      // UP        0 The remainder is positive if the dividend is negative, else is negative.
      // DOWN      1 The remainder has the same sign as the dividend.
      //             This modulo mode is commonly known as 'truncated division' and is
      //             equivalent to (a % n) in JavaScript.
      // FLOOR     3 The remainder has the same sign as the divisor (Python %).
      // HALF_EVEN 6 This modulo mode implements the IEEE 754 remainder function.
      // EUCLID    9 Euclidian division. q = sign(n) * floor(a / abs(n)).
      //             The remainder is always positive.
      //
      // The truncated division, floored division, Euclidian division and IEEE 754 remainder
      // modes are commonly used for the modulus operation.
      // Although the other rounding modes can also be used, they may not give useful results.
      MODULO_MODE = 1,                         // 0 to 9

      // The maximum number of significant digits of the result of the exponentiatedBy operation.
      // If POW_PRECISION is 0, there will be unlimited significant digits.
      POW_PRECISION = 0,                       // 0 to MAX

      // The format specification used by the BigNumber.prototype.toFormat method.
      FORMAT = {
        prefix: '',
        groupSize: 3,
        secondaryGroupSize: 0,
        groupSeparator: ',',
        decimalSeparator: '.',
        fractionGroupSize: 0,
        fractionGroupSeparator: '\xA0',        // non-breaking space
        suffix: ''
      },

      // The alphabet used for base conversion. It must be at least 2 characters long, with no '+',
      // '-', '.', whitespace, or repeated character.
      // '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_'
      ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyz',
      alphabetHasNormalDecimalDigits = true;


    //------------------------------------------------------------------------------------------


    // CONSTRUCTOR


    /*
     * The BigNumber constructor and exported function.
     * Create and return a new instance of a BigNumber object.
     *
     * v {number|string|BigNumber} A numeric value.
     * [b] {number} The base of v. Integer, 2 to ALPHABET.length inclusive.
     */
    function BigNumber(v, b) {
      var alphabet, c, caseChanged, e, i, isNum, len, str,
        x = this;

      // Enable constructor call without `new`.
      if (!(x instanceof BigNumber)) return new BigNumber(v, b);

      if (b == null) {

        if (v && v._isBigNumber === true) {
          x.s = v.s;

          if (!v.c || v.e > MAX_EXP) {
            x.c = x.e = null;
          } else if (v.e < MIN_EXP) {
            x.c = [x.e = 0];
          } else {
            x.e = v.e;
            x.c = v.c.slice();
          }

          return;
        }

        if ((isNum = typeof v == 'number') && v * 0 == 0) {

          // Use `1 / n` to handle minus zero also.
          x.s = 1 / v < 0 ? (v = -v, -1) : 1;

          // Fast path for integers, where n < 2147483648 (2**31).
          if (v === ~~v) {
            for (e = 0, i = v; i >= 10; i /= 10, e++);

            if (e > MAX_EXP) {
              x.c = x.e = null;
            } else {
              x.e = e;
              x.c = [v];
            }

            return;
          }

          str = String(v);
        } else {

          if (!isNumeric.test(str = String(v))) return parseNumeric(x, str, isNum);

          x.s = str.charCodeAt(0) == 45 ? (str = str.slice(1), -1) : 1;
        }

        // Decimal point?
        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');

        // Exponential form?
        if ((i = str.search(/e/i)) > 0) {

          // Determine exponent.
          if (e < 0) e = i;
          e += +str.slice(i + 1);
          str = str.substring(0, i);
        } else if (e < 0) {

          // Integer.
          e = str.length;
        }

      } else {

        // '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'
        intCheck(b, 2, ALPHABET.length, 'Base');

        // Allow exponential notation to be used with base 10 argument, while
        // also rounding to DECIMAL_PLACES as with other bases.
        if (b == 10 && alphabetHasNormalDecimalDigits) {
          x = new BigNumber(v);
          return round(x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE);
        }

        str = String(v);

        if (isNum = typeof v == 'number') {

          // Avoid potential interpretation of Infinity and NaN as base 44+ values.
          if (v * 0 != 0) return parseNumeric(x, str, isNum, b);

          x.s = 1 / v < 0 ? (str = str.slice(1), -1) : 1;

          // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'
          if (BigNumber.DEBUG && str.replace(/^0\.0*|\./, '').length > 15) {
            throw Error
             (tooManyDigits + v);
          }
        } else {
          x.s = str.charCodeAt(0) === 45 ? (str = str.slice(1), -1) : 1;
        }

        alphabet = ALPHABET.slice(0, b);
        e = i = 0;

        // Check that str is a valid base b number.
        // Don't use RegExp, so alphabet can contain special characters.
        for (len = str.length; i < len; i++) {
          if (alphabet.indexOf(c = str.charAt(i)) < 0) {
            if (c == '.') {

              // If '.' is not the first character and it has not be found before.
              if (i > e) {
                e = len;
                continue;
              }
            } else if (!caseChanged) {

              // Allow e.g. hexadecimal 'FF' as well as 'ff'.
              if (str == str.toUpperCase() && (str = str.toLowerCase()) ||
                  str == str.toLowerCase() && (str = str.toUpperCase())) {
                caseChanged = true;
                i = -1;
                e = 0;
                continue;
              }
            }

            return parseNumeric(x, String(v), isNum, b);
          }
        }

        // Prevent later check for length on converted number.
        isNum = false;
        str = convertBase(str, b, 10, x.s);

        // Decimal point?
        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');
        else e = str.length;
      }

      // Determine leading zeros.
      for (i = 0; str.charCodeAt(i) === 48; i++);

      // Determine trailing zeros.
      for (len = str.length; str.charCodeAt(--len) === 48;);

      if (str = str.slice(i, ++len)) {
        len -= i;

        // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'
        if (isNum && BigNumber.DEBUG &&
          len > 15 && (v > MAX_SAFE_INTEGER || v !== mathfloor(v))) {
            throw Error
             (tooManyDigits + (x.s * v));
        }

         // Overflow?
        if ((e = e - i - 1) > MAX_EXP) {

          // Infinity.
          x.c = x.e = null;

        // Underflow?
        } else if (e < MIN_EXP) {

          // Zero.
          x.c = [x.e = 0];
        } else {
          x.e = e;
          x.c = [];

          // Transform base

          // e is the base 10 exponent.
          // i is where to slice str to get the first element of the coefficient array.
          i = (e + 1) % LOG_BASE;
          if (e < 0) i += LOG_BASE;  // i < 1

          if (i < len) {
            if (i) x.c.push(+str.slice(0, i));

            for (len -= LOG_BASE; i < len;) {
              x.c.push(+str.slice(i, i += LOG_BASE));
            }

            i = LOG_BASE - (str = str.slice(i)).length;
          } else {
            i -= len;
          }

          for (; i--; str += '0');
          x.c.push(+str);
        }
      } else {

        // Zero.
        x.c = [x.e = 0];
      }
    }


    // CONSTRUCTOR PROPERTIES


    BigNumber.clone = clone;

    BigNumber.ROUND_UP = 0;
    BigNumber.ROUND_DOWN = 1;
    BigNumber.ROUND_CEIL = 2;
    BigNumber.ROUND_FLOOR = 3;
    BigNumber.ROUND_HALF_UP = 4;
    BigNumber.ROUND_HALF_DOWN = 5;
    BigNumber.ROUND_HALF_EVEN = 6;
    BigNumber.ROUND_HALF_CEIL = 7;
    BigNumber.ROUND_HALF_FLOOR = 8;
    BigNumber.EUCLID = 9;


    /*
     * Configure infrequently-changing library-wide settings.
     *
     * Accept an object with the following optional properties (if the value of a property is
     * a number, it must be an integer within the inclusive range stated):
     *
     *   DECIMAL_PLACES   {number}           0 to MAX
     *   ROUNDING_MODE    {number}           0 to 8
     *   EXPONENTIAL_AT   {number|number[]}  -MAX to MAX  or  [-MAX to 0, 0 to MAX]
     *   RANGE            {number|number[]}  -MAX to MAX (not zero)  or  [-MAX to -1, 1 to MAX]
     *   CRYPTO           {boolean}          true or false
     *   MODULO_MODE      {number}           0 to 9
     *   POW_PRECISION       {number}           0 to MAX
     *   ALPHABET         {string}           A string of two or more unique characters which does
     *                                       not contain '.'.
     *   FORMAT           {object}           An object with some of the following properties:
     *     prefix                 {string}
     *     groupSize              {number}
     *     secondaryGroupSize     {number}
     *     groupSeparator         {string}
     *     decimalSeparator       {string}
     *     fractionGroupSize      {number}
     *     fractionGroupSeparator {string}
     *     suffix                 {string}
     *
     * (The values assigned to the above FORMAT object properties are not checked for validity.)
     *
     * E.g.
     * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })
     *
     * Ignore properties/parameters set to null or undefined, except for ALPHABET.
     *
     * Return an object with the properties current values.
     */
    BigNumber.config = BigNumber.set = function (obj) {
      var p, v;

      if (obj != null) {

        if (typeof obj == 'object') {

          // DECIMAL_PLACES {number} Integer, 0 to MAX inclusive.
          // '[BigNumber Error] DECIMAL_PLACES {not a primitive number|not an integer|out of range}: {v}'
          if (obj.hasOwnProperty(p = 'DECIMAL_PLACES')) {
            v = obj[p];
            intCheck(v, 0, MAX, p);
            DECIMAL_PLACES = v;
          }

          // ROUNDING_MODE {number} Integer, 0 to 8 inclusive.
          // '[BigNumber Error] ROUNDING_MODE {not a primitive number|not an integer|out of range}: {v}'
          if (obj.hasOwnProperty(p = 'ROUNDING_MODE')) {
            v = obj[p];
            intCheck(v, 0, 8, p);
            ROUNDING_MODE = v;
          }

          // EXPONENTIAL_AT {number|number[]}
          // Integer, -MAX to MAX inclusive or
          // [integer -MAX to 0 inclusive, 0 to MAX inclusive].
          // '[BigNumber Error] EXPONENTIAL_AT {not a primitive number|not an integer|out of range}: {v}'
          if (obj.hasOwnProperty(p = 'EXPONENTIAL_AT')) {
            v = obj[p];
            if (v && v.pop) {
              intCheck(v[0], -MAX, 0, p);
              intCheck(v[1], 0, MAX, p);
              TO_EXP_NEG = v[0];
              TO_EXP_POS = v[1];
            } else {
              intCheck(v, -MAX, MAX, p);
              TO_EXP_NEG = -(TO_EXP_POS = v < 0 ? -v : v);
            }
          }

          // RANGE {number|number[]} Non-zero integer, -MAX to MAX inclusive or
          // [integer -MAX to -1 inclusive, integer 1 to MAX inclusive].
          // '[BigNumber Error] RANGE {not a primitive number|not an integer|out of range|cannot be zero}: {v}'
          if (obj.hasOwnProperty(p = 'RANGE')) {
            v = obj[p];
            if (v && v.pop) {
              intCheck(v[0], -MAX, -1, p);
              intCheck(v[1], 1, MAX, p);
              MIN_EXP = v[0];
              MAX_EXP = v[1];
            } else {
              intCheck(v, -MAX, MAX, p);
              if (v) {
                MIN_EXP = -(MAX_EXP = v < 0 ? -v : v);
              } else {
                throw Error
                 (bignumberError + p + ' cannot be zero: ' + v);
              }
            }
          }

          // CRYPTO {boolean} true or false.
          // '[BigNumber Error] CRYPTO not true or false: {v}'
          // '[BigNumber Error] crypto unavailable'
          if (obj.hasOwnProperty(p = 'CRYPTO')) {
            v = obj[p];
            if (v === !!v) {
              if (v) {
                if (typeof crypto != 'undefined' && crypto &&
                 (crypto.getRandomValues || crypto.randomBytes)) {
                  CRYPTO = v;
                } else {
                  CRYPTO = !v;
                  throw Error
                   (bignumberError + 'crypto unavailable');
                }
              } else {
                CRYPTO = v;
              }
            } else {
              throw Error
               (bignumberError + p + ' not true or false: ' + v);
            }
          }

          // MODULO_MODE {number} Integer, 0 to 9 inclusive.
          // '[BigNumber Error] MODULO_MODE {not a primitive number|not an integer|out of range}: {v}'
          if (obj.hasOwnProperty(p = 'MODULO_MODE')) {
            v = obj[p];
            intCheck(v, 0, 9, p);
            MODULO_MODE = v;
          }

          // POW_PRECISION {number} Integer, 0 to MAX inclusive.
          // '[BigNumber Error] POW_PRECISION {not a primitive number|not an integer|out of range}: {v}'
          if (obj.hasOwnProperty(p = 'POW_PRECISION')) {
            v = obj[p];
            intCheck(v, 0, MAX, p);
            POW_PRECISION = v;
          }

          // FORMAT {object}
          // '[BigNumber Error] FORMAT not an object: {v}'
          if (obj.hasOwnProperty(p = 'FORMAT')) {
            v = obj[p];
            if (typeof v == 'object') FORMAT = v;
            else throw Error
             (bignumberError + p + ' not an object: ' + v);
          }

          // ALPHABET {string}
          // '[BigNumber Error] ALPHABET invalid: {v}'
          if (obj.hasOwnProperty(p = 'ALPHABET')) {
            v = obj[p];

            // Disallow if less than two characters,
            // or if it contains '+', '-', '.', whitespace, or a repeated character.
            if (typeof v == 'string' && !/^.?$|[+\-.\s]|(.).*\1/.test(v)) {
              alphabetHasNormalDecimalDigits = v.slice(0, 10) == '0123456789';
              ALPHABET = v;
            } else {
              throw Error
               (bignumberError + p + ' invalid: ' + v);
            }
          }

        } else {

          // '[BigNumber Error] Object expected: {v}'
          throw Error
           (bignumberError + 'Object expected: ' + obj);
        }
      }

      return {
        DECIMAL_PLACES: DECIMAL_PLACES,
        ROUNDING_MODE: ROUNDING_MODE,
        EXPONENTIAL_AT: [TO_EXP_NEG, TO_EXP_POS],
        RANGE: [MIN_EXP, MAX_EXP],
        CRYPTO: CRYPTO,
        MODULO_MODE: MODULO_MODE,
        POW_PRECISION: POW_PRECISION,
        FORMAT: FORMAT,
        ALPHABET: ALPHABET
      };
    };


    /*
     * Return true if v is a BigNumber instance, otherwise return false.
     *
     * If BigNumber.DEBUG is true, throw if a BigNumber instance is not well-formed.
     *
     * v {any}
     *
     * '[BigNumber Error] Invalid BigNumber: {v}'
     */
    BigNumber.isBigNumber = function (v) {
      if (!v || v._isBigNumber !== true) return false;
      if (!BigNumber.DEBUG) return true;

      var i, n,
        c = v.c,
        e = v.e,
        s = v.s;

      out: if ({}.toString.call(c) == '[object Array]') {

        if ((s === 1 || s === -1) && e >= -MAX && e <= MAX && e === mathfloor(e)) {

          // If the first element is zero, the BigNumber value must be zero.
          if (c[0] === 0) {
            if (e === 0 && c.length === 1) return true;
            break out;
          }

          // Calculate number of digits that c[0] should have, based on the exponent.
          i = (e + 1) % LOG_BASE;
          if (i < 1) i += LOG_BASE;

          // Calculate number of digits of c[0].
          //if (Math.ceil(Math.log(c[0] + 1) / Math.LN10) == i) {
          if (String(c[0]).length == i) {

            for (i = 0; i < c.length; i++) {
              n = c[i];
              if (n < 0 || n >= BASE || n !== mathfloor(n)) break out;
            }

            // Last element cannot be zero, unless it is the only element.
            if (n !== 0) return true;
          }
        }

      // Infinity/NaN
      } else if (c === null && e === null && (s === null || s === 1 || s === -1)) {
        return true;
      }

      throw Error
        (bignumberError + 'Invalid BigNumber: ' + v);
    };


    /*
     * Return a new BigNumber whose value is the maximum of the arguments.
     *
     * arguments {number|string|BigNumber}
     */
    BigNumber.maximum = BigNumber.max = function () {
      return maxOrMin(arguments, P.lt);
    };


    /*
     * Return a new BigNumber whose value is the minimum of the arguments.
     *
     * arguments {number|string|BigNumber}
     */
    BigNumber.minimum = BigNumber.min = function () {
      return maxOrMin(arguments, P.gt);
    };


    /*
     * Return a new BigNumber with a random value equal to or greater than 0 and less than 1,
     * and with dp, or DECIMAL_PLACES if dp is omitted, decimal places (or less if trailing
     * zeros are produced).
     *
     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.
     *
     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp}'
     * '[BigNumber Error] crypto unavailable'
     */
    BigNumber.random = (function () {
      var pow2_53 = 0x20000000000000;

      // Return a 53 bit integer n, where 0 <= n < 9007199254740992.
      // Check if Math.random() produces more than 32 bits of randomness.
      // If it does, assume at least 53 bits are produced, otherwise assume at least 30 bits.
      // 0x40000000 is 2^30, 0x800000 is 2^23, 0x1fffff is 2^21 - 1.
      var random53bitInt = (Math.random() * pow2_53) & 0x1fffff
       ? function () { return mathfloor(Math.random() * pow2_53); }
       : function () { return ((Math.random() * 0x40000000 | 0) * 0x800000) +
         (Math.random() * 0x800000 | 0); };

      return function (dp) {
        var a, b, e, k, v,
          i = 0,
          c = [],
          rand = new BigNumber(ONE);

        if (dp == null) dp = DECIMAL_PLACES;
        else intCheck(dp, 0, MAX);

        k = mathceil(dp / LOG_BASE);

        if (CRYPTO) {

          // Browsers supporting crypto.getRandomValues.
          if (crypto.getRandomValues) {

            a = crypto.getRandomValues(new Uint32Array(k *= 2));

            for (; i < k;) {

              // 53 bits:
              // ((Math.pow(2, 32) - 1) * Math.pow(2, 21)).toString(2)
              // 11111 11111111 11111111 11111111 11100000 00000000 00000000
              // ((Math.pow(2, 32) - 1) >>> 11).toString(2)
              //                                     11111 11111111 11111111
              // 0x20000 is 2^21.
              v = a[i] * 0x20000 + (a[i + 1] >>> 11);

              // Rejection sampling:
              // 0 <= v < 9007199254740992
              // Probability that v >= 9e15, is
              // 7199254740992 / 9007199254740992 ~= 0.0008, i.e. 1 in 1251
              if (v >= 9e15) {
                b = crypto.getRandomValues(new Uint32Array(2));
                a[i] = b[0];
                a[i + 1] = b[1];
              } else {

                // 0 <= v <= 8999999999999999
                // 0 <= (v % 1e14) <= 99999999999999
                c.push(v % 1e14);
                i += 2;
              }
            }
            i = k / 2;

          // Node.js supporting crypto.randomBytes.
          } else if (crypto.randomBytes) {

            // buffer
            a = crypto.randomBytes(k *= 7);

            for (; i < k;) {

              // 0x1000000000000 is 2^48, 0x10000000000 is 2^40
              // 0x100000000 is 2^32, 0x1000000 is 2^24
              // 11111 11111111 11111111 11111111 11111111 11111111 11111111
              // 0 <= v < 9007199254740992
              v = ((a[i] & 31) * 0x1000000000000) + (a[i + 1] * 0x10000000000) +
                 (a[i + 2] * 0x100000000) + (a[i + 3] * 0x1000000) +
                 (a[i + 4] << 16) + (a[i + 5] << 8) + a[i + 6];

              if (v >= 9e15) {
                crypto.randomBytes(7).copy(a, i);
              } else {

                // 0 <= (v % 1e14) <= 99999999999999
                c.push(v % 1e14);
                i += 7;
              }
            }
            i = k / 7;
          } else {
            CRYPTO = false;
            throw Error
             (bignumberError + 'crypto unavailable');
          }
        }

        // Use Math.random.
        if (!CRYPTO) {

          for (; i < k;) {
            v = random53bitInt();
            if (v < 9e15) c[i++] = v % 1e14;
          }
        }

        k = c[--i];
        dp %= LOG_BASE;

        // Convert trailing digits to zeros according to dp.
        if (k && dp) {
          v = POWS_TEN[LOG_BASE - dp];
          c[i] = mathfloor(k / v) * v;
        }

        // Remove trailing elements which are zero.
        for (; c[i] === 0; c.pop(), i--);

        // Zero?
        if (i < 0) {
          c = [e = 0];
        } else {

          // Remove leading elements which are zero and adjust exponent accordingly.
          for (e = -1 ; c[0] === 0; c.splice(0, 1), e -= LOG_BASE);

          // Count the digits of the first element of c to determine leading zeros, and...
          for (i = 1, v = c[0]; v >= 10; v /= 10, i++);

          // adjust the exponent accordingly.
          if (i < LOG_BASE) e -= LOG_BASE - i;
        }

        rand.e = e;
        rand.c = c;
        return rand;
      };
    })();


    /*
     * Return a BigNumber whose value is the sum of the arguments.
     *
     * arguments {number|string|BigNumber}
     */
    BigNumber.sum = function () {
      var i = 1,
        args = arguments,
        sum = new BigNumber(args[0]);
      for (; i < args.length;) sum = sum.plus(args[i++]);
      return sum;
    };


    // PRIVATE FUNCTIONS


    // Called by BigNumber and BigNumber.prototype.toString.
    convertBase = (function () {
      var decimal = '0123456789';

      /*
       * Convert string of baseIn to an array of numbers of baseOut.
       * Eg. toBaseOut('255', 10, 16) returns [15, 15].
       * Eg. toBaseOut('ff', 16, 10) returns [2, 5, 5].
       */
      function toBaseOut(str, baseIn, baseOut, alphabet) {
        var j,
          arr = [0],
          arrL,
          i = 0,
          len = str.length;

        for (; i < len;) {
          for (arrL = arr.length; arrL--; arr[arrL] *= baseIn);

          arr[0] += alphabet.indexOf(str.charAt(i++));

          for (j = 0; j < arr.length; j++) {

            if (arr[j] > baseOut - 1) {
              if (arr[j + 1] == null) arr[j + 1] = 0;
              arr[j + 1] += arr[j] / baseOut | 0;
              arr[j] %= baseOut;
            }
          }
        }

        return arr.reverse();
      }

      // Convert a numeric string of baseIn to a numeric string of baseOut.
      // If the caller is toString, we are converting from base 10 to baseOut.
      // If the caller is BigNumber, we are converting from baseIn to base 10.
      return function (str, baseIn, baseOut, sign, callerIsToString) {
        var alphabet, d, e, k, r, x, xc, y,
          i = str.indexOf('.'),
          dp = DECIMAL_PLACES,
          rm = ROUNDING_MODE;

        // Non-integer.
        if (i >= 0) {
          k = POW_PRECISION;

          // Unlimited precision.
          POW_PRECISION = 0;
          str = str.replace('.', '');
          y = new BigNumber(baseIn);
          x = y.pow(str.length - i);
          POW_PRECISION = k;

          // Convert str as if an integer, then restore the fraction part by dividing the
          // result by its base raised to a power.

          y.c = toBaseOut(toFixedPoint(coeffToString(x.c), x.e, '0'),
           10, baseOut, decimal);
          y.e = y.c.length;
        }

        // Convert the number as integer.

        xc = toBaseOut(str, baseIn, baseOut, callerIsToString
         ? (alphabet = ALPHABET, decimal)
         : (alphabet = decimal, ALPHABET));

        // xc now represents str as an integer and converted to baseOut. e is the exponent.
        e = k = xc.length;

        // Remove trailing zeros.
        for (; xc[--k] == 0; xc.pop());

        // Zero?
        if (!xc[0]) return alphabet.charAt(0);

        // Does str represent an integer? If so, no need for the division.
        if (i < 0) {
          --e;
        } else {
          x.c = xc;
          x.e = e;

          // The sign is needed for correct rounding.
          x.s = sign;
          x = div(x, y, dp, rm, baseOut);
          xc = x.c;
          r = x.r;
          e = x.e;
        }

        // xc now represents str converted to baseOut.

        // THe index of the rounding digit.
        d = e + dp + 1;

        // The rounding digit: the digit to the right of the digit that may be rounded up.
        i = xc[d];

        // Look at the rounding digits and mode to determine whether to round up.

        k = baseOut / 2;
        r = r || d < 0 || xc[d + 1] != null;

        r = rm < 4 ? (i != null || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))
              : i > k || i == k &&(rm == 4 || r || rm == 6 && xc[d - 1] & 1 ||
               rm == (x.s < 0 ? 8 : 7));

        // If the index of the rounding digit is not greater than zero, or xc represents
        // zero, then the result of the base conversion is zero or, if rounding up, a value
        // such as 0.00001.
        if (d < 1 || !xc[0]) {

          // 1^-dp or 0
          str = r ? toFixedPoint(alphabet.charAt(1), -dp, alphabet.charAt(0)) : alphabet.charAt(0);
        } else {

          // Truncate xc to the required number of decimal places.
          xc.length = d;

          // Round up?
          if (r) {

            // Rounding up may mean the previous digit has to be rounded up and so on.
            for (--baseOut; ++xc[--d] > baseOut;) {
              xc[d] = 0;

              if (!d) {
                ++e;
                xc = [1].concat(xc);
              }
            }
          }

          // Determine trailing zeros.
          for (k = xc.length; !xc[--k];);

          // E.g. [4, 11, 15] becomes 4bf.
          for (i = 0, str = ''; i <= k; str += alphabet.charAt(xc[i++]));

          // Add leading zeros, decimal point and trailing zeros as required.
          str = toFixedPoint(str, e, alphabet.charAt(0));
        }

        // The caller will add the sign.
        return str;
      };
    })();


    // Perform division in the specified base. Called by div and convertBase.
    div = (function () {

      // Assume non-zero x and k.
      function multiply(x, k, base) {
        var m, temp, xlo, xhi,
          carry = 0,
          i = x.length,
          klo = k % SQRT_BASE,
          khi = k / SQRT_BASE | 0;

        for (x = x.slice(); i--;) {
          xlo = x[i] % SQRT_BASE;
          xhi = x[i] / SQRT_BASE | 0;
          m = khi * xlo + xhi * klo;
          temp = klo * xlo + ((m % SQRT_BASE) * SQRT_BASE) + carry;
          carry = (temp / base | 0) + (m / SQRT_BASE | 0) + khi * xhi;
          x[i] = temp % base;
        }

        if (carry) x = [carry].concat(x);

        return x;
      }

      function compare(a, b, aL, bL) {
        var i, cmp;

        if (aL != bL) {
          cmp = aL > bL ? 1 : -1;
        } else {

          for (i = cmp = 0; i < aL; i++) {

            if (a[i] != b[i]) {
              cmp = a[i] > b[i] ? 1 : -1;
              break;
            }
          }
        }

        return cmp;
      }

      function subtract(a, b, aL, base) {
        var i = 0;

        // Subtract b from a.
        for (; aL--;) {
          a[aL] -= i;
          i = a[aL] < b[aL] ? 1 : 0;
          a[aL] = i * base + a[aL] - b[aL];
        }

        // Remove leading zeros.
        for (; !a[0] && a.length > 1; a.splice(0, 1));
      }

      // x: dividend, y: divisor.
      return function (x, y, dp, rm, base) {
        var cmp, e, i, more, n, prod, prodL, q, qc, rem, remL, rem0, xi, xL, yc0,
          yL, yz,
          s = x.s == y.s ? 1 : -1,
          xc = x.c,
          yc = y.c;

        // Either NaN, Infinity or 0?
        if (!xc || !xc[0] || !yc || !yc[0]) {

          return new BigNumber(

           // Return NaN if either NaN, or both Infinity or 0.
           !x.s || !y.s || (xc ? yc && xc[0] == yc[0] : !yc) ? NaN :

            // Return ±0 if x is ±0 or y is ±Infinity, or return ±Infinity as y is ±0.
            xc && xc[0] == 0 || !yc ? s * 0 : s / 0
         );
        }

        q = new BigNumber(s);
        qc = q.c = [];
        e = x.e - y.e;
        s = dp + e + 1;

        if (!base) {
          base = BASE;
          e = bitFloor(x.e / LOG_BASE) - bitFloor(y.e / LOG_BASE);
          s = s / LOG_BASE | 0;
        }

        // Result exponent may be one less then the current value of e.
        // The coefficients of the BigNumbers from convertBase may have trailing zeros.
        for (i = 0; yc[i] == (xc[i] || 0); i++);

        if (yc[i] > (xc[i] || 0)) e--;

        if (s < 0) {
          qc.push(1);
          more = true;
        } else {
          xL = xc.length;
          yL = yc.length;
          i = 0;
          s += 2;

          // Normalise xc and yc so highest order digit of yc is >= base / 2.

          n = mathfloor(base / (yc[0] + 1));

          // Not necessary, but to handle odd bases where yc[0] == (base / 2) - 1.
          // if (n > 1 || n++ == 1 && yc[0] < base / 2) {
          if (n > 1) {
            yc = multiply(yc, n, base);
            xc = multiply(xc, n, base);
            yL = yc.length;
            xL = xc.length;
          }

          xi = yL;
          rem = xc.slice(0, yL);
          remL = rem.length;

          // Add zeros to make remainder as long as divisor.
          for (; remL < yL; rem[remL++] = 0);
          yz = yc.slice();
          yz = [0].concat(yz);
          yc0 = yc[0];
          if (yc[1] >= base / 2) yc0++;
          // Not necessary, but to prevent trial digit n > base, when using base 3.
          // else if (base == 3 && yc0 == 1) yc0 = 1 + 1e-15;

          do {
            n = 0;

            // Compare divisor and remainder.
            cmp = compare(yc, rem, yL, remL);

            // If divisor < remainder.
            if (cmp < 0) {

              // Calculate trial digit, n.

              rem0 = rem[0];
              if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);

              // n is how many times the divisor goes into the current remainder.
              n = mathfloor(rem0 / yc0);

              //  Algorithm:
              //  product = divisor multiplied by trial digit (n).
              //  Compare product and remainder.
              //  If product is greater than remainder:
              //    Subtract divisor from product, decrement trial digit.
              //  Subtract product from remainder.
              //  If product was less than remainder at the last compare:
              //    Compare new remainder and divisor.
              //    If remainder is greater than divisor:
              //      Subtract divisor from remainder, increment trial digit.

              if (n > 1) {

                // n may be > base only when base is 3.
                if (n >= base) n = base - 1;

                // product = divisor * trial digit.
                prod = multiply(yc, n, base);
                prodL = prod.length;
                remL = rem.length;

                // Compare product and remainder.
                // If product > remainder then trial digit n too high.
                // n is 1 too high about 5% of the time, and is not known to have
                // ever been more than 1 too high.
                while (compare(prod, rem, prodL, remL) == 1) {
                  n--;

                  // Subtract divisor from product.
                  subtract(prod, yL < prodL ? yz : yc, prodL, base);
                  prodL = prod.length;
                  cmp = 1;
                }
              } else {

                // n is 0 or 1, cmp is -1.
                // If n is 0, there is no need to compare yc and rem again below,
                // so change cmp to 1 to avoid it.
                // If n is 1, leave cmp as -1, so yc and rem are compared again.
                if (n == 0) {

                  // divisor < remainder, so n must be at least 1.
                  cmp = n = 1;
                }

                // product = divisor
                prod = yc.slice();
                prodL = prod.length;
              }

              if (prodL < remL) prod = [0].concat(prod);

              // Subtract product from remainder.
              subtract(rem, prod, remL, base);
              remL = rem.length;

               // If product was < remainder.
              if (cmp == -1) {

                // Compare divisor and new remainder.
                // If divisor < new remainder, subtract divisor from remainder.
                // Trial digit n too low.
                // n is 1 too low about 5% of the time, and very rarely 2 too low.
                while (compare(yc, rem, yL, remL) < 1) {
                  n++;

                  // Subtract divisor from remainder.
                  subtract(rem, yL < remL ? yz : yc, remL, base);
                  remL = rem.length;
                }
              }
            } else if (cmp === 0) {
              n++;
              rem = [0];
            } // else cmp === 1 and n will be 0

            // Add the next digit, n, to the result array.
            qc[i++] = n;

            // Update the remainder.
            if (rem[0]) {
              rem[remL++] = xc[xi] || 0;
            } else {
              rem = [xc[xi]];
              remL = 1;
            }
          } while ((xi++ < xL || rem[0] != null) && s--);

          more = rem[0] != null;

          // Leading zero?
          if (!qc[0]) qc.splice(0, 1);
        }

        if (base == BASE) {

          // To calculate q.e, first get the number of digits of qc[0].
          for (i = 1, s = qc[0]; s >= 10; s /= 10, i++);

          round(q, dp + (q.e = i + e * LOG_BASE - 1) + 1, rm, more);

        // Caller is convertBase.
        } else {
          q.e = e;
          q.r = +more;
        }

        return q;
      };
    })();


    /*
     * Return a string representing the value of BigNumber n in fixed-point or exponential
     * notation rounded to the specified decimal places or significant digits.
     *
     * n: a BigNumber.
     * i: the index of the last digit required (i.e. the digit that may be rounded up).
     * rm: the rounding mode.
     * id: 1 (toExponential) or 2 (toPrecision).
     */
    function format(n, i, rm, id) {
      var c0, e, ne, len, str;

      if (rm == null) rm = ROUNDING_MODE;
      else intCheck(rm, 0, 8);

      if (!n.c) return n.toString();

      c0 = n.c[0];
      ne = n.e;

      if (i == null) {
        str = coeffToString(n.c);
        str = id == 1 || id == 2 && (ne <= TO_EXP_NEG || ne >= TO_EXP_POS)
         ? toExponential(str, ne)
         : toFixedPoint(str, ne, '0');
      } else {
        n = round(new BigNumber(n), i, rm);

        // n.e may have changed if the value was rounded up.
        e = n.e;

        str = coeffToString(n.c);
        len = str.length;

        // toPrecision returns exponential notation if the number of significant digits
        // specified is less than the number of digits necessary to represent the integer
        // part of the value in fixed-point notation.

        // Exponential notation.
        if (id == 1 || id == 2 && (i <= e || e <= TO_EXP_NEG)) {

          // Append zeros?
          for (; len < i; str += '0', len++);
          str = toExponential(str, e);

        // Fixed-point notation.
        } else {
          i -= ne;
          str = toFixedPoint(str, e, '0');

          // Append zeros?
          if (e + 1 > len) {
            if (--i > 0) for (str += '.'; i--; str += '0');
          } else {
            i += e - len;
            if (i > 0) {
              if (e + 1 == len) str += '.';
              for (; i--; str += '0');
            }
          }
        }
      }

      return n.s < 0 && c0 ? '-' + str : str;
    }


    // Handle BigNumber.max and BigNumber.min.
    function maxOrMin(args, method) {
      var n,
        i = 1,
        m = new BigNumber(args[0]);

      for (; i < args.length; i++) {
        n = new BigNumber(args[i]);

        // If any number is NaN, return NaN.
        if (!n.s) {
          m = n;
          break;
        } else if (method.call(m, n)) {
          m = n;
        }
      }

      return m;
    }


    /*
     * Strip trailing zeros, calculate base 10 exponent and check against MIN_EXP and MAX_EXP.
     * Called by minus, plus and times.
     */
    function normalise(n, c, e) {
      var i = 1,
        j = c.length;

       // Remove trailing zeros.
      for (; !c[--j]; c.pop());

      // Calculate the base 10 exponent. First get the number of digits of c[0].
      for (j = c[0]; j >= 10; j /= 10, i++);

      // Overflow?
      if ((e = i + e * LOG_BASE - 1) > MAX_EXP) {

        // Infinity.
        n.c = n.e = null;

      // Underflow?
      } else if (e < MIN_EXP) {

        // Zero.
        n.c = [n.e = 0];
      } else {
        n.e = e;
        n.c = c;
      }

      return n;
    }


    // Handle values that fail the validity test in BigNumber.
    parseNumeric = (function () {
      var basePrefix = /^(-?)0([xbo])(?=\w[\w.]*$)/i,
        dotAfter = /^([^.]+)\.$/,
        dotBefore = /^\.([^.]+)$/,
        isInfinityOrNaN = /^-?(Infinity|NaN)$/,
        whitespaceOrPlus = /^\s*\+(?=[\w.])|^\s+|\s+$/g;

      return function (x, str, isNum, b) {
        var base,
          s = isNum ? str : str.replace(whitespaceOrPlus, '');

        // No exception on ±Infinity or NaN.
        if (isInfinityOrNaN.test(s)) {
          x.s = isNaN(s) ? null : s < 0 ? -1 : 1;
        } else {
          if (!isNum) {

            // basePrefix = /^(-?)0([xbo])(?=\w[\w.]*$)/i
            s = s.replace(basePrefix, function (m, p1, p2) {
              base = (p2 = p2.toLowerCase()) == 'x' ? 16 : p2 == 'b' ? 2 : 8;
              return !b || b == base ? p1 : m;
            });

            if (b) {
              base = b;

              // E.g. '1.' to '1', '.1' to '0.1'
              s = s.replace(dotAfter, '$1').replace(dotBefore, '0.$1');
            }

            if (str != s) return new BigNumber(s, base);
          }

          // '[BigNumber Error] Not a number: {n}'
          // '[BigNumber Error] Not a base {b} number: {n}'
          if (BigNumber.DEBUG) {
            throw Error
              (bignumberError + 'Not a' + (b ? ' base ' + b : '') + ' number: ' + str);
          }

          // NaN
          x.s = null;
        }

        x.c = x.e = null;
      }
    })();


    /*
     * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.
     * If r is truthy, it is known that there are more digits after the rounding digit.
     */
    function round(x, sd, rm, r) {
      var d, i, j, k, n, ni, rd,
        xc = x.c,
        pows10 = POWS_TEN;

      // if x is not Infinity or NaN...
      if (xc) {

        // rd is the rounding digit, i.e. the digit after the digit that may be rounded up.
        // n is a base 1e14 number, the value of the element of array x.c containing rd.
        // ni is the index of n within x.c.
        // d is the number of digits of n.
        // i is the index of rd within n including leading zeros.
        // j is the actual index of rd within n (if < 0, rd is a leading zero).
        out: {

          // Get the number of digits of the first element of xc.
          for (d = 1, k = xc[0]; k >= 10; k /= 10, d++);
          i = sd - d;

          // If the rounding digit is in the first element of xc...
          if (i < 0) {
            i += LOG_BASE;
            j = sd;
            n = xc[ni = 0];

            // Get the rounding digit at index j of n.
            rd = n / pows10[d - j - 1] % 10 | 0;
          } else {
            ni = mathceil((i + 1) / LOG_BASE);

            if (ni >= xc.length) {

              if (r) {

                // Needed by sqrt.
                for (; xc.length <= ni; xc.push(0));
                n = rd = 0;
                d = 1;
                i %= LOG_BASE;
                j = i - LOG_BASE + 1;
              } else {
                break out;
              }
            } else {
              n = k = xc[ni];

              // Get the number of digits of n.
              for (d = 1; k >= 10; k /= 10, d++);

              // Get the index of rd within n.
              i %= LOG_BASE;

              // Get the index of rd within n, adjusted for leading zeros.
              // The number of leading zeros of n is given by LOG_BASE - d.
              j = i - LOG_BASE + d;

              // Get the rounding digit at index j of n.
              rd = j < 0 ? 0 : n / pows10[d - j - 1] % 10 | 0;
            }
          }

          r = r || sd < 0 ||

          // Are there any non-zero digits after the rounding digit?
          // The expression  n % pows10[d - j - 1]  returns all digits of n to the right
          // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.
           xc[ni + 1] != null || (j < 0 ? n : n % pows10[d - j - 1]);

          r = rm < 4
           ? (rd || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))
           : rd > 5 || rd == 5 && (rm == 4 || r || rm == 6 &&

            // Check whether the digit to the left of the rounding digit is odd.
            ((i > 0 ? j > 0 ? n / pows10[d - j] : 0 : xc[ni - 1]) % 10) & 1 ||
             rm == (x.s < 0 ? 8 : 7));

          if (sd < 1 || !xc[0]) {
            xc.length = 0;

            if (r) {

              // Convert sd to decimal places.
              sd -= x.e + 1;

              // 1, 0.1, 0.01, 0.001, 0.0001 etc.
              xc[0] = pows10[(LOG_BASE - sd % LOG_BASE) % LOG_BASE];
              x.e = -sd || 0;
            } else {

              // Zero.
              xc[0] = x.e = 0;
            }

            return x;
          }

          // Remove excess digits.
          if (i == 0) {
            xc.length = ni;
            k = 1;
            ni--;
          } else {
            xc.length = ni + 1;
            k = pows10[LOG_BASE - i];

            // E.g. 56700 becomes 56000 if 7 is the rounding digit.
            // j > 0 means i > number of leading zeros of n.
            xc[ni] = j > 0 ? mathfloor(n / pows10[d - j] % pows10[j]) * k : 0;
          }

          // Round up?
          if (r) {

            for (; ;) {

              // If the digit to be rounded up is in the first element of xc...
              if (ni == 0) {

                // i will be the length of xc[0] before k is added.
                for (i = 1, j = xc[0]; j >= 10; j /= 10, i++);
                j = xc[0] += k;
                for (k = 1; j >= 10; j /= 10, k++);

                // if i != k the length has increased.
                if (i != k) {
                  x.e++;
                  if (xc[0] == BASE) xc[0] = 1;
                }

                break;
              } else {
                xc[ni] += k;
                if (xc[ni] != BASE) break;
                xc[ni--] = 0;
                k = 1;
              }
            }
          }

          // Remove trailing zeros.
          for (i = xc.length; xc[--i] === 0; xc.pop());
        }

        // Overflow? Infinity.
        if (x.e > MAX_EXP) {
          x.c = x.e = null;

        // Underflow? Zero.
        } else if (x.e < MIN_EXP) {
          x.c = [x.e = 0];
        }
      }

      return x;
    }


    function valueOf(n) {
      var str,
        e = n.e;

      if (e === null) return n.toString();

      str = coeffToString(n.c);

      str = e <= TO_EXP_NEG || e >= TO_EXP_POS
        ? toExponential(str, e)
        : toFixedPoint(str, e, '0');

      return n.s < 0 ? '-' + str : str;
    }


    // PROTOTYPE/INSTANCE METHODS


    /*
     * Return a new BigNumber whose value is the absolute value of this BigNumber.
     */
    P.absoluteValue = P.abs = function () {
      var x = new BigNumber(this);
      if (x.s < 0) x.s = 1;
      return x;
    };


    /*
     * Return
     *   1 if the value of this BigNumber is greater than the value of BigNumber(y, b),
     *   -1 if the value of this BigNumber is less than the value of BigNumber(y, b),
     *   0 if they have the same value,
     *   or null if the value of either is NaN.
     */
    P.comparedTo = function (y, b) {
      return compare(this, new BigNumber(y, b));
    };


    /*
     * If dp is undefined or null or true or false, return the number of decimal places of the
     * value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.
     *
     * Otherwise, if dp is a number, return a new BigNumber whose value is the value of this
     * BigNumber rounded to a maximum of dp decimal places using rounding mode rm, or
     * ROUNDING_MODE if rm is omitted.
     *
     * [dp] {number} Decimal places: integer, 0 to MAX inclusive.
     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.
     *
     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'
     */
    P.decimalPlaces = P.dp = function (dp, rm) {
      var c, n, v,
        x = this;

      if (dp != null) {
        intCheck(dp, 0, MAX);
        if (rm == null) rm = ROUNDING_MODE;
        else intCheck(rm, 0, 8);

        return round(new BigNumber(x), dp + x.e + 1, rm);
      }

      if (!(c = x.c)) return null;
      n = ((v = c.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE;

      // Subtract the number of trailing zeros of the last number.
      if (v = c[v]) for (; v % 10 == 0; v /= 10, n--);
      if (n < 0) n = 0;

      return n;
    };


    /*
     *  n / 0 = I
     *  n / N = N
     *  n / I = 0
     *  0 / n = 0
     *  0 / 0 = N
     *  0 / N = N
     *  0 / I = 0
     *  N / n = N
     *  N / 0 = N
     *  N / N = N
     *  N / I = N
     *  I / n = I
     *  I / 0 = I
     *  I / N = N
     *  I / I = N
     *
     * Return a new BigNumber whose value is the value of this BigNumber divided by the value of
     * BigNumber(y, b), rounded according to DECIMAL_PLACES and ROUNDING_MODE.
     */
    P.dividedBy = P.div = function (y, b) {
      return div(this, new BigNumber(y, b), DECIMAL_PLACES, ROUNDING_MODE);
    };


    /*
     * Return a new BigNumber whose value is the integer part of dividing the value of this
     * BigNumber by the value of BigNumber(y, b).
     */
    P.dividedToIntegerBy = P.idiv = function (y, b) {
      return div(this, new BigNumber(y, b), 0, 1);
    };


    /*
     * Return a BigNumber whose value is the value of this BigNumber exponentiated by n.
     *
     * If m is present, return the result modulo m.
     * If n is negative round according to DECIMAL_PLACES and ROUNDING_MODE.
     * If POW_PRECISION is non-zero and m is not present, round to POW_PRECISION using ROUNDING_MODE.
     *
     * The modular power operation works efficiently when x, n, and m are integers, otherwise it
     * is equivalent to calculating x.exponentiatedBy(n).modulo(m) with a POW_PRECISION of 0.
     *
     * n {number|string|BigNumber} The exponent. An integer.
     * [m] {number|string|BigNumber} The modulus.
     *
     * '[BigNumber Error] Exponent not an integer: {n}'
     */
    P.exponentiatedBy = P.pow = function (n, m) {
      var half, isModExp, i, k, more, nIsBig, nIsNeg, nIsOdd, y,
        x = this;

      n = new BigNumber(n);

      // Allow NaN and ±Infinity, but not other non-integers.
      if (n.c && !n.isInteger()) {
        throw Error
          (bignumberError + 'Exponent not an integer: ' + valueOf(n));
      }

      if (m != null) m = new BigNumber(m);

      // Exponent of MAX_SAFE_INTEGER is 15.
      nIsBig = n.e > 14;

      // If x is NaN, ±Infinity, ±0 or ±1, or n is ±Infinity, NaN or ±0.
      if (!x.c || !x.c[0] || x.c[0] == 1 && !x.e && x.c.length == 1 || !n.c || !n.c[0]) {

        // The sign of the result of pow when x is negative depends on the evenness of n.
        // If +n overflows to ±Infinity, the evenness of n would be not be known.
        y = new BigNumber(Math.pow(+valueOf(x), nIsBig ? 2 - isOdd(n) : +valueOf(n)));
        return m ? y.mod(m) : y;
      }

      nIsNeg = n.s < 0;

      if (m) {

        // x % m returns NaN if abs(m) is zero, or m is NaN.
        if (m.c ? !m.c[0] : !m.s) return new BigNumber(NaN);

        isModExp = !nIsNeg && x.isInteger() && m.isInteger();

        if (isModExp) x = x.mod(m);

      // Overflow to ±Infinity: >=2**1e10 or >=1.0000024**1e15.
      // Underflow to ±0: <=0.79**1e10 or <=0.9999975**1e15.
      } else if (n.e > 9 && (x.e > 0 || x.e < -1 || (x.e == 0
        // [1, 240000000]
        ? x.c[0] > 1 || nIsBig && x.c[1] >= 24e7
        // [80000000000000]  [99999750000000]
        : x.c[0] < 8e13 || nIsBig && x.c[0] <= 9999975e7))) {

        // If x is negative and n is odd, k = -0, else k = 0.
        k = x.s < 0 && isOdd(n) ? -0 : 0;

        // If x >= 1, k = ±Infinity.
        if (x.e > -1) k = 1 / k;

        // If n is negative return ±0, else return ±Infinity.
        return new BigNumber(nIsNeg ? 1 / k : k);

      } else if (POW_PRECISION) {

        // Truncating each coefficient array to a length of k after each multiplication
        // equates to truncating significant digits to POW_PRECISION + [28, 41],
        // i.e. there will be a minimum of 28 guard digits retained.
        k = mathceil(POW_PRECISION / LOG_BASE + 2);
      }

      if (nIsBig) {
        half = new BigNumber(0.5);
        if (nIsNeg) n.s = 1;
        nIsOdd = isOdd(n);
      } else {
        i = Math.abs(+valueOf(n));
        nIsOdd = i % 2;
      }

      y = new BigNumber(ONE);

      // Performs 54 loop iterations for n of 9007199254740991.
      for (; ;) {

        if (nIsOdd) {
          y = y.times(x);
          if (!y.c) break;

          if (k) {
            if (y.c.length > k) y.c.length = k;
          } else if (isModExp) {
            y = y.mod(m);    //y = y.minus(div(y, m, 0, MODULO_MODE).times(m));
          }
        }

        if (i) {
          i = mathfloor(i / 2);
          if (i === 0) break;
          nIsOdd = i % 2;
        } else {
          n = n.times(half);
          round(n, n.e + 1, 1);

          if (n.e > 14) {
            nIsOdd = isOdd(n);
          } else {
            i = +valueOf(n);
            if (i === 0) break;
            nIsOdd = i % 2;
          }
        }

        x = x.times(x);

        if (k) {
          if (x.c && x.c.length > k) x.c.length = k;
        } else if (isModExp) {
          x = x.mod(m);    //x = x.minus(div(x, m, 0, MODULO_MODE).times(m));
        }
      }

      if (isModExp) return y;
      if (nIsNeg) y = ONE.div(y);

      return m ? y.mod(m) : k ? round(y, POW_PRECISION, ROUNDING_MODE, more) : y;
    };


    /*
     * Return a new BigNumber whose value is the value of this BigNumber rounded to an integer
     * using rounding mode rm, or ROUNDING_MODE if rm is omitted.
     *
     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.
     *
     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {rm}'
     */
    P.integerValue = function (rm) {
      var n = new BigNumber(this);
      if (rm == null) rm = ROUNDING_MODE;
      else intCheck(rm, 0, 8);
      return round(n, n.e + 1, rm);
    };


    /*
     * Return true if the value of this BigNumber is equal to the value of BigNumber(y, b),
     * otherwise return false.
     */
    P.isEqualTo = P.eq = function (y, b) {
      return compare(this, new BigNumber(y, b)) === 0;
    };


    /*
     * Return true if the value of this BigNumber is a finite number, otherwise return false.
     */
    P.isFinite = function () {
      return !!this.c;
    };


    /*
     * Return true if the value of this BigNumber is greater than the value of BigNumber(y, b),
     * otherwise return false.
     */
    P.isGreaterThan = P.gt = function (y, b) {
      return compare(this, new BigNumber(y, b)) > 0;
    };


    /*
     * Return true if the value of this BigNumber is greater than or equal to the value of
     * BigNumber(y, b), otherwise return false.
     */
    P.isGreaterThanOrEqualTo = P.gte = function (y, b) {
      return (b = compare(this, new BigNumber(y, b))) === 1 || b === 0;

    };


    /*
     * Return true if the value of this BigNumber is an integer, otherwise return false.
     */
    P.isInteger = function () {
      return !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2;
    };


    /*
     * Return true if the value of this BigNumber is less than the value of BigNumber(y, b),
     * otherwise return false.
     */
    P.isLessThan = P.lt = function (y, b) {
      return compare(this, new BigNumber(y, b)) < 0;
    };


    /*
     * Return true if the value of this BigNumber is less than or equal to the value of
     * BigNumber(y, b), otherwise return false.
     */
    P.isLessThanOrEqualTo = P.lte = function (y, b) {
      return (b = compare(this, new BigNumber(y, b))) === -1 || b === 0;
    };


    /*
     * Return true if the value of this BigNumber is NaN, otherwise return false.
     */
    P.isNaN = function () {
      return !this.s;
    };


    /*
     * Return true if the value of this BigNumber is negative, otherwise return false.
     */
    P.isNegative = function () {
      return this.s < 0;
    };


    /*
     * Return true if the value of this BigNumber is positive, otherwise return false.
     */
    P.isPositive = function () {
      return this.s > 0;
    };


    /*
     * Return true if the value of this BigNumber is 0 or -0, otherwise return false.
     */
    P.isZero = function () {
      return !!this.c && this.c[0] == 0;
    };


    /*
     *  n - 0 = n
     *  n - N = N
     *  n - I = -I
     *  0 - n = -n
     *  0 - 0 = 0
     *  0 - N = N
     *  0 - I = -I
     *  N - n = N
     *  N - 0 = N
     *  N - N = N
     *  N - I = N
     *  I - n = I
     *  I - 0 = I
     *  I - N = N
     *  I - I = N
     *
     * Return a new BigNumber whose value is the value of this BigNumber minus the value of
     * BigNumber(y, b).
     */
    P.minus = function (y, b) {
      var i, j, t, xLTy,
        x = this,
        a = x.s;

      y = new BigNumber(y, b);
      b = y.s;

      // Either NaN?
      if (!a || !b) return new BigNumber(NaN);

      // Signs differ?
      if (a != b) {
        y.s = -b;
        return x.plus(y);
      }

      var xe = x.e / LOG_BASE,
        ye = y.e / LOG_BASE,
        xc = x.c,
        yc = y.c;

      if (!xe || !ye) {

        // Either Infinity?
        if (!xc || !yc) return xc ? (y.s = -b, y) : new BigNumber(yc ? x : NaN);

        // Either zero?
        if (!xc[0] || !yc[0]) {

          // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.
          return yc[0] ? (y.s = -b, y) : new BigNumber(xc[0] ? x :

           // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity
           ROUNDING_MODE == 3 ? -0 : 0);
        }
      }

      xe = bitFloor(xe);
      ye = bitFloor(ye);
      xc = xc.slice();

      // Determine which is the bigger number.
      if (a = xe - ye) {

        if (xLTy = a < 0) {
          a = -a;
          t = xc;
        } else {
          ye = xe;
          t = yc;
        }

        t.reverse();

        // Prepend zeros to equalise exponents.
        for (b = a; b--; t.push(0));
        t.reverse();
      } else {

        // Exponents equal. Check digit by digit.
        j = (xLTy = (a = xc.length) < (b = yc.length)) ? a : b;

        for (a = b = 0; b < j; b++) {

          if (xc[b] != yc[b]) {
            xLTy = xc[b] < yc[b];
            break;
          }
        }
      }

      // x < y? Point xc to the array of the bigger number.
      if (xLTy) t = xc, xc = yc, yc = t, y.s = -y.s;

      b = (j = yc.length) - (i = xc.length);

      // Append zeros to xc if shorter.
      // No need to add zeros to yc if shorter as subtract only needs to start at yc.length.
      if (b > 0) for (; b--; xc[i++] = 0);
      b = BASE - 1;

      // Subtract yc from xc.
      for (; j > a;) {

        if (xc[--j] < yc[j]) {
          for (i = j; i && !xc[--i]; xc[i] = b);
          --xc[i];
          xc[j] += BASE;
        }

        xc[j] -= yc[j];
      }

      // Remove leading zeros and adjust exponent accordingly.
      for (; xc[0] == 0; xc.splice(0, 1), --ye);

      // Zero?
      if (!xc[0]) {

        // Following IEEE 754 (2008) 6.3,
        // n - n = +0  but  n - n = -0  when rounding towards -Infinity.
        y.s = ROUNDING_MODE == 3 ? -1 : 1;
        y.c = [y.e = 0];
        return y;
      }

      // No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity
      // for finite x and y.
      return normalise(y, xc, ye);
    };


    /*
     *   n % 0 =  N
     *   n % N =  N
     *   n % I =  n
     *   0 % n =  0
     *  -0 % n = -0
     *   0 % 0 =  N
     *   0 % N =  N
     *   0 % I =  0
     *   N % n =  N
     *   N % 0 =  N
     *   N % N =  N
     *   N % I =  N
     *   I % n =  N
     *   I % 0 =  N
     *   I % N =  N
     *   I % I =  N
     *
     * Return a new BigNumber whose value is the value of this BigNumber modulo the value of
     * BigNumber(y, b). The result depends on the value of MODULO_MODE.
     */
    P.modulo = P.mod = function (y, b) {
      var q, s,
        x = this;

      y = new BigNumber(y, b);

      // Return NaN if x is Infinity or NaN, or y is NaN or zero.
      if (!x.c || !y.s || y.c && !y.c[0]) {
        return new BigNumber(NaN);

      // Return x if y is Infinity or x is zero.
      } else if (!y.c || x.c && !x.c[0]) {
        return new BigNumber(x);
      }

      if (MODULO_MODE == 9) {

        // Euclidian division: q = sign(y) * floor(x / abs(y))
        // r = x - qy    where  0 <= r < abs(y)
        s = y.s;
        y.s = 1;
        q = div(x, y, 0, 3);
        y.s = s;
        q.s *= s;
      } else {
        q = div(x, y, 0, MODULO_MODE);
      }

      y = x.minus(q.times(y));

      // To match JavaScript %, ensure sign of zero is sign of dividend.
      if (!y.c[0] && MODULO_MODE == 1) y.s = x.s;

      return y;
    };


    /*
     *  n * 0 = 0
     *  n * N = N
     *  n * I = I
     *  0 * n = 0
     *  0 * 0 = 0
     *  0 * N = N
     *  0 * I = N
     *  N * n = N
     *  N * 0 = N
     *  N * N = N
     *  N * I = N
     *  I * n = I
     *  I * 0 = N
     *  I * N = N
     *  I * I = I
     *
     * Return a new BigNumber whose value is the value of this BigNumber multiplied by the value
     * of BigNumber(y, b).
     */
    P.multipliedBy = P.times = function (y, b) {
      var c, e, i, j, k, m, xcL, xlo, xhi, ycL, ylo, yhi, zc,
        base, sqrtBase,
        x = this,
        xc = x.c,
        yc = (y = new BigNumber(y, b)).c;

      // Either NaN, ±Infinity or ±0?
      if (!xc || !yc || !xc[0] || !yc[0]) {

        // Return NaN if either is NaN, or one is 0 and the other is Infinity.
        if (!x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc) {
          y.c = y.e = y.s = null;
        } else {
          y.s *= x.s;

          // Return ±Infinity if either is ±Infinity.
          if (!xc || !yc) {
            y.c = y.e = null;

          // Return ±0 if either is ±0.
          } else {
            y.c = [0];
            y.e = 0;
          }
        }

        return y;
      }

      e = bitFloor(x.e / LOG_BASE) + bitFloor(y.e / LOG_BASE);
      y.s *= x.s;
      xcL = xc.length;
      ycL = yc.length;

      // Ensure xc points to longer array and xcL to its length.
      if (xcL < ycL) zc = xc, xc = yc, yc = zc, i = xcL, xcL = ycL, ycL = i;

      // Initialise the result array with zeros.
      for (i = xcL + ycL, zc = []; i--; zc.push(0));

      base = BASE;
      sqrtBase = SQRT_BASE;

      for (i = ycL; --i >= 0;) {
        c = 0;
        ylo = yc[i] % sqrtBase;
        yhi = yc[i] / sqrtBase | 0;

        for (k = xcL, j = i + k; j > i;) {
          xlo = xc[--k] % sqrtBase;
          xhi = xc[k] / sqrtBase | 0;
          m = yhi * xlo + xhi * ylo;
          xlo = ylo * xlo + ((m % sqrtBase) * sqrtBase) + zc[j] + c;
          c = (xlo / base | 0) + (m / sqrtBase | 0) + yhi * xhi;
          zc[j--] = xlo % base;
        }

        zc[j] = c;
      }

      if (c) {
        ++e;
      } else {
        zc.splice(0, 1);
      }

      return normalise(y, zc, e);
    };


    /*
     * Return a new BigNumber whose value is the value of this BigNumber negated,
     * i.e. multiplied by -1.
     */
    P.negated = function () {
      var x = new BigNumber(this);
      x.s = -x.s || null;
      return x;
    };


    /*
     *  n + 0 = n
     *  n + N = N
     *  n + I = I
     *  0 + n = n
     *  0 + 0 = 0
     *  0 + N = N
     *  0 + I = I
     *  N + n = N
     *  N + 0 = N
     *  N + N = N
     *  N + I = N
     *  I + n = I
     *  I + 0 = I
     *  I + N = N
     *  I + I = I
     *
     * Return a new BigNumber whose value is the value of this BigNumber plus the value of
     * BigNumber(y, b).
     */
    P.plus = function (y, b) {
      var t,
        x = this,
        a = x.s;

      y = new BigNumber(y, b);
      b = y.s;

      // Either NaN?
      if (!a || !b) return new BigNumber(NaN);

      // Signs differ?
       if (a != b) {
        y.s = -b;
        return x.minus(y);
      }

      var xe = x.e / LOG_BASE,
        ye = y.e / LOG_BASE,
        xc = x.c,
        yc = y.c;

      if (!xe || !ye) {

        // Return ±Infinity if either ±Infinity.
        if (!xc || !yc) return new BigNumber(a / 0);

        // Either zero?
        // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.
        if (!xc[0] || !yc[0]) return yc[0] ? y : new BigNumber(xc[0] ? x : a * 0);
      }

      xe = bitFloor(xe);
      ye = bitFloor(ye);
      xc = xc.slice();

      // Prepend zeros to equalise exponents. Faster to use reverse then do unshifts.
      if (a = xe - ye) {
        if (a > 0) {
          ye = xe;
          t = yc;
        } else {
          a = -a;
          t = xc;
        }

        t.reverse();
        for (; a--; t.push(0));
        t.reverse();
      }

      a = xc.length;
      b = yc.length;

      // Point xc to the longer array, and b to the shorter length.
      if (a - b < 0) t = yc, yc = xc, xc = t, b = a;

      // Only start adding at yc.length - 1 as the further digits of xc can be ignored.
      for (a = 0; b;) {
        a = (xc[--b] = xc[b] + yc[b] + a) / BASE | 0;
        xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;
      }

      if (a) {
        xc = [a].concat(xc);
        ++ye;
      }

      // No need to check for zero, as +x + +y != 0 && -x + -y != 0
      // ye = MAX_EXP + 1 possible
      return normalise(y, xc, ye);
    };


    /*
     * If sd is undefined or null or true or false, return the number of significant digits of
     * the value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.
     * If sd is true include integer-part trailing zeros in the count.
     *
     * Otherwise, if sd is a number, return a new BigNumber whose value is the value of this
     * BigNumber rounded to a maximum of sd significant digits using rounding mode rm, or
     * ROUNDING_MODE if rm is omitted.
     *
     * sd {number|boolean} number: significant digits: integer, 1 to MAX inclusive.
     *                     boolean: whether to count integer-part trailing zeros: true or false.
     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.
     *
     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'
     */
    P.precision = P.sd = function (sd, rm) {
      var c, n, v,
        x = this;

      if (sd != null && sd !== !!sd) {
        intCheck(sd, 1, MAX);
        if (rm == null) rm = ROUNDING_MODE;
        else intCheck(rm, 0, 8);

        return round(new BigNumber(x), sd, rm);
      }

      if (!(c = x.c)) return null;
      v = c.length - 1;
      n = v * LOG_BASE + 1;

      if (v = c[v]) {

        // Subtract the number of trailing zeros of the last element.
        for (; v % 10 == 0; v /= 10, n--);

        // Add the number of digits of the first element.
        for (v = c[0]; v >= 10; v /= 10, n++);
      }

      if (sd && x.e + 1 > n) n = x.e + 1;

      return n;
    };


    /*
     * Return a new BigNumber whose value is the value of this BigNumber shifted by k places
     * (powers of 10). Shift to the right if n > 0, and to the left if n < 0.
     *
     * k {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.
     *
     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {k}'
     */
    P.shiftedBy = function (k) {
      intCheck(k, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);
      return this.times('1e' + k);
    };


    /*
     *  sqrt(-n) =  N
     *  sqrt(N) =  N
     *  sqrt(-I) =  N
     *  sqrt(I) =  I
     *  sqrt(0) =  0
     *  sqrt(-0) = -0
     *
     * Return a new BigNumber whose value is the square root of the value of this BigNumber,
     * rounded according to DECIMAL_PLACES and ROUNDING_MODE.
     */
    P.squareRoot = P.sqrt = function () {
      var m, n, r, rep, t,
        x = this,
        c = x.c,
        s = x.s,
        e = x.e,
        dp = DECIMAL_PLACES + 4,
        half = new BigNumber('0.5');

      // Negative/NaN/Infinity/zero?
      if (s !== 1 || !c || !c[0]) {
        return new BigNumber(!s || s < 0 && (!c || c[0]) ? NaN : c ? x : 1 / 0);
      }

      // Initial estimate.
      s = Math.sqrt(+valueOf(x));

      // Math.sqrt underflow/overflow?
      // Pass x to Math.sqrt as integer, then adjust the exponent of the result.
      if (s == 0 || s == 1 / 0) {
        n = coeffToString(c);
        if ((n.length + e) % 2 == 0) n += '0';
        s = Math.sqrt(+n);
        e = bitFloor((e + 1) / 2) - (e < 0 || e % 2);

        if (s == 1 / 0) {
          n = '5e' + e;
        } else {
          n = s.toExponential();
          n = n.slice(0, n.indexOf('e') + 1) + e;
        }

        r = new BigNumber(n);
      } else {
        r = new BigNumber(s + '');
      }

      // Check for zero.
      // r could be zero if MIN_EXP is changed after the this value was created.
      // This would cause a division by zero (x/t) and hence Infinity below, which would cause
      // coeffToString to throw.
      if (r.c[0]) {
        e = r.e;
        s = e + dp;
        if (s < 3) s = 0;

        // Newton-Raphson iteration.
        for (; ;) {
          t = r;
          r = half.times(t.plus(div(x, t, dp, 1)));

          if (coeffToString(t.c).slice(0, s) === (n = coeffToString(r.c)).slice(0, s)) {

            // The exponent of r may here be one less than the final result exponent,
            // e.g 0.0009999 (e-4) --> 0.001 (e-3), so adjust s so the rounding digits
            // are indexed correctly.
            if (r.e < e) --s;
            n = n.slice(s - 3, s + 1);

            // The 4th rounding digit may be in error by -1 so if the 4 rounding digits
            // are 9999 or 4999 (i.e. approaching a rounding boundary) continue the
            // iteration.
            if (n == '9999' || !rep && n == '4999') {

              // On the first iteration only, check to see if rounding up gives the
              // exact result as the nines may infinitely repeat.
              if (!rep) {
                round(t, t.e + DECIMAL_PLACES + 2, 0);

                if (t.times(t).eq(x)) {
                  r = t;
                  break;
                }
              }

              dp += 4;
              s += 4;
              rep = 1;
            } else {

              // If rounding digits are null, 0{0,4} or 50{0,3}, check for exact
              // result. If not, then there are further digits and m will be truthy.
              if (!+n || !+n.slice(1) && n.charAt(0) == '5') {

                // Truncate to the first rounding digit.
                round(r, r.e + DECIMAL_PLACES + 2, 1);
                m = !r.times(r).eq(x);
              }

              break;
            }
          }
        }
      }

      return round(r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m);
    };


    /*
     * Return a string representing the value of this BigNumber in exponential notation and
     * rounded using ROUNDING_MODE to dp fixed decimal places.
     *
     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.
     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.
     *
     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'
     */
    P.toExponential = function (dp, rm) {
      if (dp != null) {
        intCheck(dp, 0, MAX);
        dp++;
      }
      return format(this, dp, rm, 1);
    };


    /*
     * Return a string representing the value of this BigNumber in fixed-point notation rounding
     * to dp fixed decimal places using rounding mode rm, or ROUNDING_MODE if rm is omitted.
     *
     * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',
     * but e.g. (-0.00001).toFixed(0) is '-0'.
     *
     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.
     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.
     *
     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'
     */
    P.toFixed = function (dp, rm) {
      if (dp != null) {
        intCheck(dp, 0, MAX);
        dp = dp + this.e + 1;
      }
      return format(this, dp, rm);
    };


    /*
     * Return a string representing the value of this BigNumber in fixed-point notation rounded
     * using rm or ROUNDING_MODE to dp decimal places, and formatted according to the properties
     * of the format or FORMAT object (see BigNumber.set).
     *
     * The formatting object may contain some or all of the properties shown below.
     *
     * FORMAT = {
     *   prefix: '',
     *   groupSize: 3,
     *   secondaryGroupSize: 0,
     *   groupSeparator: ',',
     *   decimalSeparator: '.',
     *   fractionGroupSize: 0,
     *   fractionGroupSeparator: '\xA0',      // non-breaking space
     *   suffix: ''
     * };
     *
     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.
     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.
     * [format] {object} Formatting options. See FORMAT pbject above.
     *
     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'
     * '[BigNumber Error] Argument not an object: {format}'
     */
    P.toFormat = function (dp, rm, format) {
      var str,
        x = this;

      if (format == null) {
        if (dp != null && rm && typeof rm == 'object') {
          format = rm;
          rm = null;
        } else if (dp && typeof dp == 'object') {
          format = dp;
          dp = rm = null;
        } else {
          format = FORMAT;
        }
      } else if (typeof format != 'object') {
        throw Error
          (bignumberError + 'Argument not an object: ' + format);
      }

      str = x.toFixed(dp, rm);

      if (x.c) {
        var i,
          arr = str.split('.'),
          g1 = +format.groupSize,
          g2 = +format.secondaryGroupSize,
          groupSeparator = format.groupSeparator || '',
          intPart = arr[0],
          fractionPart = arr[1],
          isNeg = x.s < 0,
          intDigits = isNeg ? intPart.slice(1) : intPart,
          len = intDigits.length;

        if (g2) i = g1, g1 = g2, g2 = i, len -= i;

        if (g1 > 0 && len > 0) {
          i = len % g1 || g1;
          intPart = intDigits.substr(0, i);
          for (; i < len; i += g1) intPart += groupSeparator + intDigits.substr(i, g1);
          if (g2 > 0) intPart += groupSeparator + intDigits.slice(i);
          if (isNeg) intPart = '-' + intPart;
        }

        str = fractionPart
         ? intPart + (format.decimalSeparator || '') + ((g2 = +format.fractionGroupSize)
          ? fractionPart.replace(new RegExp('\\d{' + g2 + '}\\B', 'g'),
           '$&' + (format.fractionGroupSeparator || ''))
          : fractionPart)
         : intPart;
      }

      return (format.prefix || '') + str + (format.suffix || '');
    };


    /*
     * Return an array of two BigNumbers representing the value of this BigNumber as a simple
     * fraction with an integer numerator and an integer denominator.
     * The denominator will be a positive non-zero value less than or equal to the specified
     * maximum denominator. If a maximum denominator is not specified, the denominator will be
     * the lowest value necessary to represent the number exactly.
     *
     * [md] {number|string|BigNumber} Integer >= 1, or Infinity. The maximum denominator.
     *
     * '[BigNumber Error] Argument {not an integer|out of range} : {md}'
     */
    P.toFraction = function (md) {
      var d, d0, d1, d2, e, exp, n, n0, n1, q, r, s,
        x = this,
        xc = x.c;

      if (md != null) {
        n = new BigNumber(md);

        // Throw if md is less than one or is not an integer, unless it is Infinity.
        if (!n.isInteger() && (n.c || n.s !== 1) || n.lt(ONE)) {
          throw Error
            (bignumberError + 'Argument ' +
              (n.isInteger() ? 'out of range: ' : 'not an integer: ') + valueOf(n));
        }
      }

      if (!xc) return new BigNumber(x);

      d = new BigNumber(ONE);
      n1 = d0 = new BigNumber(ONE);
      d1 = n0 = new BigNumber(ONE);
      s = coeffToString(xc);

      // Determine initial denominator.
      // d is a power of 10 and the minimum max denominator that specifies the value exactly.
      e = d.e = s.length - x.e - 1;
      d.c[0] = POWS_TEN[(exp = e % LOG_BASE) < 0 ? LOG_BASE + exp : exp];
      md = !md || n.comparedTo(d) > 0 ? (e > 0 ? d : n1) : n;

      exp = MAX_EXP;
      MAX_EXP = 1 / 0;
      n = new BigNumber(s);

      // n0 = d1 = 0
      n0.c[0] = 0;

      for (; ;)  {
        q = div(n, d, 0, 1);
        d2 = d0.plus(q.times(d1));
        if (d2.comparedTo(md) == 1) break;
        d0 = d1;
        d1 = d2;
        n1 = n0.plus(q.times(d2 = n1));
        n0 = d2;
        d = n.minus(q.times(d2 = d));
        n = d2;
      }

      d2 = div(md.minus(d0), d1, 0, 1);
      n0 = n0.plus(d2.times(n1));
      d0 = d0.plus(d2.times(d1));
      n0.s = n1.s = x.s;
      e = e * 2;

      // Determine which fraction is closer to x, n0/d0 or n1/d1
      r = div(n1, d1, e, ROUNDING_MODE).minus(x).abs().comparedTo(
          div(n0, d0, e, ROUNDING_MODE).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];

      MAX_EXP = exp;

      return r;
    };


    /*
     * Return the value of this BigNumber converted to a number primitive.
     */
    P.toNumber = function () {
      return +valueOf(this);
    };


    /*
     * Return a string representing the value of this BigNumber rounded to sd significant digits
     * using rounding mode rm or ROUNDING_MODE. If sd is less than the number of digits
     * necessary to represent the integer part of the value in fixed-point notation, then use
     * exponential notation.
     *
     * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.
     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.
     *
     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'
     */
    P.toPrecision = function (sd, rm) {
      if (sd != null) intCheck(sd, 1, MAX);
      return format(this, sd, rm, 2);
    };


    /*
     * Return a string representing the value of this BigNumber in base b, or base 10 if b is
     * omitted. If a base is specified, including base 10, round according to DECIMAL_PLACES and
     * ROUNDING_MODE. If a base is not specified, and this BigNumber has a positive exponent
     * that is equal to or greater than TO_EXP_POS, or a negative exponent equal to or less than
     * TO_EXP_NEG, return exponential notation.
     *
     * [b] {number} Integer, 2 to ALPHABET.length inclusive.
     *
     * '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'
     */
    P.toString = function (b) {
      var str,
        n = this,
        s = n.s,
        e = n.e;

      // Infinity or NaN?
      if (e === null) {
        if (s) {
          str = 'Infinity';
          if (s < 0) str = '-' + str;
        } else {
          str = 'NaN';
        }
      } else {
        if (b == null) {
          str = e <= TO_EXP_NEG || e >= TO_EXP_POS
           ? toExponential(coeffToString(n.c), e)
           : toFixedPoint(coeffToString(n.c), e, '0');
        } else if (b === 10 && alphabetHasNormalDecimalDigits) {
          n = round(new BigNumber(n), DECIMAL_PLACES + e + 1, ROUNDING_MODE);
          str = toFixedPoint(coeffToString(n.c), n.e, '0');
        } else {
          intCheck(b, 2, ALPHABET.length, 'Base');
          str = convertBase(toFixedPoint(coeffToString(n.c), e, '0'), 10, b, s, true);
        }

        if (s < 0 && n.c[0]) str = '-' + str;
      }

      return str;
    };


    /*
     * Return as toString, but do not accept a base argument, and include the minus sign for
     * negative zero.
     */
    P.valueOf = P.toJSON = function () {
      return valueOf(this);
    };


    P._isBigNumber = true;

    if (configObject != null) BigNumber.set(configObject);

    return BigNumber;
  }


  // PRIVATE HELPER FUNCTIONS

  // These functions don't need access to variables,
  // e.g. DECIMAL_PLACES, in the scope of the `clone` function above.


  function bitFloor(n) {
    var i = n | 0;
    return n > 0 || n === i ? i : i - 1;
  }


  // Return a coefficient array as a string of base 10 digits.
  function coeffToString(a) {
    var s, z,
      i = 1,
      j = a.length,
      r = a[0] + '';

    for (; i < j;) {
      s = a[i++] + '';
      z = LOG_BASE - s.length;
      for (; z--; s = '0' + s);
      r += s;
    }

    // Determine trailing zeros.
    for (j = r.length; r.charCodeAt(--j) === 48;);

    return r.slice(0, j + 1 || 1);
  }


  // Compare the value of BigNumbers x and y.
  function compare(x, y) {
    var a, b,
      xc = x.c,
      yc = y.c,
      i = x.s,
      j = y.s,
      k = x.e,
      l = y.e;

    // Either NaN?
    if (!i || !j) return null;

    a = xc && !xc[0];
    b = yc && !yc[0];

    // Either zero?
    if (a || b) return a ? b ? 0 : -j : i;

    // Signs differ?
    if (i != j) return i;

    a = i < 0;
    b = k == l;

    // Either Infinity?
    if (!xc || !yc) return b ? 0 : !xc ^ a ? 1 : -1;

    // Compare exponents.
    if (!b) return k > l ^ a ? 1 : -1;

    j = (k = xc.length) < (l = yc.length) ? k : l;

    // Compare digit by digit.
    for (i = 0; i < j; i++) if (xc[i] != yc[i]) return xc[i] > yc[i] ^ a ? 1 : -1;

    // Compare lengths.
    return k == l ? 0 : k > l ^ a ? 1 : -1;
  }


  /*
   * Check that n is a primitive number, an integer, and in range, otherwise throw.
   */
  function intCheck(n, min, max, name) {
    if (n < min || n > max || n !== mathfloor(n)) {
      throw Error
       (bignumberError + (name || 'Argument') + (typeof n == 'number'
         ? n < min || n > max ? ' out of range: ' : ' not an integer: '
         : ' not a primitive number: ') + String(n));
    }
  }


  // Assumes finite n.
  function isOdd(n) {
    var k = n.c.length - 1;
    return bitFloor(n.e / LOG_BASE) == k && n.c[k] % 2 != 0;
  }


  function toExponential(str, e) {
    return (str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str) +
     (e < 0 ? 'e' : 'e+') + e;
  }


  function toFixedPoint(str, e, z) {
    var len, zs;

    // Negative exponent?
    if (e < 0) {

      // Prepend zeros.
      for (zs = z + '.'; ++e; zs += z);
      str = zs + str;

    // Positive exponent
    } else {
      len = str.length;

      // Append zeros.
      if (++e > len) {
        for (zs = z, e -= len; --e; zs += z);
        str += zs;
      } else if (e < len) {
        str = str.slice(0, e) + '.' + str.slice(e);
      }
    }

    return str;
  }


  // EXPORT


  BigNumber = clone();
  BigNumber['default'] = BigNumber.BigNumber = BigNumber;

  // AMD.
  if (typeof define == 'function' && define.amd) {
    define(function () { return BigNumber; });

  // Node.js and other environments that support module.exports.
  } else if (typeof module != 'undefined' && module.exports) {
    module.exports = BigNumber;

  // Browser.
  } else {
    if (!globalObject) {
      globalObject = typeof self != 'undefined' && self ? self : window;
    }

    globalObject.BigNumber = BigNumber;
  }
})(this);

},{}]},{},[7]);
