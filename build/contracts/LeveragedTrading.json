{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "amountBtcDown",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "amountBtcUp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "collateralBtcDown",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "collateralBtcUp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBtcDownPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBtcPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBtcUpPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBtcdownBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBtcupBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountUsdc",
          "type": "uint256"
        }
      ],
      "name": "initiatePool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountUsdc",
          "type": "uint256"
        }
      ],
      "name": "issueBtcDown",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountUsdc",
          "type": "uint256"
        }
      ],
      "name": "issueBtcUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastBtcPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "poolIsInitiated",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceBtcDown",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceBtcUp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rebalanceLeveragedTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountLeveragedTokens",
          "type": "uint256"
        }
      ],
      "name": "redeemBtcDown",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountLeveragedTokens",
          "type": "uint256"
        }
      ],
      "name": "redeemBtcUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/home/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/access/Ownable.sol",
    "1": "/home/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/ERC20.sol",
    "2": "/home/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/IERC20.sol",
    "3": "/home/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/extensions/ERC20Burnable.sol",
    "4": "/home/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/extensions/IERC20Metadata.sol",
    "5": "/home/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/Context.sol",
    "6": "/home/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/math/SafeMath.sol",
    "7": "/home/alex/.brownie/packages/smartcontractkit/chainlink@1.3.0/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
    "8": "contracts/LeveragedTrading.sol"
  },
  "ast": {
    "absolutePath": "contracts/LeveragedTrading.sol",
    "exportedSymbols": {
      "AggregatorV3Interface": [
        1914
      ],
      "BTCDOWN": [
        178
      ],
      "BTCUP": [
        108
      ],
      "Context": [
        1935
      ],
      "ERC20": [
        1494
      ],
      "ERC20Burnable": [
        1556
      ],
      "IERC20": [
        38
      ],
      "LeveragedTrading": [
        844
      ],
      "Ownable": [
        948
      ],
      "SafeMath": [
        1868
      ]
    },
    "id": 845,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:8"
      },
      {
        "absolutePath": "/home/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 845,
        "sourceUnit": 1495,
        "src": "57:69:8",
        "symbolAliases": [
          {
            "foreign": {
              "id": 2,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "66:5:8",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        "file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 845,
        "sourceUnit": 1557,
        "src": "127:96:8",
        "symbolAliases": [
          {
            "foreign": {
              "id": 4,
              "name": "ERC20Burnable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "136:13:8",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/alex/.brownie/packages/smartcontractkit/chainlink@1.3.0/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "id": 6,
        "nodeType": "ImportDirective",
        "scope": 845,
        "sourceUnit": 1915,
        "src": "224:76:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 7,
        "nodeType": "ImportDirective",
        "scope": 845,
        "sourceUnit": 1869,
        "src": "301:57:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 8,
        "nodeType": "ImportDirective",
        "scope": 845,
        "sourceUnit": 949,
        "src": "359:52:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 38,
        "linearizedBaseContracts": [
          38
        ],
        "name": "IERC20",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "a9059cbb",
            "id": 17,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 17,
                  "src": "455:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "455:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 17,
                  "src": "474:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "474:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "454:35:8"
            },
            "returnParameters": {
              "id": 16,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 17,
                  "src": "508:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 14,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "508:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "507:6:8"
            },
            "scope": 38,
            "src": "437:77:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "23b872dd",
            "id": 28,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 28,
                  "src": "541:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "541:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 28,
                  "src": "557:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "557:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 28,
                  "src": "576:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "576:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "540:51:8"
            },
            "returnParameters": {
              "id": 27,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 28,
                  "src": "610:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 25,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "610:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "609:6:8"
            },
            "scope": 38,
            "src": "519:97:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "095ea7b3",
            "id": 37,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 33,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 37,
                  "src": "638:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 29,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "638:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 37,
                  "src": "655:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "655:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "637:33:8"
            },
            "returnParameters": {
              "id": 36,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 37,
                  "src": "689:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 34,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "689:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "688:6:8"
            },
            "scope": 38,
            "src": "621:74:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 845,
        "src": "414:283:8"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 39,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1494,
              "src": "719:5:8"
            },
            "id": 40,
            "nodeType": "InheritanceSpecifier",
            "src": "719:5:8"
          },
          {
            "baseName": {
              "id": 41,
              "name": "ERC20Burnable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1556,
              "src": "726:13:8"
            },
            "id": 42,
            "nodeType": "InheritanceSpecifier",
            "src": "726:13:8"
          }
        ],
        "contractDependencies": [
          1494,
          1556,
          1935,
          2013,
          2038
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 108,
        "linearizedBaseContracts": [
          108,
          1556,
          1494,
          2038,
          2013,
          1935
        ],
        "name": "BTCUP",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 44,
            "mutability": "mutable",
            "name": "parentAddress",
            "nodeType": "VariableDeclaration",
            "scope": 108,
            "src": "746:21:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 43,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "746:7:8",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 57,
              "nodeType": "Block",
              "src": "839:47:8",
              "statements": [
                {
                  "expression": {
                    "id": 55,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 53,
                      "name": "parentAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "849:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 54,
                      "name": "_parentAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "865:14:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "849:30:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 56,
                  "nodeType": "ExpressionStatement",
                  "src": "849:30:8"
                }
              ]
            },
            "id": 58,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "426974636f696e205570",
                    "id": 49,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "816:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_9cbc1d0721872492c3eae100dd6a7dad3b4b199dc4e72a46010b2b1c98a11964",
                      "typeString": "literal_string \"Bitcoin Up\""
                    },
                    "value": "Bitcoin Up"
                  },
                  {
                    "hexValue": "4254435550",
                    "id": 50,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "830:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_f92903022a172a42cae03bdc1621474c2ab6bc2b8980d8251e05283c61f8c975",
                      "typeString": "literal_string \"BTCUP\""
                    },
                    "value": "BTCUP"
                  }
                ],
                "id": 51,
                "modifierName": {
                  "id": 48,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1494,
                  "src": "810:5:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "810:28:8"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 47,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46,
                  "mutability": "mutable",
                  "name": "_parentAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 58,
                  "src": "786:22:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "786:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "785:24:8"
            },
            "returnParameters": {
              "id": 52,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "839:0:8"
            },
            "scope": 108,
            "src": "774:112:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 71,
              "nodeType": "Block",
              "src": "942:43:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 66,
                          "name": "tx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -26,
                          "src": "958:2:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_transaction",
                            "typeString": "tx"
                          }
                        },
                        "id": 67,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "origin",
                        "nodeType": "MemberAccess",
                        "src": "958:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 68,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60,
                        "src": "969:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 65,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1354,
                      "src": "952:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 69,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "952:26:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 70,
                  "nodeType": "ExpressionStatement",
                  "src": "952:26:8"
                }
              ]
            },
            "functionSelector": "a0712d68",
            "id": 72,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 63,
                "modifierName": {
                  "id": 62,
                  "name": "onlyParent",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 107,
                  "src": "931:10:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "931:10:8"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 61,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nodeType": "VariableDeclaration",
                  "scope": 72,
                  "src": "906:16:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "906:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "905:18:8"
            },
            "returnParameters": {
              "id": 64,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "942:0:8"
            },
            "scope": 108,
            "src": "892:93:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1516
            ],
            "body": {
              "id": 86,
              "nodeType": "Block",
              "src": "1050:46:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 81,
                          "name": "tx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -26,
                          "src": "1069:2:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_transaction",
                            "typeString": "tx"
                          }
                        },
                        "id": 82,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "origin",
                        "nodeType": "MemberAccess",
                        "src": "1069:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 83,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74,
                        "src": "1080:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 80,
                      "name": "burnFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1555,
                      "src": "1060:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1060:29:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85,
                  "nodeType": "ExpressionStatement",
                  "src": "1060:29:8"
                }
              ]
            },
            "functionSelector": "42966c68",
            "id": 87,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 78,
                "modifierName": {
                  "id": 77,
                  "name": "onlyParent",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 107,
                  "src": "1039:10:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "1039:10:8"
              }
            ],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 76,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1030:8:8"
            },
            "parameters": {
              "id": 75,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "1005:16:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1005:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1004:18:8"
            },
            "returnParameters": {
              "id": 79,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1050:0:8"
            },
            "scope": 108,
            "src": "991:105:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1023
            ],
            "body": {
              "id": 95,
              "nodeType": "Block",
              "src": "1159:25:8",
              "statements": [
                {
                  "expression": {
                    "hexValue": "36",
                    "id": 93,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1176:1:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_6_by_1",
                      "typeString": "int_const 6"
                    },
                    "value": "6"
                  },
                  "functionReturnParameters": 92,
                  "id": 94,
                  "nodeType": "Return",
                  "src": "1169:8:8"
                }
              ]
            },
            "functionSelector": "313ce567",
            "id": 96,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 89,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1134:8:8"
            },
            "parameters": {
              "id": 88,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1119:2:8"
            },
            "returnParameters": {
              "id": 92,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 96,
                  "src": "1152:5:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 90,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1152:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1151:7:8"
            },
            "scope": 108,
            "src": "1102:82:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 106,
              "nodeType": "Block",
              "src": "1210:64:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 99,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1228:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1228:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 101,
                          "name": "parentAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "1242:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1228:27:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 98,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1220:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1220:36:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 104,
                  "nodeType": "ExpressionStatement",
                  "src": "1220:36:8"
                },
                {
                  "id": 105,
                  "nodeType": "PlaceholderStatement",
                  "src": "1266:1:8"
                }
              ]
            },
            "id": 107,
            "name": "onlyParent",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 97,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1210:0:8"
            },
            "src": "1190:84:8",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 845,
        "src": "700:576:8"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 109,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1494,
              "src": "1298:5:8"
            },
            "id": 110,
            "nodeType": "InheritanceSpecifier",
            "src": "1298:5:8"
          },
          {
            "baseName": {
              "id": 111,
              "name": "ERC20Burnable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1556,
              "src": "1305:13:8"
            },
            "id": 112,
            "nodeType": "InheritanceSpecifier",
            "src": "1305:13:8"
          }
        ],
        "contractDependencies": [
          1494,
          1556,
          1935,
          2013,
          2038
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 178,
        "linearizedBaseContracts": [
          178,
          1556,
          1494,
          2038,
          2013,
          1935
        ],
        "name": "BTCDOWN",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 114,
            "mutability": "mutable",
            "name": "parentAddress",
            "nodeType": "VariableDeclaration",
            "scope": 178,
            "src": "1325:21:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 113,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1325:7:8",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 127,
              "nodeType": "Block",
              "src": "1422:47:8",
              "statements": [
                {
                  "expression": {
                    "id": 125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 123,
                      "name": "parentAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 114,
                      "src": "1432:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 124,
                      "name": "_parentAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 116,
                      "src": "1448:14:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1432:30:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 126,
                  "nodeType": "ExpressionStatement",
                  "src": "1432:30:8"
                }
              ]
            },
            "id": 128,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "426974636f696e20446f776e",
                    "id": 119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1395:14:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_165fe89d7acd7320260d3007f731660e2a452d2e9dbef2c2e44ee15c6b8bc1ec",
                      "typeString": "literal_string \"Bitcoin Down\""
                    },
                    "value": "Bitcoin Down"
                  },
                  {
                    "hexValue": "425443444f574e",
                    "id": 120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1411:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_72f3d7098f717fcc170dbb6c7dad0b9049f1ed825e03177180edf7a0240d28f2",
                      "typeString": "literal_string \"BTCDOWN\""
                    },
                    "value": "BTCDOWN"
                  }
                ],
                "id": 121,
                "modifierName": {
                  "id": 118,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1494,
                  "src": "1389:5:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "1389:32:8"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 116,
                  "mutability": "mutable",
                  "name": "_parentAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 128,
                  "src": "1365:22:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 115,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1365:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1364:24:8"
            },
            "returnParameters": {
              "id": 122,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1422:0:8"
            },
            "scope": 178,
            "src": "1353:116:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 141,
              "nodeType": "Block",
              "src": "1525:43:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 136,
                          "name": "tx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -26,
                          "src": "1541:2:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_transaction",
                            "typeString": "tx"
                          }
                        },
                        "id": 137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "origin",
                        "nodeType": "MemberAccess",
                        "src": "1541:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 138,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 130,
                        "src": "1552:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 135,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1354,
                      "src": "1535:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1535:26:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 140,
                  "nodeType": "ExpressionStatement",
                  "src": "1535:26:8"
                }
              ]
            },
            "functionSelector": "a0712d68",
            "id": 142,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 133,
                "modifierName": {
                  "id": 132,
                  "name": "onlyParent",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 177,
                  "src": "1514:10:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "1514:10:8"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 131,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 130,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nodeType": "VariableDeclaration",
                  "scope": 142,
                  "src": "1489:16:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 129,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1489:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1488:18:8"
            },
            "returnParameters": {
              "id": 134,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1525:0:8"
            },
            "scope": 178,
            "src": "1475:93:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1516
            ],
            "body": {
              "id": 156,
              "nodeType": "Block",
              "src": "1633:46:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 151,
                          "name": "tx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -26,
                          "src": "1652:2:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_transaction",
                            "typeString": "tx"
                          }
                        },
                        "id": 152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "origin",
                        "nodeType": "MemberAccess",
                        "src": "1652:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 153,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 144,
                        "src": "1663:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 150,
                      "name": "burnFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1555,
                      "src": "1643:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1643:29:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 155,
                  "nodeType": "ExpressionStatement",
                  "src": "1643:29:8"
                }
              ]
            },
            "functionSelector": "42966c68",
            "id": 157,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 148,
                "modifierName": {
                  "id": 147,
                  "name": "onlyParent",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 177,
                  "src": "1622:10:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "1622:10:8"
              }
            ],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 146,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1613:8:8"
            },
            "parameters": {
              "id": 145,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 144,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nodeType": "VariableDeclaration",
                  "scope": 157,
                  "src": "1588:16:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 143,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1588:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1587:18:8"
            },
            "returnParameters": {
              "id": 149,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1633:0:8"
            },
            "scope": 178,
            "src": "1574:105:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1023
            ],
            "body": {
              "id": 165,
              "nodeType": "Block",
              "src": "1742:25:8",
              "statements": [
                {
                  "expression": {
                    "hexValue": "36",
                    "id": 163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1759:1:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_6_by_1",
                      "typeString": "int_const 6"
                    },
                    "value": "6"
                  },
                  "functionReturnParameters": 162,
                  "id": 164,
                  "nodeType": "Return",
                  "src": "1752:8:8"
                }
              ]
            },
            "functionSelector": "313ce567",
            "id": 166,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 159,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1717:8:8"
            },
            "parameters": {
              "id": 158,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1702:2:8"
            },
            "returnParameters": {
              "id": 162,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 161,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 166,
                  "src": "1735:5:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 160,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1735:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1734:7:8"
            },
            "scope": 178,
            "src": "1685:82:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 176,
              "nodeType": "Block",
              "src": "1793:64:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 169,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1811:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 170,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1811:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 171,
                          "name": "parentAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 114,
                          "src": "1825:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1811:27:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 168,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1803:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1803:36:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 174,
                  "nodeType": "ExpressionStatement",
                  "src": "1803:36:8"
                },
                {
                  "id": 175,
                  "nodeType": "PlaceholderStatement",
                  "src": "1849:1:8"
                }
              ]
            },
            "id": 177,
            "name": "onlyParent",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 167,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1793:0:8"
            },
            "src": "1773:84:8",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 845,
        "src": "1278:581:8"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 179,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 948,
              "src": "1890:7:8"
            },
            "id": 180,
            "nodeType": "InheritanceSpecifier",
            "src": "1890:7:8"
          }
        ],
        "contractDependencies": [
          108,
          178,
          948,
          1935
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 844,
        "linearizedBaseContracts": [
          844,
          948,
          1935
        ],
        "name": "LeveragedTrading",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 183,
            "libraryName": {
              "id": 181,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1868,
              "src": "1910:8:8"
            },
            "nodeType": "UsingForDirective",
            "src": "1904:27:8",
            "typeName": {
              "id": 182,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1923:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "f0156e8a",
            "id": 188,
            "mutability": "mutable",
            "name": "priceBtcUp",
            "nodeType": "VariableDeclaration",
            "scope": 844,
            "src": "1937:35:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 184,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1937:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_1000000_by_1",
                "typeString": "int_const 1000000"
              },
              "id": 187,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "3130",
                "id": 185,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1965:2:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10_by_1",
                  "typeString": "int_const 10"
                },
                "value": "10"
              },
              "nodeType": "BinaryOperation",
              "operator": "**",
              "rightExpression": {
                "hexValue": "36",
                "id": 186,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1971:1:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_6_by_1",
                  "typeString": "int_const 6"
                },
                "value": "6"
              },
              "src": "1965:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000_by_1",
                "typeString": "int_const 1000000"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0c3e5343",
            "id": 193,
            "mutability": "mutable",
            "name": "priceBtcDown",
            "nodeType": "VariableDeclaration",
            "scope": 844,
            "src": "1978:37:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 189,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1978:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_1000000_by_1",
                "typeString": "int_const 1000000"
              },
              "id": 192,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "3130",
                "id": 190,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2008:2:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10_by_1",
                  "typeString": "int_const 10"
                },
                "value": "10"
              },
              "nodeType": "BinaryOperation",
              "operator": "**",
              "rightExpression": {
                "hexValue": "36",
                "id": 191,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2014:1:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_6_by_1",
                  "typeString": "int_const 6"
                },
                "value": "6"
              },
              "src": "2008:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000_by_1",
                "typeString": "int_const 1000000"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "dde7be2c",
            "id": 196,
            "mutability": "mutable",
            "name": "collateralBtcUp",
            "nodeType": "VariableDeclaration",
            "scope": 844,
            "src": "2043:34:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 194,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2043:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 195,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2076:1:8",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "14d7c6d2",
            "id": 199,
            "mutability": "mutable",
            "name": "collateralBtcDown",
            "nodeType": "VariableDeclaration",
            "scope": 844,
            "src": "2105:36:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 197,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2105:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 198,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2140:1:8",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0034b9cc",
            "id": 202,
            "mutability": "mutable",
            "name": "amountBtcUp",
            "nodeType": "VariableDeclaration",
            "scope": 844,
            "src": "2148:30:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 200,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2148:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 201,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2177:1:8",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b75cbe0b",
            "id": 205,
            "mutability": "mutable",
            "name": "amountBtcDown",
            "nodeType": "VariableDeclaration",
            "scope": 844,
            "src": "2208:32:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 203,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2208:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 204,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2239:1:8",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f4352c57",
            "id": 208,
            "mutability": "mutable",
            "name": "lastBtcPrice",
            "nodeType": "VariableDeclaration",
            "scope": 844,
            "src": "2269:31:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 206,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2269:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 207,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2299:1:8",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3074fff7",
            "id": 211,
            "mutability": "mutable",
            "name": "poolIsInitiated",
            "nodeType": "VariableDeclaration",
            "scope": 844,
            "src": "2350:35:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 209,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "2350:4:8",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 210,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2380:5:8",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 214,
            "mutability": "mutable",
            "name": "addressUsdc",
            "nodeType": "VariableDeclaration",
            "scope": 844,
            "src": "2392:64:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 212,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2392:7:8",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307862376134463345393039374330386441303935313762356142383737463761393137323234656465",
              "id": 213,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2414:42:8",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xb7a4F3E9097C08dA09517b5aB877F7a917224ede"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 217,
            "mutability": "mutable",
            "name": "addressBtcUSDFeed",
            "nodeType": "VariableDeclaration",
            "scope": 844,
            "src": "2522:71:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 215,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2522:7:8",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307836313335623133333235626643344230303237384234616243356532306262636532443635383065",
              "id": 216,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2551:42:8",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x6135b13325bfC4B00278B4abC5e20bbce2D6580e"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 220,
            "mutability": "mutable",
            "name": "btcUp",
            "nodeType": "VariableDeclaration",
            "scope": 844,
            "src": "2668:11:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_BTCUP_$108",
              "typeString": "contract BTCUP"
            },
            "typeName": {
              "id": 219,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 218,
                "name": "BTCUP",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 108,
                "src": "2668:5:8"
              },
              "referencedDeclaration": 108,
              "src": "2668:5:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BTCUP_$108",
                "typeString": "contract BTCUP"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 223,
            "mutability": "mutable",
            "name": "btcDown",
            "nodeType": "VariableDeclaration",
            "scope": 844,
            "src": "2685:15:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_BTCDOWN_$178",
              "typeString": "contract BTCDOWN"
            },
            "typeName": {
              "id": 222,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 221,
                "name": "BTCDOWN",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 178,
                "src": "2685:7:8"
              },
              "referencedDeclaration": 178,
              "src": "2685:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BTCDOWN_$178",
                "typeString": "contract BTCDOWN"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 276,
              "nodeType": "Block",
              "src": "2766:280:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2784:16:8",
                        "subExpression": {
                          "id": 231,
                          "name": "poolIsInitiated",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 211,
                          "src": "2785:15:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520706f6f6c2077617320616c726561647920696e697469617465642e",
                        "id": 233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2802:33:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_580e872a0bf3ae438081ad6284342a647742aae71fdfc53b8a10245734a22e81",
                          "typeString": "literal_string \"The pool was already initiated.\""
                        },
                        "value": "The pool was already initiated."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_580e872a0bf3ae438081ad6284342a647742aae71fdfc53b8a10245734a22e81",
                          "typeString": "literal_string \"The pool was already initiated.\""
                        }
                      ],
                      "id": 230,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2776:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2776:60:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 235,
                  "nodeType": "ExpressionStatement",
                  "src": "2776:60:8"
                },
                {
                  "expression": {
                    "id": 245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 236,
                      "name": "btcUp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 220,
                      "src": "2847:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BTCUP_$108",
                        "typeString": "contract BTCUP"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 242,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "2873:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LeveragedTrading_$844",
                                "typeString": "contract LeveragedTrading"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_LeveragedTrading_$844",
                                "typeString": "contract LeveragedTrading"
                              }
                            ],
                            "id": 241,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2865:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 240,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2865:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2865:13:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2855:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_BTCUP_$108_$",
                          "typeString": "function (address) returns (contract BTCUP)"
                        },
                        "typeName": {
                          "id": 238,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 237,
                            "name": "BTCUP",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 108,
                            "src": "2859:5:8"
                          },
                          "referencedDeclaration": 108,
                          "src": "2859:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BTCUP_$108",
                            "typeString": "contract BTCUP"
                          }
                        }
                      },
                      "id": 244,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2855:24:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BTCUP_$108",
                        "typeString": "contract BTCUP"
                      }
                    },
                    "src": "2847:32:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BTCUP_$108",
                      "typeString": "contract BTCUP"
                    }
                  },
                  "id": 246,
                  "nodeType": "ExpressionStatement",
                  "src": "2847:32:8"
                },
                {
                  "expression": {
                    "id": 256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 247,
                      "name": "btcDown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 223,
                      "src": "2889:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BTCDOWN_$178",
                        "typeString": "contract BTCDOWN"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 253,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "2919:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LeveragedTrading_$844",
                                "typeString": "contract LeveragedTrading"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_LeveragedTrading_$844",
                                "typeString": "contract LeveragedTrading"
                              }
                            ],
                            "id": 252,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2911:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 251,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2911:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2911:13:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2899:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_BTCDOWN_$178_$",
                          "typeString": "function (address) returns (contract BTCDOWN)"
                        },
                        "typeName": {
                          "id": 249,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 248,
                            "name": "BTCDOWN",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 178,
                            "src": "2903:7:8"
                          },
                          "referencedDeclaration": 178,
                          "src": "2903:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BTCDOWN_$178",
                            "typeString": "contract BTCDOWN"
                          }
                        }
                      },
                      "id": 255,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2899:26:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BTCDOWN_$178",
                        "typeString": "contract BTCDOWN"
                      }
                    },
                    "src": "2889:36:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BTCDOWN_$178",
                      "typeString": "contract BTCDOWN"
                    }
                  },
                  "id": 257,
                  "nodeType": "ExpressionStatement",
                  "src": "2889:36:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "32",
                            "id": 261,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2962:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            }
                          ],
                          "expression": {
                            "id": 259,
                            "name": "amountUsdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 225,
                            "src": "2947:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 260,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1777,
                          "src": "2947:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 262,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2947:17:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 258,
                      "name": "issueBtcUp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 344,
                      "src": "2936:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2936:29:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 264,
                  "nodeType": "ExpressionStatement",
                  "src": "2936:29:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "32",
                            "id": 268,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3003:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            }
                          ],
                          "expression": {
                            "id": 266,
                            "name": "amountUsdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 225,
                            "src": "2988:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 267,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1777,
                          "src": "2988:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2988:17:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 265,
                      "name": "issueBtcDown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 411,
                      "src": "2975:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2975:31:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 271,
                  "nodeType": "ExpressionStatement",
                  "src": "2975:31:8"
                },
                {
                  "expression": {
                    "id": 274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 272,
                      "name": "poolIsInitiated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 211,
                      "src": "3017:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 273,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3035:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3017:22:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 275,
                  "nodeType": "ExpressionStatement",
                  "src": "3017:22:8"
                }
              ]
            },
            "functionSelector": "9b3075a1",
            "id": 277,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 228,
                "modifierName": {
                  "id": 227,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 891,
                  "src": "2756:9:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "2756:9:8"
              }
            ],
            "name": "initiatePool",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 226,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 225,
                  "mutability": "mutable",
                  "name": "amountUsdc",
                  "nodeType": "VariableDeclaration",
                  "scope": 277,
                  "src": "2729:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 224,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2729:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2728:20:8"
            },
            "returnParameters": {
              "id": 229,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2766:0:8"
            },
            "scope": 844,
            "src": "2707:339:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 343,
              "nodeType": "Block",
              "src": "3099:486:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 282,
                      "name": "rebalanceLeveragedTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 601,
                      "src": "3109:24:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3109:26:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 284,
                  "nodeType": "ExpressionStatement",
                  "src": "3109:26:8"
                },
                {
                  "expression": {
                    "id": 288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 285,
                      "name": "priceBtcUp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 188,
                      "src": "3154:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 286,
                        "name": "getBtcUpPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 670,
                        "src": "3167:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 287,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3167:15:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3154:28:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 289,
                  "nodeType": "ExpressionStatement",
                  "src": "3154:28:8"
                },
                {
                  "assignments": [
                    291
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 291,
                      "mutability": "mutable",
                      "name": "amountLeveragedTokens",
                      "nodeType": "VariableDeclaration",
                      "scope": 343,
                      "src": "3192:29:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 290,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3192:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 301,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 299,
                        "name": "priceBtcUp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 188,
                        "src": "3252:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_1000000_by_1",
                              "typeString": "int_const 1000000"
                            },
                            "id": 296,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 294,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3239:2:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "hexValue": "36",
                              "id": 295,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3245:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_6_by_1",
                                "typeString": "int_const 6"
                              },
                              "value": "6"
                            },
                            "src": "3239:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000_by_1",
                              "typeString": "int_const 1000000"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1000000_by_1",
                              "typeString": "int_const 1000000"
                            }
                          ],
                          "expression": {
                            "id": 292,
                            "name": "amountUsdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 279,
                            "src": "3224:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 293,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1762,
                          "src": "3224:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3224:23:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 298,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1777,
                      "src": "3224:27:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3224:39:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3192:71:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 305,
                        "name": "amountLeveragedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 291,
                        "src": "3285:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 302,
                        "name": "btcUp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 220,
                        "src": "3274:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BTCUP_$108",
                          "typeString": "contract BTCUP"
                        }
                      },
                      "id": 304,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72,
                      "src": "3274:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3274:33:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 307,
                  "nodeType": "ExpressionStatement",
                  "src": "3274:33:8"
                },
                {
                  "expression": {
                    "id": 313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 308,
                      "name": "amountBtcUp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 202,
                      "src": "3317:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 311,
                          "name": "amountLeveragedTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 291,
                          "src": "3347:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 309,
                          "name": "amountBtcUp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 202,
                          "src": "3331:11:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 310,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1732,
                        "src": "3331:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 312,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3331:38:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3317:52:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 314,
                  "nodeType": "ExpressionStatement",
                  "src": "3317:52:8"
                },
                {
                  "expression": {
                    "id": 320,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 315,
                      "name": "collateralBtcUp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 196,
                      "src": "3379:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 318,
                          "name": "amountUsdc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 279,
                          "src": "3417:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 316,
                          "name": "collateralBtcUp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 196,
                          "src": "3397:15:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1732,
                        "src": "3397:19:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 319,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3397:31:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3379:49:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 321,
                  "nodeType": "ExpressionStatement",
                  "src": "3379:49:8"
                },
                {
                  "assignments": [
                    324
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 324,
                      "mutability": "mutable",
                      "name": "usdc",
                      "nodeType": "VariableDeclaration",
                      "scope": 343,
                      "src": "3439:11:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$38",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 323,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 322,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 38,
                          "src": "3439:6:8"
                        },
                        "referencedDeclaration": 38,
                        "src": "3439:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$38",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 328,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 326,
                        "name": "addressUsdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 214,
                        "src": "3460:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 325,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "3453:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$38_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3453:19:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$38",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3439:33:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 332,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3508:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 333,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3508:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 336,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "3528:4:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LeveragedTrading_$844",
                                  "typeString": "contract LeveragedTrading"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LeveragedTrading_$844",
                                  "typeString": "contract LeveragedTrading"
                                }
                              ],
                              "id": 335,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3520:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 334,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3520:7:8",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 337,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3520:13:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 338,
                            "name": "amountUsdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 279,
                            "src": "3535:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 330,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 324,
                            "src": "3490:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$38",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28,
                          "src": "3490:17:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3490:56:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520646f6e2774206861766520656e6f75676820555344432e",
                        "id": 340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3548:29:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fa81e2605579e88471722381a01380eff7db3c869a8b4d6c5142c052f717215d",
                          "typeString": "literal_string \"You don't have enough USDC.\""
                        },
                        "value": "You don't have enough USDC."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fa81e2605579e88471722381a01380eff7db3c869a8b4d6c5142c052f717215d",
                          "typeString": "literal_string \"You don't have enough USDC.\""
                        }
                      ],
                      "id": 329,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3482:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3482:96:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 342,
                  "nodeType": "ExpressionStatement",
                  "src": "3482:96:8"
                }
              ]
            },
            "functionSelector": "f530c04a",
            "id": 344,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "issueBtcUp",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 280,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 279,
                  "mutability": "mutable",
                  "name": "amountUsdc",
                  "nodeType": "VariableDeclaration",
                  "scope": 344,
                  "src": "3072:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 278,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3072:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3071:20:8"
            },
            "returnParameters": {
              "id": 281,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3099:0:8"
            },
            "scope": 844,
            "src": "3052:533:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 410,
              "nodeType": "Block",
              "src": "3640:502:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 349,
                      "name": "rebalanceLeveragedTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 601,
                      "src": "3650:24:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3650:26:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 351,
                  "nodeType": "ExpressionStatement",
                  "src": "3650:26:8"
                },
                {
                  "expression": {
                    "id": 355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 352,
                      "name": "priceBtcDown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 193,
                      "src": "3695:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 353,
                        "name": "getBtcDownPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 691,
                        "src": "3710:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 354,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3710:17:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3695:32:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 356,
                  "nodeType": "ExpressionStatement",
                  "src": "3695:32:8"
                },
                {
                  "assignments": [
                    358
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 358,
                      "mutability": "mutable",
                      "name": "amountLeveragedTokens",
                      "nodeType": "VariableDeclaration",
                      "scope": 410,
                      "src": "3737:29:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 357,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3737:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 368,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 366,
                        "name": "priceBtcDown",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 193,
                        "src": "3797:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_1000000_by_1",
                              "typeString": "int_const 1000000"
                            },
                            "id": 363,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 361,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3784:2:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "hexValue": "36",
                              "id": 362,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3790:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_6_by_1",
                                "typeString": "int_const 6"
                              },
                              "value": "6"
                            },
                            "src": "3784:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000_by_1",
                              "typeString": "int_const 1000000"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1000000_by_1",
                              "typeString": "int_const 1000000"
                            }
                          ],
                          "expression": {
                            "id": 359,
                            "name": "amountUsdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 346,
                            "src": "3769:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1762,
                          "src": "3769:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3769:23:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 365,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1777,
                      "src": "3769:27:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3769:41:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3737:73:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 372,
                        "name": "amountLeveragedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 358,
                        "src": "3834:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 369,
                        "name": "btcDown",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 223,
                        "src": "3821:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BTCDOWN_$178",
                          "typeString": "contract BTCDOWN"
                        }
                      },
                      "id": 371,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 142,
                      "src": "3821:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3821:35:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 374,
                  "nodeType": "ExpressionStatement",
                  "src": "3821:35:8"
                },
                {
                  "expression": {
                    "id": 380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 375,
                      "name": "amountBtcDown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 205,
                      "src": "3866:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 378,
                          "name": "amountLeveragedTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 358,
                          "src": "3900:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 376,
                          "name": "amountBtcDown",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 205,
                          "src": "3882:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1732,
                        "src": "3882:17:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 379,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3882:40:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3866:56:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 381,
                  "nodeType": "ExpressionStatement",
                  "src": "3866:56:8"
                },
                {
                  "expression": {
                    "id": 387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 382,
                      "name": "collateralBtcDown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 199,
                      "src": "3932:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 385,
                          "name": "amountUsdc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 346,
                          "src": "3974:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 383,
                          "name": "collateralBtcDown",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 199,
                          "src": "3952:17:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 384,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1732,
                        "src": "3952:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 386,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3952:33:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3932:53:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 388,
                  "nodeType": "ExpressionStatement",
                  "src": "3932:53:8"
                },
                {
                  "assignments": [
                    391
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 391,
                      "mutability": "mutable",
                      "name": "usdc",
                      "nodeType": "VariableDeclaration",
                      "scope": 410,
                      "src": "3996:11:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$38",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 390,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 389,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 38,
                          "src": "3996:6:8"
                        },
                        "referencedDeclaration": 38,
                        "src": "3996:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$38",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 395,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 393,
                        "name": "addressUsdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 214,
                        "src": "4017:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 392,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "4010:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$38_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4010:19:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$38",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3996:33:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 399,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4065:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 400,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4065:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 403,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "4085:4:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LeveragedTrading_$844",
                                  "typeString": "contract LeveragedTrading"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LeveragedTrading_$844",
                                  "typeString": "contract LeveragedTrading"
                                }
                              ],
                              "id": 402,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4077:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 401,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4077:7:8",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 404,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4077:13:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 405,
                            "name": "amountUsdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 346,
                            "src": "4092:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 397,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 391,
                            "src": "4047:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$38",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28,
                          "src": "4047:17:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4047:56:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520646f6e2774206861766520656e6f75676820555344432e",
                        "id": 407,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4105:29:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fa81e2605579e88471722381a01380eff7db3c869a8b4d6c5142c052f717215d",
                          "typeString": "literal_string \"You don't have enough USDC.\""
                        },
                        "value": "You don't have enough USDC."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fa81e2605579e88471722381a01380eff7db3c869a8b4d6c5142c052f717215d",
                          "typeString": "literal_string \"You don't have enough USDC.\""
                        }
                      ],
                      "id": 396,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4039:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4039:96:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 409,
                  "nodeType": "ExpressionStatement",
                  "src": "4039:96:8"
                }
              ]
            },
            "functionSelector": "c46d4f09",
            "id": 411,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "issueBtcDown",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 347,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 346,
                  "mutability": "mutable",
                  "name": "amountUsdc",
                  "nodeType": "VariableDeclaration",
                  "scope": 411,
                  "src": "3613:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 345,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3613:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3612:20:8"
            },
            "returnParameters": {
              "id": 348,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3640:0:8"
            },
            "scope": 844,
            "src": "3591:551:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 472,
              "nodeType": "Block",
              "src": "4207:427:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 416,
                      "name": "rebalanceLeveragedTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 601,
                      "src": "4217:24:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4217:26:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 418,
                  "nodeType": "ExpressionStatement",
                  "src": "4217:26:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 422,
                        "name": "amountLeveragedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 413,
                        "src": "4264:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 419,
                        "name": "btcUp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 220,
                        "src": "4253:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BTCUP_$108",
                          "typeString": "contract BTCUP"
                        }
                      },
                      "id": 421,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 87,
                      "src": "4253:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4253:33:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 424,
                  "nodeType": "ExpressionStatement",
                  "src": "4253:33:8"
                },
                {
                  "expression": {
                    "id": 428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 425,
                      "name": "priceBtcUp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 188,
                      "src": "4297:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 426,
                        "name": "getBtcUpPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 670,
                        "src": "4310:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 427,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4310:15:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4297:28:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 429,
                  "nodeType": "ExpressionStatement",
                  "src": "4297:28:8"
                },
                {
                  "assignments": [
                    431
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 431,
                      "mutability": "mutable",
                      "name": "amountUsdc",
                      "nodeType": "VariableDeclaration",
                      "scope": 472,
                      "src": "4335:18:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 430,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4335:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 441,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        },
                        "id": 439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3130",
                          "id": 437,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4398:2:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "hexValue": "36",
                          "id": 438,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4404:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_6_by_1",
                            "typeString": "int_const 6"
                          },
                          "value": "6"
                        },
                        "src": "4398:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 434,
                            "name": "priceBtcUp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 188,
                            "src": "4382:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 432,
                            "name": "amountLeveragedTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 413,
                            "src": "4356:21:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 433,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1762,
                          "src": "4356:25:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4356:37:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 436,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1777,
                      "src": "4356:41:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4356:50:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4335:71:8"
                },
                {
                  "expression": {
                    "id": 447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 442,
                      "name": "amountBtcUp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 202,
                      "src": "4417:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 445,
                          "name": "amountLeveragedTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 413,
                          "src": "4447:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 443,
                          "name": "amountBtcUp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 202,
                          "src": "4431:11:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 444,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1747,
                        "src": "4431:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 446,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4431:38:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4417:52:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 448,
                  "nodeType": "ExpressionStatement",
                  "src": "4417:52:8"
                },
                {
                  "expression": {
                    "id": 454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 449,
                      "name": "collateralBtcUp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 196,
                      "src": "4479:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 452,
                          "name": "amountUsdc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 431,
                          "src": "4517:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 450,
                          "name": "collateralBtcUp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 196,
                          "src": "4497:15:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1747,
                        "src": "4497:19:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 453,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4497:31:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4479:49:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 455,
                  "nodeType": "ExpressionStatement",
                  "src": "4479:49:8"
                },
                {
                  "assignments": [
                    458
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 458,
                      "mutability": "mutable",
                      "name": "usdc",
                      "nodeType": "VariableDeclaration",
                      "scope": 472,
                      "src": "4539:11:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$38",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 457,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 456,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 38,
                          "src": "4539:6:8"
                        },
                        "referencedDeclaration": 38,
                        "src": "4539:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$38",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 462,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 460,
                        "name": "addressUsdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 214,
                        "src": "4560:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 459,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "4553:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$38_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4553:19:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$38",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4539:33:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 466,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4603:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 467,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4603:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 468,
                            "name": "amountUsdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 431,
                            "src": "4615:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 464,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 458,
                            "src": "4589:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$38",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 465,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17,
                          "src": "4589:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 469,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4589:37:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 463,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "4582:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 470,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4582:45:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 471,
                  "nodeType": "ExpressionStatement",
                  "src": "4582:45:8"
                }
              ]
            },
            "functionSelector": "d1ee539d",
            "id": 473,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redeemBtcUp",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 414,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 413,
                  "mutability": "mutable",
                  "name": "amountLeveragedTokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 473,
                  "src": "4169:29:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 412,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4169:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4168:31:8"
            },
            "returnParameters": {
              "id": 415,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4207:0:8"
            },
            "scope": 844,
            "src": "4148:486:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 534,
              "nodeType": "Block",
              "src": "4701:452:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 478,
                      "name": "rebalanceLeveragedTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 601,
                      "src": "4711:24:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4711:26:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 480,
                  "nodeType": "ExpressionStatement",
                  "src": "4711:26:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 484,
                        "name": "amountLeveragedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 475,
                        "src": "4760:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 481,
                        "name": "btcDown",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 223,
                        "src": "4747:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BTCDOWN_$178",
                          "typeString": "contract BTCDOWN"
                        }
                      },
                      "id": 483,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 157,
                      "src": "4747:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4747:35:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 486,
                  "nodeType": "ExpressionStatement",
                  "src": "4747:35:8"
                },
                {
                  "expression": {
                    "id": 490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 487,
                      "name": "priceBtcDown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 193,
                      "src": "4793:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 488,
                        "name": "getBtcDownPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 691,
                        "src": "4808:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 489,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4808:17:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4793:32:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 491,
                  "nodeType": "ExpressionStatement",
                  "src": "4793:32:8"
                },
                {
                  "assignments": [
                    493
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 493,
                      "mutability": "mutable",
                      "name": "amountUsdc",
                      "nodeType": "VariableDeclaration",
                      "scope": 534,
                      "src": "4835:18:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 492,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4835:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 503,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        },
                        "id": 501,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3130",
                          "id": 499,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4900:2:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "hexValue": "36",
                          "id": 500,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4906:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_6_by_1",
                            "typeString": "int_const 6"
                          },
                          "value": "6"
                        },
                        "src": "4900:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 496,
                            "name": "priceBtcDown",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 193,
                            "src": "4882:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 494,
                            "name": "amountLeveragedTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 475,
                            "src": "4856:21:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1762,
                          "src": "4856:25:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4856:39:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 498,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1777,
                      "src": "4856:43:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 502,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4856:52:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4835:73:8"
                },
                {
                  "expression": {
                    "id": 509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 504,
                      "name": "amountBtcDown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 205,
                      "src": "4927:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 507,
                          "name": "amountLeveragedTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 475,
                          "src": "4961:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 505,
                          "name": "amountBtcDown",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 205,
                          "src": "4943:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1747,
                        "src": "4943:17:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 508,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4943:40:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4927:56:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 510,
                  "nodeType": "ExpressionStatement",
                  "src": "4927:56:8"
                },
                {
                  "expression": {
                    "id": 516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 511,
                      "name": "collateralBtcDown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 199,
                      "src": "4993:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 514,
                          "name": "amountUsdc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 493,
                          "src": "5035:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 512,
                          "name": "collateralBtcDown",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 199,
                          "src": "5013:17:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 513,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1747,
                        "src": "5013:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 515,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5013:33:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4993:53:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 517,
                  "nodeType": "ExpressionStatement",
                  "src": "4993:53:8"
                },
                {
                  "assignments": [
                    520
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 520,
                      "mutability": "mutable",
                      "name": "usdc",
                      "nodeType": "VariableDeclaration",
                      "scope": 534,
                      "src": "5057:11:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$38",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 519,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 518,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 38,
                          "src": "5057:6:8"
                        },
                        "referencedDeclaration": 38,
                        "src": "5057:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$38",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 524,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 522,
                        "name": "addressUsdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 214,
                        "src": "5078:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 521,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "5071:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$38_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5071:19:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$38",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5057:33:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 528,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5121:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 529,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5121:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 530,
                            "name": "amountUsdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 493,
                            "src": "5134:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 526,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 520,
                            "src": "5107:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$38",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 527,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17,
                          "src": "5107:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 531,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5107:38:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 525,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "5100:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 532,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5100:46:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 533,
                  "nodeType": "ExpressionStatement",
                  "src": "5100:46:8"
                }
              ]
            },
            "functionSelector": "a14274e8",
            "id": 535,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redeemBtcDown",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 476,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 475,
                  "mutability": "mutable",
                  "name": "amountLeveragedTokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 535,
                  "src": "4663:29:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 474,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4663:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4662:31:8"
            },
            "returnParameters": {
              "id": 477,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4701:0:8"
            },
            "scope": 844,
            "src": "4640:513:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 600,
              "nodeType": "Block",
              "src": "5202:611:8",
              "statements": [
                {
                  "assignments": [
                    539
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 539,
                      "mutability": "mutable",
                      "name": "btcPrice",
                      "nodeType": "VariableDeclaration",
                      "scope": 600,
                      "src": "5212:16:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 538,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5212:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 542,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 540,
                      "name": "getBtcPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 715,
                      "src": "5231:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5231:13:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5212:32:8"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 545,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 543,
                            "name": "collateralBtcUp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 196,
                            "src": "5259:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 544,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5277:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5259:19:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 546,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "5258:21:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 549,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 547,
                            "name": "collateralBtcDown",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 199,
                            "src": "5284:17:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 548,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5304:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5284:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 550,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "5283:23:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5258:48:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 595,
                  "nodeType": "IfStatement",
                  "src": "5254:519:8",
                  "trueBody": {
                    "id": 594,
                    "nodeType": "Block",
                    "src": "5308:465:8",
                    "statements": [
                      {
                        "assignments": [
                          553
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 553,
                            "mutability": "mutable",
                            "name": "rebalanceAmount",
                            "nodeType": "VariableDeclaration",
                            "scope": 594,
                            "src": "5322:23:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 552,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5322:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 557,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 555,
                              "name": "btcPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 539,
                              "src": "5367:8:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 554,
                            "name": "getRebalanceAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 649,
                            "src": "5348:18:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view returns (uint256)"
                            }
                          },
                          "id": 556,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5348:28:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5322:54:8"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          },
                          "id": 562,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 559,
                                "name": "btcPrice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 539,
                                "src": "5402:8:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 558,
                              "name": "getSign",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 620,
                              "src": "5394:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_int256_$",
                                "typeString": "function (uint256) view returns (int256)"
                              }
                            },
                            "id": 560,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5394:17:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 561,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5414:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5394:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 592,
                          "nodeType": "Block",
                          "src": "5599:163:8",
                          "statements": [
                            {
                              "expression": {
                                "id": 583,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 578,
                                  "name": "collateralBtcUp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 196,
                                  "src": "5617:15:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 581,
                                      "name": "rebalanceAmount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 553,
                                      "src": "5655:15:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 579,
                                      "name": "collateralBtcUp",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 196,
                                      "src": "5635:15:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 580,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sub",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1747,
                                    "src": "5635:19:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 582,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5635:36:8",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5617:54:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 584,
                              "nodeType": "ExpressionStatement",
                              "src": "5617:54:8"
                            },
                            {
                              "expression": {
                                "id": 590,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 585,
                                  "name": "collateralBtcDown",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 199,
                                  "src": "5689:17:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 588,
                                      "name": "rebalanceAmount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 553,
                                      "src": "5731:15:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 586,
                                      "name": "collateralBtcDown",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 199,
                                      "src": "5709:17:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 587,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "add",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1732,
                                    "src": "5709:21:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 589,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5709:38:8",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5689:58:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 591,
                              "nodeType": "ExpressionStatement",
                              "src": "5689:58:8"
                            }
                          ]
                        },
                        "id": 593,
                        "nodeType": "IfStatement",
                        "src": "5390:372:8",
                        "trueBody": {
                          "id": 577,
                          "nodeType": "Block",
                          "src": "5417:163:8",
                          "statements": [
                            {
                              "expression": {
                                "id": 568,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 563,
                                  "name": "collateralBtcUp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 196,
                                  "src": "5435:15:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 566,
                                      "name": "rebalanceAmount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 553,
                                      "src": "5473:15:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 564,
                                      "name": "collateralBtcUp",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 196,
                                      "src": "5453:15:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 565,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "add",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1732,
                                    "src": "5453:19:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 567,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5453:36:8",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5435:54:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 569,
                              "nodeType": "ExpressionStatement",
                              "src": "5435:54:8"
                            },
                            {
                              "expression": {
                                "id": 575,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 570,
                                  "name": "collateralBtcDown",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 199,
                                  "src": "5507:17:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 573,
                                      "name": "rebalanceAmount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 553,
                                      "src": "5549:15:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 571,
                                      "name": "collateralBtcDown",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 199,
                                      "src": "5527:17:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 572,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sub",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1747,
                                    "src": "5527:21:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 574,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5527:38:8",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5507:58:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 576,
                              "nodeType": "ExpressionStatement",
                              "src": "5507:58:8"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 596,
                      "name": "lastBtcPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 208,
                      "src": "5783:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 597,
                      "name": "btcPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 539,
                      "src": "5798:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5783:23:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 599,
                  "nodeType": "ExpressionStatement",
                  "src": "5783:23:8"
                }
              ]
            },
            "functionSelector": "6e5d6615",
            "id": 601,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "rebalanceLeveragedTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 536,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5192:2:8"
            },
            "returnParameters": {
              "id": 537,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5202:0:8"
            },
            "scope": 844,
            "src": "5159:654:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 619,
              "nodeType": "Block",
              "src": "6056:126:8",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 608,
                      "name": "btcPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 603,
                      "src": "6070:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 609,
                      "name": "lastBtcPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 208,
                      "src": "6081:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6070:23:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 617,
                    "nodeType": "Block",
                    "src": "6142:34:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 615,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "-",
                          "prefix": true,
                          "src": "6163:2:8",
                          "subExpression": {
                            "hexValue": "31",
                            "id": 614,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6164:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_minus_1_by_1",
                            "typeString": "int_const -1"
                          }
                        },
                        "functionReturnParameters": 607,
                        "id": 616,
                        "nodeType": "Return",
                        "src": "6156:9:8"
                      }
                    ]
                  },
                  "id": 618,
                  "nodeType": "IfStatement",
                  "src": "6066:110:8",
                  "trueBody": {
                    "id": 613,
                    "nodeType": "Block",
                    "src": "6095:33:8",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "31",
                          "id": 611,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6116:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "functionReturnParameters": 607,
                        "id": 612,
                        "nodeType": "Return",
                        "src": "6109:8:8"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 620,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSign",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 604,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 603,
                  "mutability": "mutable",
                  "name": "btcPrice",
                  "nodeType": "VariableDeclaration",
                  "scope": 620,
                  "src": "6007:16:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 602,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6007:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6006:18:8"
            },
            "returnParameters": {
              "id": 607,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 606,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 620,
                  "src": "6048:6:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 605,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6048:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6047:8:8"
            },
            "scope": 844,
            "src": "5990:192:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 648,
              "nodeType": "Block",
              "src": "6267:147:8",
              "statements": [
                {
                  "assignments": [
                    628
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 628,
                      "mutability": "mutable",
                      "name": "priceDiff",
                      "nodeType": "VariableDeclaration",
                      "scope": 648,
                      "src": "6277:17:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 627,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6277:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 632,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 630,
                        "name": "priceBtc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 622,
                        "src": "6310:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 629,
                      "name": "getPriceDiff",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 819,
                      "src": "6297:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6297:22:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6277:42:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        },
                        "id": 645,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3130",
                          "id": 643,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6399:2:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "hexValue": "36",
                          "id": 644,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6405:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_6_by_1",
                            "typeString": "int_const 6"
                          },
                          "value": "6"
                        },
                        "src": "6399:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 639,
                                "name": "priceDiff",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 628,
                                "src": "6383:9:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 638,
                              "name": "L",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 775,
                              "src": "6381:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256) pure returns (uint256)"
                              }
                            },
                            "id": 640,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6381:12:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 634,
                                "name": "collateralBtcUp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 196,
                                "src": "6341:15:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 635,
                                "name": "collateralBtcDown",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 199,
                                "src": "6358:17:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 633,
                              "name": "min",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 732,
                              "src": "6337:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 636,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6337:39:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 637,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1762,
                          "src": "6337:43:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 641,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6337:57:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 642,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1777,
                      "src": "6337:61:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6337:70:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 626,
                  "id": 647,
                  "nodeType": "Return",
                  "src": "6330:77:8"
                }
              ]
            },
            "id": 649,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRebalanceAmount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 623,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 622,
                  "mutability": "mutable",
                  "name": "priceBtc",
                  "nodeType": "VariableDeclaration",
                  "scope": 649,
                  "src": "6217:16:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 621,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6217:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6216:18:8"
            },
            "returnParameters": {
              "id": 626,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 625,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 649,
                  "src": "6258:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 624,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6258:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6257:9:8"
            },
            "scope": 844,
            "src": "6189:225:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 669,
              "nodeType": "Block",
              "src": "6505:102:8",
              "statements": [
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 656,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 654,
                        "name": "amountBtcUp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 202,
                        "src": "6522:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 655,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6537:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "6522:16:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "arguments": [
                        {
                          "id": 665,
                          "name": "amountBtcUp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 202,
                          "src": "6588:11:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              },
                              "id": 662,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 660,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6575:2:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "36",
                                "id": 661,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6581:1:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_6_by_1",
                                  "typeString": "int_const 6"
                                },
                                "value": "6"
                              },
                              "src": "6575:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              }
                            ],
                            "expression": {
                              "id": 658,
                              "name": "collateralBtcUp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 196,
                              "src": "6555:15:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 659,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1762,
                            "src": "6555:19:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 663,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6555:28:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 664,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1777,
                        "src": "6555:32:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 666,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6555:45:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "6522:78:8",
                    "trueExpression": {
                      "id": 657,
                      "name": "priceBtcUp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 188,
                      "src": "6542:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 653,
                  "id": 668,
                  "nodeType": "Return",
                  "src": "6515:85:8"
                }
              ]
            },
            "functionSelector": "f06847d6",
            "id": 670,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBtcUpPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 650,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6472:2:8"
            },
            "returnParameters": {
              "id": 653,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 652,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 670,
                  "src": "6496:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 651,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6496:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6495:9:8"
            },
            "scope": 844,
            "src": "6450:157:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 690,
              "nodeType": "Block",
              "src": "6702:122:8",
              "statements": [
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 677,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 675,
                        "name": "amountBtcDown",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 205,
                        "src": "6731:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 676,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6748:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "6731:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "arguments": [
                        {
                          "id": 686,
                          "name": "amountBtcDown",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 205,
                          "src": "6803:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              },
                              "id": 683,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 681,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6790:2:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "36",
                                "id": 682,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6796:1:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_6_by_1",
                                  "typeString": "int_const 6"
                                },
                                "value": "6"
                              },
                              "src": "6790:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              }
                            ],
                            "expression": {
                              "id": 679,
                              "name": "collateralBtcDown",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 199,
                              "src": "6768:17:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 680,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1762,
                            "src": "6768:21:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 684,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6768:30:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 685,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1777,
                        "src": "6768:34:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 687,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6768:49:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "6731:86:8",
                    "trueExpression": {
                      "id": 678,
                      "name": "priceBtcDown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 193,
                      "src": "6753:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 674,
                  "id": 689,
                  "nodeType": "Return",
                  "src": "6724:93:8"
                }
              ]
            },
            "functionSelector": "81c2b29b",
            "id": 691,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBtcDownPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 671,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6669:2:8"
            },
            "returnParameters": {
              "id": 674,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 673,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 691,
                  "src": "6693:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 672,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6693:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6692:9:8"
            },
            "scope": 844,
            "src": "6645:179:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 714,
              "nodeType": "Block",
              "src": "6929:264:8",
              "statements": [
                {
                  "assignments": [
                    698
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 698,
                      "mutability": "mutable",
                      "name": "priceFeed",
                      "nodeType": "VariableDeclaration",
                      "scope": 714,
                      "src": "6939:31:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$1914",
                        "typeString": "contract AggregatorV3Interface"
                      },
                      "typeName": {
                        "id": 697,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 696,
                          "name": "AggregatorV3Interface",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1914,
                          "src": "6939:21:8"
                        },
                        "referencedDeclaration": 1914,
                        "src": "6939:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$1914",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 702,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 700,
                        "name": "addressBtcUSDFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 217,
                        "src": "6995:17:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 699,
                      "name": "AggregatorV3Interface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1914,
                      "src": "6973:21:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$1914_$",
                        "typeString": "type(contract AggregatorV3Interface)"
                      }
                    },
                    "id": 701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6973:40:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$1914",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6939:74:8"
                },
                {
                  "assignments": [
                    null,
                    704,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 704,
                      "mutability": "mutable",
                      "name": "answer",
                      "nodeType": "VariableDeclaration",
                      "scope": 714,
                      "src": "7025:13:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 703,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7025:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null
                  ],
                  "id": 708,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 705,
                        "name": "priceFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 698,
                        "src": "7045:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$1914",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 706,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1913,
                      "src": "7045:25:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7045:27:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7023:49:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 711,
                        "name": "answer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 704,
                        "src": "7099:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 710,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "7091:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 709,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7091:7:8",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7091:15:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 695,
                  "id": 713,
                  "nodeType": "Return",
                  "src": "7084:22:8"
                }
              ]
            },
            "functionSelector": "3a3610bc",
            "id": 715,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBtcPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 692,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6896:2:8"
            },
            "returnParameters": {
              "id": 695,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 694,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 715,
                  "src": "6920:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 693,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6920:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6919:9:8"
            },
            "scope": 844,
            "src": "6876:317:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 731,
              "nodeType": "Block",
              "src": "7270:38:8",
              "statements": [
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 726,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 724,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 717,
                        "src": "7287:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<=",
                      "rightExpression": {
                        "id": 725,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 719,
                        "src": "7292:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "7287:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 728,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 719,
                      "src": "7300:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "7287:14:8",
                    "trueExpression": {
                      "id": 727,
                      "name": "a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 717,
                      "src": "7296:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 723,
                  "id": 730,
                  "nodeType": "Return",
                  "src": "7280:21:8"
                }
              ]
            },
            "id": 732,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "min",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 720,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 717,
                  "mutability": "mutable",
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 732,
                  "src": "7216:9:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 716,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7216:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 719,
                  "mutability": "mutable",
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 732,
                  "src": "7227:9:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 718,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7227:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7215:22:8"
            },
            "returnParameters": {
              "id": 723,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 722,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 732,
                  "src": "7261:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 721,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7261:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7260:9:8"
            },
            "scope": 844,
            "src": "7203:105:8",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 774,
              "nodeType": "Block",
              "src": "7368:171:8",
              "statements": [
                {
                  "assignments": [
                    740
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 740,
                      "mutability": "mutable",
                      "name": "denom",
                      "nodeType": "VariableDeclaration",
                      "scope": 774,
                      "src": "7404:13:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 739,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7404:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 759,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 754,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 750,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "39",
                          "id": 741,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7420:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_9_by_1",
                            "typeString": "int_const 9"
                          },
                          "value": "9"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 748,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 744,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 742,
                                  "name": "x",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 734,
                                  "src": "7425:1:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "hexValue": "32",
                                  "id": 743,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7430:1:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "src": "7425:6:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_rational_1000000_by_1",
                                  "typeString": "int_const 1000000"
                                },
                                "id": 747,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "3130",
                                  "id": 745,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7434:2:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10_by_1",
                                    "typeString": "int_const 10"
                                  },
                                  "value": "10"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "hexValue": "36",
                                  "id": 746,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7440:1:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_6_by_1",
                                    "typeString": "int_const 6"
                                  },
                                  "value": "6"
                                },
                                "src": "7434:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000_by_1",
                                  "typeString": "int_const 1000000"
                                }
                              },
                              "src": "7425:16:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 749,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "7424:18:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7420:22:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "33",
                          "id": 751,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7446:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "id": 752,
                          "name": "x",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 734,
                          "src": "7450:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7446:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "7420:31:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_rational_1000000_by_1",
                        "typeString": "int_const 1000000"
                      },
                      "id": 757,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3130",
                        "id": 755,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7454:2:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "hexValue": "36",
                        "id": 756,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7460:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        },
                        "value": "6"
                      },
                      "src": "7454:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000_by_1",
                        "typeString": "int_const 1000000"
                      }
                    },
                    "src": "7420:41:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7404:57:8"
                },
                {
                  "assignments": [
                    761
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 761,
                      "mutability": "mutable",
                      "name": "num",
                      "nodeType": "VariableDeclaration",
                      "scope": 774,
                      "src": "7471:11:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 760,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7471:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 765,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_rational_1000000000000_by_1",
                      "typeString": "int_const 1000000000000"
                    },
                    "id": 764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3130",
                      "id": 762,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7485:2:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "hexValue": "3132",
                      "id": 763,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7491:2:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_12_by_1",
                        "typeString": "int_const 12"
                      },
                      "value": "12"
                    },
                    "src": "7485:8:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000000_by_1",
                      "typeString": "int_const 1000000000000"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7471:22:8"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_rational_1000000_by_1",
                        "typeString": "int_const 1000000"
                      },
                      "id": 768,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3130",
                        "id": 766,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7511:2:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "hexValue": "36",
                        "id": 767,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7517:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        },
                        "value": "6"
                      },
                      "src": "7511:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000_by_1",
                        "typeString": "int_const 1000000"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 771,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 769,
                        "name": "num",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 761,
                        "src": "7521:3:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "id": 770,
                        "name": "denom",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 740,
                        "src": "7527:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "7521:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7511:21:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 738,
                  "id": 773,
                  "nodeType": "Return",
                  "src": "7504:28:8"
                }
              ]
            },
            "id": 775,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "L",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 735,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 734,
                  "mutability": "mutable",
                  "name": "x",
                  "nodeType": "VariableDeclaration",
                  "scope": 775,
                  "src": "7325:9:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 733,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7325:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7324:11:8"
            },
            "returnParameters": {
              "id": 738,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 737,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 775,
                  "src": "7359:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 736,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7359:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7358:9:8"
            },
            "scope": 844,
            "src": "7314:225:8",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 818,
              "nodeType": "Block",
              "src": "7617:246:8",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 784,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 782,
                      "name": "btcPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 777,
                      "src": "7648:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 783,
                      "name": "lastBtcPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 208,
                      "src": "7659:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7648:23:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 816,
                    "nodeType": "Block",
                    "src": "7772:84:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              },
                              "id": 813,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 811,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7837:2:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "36",
                                "id": 812,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7843:1:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_6_by_1",
                                  "typeString": "int_const 6"
                                },
                                "value": "6"
                              },
                              "src": "7837:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 808,
                                  "name": "btcPrice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 777,
                                  "src": "7823:8:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_rational_1000000_by_1",
                                        "typeString": "int_const 1000000"
                                      },
                                      "id": 805,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "hexValue": "3130",
                                        "id": 803,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7810:2:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_10_by_1",
                                          "typeString": "int_const 10"
                                        },
                                        "value": "10"
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "**",
                                      "rightExpression": {
                                        "hexValue": "36",
                                        "id": 804,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7816:1:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_6_by_1",
                                          "typeString": "int_const 6"
                                        },
                                        "value": "6"
                                      },
                                      "src": "7810:7:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1000000_by_1",
                                        "typeString": "int_const 1000000"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_1000000_by_1",
                                        "typeString": "int_const 1000000"
                                      }
                                    ],
                                    "expression": {
                                      "id": 801,
                                      "name": "lastBtcPrice",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 208,
                                      "src": "7793:12:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 802,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1762,
                                    "src": "7793:16:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 806,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7793:25:8",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 807,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1777,
                                "src": "7793:29:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 809,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7793:39:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 810,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1747,
                            "src": "7793:43:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 814,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7793:52:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 781,
                        "id": 815,
                        "nodeType": "Return",
                        "src": "7786:59:8"
                      }
                    ]
                  },
                  "id": 817,
                  "nodeType": "IfStatement",
                  "src": "7644:212:8",
                  "trueBody": {
                    "id": 800,
                    "nodeType": "Block",
                    "src": "7673:84:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              },
                              "id": 797,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 795,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7738:2:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "36",
                                "id": 796,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7744:1:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_6_by_1",
                                  "typeString": "int_const 6"
                                },
                                "value": "6"
                              },
                              "src": "7738:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 792,
                                  "name": "lastBtcPrice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 208,
                                  "src": "7720:12:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_rational_1000000_by_1",
                                        "typeString": "int_const 1000000"
                                      },
                                      "id": 789,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "hexValue": "3130",
                                        "id": 787,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7707:2:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_10_by_1",
                                          "typeString": "int_const 10"
                                        },
                                        "value": "10"
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "**",
                                      "rightExpression": {
                                        "hexValue": "36",
                                        "id": 788,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7713:1:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_6_by_1",
                                          "typeString": "int_const 6"
                                        },
                                        "value": "6"
                                      },
                                      "src": "7707:7:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1000000_by_1",
                                        "typeString": "int_const 1000000"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_1000000_by_1",
                                        "typeString": "int_const 1000000"
                                      }
                                    ],
                                    "expression": {
                                      "id": 785,
                                      "name": "btcPrice",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 777,
                                      "src": "7694:8:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 786,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1762,
                                    "src": "7694:12:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 790,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7694:21:8",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 791,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1777,
                                "src": "7694:25:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 793,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7694:39:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 794,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1747,
                            "src": "7694:43:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 798,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7694:52:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 781,
                        "id": 799,
                        "nodeType": "Return",
                        "src": "7687:59:8"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 819,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPriceDiff",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 778,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 777,
                  "mutability": "mutable",
                  "name": "btcPrice",
                  "nodeType": "VariableDeclaration",
                  "scope": 819,
                  "src": "7567:16:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 776,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7567:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7566:18:8"
            },
            "returnParameters": {
              "id": 781,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 780,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 819,
                  "src": "7608:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 779,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7608:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7607:9:8"
            },
            "scope": 844,
            "src": "7545:318:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 830,
              "nodeType": "Block",
              "src": "7925:51:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 826,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7958:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 827,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7958:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 824,
                        "name": "btcUp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 220,
                        "src": "7942:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BTCUP_$108",
                          "typeString": "contract BTCUP"
                        }
                      },
                      "id": 825,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1047,
                      "src": "7942:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7942:27:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 823,
                  "id": 829,
                  "nodeType": "Return",
                  "src": "7935:34:8"
                }
              ]
            },
            "functionSelector": "157d0129",
            "id": 831,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBtcupBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 820,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7893:2:8"
            },
            "returnParameters": {
              "id": 823,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 822,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 831,
                  "src": "7916:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 821,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7916:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7915:9:8"
            },
            "scope": 844,
            "src": "7869:107:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 842,
              "nodeType": "Block",
              "src": "8040:53:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 838,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8075:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 839,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8075:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 836,
                        "name": "btcDown",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 223,
                        "src": "8057:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BTCDOWN_$178",
                          "typeString": "contract BTCDOWN"
                        }
                      },
                      "id": 837,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1047,
                      "src": "8057:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 840,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8057:29:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 835,
                  "id": 841,
                  "nodeType": "Return",
                  "src": "8050:36:8"
                }
              ]
            },
            "functionSelector": "c7e3b124",
            "id": 843,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBtcdownBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 832,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8008:2:8"
            },
            "returnParameters": {
              "id": 835,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 834,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 843,
                  "src": "8031:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 833,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8031:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8030:9:8"
            },
            "scope": 844,
            "src": "7982:111:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 845,
        "src": "1861:6235:8"
      }
    ],
    "src": "32:8066:8"
  },
  "bytecode": "6080604052620f42406001819055600255600060038190556004819055600581905560068190556007556008805474b7a4f3e9097c08da09517b5ab877f7a917224ede006001600160a81b0319909116179055600980546001600160a01b031916736135b13325bfc4b00278b4abc5e20bbce2d6580e17905534801561008457600080fd5b5061009561009061009a565b61009e565b6100ee565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61320a806100fd6000396000f3fe60806040523480156200001157600080fd5b50600436106200015f5760003560e01c8063a14274e811620000c9578063dde7be2c1162000087578063dde7be2c1462000270578063f0156e8a146200027a578063f06847d61462000284578063f2fde38b146200028e578063f4352c5714620002a5578063f530c04a14620002af576200015f565b8063a14274e81462000217578063b75cbe0b146200022e578063c46d4f091462000238578063c7e3b124146200024f578063d1ee539d1462000259576200015f565b80633a3610bc11620001235780633a3610bc14620001bd5780636e5d661514620001c7578063715018a614620001d357806381c2b29b14620001dd5780638da5cb5b14620001e75780639b3075a11462000200576200015f565b806234b9cc14620001645780630c3e5343146200018657806314d7c6d21462000190578063157d0129146200019a5780633074fff714620001a4575b600080fd5b6200016e620002c6565b6040516200017d9190620010b5565b60405180910390f35b6200016e620002cc565b6200016e620002d2565b6200016e620002d8565b620001ae62000364565b6040516200017d919062000fc1565b6200016e6200036d565b620001d1620003fe565b005b620001d1620004a0565b6200016e620004fd565b620001f16200053f565b6040516200017d919062000f70565b620001d16200021136600462000eea565b6200054e565b620001d16200022836600462000eea565b6200069f565b6200016e6200080f565b620001d16200024936600462000eea565b62000815565b6200016e62000982565b620001d16200026a36600462000eea565b620009b5565b6200016e62000aaf565b6200016e62000ab5565b6200016e62000abb565b620001d16200029f36600462000e9f565b62000af0565b6200016e62000b6d565b620001d1620002c036600462000eea565b62000b73565b60055481565b60025481565b60045481565b600a546040516370a0823160e01b81526000916001600160a01b0316906370a08231906200030b90339060040162000f70565b60206040518083038186803b1580156200032457600080fd5b505afa15801562000339573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200035f919062000f03565b905090565b60085460ff1681565b60095460408051633fabe5a360e21b815290516000926001600160a01b0316918391839163feaf968c9160048083019260a0929190829003018186803b158015620003b757600080fd5b505afa158015620003cc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003f2919062000f1c565b50919550505050505090565b60006200040a6200036d565b905060006003541180156200042157506000600454115b156200049b576000620004348262000c6b565b90506000620004438362000cb2565b1315620004745760035462000459908262000cd2565b6003556004546200046b908262000ce7565b60045562000499565b60035462000483908262000ce7565b60035560045462000495908262000cd2565b6004555b505b600755565b620004aa62000cf5565b6001600160a01b0316620004bd6200053f565b6001600160a01b031614620004ef5760405162461bcd60e51b8152600401620004e69062001049565b60405180910390fd5b620004fb600062000cf9565b565b60006006546000146200053857620005326006546200052b620f424060045462000d4990919063ffffffff16565b9062000d57565b6200035f565b5060025490565b6000546001600160a01b031690565b6200055862000cf5565b6001600160a01b03166200056b6200053f565b6001600160a01b031614620005945760405162461bcd60e51b8152600401620004e69062001049565b60085460ff1615620005ba5760405162461bcd60e51b8152600401620004e69062001012565b30604051620005c99062000e68565b620005d5919062000f70565b604051809103906000f080158015620005f2573d6000803e3d6000fd5b50600a80546001600160a01b0319166001600160a01b03929092169190911790556040513090620006239062000e76565b6200062f919062000f70565b604051809103906000f0801580156200064c573d6000803e3d6000fd5b50600b80546001600160a01b0319166001600160a01b03929092169190911790556200067e620002c082600262000d57565b6200068f6200024982600262000d57565b506008805460ff19166001179055565b620006a9620003fe565b600b54604051630852cd8d60e31b81526001600160a01b03909116906342966c6890620006db908490600401620010b5565b600060405180830381600087803b158015620006f657600080fd5b505af11580156200070b573d6000803e3d6000fd5b5050505062000719620004fd565b60028190556000906200073890620f4240906200052b90859062000d49565b6006549091506200074a908362000ce7565b6006556004546200075c908262000ce7565b600490815560085460405163a9059cbb60e01b81526101009091046001600160a01b031691829163a9059cbb916200079991339187910162000fa8565b602060405180830381600087803b158015620007b457600080fd5b505af1158015620007c9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007ef919062000ec8565b6200080a57634e487b7160e01b600052600160045260246000fd5b505050565b60065481565b6200081f620003fe565b62000829620004fd565b600281905560009062000845906200052b84620f424062000d49565b600b5460405163140e25ad60e31b81529192506001600160a01b03169063a0712d689062000878908490600401620010b5565b600060405180830381600087803b1580156200089357600080fd5b505af1158015620008a8573d6000803e3d6000fd5b5050600654620008bc925090508262000cd2565b600655600454620008ce908362000cd2565b60049081556008546040516323b872dd60e01b81526101009091046001600160a01b03169182916323b872dd916200090d913391309189910162000f84565b602060405180830381600087803b1580156200092857600080fd5b505af11580156200093d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000963919062000ec8565b6200080a5760405162461bcd60e51b8152600401620004e6906200107e565b600b546040516370a0823160e01b81526000916001600160a01b0316906370a08231906200030b90339060040162000f70565b620009bf620003fe565b600a54604051630852cd8d60e31b81526001600160a01b03909116906342966c6890620009f1908490600401620010b5565b600060405180830381600087803b15801562000a0c57600080fd5b505af115801562000a21573d6000803e3d6000fd5b5050505062000a2f62000abb565b600181905560009062000a4e90620f4240906200052b90859062000d49565b60055490915062000a60908362000ce7565b60055560035462000a72908262000ce7565b60035560085460405163a9059cbb60e01b81526101009091046001600160a01b031690819063a9059cbb9062000799903390869060040162000fa8565b60035481565b60015481565b600060055460001462000ae957620005326005546200052b620f424060035462000d4990919063ffffffff16565b5060015490565b62000afa62000cf5565b6001600160a01b031662000b0d6200053f565b6001600160a01b03161462000b365760405162461bcd60e51b8152600401620004e69062001049565b6001600160a01b03811662000b5f5760405162461bcd60e51b8152600401620004e69062000fcc565b62000b6a8162000cf9565b50565b60075481565b62000b7d620003fe565b62000b8762000abb565b600181905560009062000ba3906200052b84620f424062000d49565b600a5460405163140e25ad60e31b81529192506001600160a01b03169063a0712d689062000bd6908490600401620010b5565b600060405180830381600087803b15801562000bf157600080fd5b505af115801562000c06573d6000803e3d6000fd5b505060055462000c1a925090508262000cd2565b60055560035462000c2c908362000cd2565b6003556008546040516323b872dd60e01b81526101009091046001600160a01b03169081906323b872dd906200090d9033903090889060040162000f84565b60008062000c798362000d65565b905062000ca9620f42406200052b62000c928462000dcf565b62000ca260035460045462000e4f565b9062000d49565b9150505b919050565b600060075482111562000cc85750600162000cad565b5060001962000cad565b600062000ce08284620010be565b9392505050565b600062000ce0828462001254565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600062000ce0828462001232565b600062000ce08284620010d9565b600060075482111562000da85762000da0620f424062000d996007546200052b620f42408762000d4990919063ffffffff16565b9062000ce7565b905062000cad565b62000da0620f424062000d99846200052b620f424060075462000d4990919063ffffffff16565b60008062000ddf83600362001232565b620f424062000df060028662001147565b62000dfc9190620010d9565b62000e0990600962001232565b62000e159190620010be565b62000e2490620f4240620010be565b905064e8d4a5100062000e388282620010d9565b62000e4790620f424062001254565b949350505050565b60008183111562000e61578162000ce0565b5090919050565b610fa6806200128583390190565b610faa806200222b83390190565b805169ffffffffffffffffffff8116811462000cad57600080fd5b60006020828403121562000eb1578081fd5b81356001600160a01b038116811462000ce0578182fd5b60006020828403121562000eda578081fd5b8151801515811462000ce0578182fd5b60006020828403121562000efc578081fd5b5035919050565b60006020828403121562000f15578081fd5b5051919050565b600080600080600060a0868803121562000f34578081fd5b62000f3f8662000e84565b945060208601519350604086015192506060860151915062000f646080870162000e84565b90509295509295909350565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252601f908201527f54686520706f6f6c2077617320616c726561647920696e697469617465642e00604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601b908201527f596f7520646f6e2774206861766520656e6f75676820555344432e0000000000604082015260600190565b90815260200190565b60008219821115620010d457620010d46200126e565b500190565b600082620010f557634e487b7160e01b81526012600452602481fd5b500490565b80825b60018086116200110e57506200113e565b8187048211156200112357620011236200126e565b808616156200113157918102915b9490941c938002620010fd565b94509492505050565b600062000ce060001960ff851684600082620011665750600162000ce0565b81620011755750600062000ce0565b81600181146200118e57600281146200119957620011cd565b600191505062000ce0565b60ff841115620011ad57620011ad6200126e565b6001841b915084821115620011c657620011c66200126e565b5062000ce0565b5060208310610133831016604e8410600b841016171562001205575081810a83811115620011ff57620011ff6200126e565b62000ce0565b620012148484846001620010fa565b8086048211156200122957620012296200126e565b02949350505050565b60008160001904831182151516156200124f576200124f6200126e565b500290565b6000828210156200126957620012696200126e565b500390565b634e487b7160e01b600052601160045260246000fdfe60806040523480156200001157600080fd5b5060405162000fa638038062000fa6833981016040819052620000349162000169565b604080518082018252600a8152690426974636f696e2055760b41b602080830191825283518085019094526005845264042544355560dc1b9084015281519192916200008391600391620000c3565b50805162000099906004906020840190620000c3565b5050600580546001600160a01b0319166001600160a01b03939093169290921790915550620001d6565b828054620000d19062000199565b90600052602060002090601f016020900481019282620000f5576000855562000140565b82601f106200011057805160ff191683800117855562000140565b8280016001018555821562000140579182015b828111156200014057825182559160200191906001019062000123565b506200014e92915062000152565b5090565b5b808211156200014e576000815560010162000153565b6000602082840312156200017b578081fd5b81516001600160a01b038116811462000192578182fd5b9392505050565b600281046001821680620001ae57607f821691505b60208210811415620001d057634e487b7160e01b600052602260045260246000fd5b50919050565b610dc080620001e66000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c578063a0712d6811610066578063a0712d68146101c0578063a457c2d7146101d3578063a9059cbb146101e6578063dd62ed3e146101f9576100ea565b806370a082311461019257806379cc6790146101a557806395d89b41146101b8576100ea565b806323b872dd116100c857806323b872dd14610142578063313ce56714610155578063395093511461016a57806342966c681461017d576100ea565b806306fdde03146100ef578063095ea7b31461010d57806318160ddd1461012d575b600080fd5b6100f761020c565b60405161010491906109c1565b60405180910390f35b61012061011b366004610975565b61029e565b60405161010491906109b6565b6101356102bb565b6040516101049190610cf3565b61012061015036600461093a565b6102c1565b61015d61035a565b6040516101049190610cfc565b610120610178366004610975565b61035f565b61019061018b36600461099e565b6103b3565b005b6101356101a03660046108e7565b6103d7565b6101906101b3366004610975565b6103f6565b6100f7610449565b6101906101ce36600461099e565b610458565b6101206101e1366004610975565b610479565b6101206101f4366004610975565b6104f2565b610135610207366004610908565b610506565b60606003805461021b90610d39565b80601f016020809104026020016040519081016040528092919081815260200182805461024790610d39565b80156102945780601f1061026957610100808354040283529160200191610294565b820191906000526020600020905b81548152906001019060200180831161027757829003601f168201915b5050505050905090565b60006102b26102ab610531565b8484610535565b50600192915050565b60025490565b60006102ce8484846105e9565b6001600160a01b0384166000908152600160205260408120816102ef610531565b6001600160a01b03166001600160a01b031681526020019081526020016000205490508281101561033b5760405162461bcd60e51b815260040161033290610b21565b60405180910390fd5b61034f85610347610531565b858403610535565b506001949350505050565b600690565b60006102b261036c610531565b84846001600061037a610531565b6001600160a01b03908116825260208083019390935260409182016000908120918b16815292529020546103ae9190610d0a565b610535565b6005546001600160a01b031633146103ca57600080fd5b6103d432826103f6565b50565b6001600160a01b0381166000908152602081905260409020545b919050565b600061040483610207610531565b9050818110156104265760405162461bcd60e51b815260040161033290610b69565b61043a83610432610531565b848403610535565b6104448383610713565b505050565b60606004805461021b90610d39565b6005546001600160a01b0316331461046f57600080fd5b6103d43282610804565b60008060016000610488610531565b6001600160a01b03908116825260208083019390935260409182016000908120918816815292529020549050828110156104d45760405162461bcd60e51b815260040161033290610c77565b6104e86104df610531565b85858403610535565b5060019392505050565b60006102b26104ff610531565b84846105e9565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b03831661055b5760405162461bcd60e51b815260040161033290610c33565b6001600160a01b0382166105815760405162461bcd60e51b815260040161033290610a99565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906105dc908590610cf3565b60405180910390a3505050565b6001600160a01b03831661060f5760405162461bcd60e51b815260040161033290610bee565b6001600160a01b0382166106355760405162461bcd60e51b815260040161033290610a14565b610640838383610444565b6001600160a01b038316600090815260208190526040902054818110156106795760405162461bcd60e51b815260040161033290610adb565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106b0908490610d0a565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106fa9190610cf3565b60405180910390a361070d848484610444565b50505050565b6001600160a01b0382166107395760405162461bcd60e51b815260040161033290610bad565b61074582600083610444565b6001600160a01b0382166000908152602081905260409020548181101561077e5760405162461bcd60e51b815260040161033290610a57565b6001600160a01b03831660009081526020819052604081208383039055600280548492906107ad908490610d22565b90915550506040516000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906107f0908690610cf3565b60405180910390a361044483600084610444565b6001600160a01b03821661082a5760405162461bcd60e51b815260040161033290610cbc565b61083660008383610444565b80600260008282546108489190610d0a565b90915550506001600160a01b03821660009081526020819052604081208054839290610875908490610d0a565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906108b8908590610cf3565b60405180910390a36108cc60008383610444565b5050565b80356001600160a01b03811681146103f157600080fd5b6000602082840312156108f8578081fd5b610901826108d0565b9392505050565b6000806040838503121561091a578081fd5b610923836108d0565b9150610931602084016108d0565b90509250929050565b60008060006060848603121561094e578081fd5b610957846108d0565b9250610965602085016108d0565b9150604084013590509250925092565b60008060408385031215610987578182fd5b610990836108d0565b946020939093013593505050565b6000602082840312156109af578081fd5b5035919050565b901515815260200190565b6000602080835283518082850152825b818110156109ed578581018301518582016040015282016109d1565b818111156109fe5783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526022908201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604082015261636560f01b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b60208082526028908201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616040820152676c6c6f77616e636560c01b606082015260800190565b60208082526024908201527f45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77604082015263616e636560e01b606082015260800190565b60208082526021908201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736040820152607360f81b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604082015264207a65726f60d81b606082015260800190565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b60ff91909116815260200190565b60008219821115610d1d57610d1d610d74565b500190565b600082821015610d3457610d34610d74565b500390565b600281046001821680610d4d57607f821691505b60208210811415610d6e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea26469706673582212209f58275d65b843da65cd039c954b9936303a23fca03c0b5f14269c0fad5f66df64736f6c6343000800003360806040523480156200001157600080fd5b5060405162000faa38038062000faa83398101604081905262000034916200016d565b604080518082018252600c81526b2134ba31b7b4b7102237bbb760a11b602080830191825283518085019094526007845266212a21a227aba760c91b9084015281519192916200008791600391620000c7565b5080516200009d906004906020840190620000c7565b5050600580546001600160a01b0319166001600160a01b03939093169290921790915550620001da565b828054620000d5906200019d565b90600052602060002090601f016020900481019282620000f9576000855562000144565b82601f106200011457805160ff191683800117855562000144565b8280016001018555821562000144579182015b828111156200014457825182559160200191906001019062000127565b506200015292915062000156565b5090565b5b8082111562000152576000815560010162000157565b6000602082840312156200017f578081fd5b81516001600160a01b038116811462000196578182fd5b9392505050565b600281046001821680620001b257607f821691505b60208210811415620001d457634e487b7160e01b600052602260045260246000fd5b50919050565b610dc080620001ea6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c578063a0712d6811610066578063a0712d68146101c0578063a457c2d7146101d3578063a9059cbb146101e6578063dd62ed3e146101f9576100ea565b806370a082311461019257806379cc6790146101a557806395d89b41146101b8576100ea565b806323b872dd116100c857806323b872dd14610142578063313ce56714610155578063395093511461016a57806342966c681461017d576100ea565b806306fdde03146100ef578063095ea7b31461010d57806318160ddd1461012d575b600080fd5b6100f761020c565b60405161010491906109c1565b60405180910390f35b61012061011b366004610975565b61029e565b60405161010491906109b6565b6101356102bb565b6040516101049190610cf3565b61012061015036600461093a565b6102c1565b61015d61035a565b6040516101049190610cfc565b610120610178366004610975565b61035f565b61019061018b36600461099e565b6103b3565b005b6101356101a03660046108e7565b6103d7565b6101906101b3366004610975565b6103f6565b6100f7610449565b6101906101ce36600461099e565b610458565b6101206101e1366004610975565b610479565b6101206101f4366004610975565b6104f2565b610135610207366004610908565b610506565b60606003805461021b90610d39565b80601f016020809104026020016040519081016040528092919081815260200182805461024790610d39565b80156102945780601f1061026957610100808354040283529160200191610294565b820191906000526020600020905b81548152906001019060200180831161027757829003601f168201915b5050505050905090565b60006102b26102ab610531565b8484610535565b50600192915050565b60025490565b60006102ce8484846105e9565b6001600160a01b0384166000908152600160205260408120816102ef610531565b6001600160a01b03166001600160a01b031681526020019081526020016000205490508281101561033b5760405162461bcd60e51b815260040161033290610b21565b60405180910390fd5b61034f85610347610531565b858403610535565b506001949350505050565b600690565b60006102b261036c610531565b84846001600061037a610531565b6001600160a01b03908116825260208083019390935260409182016000908120918b16815292529020546103ae9190610d0a565b610535565b6005546001600160a01b031633146103ca57600080fd5b6103d432826103f6565b50565b6001600160a01b0381166000908152602081905260409020545b919050565b600061040483610207610531565b9050818110156104265760405162461bcd60e51b815260040161033290610b69565b61043a83610432610531565b848403610535565b6104448383610713565b505050565b60606004805461021b90610d39565b6005546001600160a01b0316331461046f57600080fd5b6103d43282610804565b60008060016000610488610531565b6001600160a01b03908116825260208083019390935260409182016000908120918816815292529020549050828110156104d45760405162461bcd60e51b815260040161033290610c77565b6104e86104df610531565b85858403610535565b5060019392505050565b60006102b26104ff610531565b84846105e9565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b03831661055b5760405162461bcd60e51b815260040161033290610c33565b6001600160a01b0382166105815760405162461bcd60e51b815260040161033290610a99565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906105dc908590610cf3565b60405180910390a3505050565b6001600160a01b03831661060f5760405162461bcd60e51b815260040161033290610bee565b6001600160a01b0382166106355760405162461bcd60e51b815260040161033290610a14565b610640838383610444565b6001600160a01b038316600090815260208190526040902054818110156106795760405162461bcd60e51b815260040161033290610adb565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106b0908490610d0a565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106fa9190610cf3565b60405180910390a361070d848484610444565b50505050565b6001600160a01b0382166107395760405162461bcd60e51b815260040161033290610bad565b61074582600083610444565b6001600160a01b0382166000908152602081905260409020548181101561077e5760405162461bcd60e51b815260040161033290610a57565b6001600160a01b03831660009081526020819052604081208383039055600280548492906107ad908490610d22565b90915550506040516000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906107f0908690610cf3565b60405180910390a361044483600084610444565b6001600160a01b03821661082a5760405162461bcd60e51b815260040161033290610cbc565b61083660008383610444565b80600260008282546108489190610d0a565b90915550506001600160a01b03821660009081526020819052604081208054839290610875908490610d0a565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906108b8908590610cf3565b60405180910390a36108cc60008383610444565b5050565b80356001600160a01b03811681146103f157600080fd5b6000602082840312156108f8578081fd5b610901826108d0565b9392505050565b6000806040838503121561091a578081fd5b610923836108d0565b9150610931602084016108d0565b90509250929050565b60008060006060848603121561094e578081fd5b610957846108d0565b9250610965602085016108d0565b9150604084013590509250925092565b60008060408385031215610987578182fd5b610990836108d0565b946020939093013593505050565b6000602082840312156109af578081fd5b5035919050565b901515815260200190565b6000602080835283518082850152825b818110156109ed578581018301518582016040015282016109d1565b818111156109fe5783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526022908201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604082015261636560f01b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b60208082526028908201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616040820152676c6c6f77616e636560c01b606082015260800190565b60208082526024908201527f45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77604082015263616e636560e01b606082015260800190565b60208082526021908201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736040820152607360f81b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604082015264207a65726f60d81b606082015260800190565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b60ff91909116815260200190565b60008219821115610d1d57610d1d610d74565b500190565b600082821015610d3457610d34610d74565b500390565b600281046001821680610d4d57607f821691505b60208210811415610d6e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea26469706673582212200bcd36483a3d381351e2db2f6d138901be114a822bdef4aa84e392c074fd0d6364736f6c63430008000033a2646970667358221220cb4a6fa6fac7d2dd79f5fa4215e8d05193f60d8e98d91da12a0a46234c09315764736f6c63430008000033",
  "bytecodeSha1": "f14c2c0737ff5a72196d59972beb7f5ed850f41b",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.0+commit.c7dfd78e"
  },
  "contractName": "LeveragedTrading",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "66": [
            1185,
            1208,
            true
          ],
          "67": [
            1934,
            1956,
            true
          ]
        }
      },
      "1": {},
      "2": {},
      "3": {},
      "4": {},
      "5": {},
      "6": {},
      "7": {},
      "8": {
        "LeveragedTrading.getBtcDownPrice": {
          "58": [
            6731,
            6749,
            true
          ]
        },
        "LeveragedTrading.getBtcUpPrice": {
          "61": [
            6522,
            6538,
            true
          ]
        },
        "LeveragedTrading.getPriceDiff": {
          "64": [
            7648,
            7671,
            false
          ]
        },
        "LeveragedTrading.getSign": {
          "63": [
            6070,
            6093,
            false
          ]
        },
        "LeveragedTrading.initiatePool": {
          "59": [
            2784,
            2800,
            true
          ]
        },
        "LeveragedTrading.issueBtcDown": {
          "60": [
            4047,
            4103,
            true
          ]
        },
        "LeveragedTrading.issueBtcUp": {
          "62": [
            3490,
            3546,
            true
          ]
        },
        "LeveragedTrading.min": {
          "65": [
            7287,
            7293,
            true
          ]
        },
        "LeveragedTrading.rebalanceLeveragedTokens": {
          "57": [
            5394,
            5415,
            false
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Ownable._setOwner": {
          "49": [
            2131,
            2148
          ],
          "50": [
            2158,
            2203
          ]
        },
        "Ownable.owner": {
          "8": [
            1038,
            1051
          ]
        },
        "Ownable.renounceOwnership": {
          "6": [
            1669,
            1690
          ]
        },
        "Ownable.transferOwnership": {
          "35": [
            1926,
            1999
          ],
          "36": [
            2009,
            2028
          ]
        }
      },
      "1": {},
      "2": {},
      "3": {},
      "4": {},
      "5": {
        "Context._msgSender": {
          "48": [
            658,
            675
          ]
        }
      },
      "6": {
        "SafeMath.add": {
          "46": [
            2749,
            2761
          ]
        },
        "SafeMath.div": {
          "52": [
            3844,
            3856
          ]
        },
        "SafeMath.mul": {
          "51": [
            3459,
            3471
          ]
        },
        "SafeMath.sub": {
          "47": [
            3116,
            3128
          ]
        }
      },
      "7": {},
      "8": {
        "LeveragedTrading.L": {
          "55": [
            7504,
            7532
          ]
        },
        "LeveragedTrading.getBtcDownPrice": {
          "7": [
            6724,
            6817
          ]
        },
        "LeveragedTrading.getBtcUpPrice": {
          "34": [
            6515,
            6600
          ]
        },
        "LeveragedTrading.getBtcdownBalance": {
          "27": [
            8050,
            8086
          ]
        },
        "LeveragedTrading.getBtcupBalance": {
          "0": [
            7935,
            7969
          ]
        },
        "LeveragedTrading.getPriceDiff": {
          "53": [
            7687,
            7746
          ],
          "54": [
            7786,
            7845
          ]
        },
        "LeveragedTrading.getRebalanceAmount": {
          "43": [
            6330,
            6407
          ]
        },
        "LeveragedTrading.getSign": {
          "44": [
            6109,
            6117
          ],
          "45": [
            6156,
            6165
          ]
        },
        "LeveragedTrading.initiatePool": {
          "9": [
            2776,
            2836
          ],
          "10": [
            2847,
            2879
          ],
          "11": [
            2889,
            2925
          ],
          "12": [
            2936,
            2965
          ],
          "13": [
            2975,
            3006
          ],
          "14": [
            3017,
            3039
          ]
        },
        "LeveragedTrading.issueBtcDown": {
          "21": [
            3650,
            3676
          ],
          "22": [
            3695,
            3727
          ],
          "23": [
            3821,
            3856
          ],
          "24": [
            3866,
            3922
          ],
          "25": [
            3932,
            3985
          ],
          "26": [
            4039,
            4135
          ]
        },
        "LeveragedTrading.issueBtcUp": {
          "37": [
            3109,
            3135
          ],
          "38": [
            3154,
            3182
          ],
          "39": [
            3274,
            3307
          ],
          "40": [
            3317,
            3369
          ],
          "41": [
            3379,
            3428
          ],
          "42": [
            3482,
            3578
          ]
        },
        "LeveragedTrading.min": {
          "56": [
            7280,
            7301
          ]
        },
        "LeveragedTrading.rebalanceLeveragedTokens": {
          "1": [
            5435,
            5489
          ],
          "2": [
            5507,
            5565
          ],
          "3": [
            5617,
            5671
          ],
          "4": [
            5689,
            5747
          ],
          "5": [
            5783,
            5806
          ]
        },
        "LeveragedTrading.redeemBtcDown": {
          "15": [
            4711,
            4737
          ],
          "16": [
            4747,
            4782
          ],
          "17": [
            4793,
            4825
          ],
          "18": [
            4927,
            4983
          ],
          "19": [
            4993,
            5046
          ],
          "20": [
            5100,
            5146
          ]
        },
        "LeveragedTrading.redeemBtcUp": {
          "28": [
            4217,
            4243
          ],
          "29": [
            4253,
            4286
          ],
          "30": [
            4297,
            4325
          ],
          "31": [
            4417,
            4469
          ],
          "32": [
            4479,
            4528
          ],
          "33": [
            4582,
            4627
          ]
        }
      }
    }
  },
  "dependencies": [
    "smartcontractkit/chainlink@1.3.0/AggregatorV3Interface",
    "BTCDOWN",
    "BTCUP",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/ERC20",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/ERC20Burnable",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/IERC20",
    "IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/IERC20Metadata",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/Ownable",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/SafeMath"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "1861:6235:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2148:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1978:37;;;:::i;2105:36::-;;;:::i;7869:107::-;;;:::i;2350:35::-;;;:::i;:::-;;;;;;;:::i;6876:317::-;;;:::i;5159:654::-;;;:::i;:::-;;1605:92:0;;;:::i;6645:179:8:-;;;:::i;973:85:0:-;;;:::i;:::-;;;;;;;:::i;2707:339:8:-;;;;;;:::i;:::-;;:::i;4640:513::-;;;;;;:::i;:::-;;:::i;2208:32::-;;;:::i;3591:551::-;;;;;;:::i;:::-;;:::i;7982:111::-;;;:::i;4148:486::-;;;;;;:::i;:::-;;:::i;2043:34::-;;;:::i;1937:35::-;;;:::i;6450:157::-;;;:::i;1846:189:0:-;;;;;;:::i;:::-;;:::i;2269:31:8:-;;;:::i;3052:533::-;;;;;;:::i;:::-;;:::i;2148:30::-;;;;:::o;1978:37::-;;;;:::o;2105:36::-;;;;:::o;7869:107::-;7942:5;;:27;;-1:-1:-1;;;7942:27:8;;7916:7;;-1:-1:-1;;;;;7942:5:8;;:15;;:27;;7958:10;;7942:27;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7935:34;;7869:107;:::o;2350:35::-;;;;;;:::o;6876:317::-;6995:17;;7045:27;;;-1:-1:-1;;;7045:27:8;;;;6920:7;;-1:-1:-1;;;;;6995:17:8;;6920:7;;6995:17;;7045:25;;:27;;;;;;;;;;;;;;6995:17;7045:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;7023:49:8;;-1:-1:-1;;;;;;6876:317:8;:::o;5159:654::-;5212:16;5231:13;:11;:13::i;:::-;5212:32;;5277:1;5259:15;;:19;5258:48;;;;;5304:1;5284:17;;:21;5258:48;5254:519;;;5322:23;5348:28;5367:8;5348:18;:28::i;:::-;5322:54;;5414:1;5394:17;5402:8;5394:7;:17::i;:::-;:21;5390:372;;;5453:15;;:36;;5473:15;5453:19;:36::i;:::-;5435:15;:54;5527:17;;:38;;5549:15;5527:21;:38::i;:::-;5507:17;:58;5390:372;;;5635:15;;:36;;5655:15;5635:19;:36::i;:::-;5617:15;:54;5709:17;;:38;;5731:15;5709:21;:38::i;:::-;5689:17;:58;5390:372;5254:519;;5783:12;:23;5159:654::o;1605:92:0:-;1196:12;:10;:12::i;:::-;-1:-1:-1;;;;;1185:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:0;;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;;;;;;;;;1669:21:::1;1687:1;1669:9;:21::i;:::-;1605:92::o:0;6645:179:8:-;6693:7;6731:13;;6748:1;6731:18;:86;;6768:49;6803:13;;6768:30;6790:7;6768:17;;:21;;:30;;;;:::i;:::-;:34;;:49::i;:::-;6731:86;;;-1:-1:-1;6753:12:8;;;6645:179::o;973:85:0:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;973:85;:::o;2707:339:8:-;1196:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1185:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:0;;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;2785:15:8::1;::::0;::::1;;2784:16;2776:60;;;;-1:-1:-1::0;;;2776:60:8::1;;;;;;;:::i;:::-;2873:4;2855:24;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;2847:5:8::1;:32:::0;;-1:-1:-1;;;;;;2847:32:8::1;-1:-1:-1::0;;;;;2847:32:8;;;::::1;::::0;;;::::1;::::0;;2899:26:::1;::::0;2919:4:::1;::::0;2899:26:::1;::::0;::::1;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;2889:7:8::1;:36:::0;;-1:-1:-1;;;;;;2889:36:8::1;-1:-1:-1::0;;;;;2889:36:8;;;::::1;::::0;;;::::1;::::0;;2936:29:::1;2947:17;:10:::0;2962:1:::1;2947:14;:17::i;2936:29::-;2975:31;2988:17;:10:::0;3003:1:::1;2988:14;:17::i;2975:31::-;-1:-1:-1::0;3017:15:8::1;:22:::0;;-1:-1:-1;;3017:22:8::1;3035:4;3017:22;::::0;;2707:339::o;4640:513::-;4711:26;:24;:26::i;:::-;4747:7;;:35;;-1:-1:-1;;;4747:35:8;;-1:-1:-1;;;;;4747:7:8;;;;:12;;:35;;4760:21;;4747:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4808:17;:15;:17::i;:::-;4793:12;:32;;;4835:18;;4856:52;;4900:7;;4856:39;;:21;;:25;:39::i;:52::-;4943:13;;4835:73;;-1:-1:-1;4943:40:8;;4961:21;4943:17;:40::i;:::-;4927:13;:56;5013:17;;:33;;5035:10;5013:21;:33::i;:::-;4993:17;:53;;;5078:11;;5107:38;;-1:-1:-1;;;5107:38:8;;5078:11;;;;-1:-1:-1;;;;;5078:11:8;;;;5107:13;;:38;;5121:10;;5134;;5107:38;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5100:46;;-1:-1:-1;;;5100:46:8;;;;;;;;;4640:513;;;:::o;2208:32::-;;;;:::o;3591:551::-;3650:26;:24;:26::i;:::-;3710:17;:15;:17::i;:::-;3695:12;:32;;;3737:29;;3769:41;;:23;:10;3784:7;3769:14;:23::i;:41::-;3821:7;;:35;;-1:-1:-1;;;3821:35:8;;3737:73;;-1:-1:-1;;;;;;3821:7:8;;:12;;:35;;3737:73;;3821:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3882:13:8;;:40;;-1:-1:-1;3882:13:8;-1:-1:-1;3900:21:8;3882:17;:40::i;:::-;3866:13;:56;3952:17;;:33;;3974:10;3952:21;:33::i;:::-;3932:17;:53;;;4017:11;;4047:56;;-1:-1:-1;;;4047:56:8;;4017:11;;;;-1:-1:-1;;;;;4017:11:8;;;;4047:17;;:56;;4065:10;;4085:4;;4092:10;;4047:56;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4039:96;;;;-1:-1:-1;;;4039:96:8;;;;;;;:::i;7982:111::-;8057:7;;:29;;-1:-1:-1;;;8057:29:8;;8031:7;;-1:-1:-1;;;;;8057:7:8;;:17;;:29;;8075:10;;8057:29;;;:::i;4148:486::-;4217:26;:24;:26::i;:::-;4253:5;;:33;;-1:-1:-1;;;4253:33:8;;-1:-1:-1;;;;;4253:5:8;;;;:10;;:33;;4264:21;;4253:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4310:15;:13;:15::i;:::-;4297:10;:28;;;4335:18;;4356:50;;4398:7;;4356:37;;:21;;:25;:37::i;:50::-;4431:11;;4335:71;;-1:-1:-1;4431:38:8;;4447:21;4431:15;:38::i;:::-;4417:11;:52;4497:15;;:31;;4517:10;4497:19;:31::i;:::-;4479:15;:49;4560:11;;4589:37;;-1:-1:-1;;;4589:37:8;;4560:11;;;;-1:-1:-1;;;;;4560:11:8;;;;4589:13;;:37;;4603:10;;4615;;4589:37;;;:::i;2043:34::-;;;;:::o;1937:35::-;;;;:::o;6450:157::-;6496:7;6522:11;;6537:1;6522:16;:78;;6555:45;6588:11;;6555:28;6575:7;6555:15;;:19;;:28;;;;:::i;6522:78::-;-1:-1:-1;6542:10:8;;;6450:157::o;1846:189:0:-;1196:12;:10;:12::i;:::-;-1:-1:-1;;;;;1185:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:0;;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;1934:22:0;::::1;1926:73;;;;-1:-1:-1::0;;;1926:73:0::1;;;;;;;:::i;:::-;2009:19;2019:8;2009:9;:19::i;:::-;1846:189:::0;:::o;2269:31:8:-;;;;:::o;3052:533::-;3109:26;:24;:26::i;:::-;3167:15;:13;:15::i;:::-;3154:10;:28;;;3192:29;;3224:39;;:23;:10;3239:7;3224:14;:23::i;:39::-;3274:5;;:33;;-1:-1:-1;;;3274:33:8;;3192:71;;-1:-1:-1;;;;;;3274:5:8;;:10;;:33;;3192:71;;3274:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3331:11:8;;:38;;-1:-1:-1;3331:11:8;-1:-1:-1;3347:21:8;3331:15;:38::i;:::-;3317:11;:52;3397:15;;:31;;3417:10;3397:19;:31::i;:::-;3379:15;:49;3460:11;;3490:56;;-1:-1:-1;;;3490:56:8;;3460:11;;;;-1:-1:-1;;;;;3460:11:8;;;;3490:17;;:56;;3508:10;;3528:4;;3535:10;;3490:56;;;:::i;6189:225::-;6258:7;6277:17;6297:22;6310:8;6297:12;:22::i;:::-;6277:42;;6337:70;6399:7;6337:57;6381:12;6383:9;6381:1;:12::i;:::-;6337:39;6341:15;;6358:17;;6337:3;:39::i;:::-;:43;;:57::i;:70::-;6330:77;;;6189:225;;;;:::o;5990:192::-;6048:6;6081:12;;6070:8;:23;6066:110;;;-1:-1:-1;6116:1:8;6109:8;;6066:110;-1:-1:-1;;;6156:9:8;;2672:96:6;2730:7;2756:5;2760:1;2756;:5;:::i;:::-;2749:12;2672:96;-1:-1:-1;;;2672:96:6:o;3039:::-;3097:7;3123:5;3127:1;3123;:5;:::i;586:96:5:-;665:10;586:96;:::o;2041:169:0:-;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2041:169;;:::o;3382:96:6:-;3440:7;3466:5;3470:1;3466;:5;:::i;3767:96::-;3825:7;3851:5;3855:1;3851;:5;:::i;7545:318:8:-;7608:7;7659:12;;7648:8;:23;7644:212;;;7694:52;7738:7;7694:39;7720:12;;7694:21;7707:7;7694:8;:12;;:21;;;;:::i;:39::-;:43;;:52::i;:::-;7687:59;;;;7644:212;7793:52;7837:7;7793:39;7823:8;7793:25;7810:7;7793:12;;:16;;:25;;;;:::i;7314:225::-;7359:7;;7446:5;7450:1;7446;:5;:::i;:::-;7434:7;7425:6;7430:1;7425;:6;:::i;:::-;:16;;;;:::i;:::-;7420:22;;:1;:22;:::i;:::-;:31;;;;:::i;:::-;:41;;7454:7;7420:41;:::i;:::-;7404:57;-1:-1:-1;7485:8:8;7521:11;7404:57;7485:8;7521:11;:::i;:::-;7511:21;;:7;:21;:::i;:::-;7504:28;7314:225;-1:-1:-1;;;;7314:225:8:o;7203:105::-;7261:7;7292:1;7287;:6;;:14;;7300:1;7287:14;;;-1:-1:-1;7296:1:8;;7203:105;-1:-1:-1;7203:105:8:o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;14:181:9:-;94:13;;147:22;136:34;;126:45;;116:2;;185:1;182;175:12;200:306;;312:2;300:9;291:7;287:23;283:32;280:2;;;333:6;325;318:22;280:2;364:23;;-1:-1:-1;;;;;416:31:9;;406:42;;396:2;;467:6;459;452:22;511:297;;631:2;619:9;610:7;606:23;602:32;599:2;;;652:6;644;637:22;599:2;689:9;683:16;742:5;735:13;728:21;721:5;718:32;708:2;;769:6;761;754:22;813:190;;925:2;913:9;904:7;900:23;896:32;893:2;;;946:6;938;931:22;893:2;-1:-1:-1;974:23:9;;883:120;-1:-1:-1;883:120:9:o;1008:194::-;;1131:2;1119:9;1110:7;1106:23;1102:32;1099:2;;;1152:6;1144;1137:22;1099:2;-1:-1:-1;1180:16:9;;1089:113;-1:-1:-1;1089:113:9:o;1207:487::-;;;;;;1395:3;1383:9;1374:7;1370:23;1366:33;1363:2;;;1417:6;1409;1402:22;1363:2;1445:41;1476:9;1445:41;:::i;:::-;1435:51;;1526:2;1515:9;1511:18;1505:25;1495:35;;1570:2;1559:9;1555:18;1549:25;1539:35;;1614:2;1603:9;1599:18;1593:25;1583:35;;1637:51;1683:3;1672:9;1668:19;1637:51;:::i;:::-;1627:61;;1353:341;;;;;;;;:::o;1699:203::-;-1:-1:-1;;;;;1863:32:9;;;;1845:51;;1833:2;1818:18;;1800:102::o;1907:375::-;-1:-1:-1;;;;;2165:15:9;;;2147:34;;2217:15;;;;2212:2;2197:18;;2190:43;2264:2;2249:18;;2242:34;;;;2097:2;2082:18;;2064:218::o;2287:274::-;-1:-1:-1;;;;;2479:32:9;;;;2461:51;;2543:2;2528:18;;2521:34;2449:2;2434:18;;2416:145::o;2566:187::-;2731:14;;2724:22;2706:41;;2694:2;2679:18;;2661:92::o;2758:402::-;2960:2;2942:21;;;2999:2;2979:18;;;2972:30;3038:34;3033:2;3018:18;;3011:62;-1:-1:-1;;;3104:2:9;3089:18;;3082:36;3150:3;3135:19;;2932:228::o;3165:355::-;3367:2;3349:21;;;3406:2;3386:18;;;3379:30;3445:33;3440:2;3425:18;;3418:61;3511:2;3496:18;;3339:181::o;3525:356::-;3727:2;3709:21;;;3746:18;;;3739:30;3805:34;3800:2;3785:18;;3778:62;3872:2;3857:18;;3699:182::o;3886:351::-;4088:2;4070:21;;;4127:2;4107:18;;;4100:30;4166:29;4161:2;4146:18;;4139:57;4228:2;4213:18;;4060:177::o;4242:::-;4388:25;;;4376:2;4361:18;;4343:76::o;4424:128::-;;4495:1;4491:6;4488:1;4485:13;4482:2;;;4501:18;;:::i;:::-;-1:-1:-1;4537:9:9;;4472:80::o;4557:217::-;;4623:1;4613:2;;-1:-1:-1;;;4648:31:9;;4702:4;4699:1;4692:15;4730:4;4655:1;4720:15;4613:2;-1:-1:-1;4759:9:9;;4603:171::o;4779:453::-;4875:6;4898:5;4912:314;4961:1;4998:2;4988:8;4985:16;4975:2;;5005:5;;;4975:2;5046:4;5041:3;5037:14;5031:4;5028:24;5025:2;;;5055:18;;:::i;:::-;5105:2;5095:8;5091:17;5088:2;;;5120:16;;;;5088:2;5199:17;;;;;5159:15;;4912:314;;;4856:376;;;;;;;:::o;5237:148::-;;5324:55;-1:-1:-1;;5365:4:9;5351:19;;5345:4;5390:922;5474:8;5464:2;;-1:-1:-1;5515:1:9;5529:5;;5464:2;5563:4;5553:2;;-1:-1:-1;5600:1:9;5614:5;;5553:2;5645:4;5663:1;5658:59;;;;5731:1;5726:183;;;;5638:271;;5658:59;5688:1;5679:10;;5702:5;;;5726:183;5763:3;5753:8;5750:17;5747:2;;;5770:18;;:::i;:::-;5826:1;5816:8;5812:16;5803:25;;5854:3;5847:5;5844:14;5841:2;;;5861:18;;:::i;:::-;5894:5;;;5638:271;;5993:2;5983:8;5980:16;5974:3;5968:4;5965:13;5961:36;5955:2;5945:8;5942:16;5937:2;5931:4;5928:12;5924:35;5921:77;5918:2;;;-1:-1:-1;6030:19:9;;;6065:14;;;6062:2;;;6082:18;;:::i;:::-;6115:5;;5918:2;6162:42;6200:3;6190:8;6184:4;6181:1;6162:42;:::i;:::-;6237:6;6232:3;6228:16;6219:7;6216:29;6213:2;;;6248:18;;:::i;:::-;6286:20;;5454:858;-1:-1:-1;;;;5454:858:9:o;6317:168::-;;6423:1;6419;6415:6;6411:14;6408:1;6405:21;6400:1;6393:9;6386:17;6382:45;6379:2;;;6430:18;;:::i;:::-;-1:-1:-1;6470:9:9;;6369:116::o;6490:125::-;;6558:1;6555;6552:8;6549:2;;;6563:18;;:::i;:::-;-1:-1:-1;6600:9:9;;6539:76::o;6620:127::-;6681:10;6676:3;6672:20;6669:1;6662:31;6712:4;6709:1;6702:15;6736:4;6733:1;6726:15",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    1861,
    8096
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH3 0x15F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA14274E8 GT PUSH3 0xC9 JUMPI DUP1 PUSH4 0xDDE7BE2C GT PUSH3 0x87 JUMPI DUP1 PUSH4 0xDDE7BE2C EQ PUSH3 0x270 JUMPI DUP1 PUSH4 0xF0156E8A EQ PUSH3 0x27A JUMPI DUP1 PUSH4 0xF06847D6 EQ PUSH3 0x284 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH3 0x28E JUMPI DUP1 PUSH4 0xF4352C57 EQ PUSH3 0x2A5 JUMPI DUP1 PUSH4 0xF530C04A EQ PUSH3 0x2AF JUMPI PUSH3 0x15F JUMP JUMPDEST DUP1 PUSH4 0xA14274E8 EQ PUSH3 0x217 JUMPI DUP1 PUSH4 0xB75CBE0B EQ PUSH3 0x22E JUMPI DUP1 PUSH4 0xC46D4F09 EQ PUSH3 0x238 JUMPI DUP1 PUSH4 0xC7E3B124 EQ PUSH3 0x24F JUMPI DUP1 PUSH4 0xD1EE539D EQ PUSH3 0x259 JUMPI PUSH3 0x15F JUMP JUMPDEST DUP1 PUSH4 0x3A3610BC GT PUSH3 0x123 JUMPI DUP1 PUSH4 0x3A3610BC EQ PUSH3 0x1BD JUMPI DUP1 PUSH4 0x6E5D6615 EQ PUSH3 0x1C7 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH3 0x1D3 JUMPI DUP1 PUSH4 0x81C2B29B EQ PUSH3 0x1DD JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH3 0x1E7 JUMPI DUP1 PUSH4 0x9B3075A1 EQ PUSH3 0x200 JUMPI PUSH3 0x15F JUMP JUMPDEST DUP1 PUSH3 0x34B9CC EQ PUSH3 0x164 JUMPI DUP1 PUSH4 0xC3E5343 EQ PUSH3 0x186 JUMPI DUP1 PUSH4 0x14D7C6D2 EQ PUSH3 0x190 JUMPI DUP1 PUSH4 0x157D0129 EQ PUSH3 0x19A JUMPI DUP1 PUSH4 0x3074FFF7 EQ PUSH3 0x1A4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x16E PUSH3 0x2C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x17D SWAP2 SWAP1 PUSH3 0x10B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x16E PUSH3 0x2CC JUMP JUMPDEST PUSH3 0x16E PUSH3 0x2D2 JUMP JUMPDEST PUSH3 0x16E PUSH3 0x2D8 JUMP JUMPDEST PUSH3 0x1AE PUSH3 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x17D SWAP2 SWAP1 PUSH3 0xFC1 JUMP JUMPDEST PUSH3 0x16E PUSH3 0x36D JUMP JUMPDEST PUSH3 0x1D1 PUSH3 0x3FE JUMP JUMPDEST STOP JUMPDEST PUSH3 0x1D1 PUSH3 0x4A0 JUMP JUMPDEST PUSH3 0x16E PUSH3 0x4FD JUMP JUMPDEST PUSH3 0x1F1 PUSH3 0x53F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x17D SWAP2 SWAP1 PUSH3 0xF70 JUMP JUMPDEST PUSH3 0x1D1 PUSH3 0x211 CALLDATASIZE PUSH1 0x4 PUSH3 0xEEA JUMP JUMPDEST PUSH3 0x54E JUMP JUMPDEST PUSH3 0x1D1 PUSH3 0x228 CALLDATASIZE PUSH1 0x4 PUSH3 0xEEA JUMP JUMPDEST PUSH3 0x69F JUMP JUMPDEST PUSH3 0x16E PUSH3 0x80F JUMP JUMPDEST PUSH3 0x1D1 PUSH3 0x249 CALLDATASIZE PUSH1 0x4 PUSH3 0xEEA JUMP JUMPDEST PUSH3 0x815 JUMP JUMPDEST PUSH3 0x16E PUSH3 0x982 JUMP JUMPDEST PUSH3 0x1D1 PUSH3 0x26A CALLDATASIZE PUSH1 0x4 PUSH3 0xEEA JUMP JUMPDEST PUSH3 0x9B5 JUMP JUMPDEST PUSH3 0x16E PUSH3 0xAAF JUMP JUMPDEST PUSH3 0x16E PUSH3 0xAB5 JUMP JUMPDEST PUSH3 0x16E PUSH3 0xABB JUMP JUMPDEST PUSH3 0x1D1 PUSH3 0x29F CALLDATASIZE PUSH1 0x4 PUSH3 0xE9F JUMP JUMPDEST PUSH3 0xAF0 JUMP JUMPDEST PUSH3 0x16E PUSH3 0xB6D JUMP JUMPDEST PUSH3 0x1D1 PUSH3 0x2C0 CALLDATASIZE PUSH1 0x4 PUSH3 0xEEA JUMP JUMPDEST PUSH3 0xB73 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH3 0x30B SWAP1 CALLER SWAP1 PUSH1 0x4 ADD PUSH3 0xF70 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x324 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x339 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x35F SWAP2 SWAP1 PUSH3 0xF03 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x3FABE5A3 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP4 SWAP2 DUP4 SWAP2 PUSH4 0xFEAF968C SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0xA0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x3B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x3CC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x3F2 SWAP2 SWAP1 PUSH3 0xF1C JUMP JUMPDEST POP SWAP2 SWAP6 POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x40A PUSH3 0x36D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x3 SLOAD GT DUP1 ISZERO PUSH3 0x421 JUMPI POP PUSH1 0x0 PUSH1 0x4 SLOAD GT JUMPDEST ISZERO PUSH3 0x49B JUMPI PUSH1 0x0 PUSH3 0x434 DUP3 PUSH3 0xC6B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x443 DUP4 PUSH3 0xCB2 JUMP JUMPDEST SGT ISZERO PUSH3 0x474 JUMPI PUSH1 0x3 SLOAD PUSH3 0x459 SWAP1 DUP3 PUSH3 0xCD2 JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x4 SLOAD PUSH3 0x46B SWAP1 DUP3 PUSH3 0xCE7 JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH3 0x499 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH3 0x483 SWAP1 DUP3 PUSH3 0xCE7 JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x4 SLOAD PUSH3 0x495 SWAP1 DUP3 PUSH3 0xCD2 JUMP JUMPDEST PUSH1 0x4 SSTORE JUMPDEST POP JUMPDEST PUSH1 0x7 SSTORE JUMP JUMPDEST PUSH3 0x4AA PUSH3 0xCF5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x4BD PUSH3 0x53F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH3 0x4EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x4E6 SWAP1 PUSH3 0x1049 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x4FB PUSH1 0x0 PUSH3 0xCF9 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD PUSH1 0x0 EQ PUSH3 0x538 JUMPI PUSH3 0x532 PUSH1 0x6 SLOAD PUSH3 0x52B PUSH3 0xF4240 PUSH1 0x4 SLOAD PUSH3 0xD49 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH3 0xD57 JUMP JUMPDEST PUSH3 0x35F JUMP JUMPDEST POP PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH3 0x558 PUSH3 0xCF5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x56B PUSH3 0x53F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH3 0x594 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x4E6 SWAP1 PUSH3 0x1049 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND ISZERO PUSH3 0x5BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x4E6 SWAP1 PUSH3 0x1012 JUMP JUMPDEST ADDRESS PUSH1 0x40 MLOAD PUSH3 0x5C9 SWAP1 PUSH3 0xE68 JUMP JUMPDEST PUSH3 0x5D5 SWAP2 SWAP1 PUSH3 0xF70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH3 0x5F2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 MLOAD ADDRESS SWAP1 PUSH3 0x623 SWAP1 PUSH3 0xE76 JUMP JUMPDEST PUSH3 0x62F SWAP2 SWAP1 PUSH3 0xF70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH3 0x64C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH3 0x67E PUSH3 0x2C0 DUP3 PUSH1 0x2 PUSH3 0xD57 JUMP JUMPDEST PUSH3 0x68F PUSH3 0x249 DUP3 PUSH1 0x2 PUSH3 0xD57 JUMP JUMPDEST POP PUSH1 0x8 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH3 0x6A9 PUSH3 0x3FE JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x852CD8D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x42966C68 SWAP1 PUSH3 0x6DB SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH3 0x10B5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x6F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x70B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH3 0x719 PUSH3 0x4FD JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE PUSH1 0x0 SWAP1 PUSH3 0x738 SWAP1 PUSH3 0xF4240 SWAP1 PUSH3 0x52B SWAP1 DUP6 SWAP1 PUSH3 0xD49 JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH3 0x74A SWAP1 DUP4 PUSH3 0xCE7 JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH1 0x4 SLOAD PUSH3 0x75C SWAP1 DUP3 PUSH3 0xCE7 JUMP JUMPDEST PUSH1 0x4 SWAP1 DUP2 SSTORE PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH2 0x100 SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH3 0x799 SWAP2 CALLER SWAP2 DUP8 SWAP2 ADD PUSH3 0xFA8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x7B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x7C9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x7EF SWAP2 SWAP1 PUSH3 0xEC8 JUMP JUMPDEST PUSH3 0x80A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH3 0x81F PUSH3 0x3FE JUMP JUMPDEST PUSH3 0x829 PUSH3 0x4FD JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE PUSH1 0x0 SWAP1 PUSH3 0x845 SWAP1 PUSH3 0x52B DUP5 PUSH3 0xF4240 PUSH3 0xD49 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x140E25AD PUSH1 0xE3 SHL DUP2 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA0712D68 SWAP1 PUSH3 0x878 SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH3 0x10B5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x893 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x8A8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x6 SLOAD PUSH3 0x8BC SWAP3 POP SWAP1 POP DUP3 PUSH3 0xCD2 JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH1 0x4 SLOAD PUSH3 0x8CE SWAP1 DUP4 PUSH3 0xCD2 JUMP JUMPDEST PUSH1 0x4 SWAP1 DUP2 SSTORE PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH2 0x100 SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 SWAP2 PUSH4 0x23B872DD SWAP2 PUSH3 0x90D SWAP2 CALLER SWAP2 ADDRESS SWAP2 DUP10 SWAP2 ADD PUSH3 0xF84 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x928 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x93D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x963 SWAP2 SWAP1 PUSH3 0xEC8 JUMP JUMPDEST PUSH3 0x80A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x4E6 SWAP1 PUSH3 0x107E JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH3 0x30B SWAP1 CALLER SWAP1 PUSH1 0x4 ADD PUSH3 0xF70 JUMP JUMPDEST PUSH3 0x9BF PUSH3 0x3FE JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0x852CD8D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x42966C68 SWAP1 PUSH3 0x9F1 SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH3 0x10B5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0xA0C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0xA21 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH3 0xA2F PUSH3 0xABB JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE PUSH1 0x0 SWAP1 PUSH3 0xA4E SWAP1 PUSH3 0xF4240 SWAP1 PUSH3 0x52B SWAP1 DUP6 SWAP1 PUSH3 0xD49 JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP1 SWAP2 POP PUSH3 0xA60 SWAP1 DUP4 PUSH3 0xCE7 JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH1 0x3 SLOAD PUSH3 0xA72 SWAP1 DUP3 PUSH3 0xCE7 JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH2 0x100 SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH3 0x799 SWAP1 CALLER SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH3 0xFA8 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 SLOAD PUSH1 0x0 EQ PUSH3 0xAE9 JUMPI PUSH3 0x532 PUSH1 0x5 SLOAD PUSH3 0x52B PUSH3 0xF4240 PUSH1 0x3 SLOAD PUSH3 0xD49 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST PUSH3 0xAFA PUSH3 0xCF5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0xB0D PUSH3 0x53F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH3 0xB36 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x4E6 SWAP1 PUSH3 0x1049 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0xB5F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x4E6 SWAP1 PUSH3 0xFCC JUMP JUMPDEST PUSH3 0xB6A DUP2 PUSH3 0xCF9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH3 0xB7D PUSH3 0x3FE JUMP JUMPDEST PUSH3 0xB87 PUSH3 0xABB JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE PUSH1 0x0 SWAP1 PUSH3 0xBA3 SWAP1 PUSH3 0x52B DUP5 PUSH3 0xF4240 PUSH3 0xD49 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0x140E25AD PUSH1 0xE3 SHL DUP2 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA0712D68 SWAP1 PUSH3 0xBD6 SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH3 0x10B5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0xBF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0xC06 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x5 SLOAD PUSH3 0xC1A SWAP3 POP SWAP1 POP DUP3 PUSH3 0xCD2 JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH1 0x3 SLOAD PUSH3 0xC2C SWAP1 DUP4 PUSH3 0xCD2 JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH2 0x100 SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 SWAP1 PUSH4 0x23B872DD SWAP1 PUSH3 0x90D SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH3 0xF84 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH3 0xC79 DUP4 PUSH3 0xD65 JUMP JUMPDEST SWAP1 POP PUSH3 0xCA9 PUSH3 0xF4240 PUSH3 0x52B PUSH3 0xC92 DUP5 PUSH3 0xDCF JUMP JUMPDEST PUSH3 0xCA2 PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH3 0xE4F JUMP JUMPDEST SWAP1 PUSH3 0xD49 JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD DUP3 GT ISZERO PUSH3 0xCC8 JUMPI POP PUSH1 0x1 PUSH3 0xCAD JUMP JUMPDEST POP PUSH1 0x0 NOT PUSH3 0xCAD JUMP JUMPDEST PUSH1 0x0 PUSH3 0xCE0 DUP3 DUP5 PUSH3 0x10BE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xCE0 DUP3 DUP5 PUSH3 0x1254 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xCE0 DUP3 DUP5 PUSH3 0x1232 JUMP JUMPDEST PUSH1 0x0 PUSH3 0xCE0 DUP3 DUP5 PUSH3 0x10D9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD DUP3 GT ISZERO PUSH3 0xDA8 JUMPI PUSH3 0xDA0 PUSH3 0xF4240 PUSH3 0xD99 PUSH1 0x7 SLOAD PUSH3 0x52B PUSH3 0xF4240 DUP8 PUSH3 0xD49 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH3 0xCE7 JUMP JUMPDEST SWAP1 POP PUSH3 0xCAD JUMP JUMPDEST PUSH3 0xDA0 PUSH3 0xF4240 PUSH3 0xD99 DUP5 PUSH3 0x52B PUSH3 0xF4240 PUSH1 0x7 SLOAD PUSH3 0xD49 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH3 0xDDF DUP4 PUSH1 0x3 PUSH3 0x1232 JUMP JUMPDEST PUSH3 0xF4240 PUSH3 0xDF0 PUSH1 0x2 DUP7 PUSH3 0x1147 JUMP JUMPDEST PUSH3 0xDFC SWAP2 SWAP1 PUSH3 0x10D9 JUMP JUMPDEST PUSH3 0xE09 SWAP1 PUSH1 0x9 PUSH3 0x1232 JUMP JUMPDEST PUSH3 0xE15 SWAP2 SWAP1 PUSH3 0x10BE JUMP JUMPDEST PUSH3 0xE24 SWAP1 PUSH3 0xF4240 PUSH3 0x10BE JUMP JUMPDEST SWAP1 POP PUSH5 0xE8D4A51000 PUSH3 0xE38 DUP3 DUP3 PUSH3 0x10D9 JUMP JUMPDEST PUSH3 0xE47 SWAP1 PUSH3 0xF4240 PUSH3 0x1254 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 GT ISZERO PUSH3 0xE61 JUMPI DUP2 PUSH3 0xCE0 JUMP JUMPDEST POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFA6 DUP1 PUSH3 0x1285 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH2 0xFAA DUP1 PUSH3 0x222B DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH3 0xCAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0xEB1 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0xCE0 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0xEDA JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH3 0xCE0 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0xEFC JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0xF15 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH3 0xF34 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH3 0xF3F DUP7 PUSH3 0xE84 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH3 0xF64 PUSH1 0x80 DUP8 ADD PUSH3 0xE84 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x54686520706F6F6C2077617320616C726561647920696E697469617465642E00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH32 0x596F7520646F6E2774206861766520656E6F75676820555344432E0000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH3 0x10D4 JUMPI PUSH3 0x10D4 PUSH3 0x126E JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0x10F5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 JUMPDEST PUSH1 0x1 DUP1 DUP7 GT PUSH3 0x110E JUMPI POP PUSH3 0x113E JUMP JUMPDEST DUP2 DUP8 DIV DUP3 GT ISZERO PUSH3 0x1123 JUMPI PUSH3 0x1123 PUSH3 0x126E JUMP JUMPDEST DUP1 DUP7 AND ISZERO PUSH3 0x1131 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP5 SWAP1 SWAP5 SHR SWAP4 DUP1 MUL PUSH3 0x10FD JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xCE0 PUSH1 0x0 NOT PUSH1 0xFF DUP6 AND DUP5 PUSH1 0x0 DUP3 PUSH3 0x1166 JUMPI POP PUSH1 0x1 PUSH3 0xCE0 JUMP JUMPDEST DUP2 PUSH3 0x1175 JUMPI POP PUSH1 0x0 PUSH3 0xCE0 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0x118E JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x1199 JUMPI PUSH3 0x11CD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0xCE0 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0x11AD JUMPI PUSH3 0x11AD PUSH3 0x126E JUMP JUMPDEST PUSH1 0x1 DUP5 SHL SWAP2 POP DUP5 DUP3 GT ISZERO PUSH3 0x11C6 JUMPI PUSH3 0x11C6 PUSH3 0x126E JUMP JUMPDEST POP PUSH3 0xCE0 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0x1205 JUMPI POP DUP2 DUP2 EXP DUP4 DUP2 GT ISZERO PUSH3 0x11FF JUMPI PUSH3 0x11FF PUSH3 0x126E JUMP JUMPDEST PUSH3 0xCE0 JUMP JUMPDEST PUSH3 0x1214 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH3 0x10FA JUMP JUMPDEST DUP1 DUP7 DIV DUP3 GT ISZERO PUSH3 0x1229 JUMPI PUSH3 0x1229 PUSH3 0x126E JUMP JUMPDEST MUL SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH3 0x124F JUMPI PUSH3 0x124F PUSH3 0x126E JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH3 0x1269 JUMPI PUSH3 0x1269 PUSH3 0x126E JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xFA6 CODESIZE SUB DUP1 PUSH3 0xFA6 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x169 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0xA DUP2 MSTORE PUSH10 0x426974636F696E20557 PUSH1 0xB4 SHL PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE DUP4 MLOAD DUP1 DUP6 ADD SWAP1 SWAP5 MSTORE PUSH1 0x5 DUP5 MSTORE PUSH5 0x425443555 PUSH1 0xDC SHL SWAP1 DUP5 ADD MSTORE DUP2 MLOAD SWAP2 SWAP3 SWAP2 PUSH3 0x83 SWAP2 PUSH1 0x3 SWAP2 PUSH3 0xC3 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x99 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0xC3 JUMP JUMPDEST POP POP PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE POP PUSH3 0x1D6 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0xD1 SWAP1 PUSH3 0x199 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xF5 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x140 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x110 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x140 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x140 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x140 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x123 JUMP JUMPDEST POP PUSH3 0x14E SWAP3 SWAP2 POP PUSH3 0x152 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x14E JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x153 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x17B JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x192 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x1AE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x1D0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDC0 DUP1 PUSH3 0x1E6 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA0712D68 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1F9 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1B8 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x17D JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x12D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF7 PUSH2 0x20C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x9C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x120 PUSH2 0x11B CALLDATASIZE PUSH1 0x4 PUSH2 0x975 JUMP JUMPDEST PUSH2 0x29E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x9B6 JUMP JUMPDEST PUSH2 0x135 PUSH2 0x2BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0xCF3 JUMP JUMPDEST PUSH2 0x120 PUSH2 0x150 CALLDATASIZE PUSH1 0x4 PUSH2 0x93A JUMP JUMPDEST PUSH2 0x2C1 JUMP JUMPDEST PUSH2 0x15D PUSH2 0x35A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0xCFC JUMP JUMPDEST PUSH2 0x120 PUSH2 0x178 CALLDATASIZE PUSH1 0x4 PUSH2 0x975 JUMP JUMPDEST PUSH2 0x35F JUMP JUMPDEST PUSH2 0x190 PUSH2 0x18B CALLDATASIZE PUSH1 0x4 PUSH2 0x99E JUMP JUMPDEST PUSH2 0x3B3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x135 PUSH2 0x1A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x8E7 JUMP JUMPDEST PUSH2 0x3D7 JUMP JUMPDEST PUSH2 0x190 PUSH2 0x1B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x975 JUMP JUMPDEST PUSH2 0x3F6 JUMP JUMPDEST PUSH2 0xF7 PUSH2 0x449 JUMP JUMPDEST PUSH2 0x190 PUSH2 0x1CE CALLDATASIZE PUSH1 0x4 PUSH2 0x99E JUMP JUMPDEST PUSH2 0x458 JUMP JUMPDEST PUSH2 0x120 PUSH2 0x1E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x975 JUMP JUMPDEST PUSH2 0x479 JUMP JUMPDEST PUSH2 0x120 PUSH2 0x1F4 CALLDATASIZE PUSH1 0x4 PUSH2 0x975 JUMP JUMPDEST PUSH2 0x4F2 JUMP JUMPDEST PUSH2 0x135 PUSH2 0x207 CALLDATASIZE PUSH1 0x4 PUSH2 0x908 JUMP JUMPDEST PUSH2 0x506 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x21B SWAP1 PUSH2 0xD39 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x247 SWAP1 PUSH2 0xD39 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x294 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x269 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x294 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x277 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B2 PUSH2 0x2AB PUSH2 0x531 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x535 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CE DUP5 DUP5 DUP5 PUSH2 0x5E9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 PUSH2 0x2EF PUSH2 0x531 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x33B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x34F DUP6 PUSH2 0x347 PUSH2 0x531 JUMP JUMPDEST DUP6 DUP5 SUB PUSH2 0x535 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B2 PUSH2 0x36C PUSH2 0x531 JUMP JUMPDEST DUP5 DUP5 PUSH1 0x1 PUSH1 0x0 PUSH2 0x37A PUSH2 0x531 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP12 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x3AE SWAP2 SWAP1 PUSH2 0xD0A JUMP JUMPDEST PUSH2 0x535 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3D4 ORIGIN DUP3 PUSH2 0x3F6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x404 DUP4 PUSH2 0x207 PUSH2 0x531 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x426 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0xB69 JUMP JUMPDEST PUSH2 0x43A DUP4 PUSH2 0x432 PUSH2 0x531 JUMP JUMPDEST DUP5 DUP5 SUB PUSH2 0x535 JUMP JUMPDEST PUSH2 0x444 DUP4 DUP4 PUSH2 0x713 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x21B SWAP1 PUSH2 0xD39 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x46F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3D4 ORIGIN DUP3 PUSH2 0x804 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x488 PUSH2 0x531 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP9 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x4D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0xC77 JUMP JUMPDEST PUSH2 0x4E8 PUSH2 0x4DF PUSH2 0x531 JUMP JUMPDEST DUP6 DUP6 DUP5 SUB PUSH2 0x535 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B2 PUSH2 0x4FF PUSH2 0x531 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x5E9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0xC33 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x581 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0xA99 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x5DC SWAP1 DUP6 SWAP1 PUSH2 0xCF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x60F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0xBEE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x635 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0xA14 JUMP JUMPDEST PUSH2 0x640 DUP4 DUP4 DUP4 PUSH2 0x444 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x679 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0xADB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6B0 SWAP1 DUP5 SWAP1 PUSH2 0xD0A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6FA SWAP2 SWAP1 PUSH2 0xCF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x70D DUP5 DUP5 DUP5 PUSH2 0x444 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x739 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0xBAD JUMP JUMPDEST PUSH2 0x745 DUP3 PUSH1 0x0 DUP4 PUSH2 0x444 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x77E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0xA57 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 DUP4 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x7AD SWAP1 DUP5 SWAP1 PUSH2 0xD22 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x7F0 SWAP1 DUP7 SWAP1 PUSH2 0xCF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x444 DUP4 PUSH1 0x0 DUP5 PUSH2 0x444 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x82A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0xCBC JUMP JUMPDEST PUSH2 0x836 PUSH1 0x0 DUP4 DUP4 PUSH2 0x444 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x848 SWAP2 SWAP1 PUSH2 0xD0A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x875 SWAP1 DUP5 SWAP1 PUSH2 0xD0A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x8B8 SWAP1 DUP6 SWAP1 PUSH2 0xCF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x8CC PUSH1 0x0 DUP4 DUP4 PUSH2 0x444 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8F8 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x901 DUP3 PUSH2 0x8D0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x91A JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x923 DUP4 PUSH2 0x8D0 JUMP JUMPDEST SWAP2 POP PUSH2 0x931 PUSH1 0x20 DUP5 ADD PUSH2 0x8D0 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x94E JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x957 DUP5 PUSH2 0x8D0 JUMP JUMPDEST SWAP3 POP PUSH2 0x965 PUSH1 0x20 DUP6 ADD PUSH2 0x8D0 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x987 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x990 DUP4 PUSH2 0x8D0 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9AF JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x9ED JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x9D1 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x9FE JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E74206578636565647320616C6C6F77 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x616E6365 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xD1D JUMPI PUSH2 0xD1D PUSH2 0xD74 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xD34 JUMPI PUSH2 0xD34 PUSH2 0xD74 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xD4D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xD6E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP16 PC 0x27 0x5D PUSH6 0xB843DA65CD03 SWAP13 SWAP6 0x4B SWAP10 CALLDATASIZE ADDRESS GASPRICE 0x23 0xFC LOG0 EXTCODECOPY SIGNEXTEND 0x5F EQ 0x26 SWAP13 0xF 0xAD 0x5F PUSH7 0xDF64736F6C6343 STOP ADDMOD STOP STOP CALLER PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xFAA CODESIZE SUB DUP1 PUSH3 0xFAA DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x16D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0xC DUP2 MSTORE PUSH12 0x2134BA31B7B4B7102237BBB7 PUSH1 0xA1 SHL PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE DUP4 MLOAD DUP1 DUP6 ADD SWAP1 SWAP5 MSTORE PUSH1 0x7 DUP5 MSTORE PUSH7 0x212A21A227ABA7 PUSH1 0xC9 SHL SWAP1 DUP5 ADD MSTORE DUP2 MLOAD SWAP2 SWAP3 SWAP2 PUSH3 0x87 SWAP2 PUSH1 0x3 SWAP2 PUSH3 0xC7 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x9D SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0xC7 JUMP JUMPDEST POP POP PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE POP PUSH3 0x1DA JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0xD5 SWAP1 PUSH3 0x19D JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xF9 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x144 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x114 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x144 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x144 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x144 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x127 JUMP JUMPDEST POP PUSH3 0x152 SWAP3 SWAP2 POP PUSH3 0x156 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x152 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x157 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x17F JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x196 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x1B2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x1D4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDC0 DUP1 PUSH3 0x1EA PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA0712D68 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1F9 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1B8 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x17D JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x12D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF7 PUSH2 0x20C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x9C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x120 PUSH2 0x11B CALLDATASIZE PUSH1 0x4 PUSH2 0x975 JUMP JUMPDEST PUSH2 0x29E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x9B6 JUMP JUMPDEST PUSH2 0x135 PUSH2 0x2BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0xCF3 JUMP JUMPDEST PUSH2 0x120 PUSH2 0x150 CALLDATASIZE PUSH1 0x4 PUSH2 0x93A JUMP JUMPDEST PUSH2 0x2C1 JUMP JUMPDEST PUSH2 0x15D PUSH2 0x35A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0xCFC JUMP JUMPDEST PUSH2 0x120 PUSH2 0x178 CALLDATASIZE PUSH1 0x4 PUSH2 0x975 JUMP JUMPDEST PUSH2 0x35F JUMP JUMPDEST PUSH2 0x190 PUSH2 0x18B CALLDATASIZE PUSH1 0x4 PUSH2 0x99E JUMP JUMPDEST PUSH2 0x3B3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x135 PUSH2 0x1A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x8E7 JUMP JUMPDEST PUSH2 0x3D7 JUMP JUMPDEST PUSH2 0x190 PUSH2 0x1B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x975 JUMP JUMPDEST PUSH2 0x3F6 JUMP JUMPDEST PUSH2 0xF7 PUSH2 0x449 JUMP JUMPDEST PUSH2 0x190 PUSH2 0x1CE CALLDATASIZE PUSH1 0x4 PUSH2 0x99E JUMP JUMPDEST PUSH2 0x458 JUMP JUMPDEST PUSH2 0x120 PUSH2 0x1E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x975 JUMP JUMPDEST PUSH2 0x479 JUMP JUMPDEST PUSH2 0x120 PUSH2 0x1F4 CALLDATASIZE PUSH1 0x4 PUSH2 0x975 JUMP JUMPDEST PUSH2 0x4F2 JUMP JUMPDEST PUSH2 0x135 PUSH2 0x207 CALLDATASIZE PUSH1 0x4 PUSH2 0x908 JUMP JUMPDEST PUSH2 0x506 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x21B SWAP1 PUSH2 0xD39 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x247 SWAP1 PUSH2 0xD39 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x294 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x269 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x294 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x277 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B2 PUSH2 0x2AB PUSH2 0x531 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x535 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CE DUP5 DUP5 DUP5 PUSH2 0x5E9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 PUSH2 0x2EF PUSH2 0x531 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x33B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x34F DUP6 PUSH2 0x347 PUSH2 0x531 JUMP JUMPDEST DUP6 DUP5 SUB PUSH2 0x535 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B2 PUSH2 0x36C PUSH2 0x531 JUMP JUMPDEST DUP5 DUP5 PUSH1 0x1 PUSH1 0x0 PUSH2 0x37A PUSH2 0x531 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP12 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x3AE SWAP2 SWAP1 PUSH2 0xD0A JUMP JUMPDEST PUSH2 0x535 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3D4 ORIGIN DUP3 PUSH2 0x3F6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x404 DUP4 PUSH2 0x207 PUSH2 0x531 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x426 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0xB69 JUMP JUMPDEST PUSH2 0x43A DUP4 PUSH2 0x432 PUSH2 0x531 JUMP JUMPDEST DUP5 DUP5 SUB PUSH2 0x535 JUMP JUMPDEST PUSH2 0x444 DUP4 DUP4 PUSH2 0x713 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x21B SWAP1 PUSH2 0xD39 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x46F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3D4 ORIGIN DUP3 PUSH2 0x804 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x488 PUSH2 0x531 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP9 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x4D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0xC77 JUMP JUMPDEST PUSH2 0x4E8 PUSH2 0x4DF PUSH2 0x531 JUMP JUMPDEST DUP6 DUP6 DUP5 SUB PUSH2 0x535 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B2 PUSH2 0x4FF PUSH2 0x531 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x5E9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0xC33 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x581 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0xA99 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x5DC SWAP1 DUP6 SWAP1 PUSH2 0xCF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x60F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0xBEE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x635 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0xA14 JUMP JUMPDEST PUSH2 0x640 DUP4 DUP4 DUP4 PUSH2 0x444 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x679 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0xADB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6B0 SWAP1 DUP5 SWAP1 PUSH2 0xD0A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6FA SWAP2 SWAP1 PUSH2 0xCF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x70D DUP5 DUP5 DUP5 PUSH2 0x444 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x739 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0xBAD JUMP JUMPDEST PUSH2 0x745 DUP3 PUSH1 0x0 DUP4 PUSH2 0x444 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x77E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0xA57 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 DUP4 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x7AD SWAP1 DUP5 SWAP1 PUSH2 0xD22 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x7F0 SWAP1 DUP7 SWAP1 PUSH2 0xCF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x444 DUP4 PUSH1 0x0 DUP5 PUSH2 0x444 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x82A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0xCBC JUMP JUMPDEST PUSH2 0x836 PUSH1 0x0 DUP4 DUP4 PUSH2 0x444 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x848 SWAP2 SWAP1 PUSH2 0xD0A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x875 SWAP1 DUP5 SWAP1 PUSH2 0xD0A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x8B8 SWAP1 DUP6 SWAP1 PUSH2 0xCF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x8CC PUSH1 0x0 DUP4 DUP4 PUSH2 0x444 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8F8 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x901 DUP3 PUSH2 0x8D0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x91A JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x923 DUP4 PUSH2 0x8D0 JUMP JUMPDEST SWAP2 POP PUSH2 0x931 PUSH1 0x20 DUP5 ADD PUSH2 0x8D0 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x94E JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x957 DUP5 PUSH2 0x8D0 JUMP JUMPDEST SWAP3 POP PUSH2 0x965 PUSH1 0x20 DUP6 ADD PUSH2 0x8D0 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x987 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x990 DUP4 PUSH2 0x8D0 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9AF JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x9ED JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x9D1 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x9FE JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E74206578636565647320616C6C6F77 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x616E6365 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xD1D JUMPI PUSH2 0xD1D PUSH2 0xD74 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xD34 JUMPI PUSH2 0xD34 PUSH2 0xD74 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xD4D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xD6E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SIGNEXTEND 0xCD CALLDATASIZE 0x48 GASPRICE RETURNDATASIZE CODESIZE SGT MLOAD 0xE2 0xDB 0x2F PUSH14 0x138901BE114A822BDEF4AA84E392 0xC0 PUSH21 0xFD0D6364736F6C63430008000033A2646970667358 0x22 SLT KECCAK256 0xCB 0x4A PUSH16 0xA6FAC7D2DD79F5FA4215E8D05193F60D DUP15 SWAP9 0xD9 SAR LOG1 0x2A EXP CHAINID 0x23 0x4C MULMOD BALANCE JUMPI PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        1861,
        8096
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "6": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "DUP1",
      "path": "8"
    },
    "7": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "8": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x11"
    },
    "12": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "13": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "DUP1",
      "path": "8"
    },
    "16": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "REVERT",
      "path": "8"
    },
    "17": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "18": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "POP",
      "path": "8"
    },
    "19": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "21": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "22": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "LT",
      "path": "8"
    },
    "23": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x15F"
    },
    "27": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "28": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "30": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "CALLDATALOAD",
      "path": "8"
    },
    "31": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xE0"
    },
    "33": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "SHR",
      "path": "8"
    },
    "34": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "DUP1",
      "path": "8"
    },
    "35": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xA14274E8"
    },
    "40": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "GT",
      "path": "8"
    },
    "41": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xC9"
    },
    "45": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "46": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "DUP1",
      "path": "8"
    },
    "47": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xDDE7BE2C"
    },
    "52": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "GT",
      "path": "8"
    },
    "53": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x87"
    },
    "57": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "58": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "DUP1",
      "path": "8"
    },
    "59": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xDDE7BE2C"
    },
    "64": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "EQ",
      "path": "8"
    },
    "65": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x270"
    },
    "69": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "70": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "DUP1",
      "path": "8"
    },
    "71": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xF0156E8A"
    },
    "76": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "EQ",
      "path": "8"
    },
    "77": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x27A"
    },
    "81": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "82": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "DUP1",
      "path": "8"
    },
    "83": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xF06847D6"
    },
    "88": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "EQ",
      "path": "8"
    },
    "89": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x284"
    },
    "93": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "94": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "DUP1",
      "path": "8"
    },
    "95": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xF2FDE38B"
    },
    "100": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "EQ",
      "path": "8"
    },
    "101": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x28E"
    },
    "105": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "106": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "DUP1",
      "path": "8"
    },
    "107": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xF4352C57"
    },
    "112": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "EQ",
      "path": "8"
    },
    "113": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x2A5"
    },
    "117": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "118": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "DUP1",
      "path": "8"
    },
    "119": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xF530C04A"
    },
    "124": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "EQ",
      "path": "8"
    },
    "125": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x2AF"
    },
    "129": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "130": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x15F"
    },
    "134": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "JUMP",
      "path": "8"
    },
    "135": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "136": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "DUP1",
      "path": "8"
    },
    "137": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xA14274E8"
    },
    "142": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "EQ",
      "path": "8"
    },
    "143": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x217"
    },
    "147": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "148": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "DUP1",
      "path": "8"
    },
    "149": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xB75CBE0B"
    },
    "154": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "EQ",
      "path": "8"
    },
    "155": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x22E"
    },
    "159": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "160": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "DUP1",
      "path": "8"
    },
    "161": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xC46D4F09"
    },
    "166": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "EQ",
      "path": "8"
    },
    "167": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x238"
    },
    "171": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "172": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "DUP1",
      "path": "8"
    },
    "173": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xC7E3B124"
    },
    "178": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "EQ",
      "path": "8"
    },
    "179": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x24F"
    },
    "183": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "184": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "DUP1",
      "path": "8"
    },
    "185": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xD1EE539D"
    },
    "190": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "EQ",
      "path": "8"
    },
    "191": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x259"
    },
    "195": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "196": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x15F"
    },
    "200": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "JUMP",
      "path": "8"
    },
    "201": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "202": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "DUP1",
      "path": "8"
    },
    "203": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x3A3610BC"
    },
    "208": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "GT",
      "path": "8"
    },
    "209": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x123"
    },
    "213": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "214": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "DUP1",
      "path": "8"
    },
    "215": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x3A3610BC"
    },
    "220": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "EQ",
      "path": "8"
    },
    "221": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x1BD"
    },
    "225": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "226": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "DUP1",
      "path": "8"
    },
    "227": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x6E5D6615"
    },
    "232": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "EQ",
      "path": "8"
    },
    "233": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x1C7"
    },
    "237": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "238": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "DUP1",
      "path": "8"
    },
    "239": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x715018A6"
    },
    "244": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "EQ",
      "path": "8"
    },
    "245": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x1D3"
    },
    "249": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "250": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "DUP1",
      "path": "8"
    },
    "251": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x81C2B29B"
    },
    "256": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "EQ",
      "path": "8"
    },
    "257": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x1DD"
    },
    "261": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "262": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "DUP1",
      "path": "8"
    },
    "263": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x8DA5CB5B"
    },
    "268": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "EQ",
      "path": "8"
    },
    "269": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x1E7"
    },
    "273": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "274": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "DUP1",
      "path": "8"
    },
    "275": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x9B3075A1"
    },
    "280": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "EQ",
      "path": "8"
    },
    "281": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x200"
    },
    "285": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "286": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x15F"
    },
    "290": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "JUMP",
      "path": "8"
    },
    "291": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "292": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "DUP1",
      "path": "8"
    },
    "293": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x34B9CC"
    },
    "297": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "EQ",
      "path": "8"
    },
    "298": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x164"
    },
    "302": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "303": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "DUP1",
      "path": "8"
    },
    "304": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xC3E5343"
    },
    "309": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "EQ",
      "path": "8"
    },
    "310": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x186"
    },
    "314": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "315": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "DUP1",
      "path": "8"
    },
    "316": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x14D7C6D2"
    },
    "321": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "EQ",
      "path": "8"
    },
    "322": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x190"
    },
    "326": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "327": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "DUP1",
      "path": "8"
    },
    "328": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x157D0129"
    },
    "333": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "EQ",
      "path": "8"
    },
    "334": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x19A"
    },
    "338": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "339": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "DUP1",
      "path": "8"
    },
    "340": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x3074FFF7"
    },
    "345": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "EQ",
      "path": "8"
    },
    "346": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x1A4"
    },
    "350": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "351": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "352": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "354": {
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "DUP1",
      "path": "8"
    },
    "355": {
      "first_revert": true,
      "fn": null,
      "offset": [
        1861,
        8096
      ],
      "op": "REVERT",
      "path": "8"
    },
    "356": {
      "offset": [
        2148,
        2178
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "357": {
      "fn": null,
      "offset": [
        2148,
        2178
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x16E"
    },
    "361": {
      "fn": null,
      "offset": [
        2148,
        2178
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x2C6"
    },
    "365": {
      "fn": null,
      "jump": "i",
      "offset": [
        2148,
        2178
      ],
      "op": "JUMP",
      "path": "8"
    },
    "366": {
      "fn": null,
      "offset": [
        2148,
        2178
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "367": {
      "fn": null,
      "offset": [
        2148,
        2178
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "369": {
      "fn": null,
      "offset": [
        2148,
        2178
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "370": {
      "fn": null,
      "offset": [
        2148,
        2178
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x17D"
    },
    "374": {
      "fn": null,
      "offset": [
        2148,
        2178
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "375": {
      "fn": null,
      "offset": [
        2148,
        2178
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "376": {
      "fn": null,
      "offset": [
        2148,
        2178
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x10B5"
    },
    "380": {
      "fn": null,
      "jump": "i",
      "offset": [
        2148,
        2178
      ],
      "op": "JUMP",
      "path": "8"
    },
    "381": {
      "fn": null,
      "offset": [
        2148,
        2178
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "382": {
      "fn": null,
      "offset": [
        2148,
        2178
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "384": {
      "fn": null,
      "offset": [
        2148,
        2178
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "385": {
      "fn": null,
      "offset": [
        2148,
        2178
      ],
      "op": "DUP1",
      "path": "8"
    },
    "386": {
      "fn": null,
      "offset": [
        2148,
        2178
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "387": {
      "fn": null,
      "offset": [
        2148,
        2178
      ],
      "op": "SUB",
      "path": "8"
    },
    "388": {
      "fn": null,
      "offset": [
        2148,
        2178
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "389": {
      "fn": null,
      "offset": [
        2148,
        2178
      ],
      "op": "RETURN",
      "path": "8"
    },
    "390": {
      "offset": [
        1978,
        2015
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "391": {
      "fn": null,
      "offset": [
        1978,
        2015
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x16E"
    },
    "395": {
      "fn": null,
      "offset": [
        1978,
        2015
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x2CC"
    },
    "399": {
      "fn": null,
      "jump": "i",
      "offset": [
        1978,
        2015
      ],
      "op": "JUMP",
      "path": "8"
    },
    "400": {
      "offset": [
        2105,
        2141
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "401": {
      "fn": null,
      "offset": [
        2105,
        2141
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x16E"
    },
    "405": {
      "fn": null,
      "offset": [
        2105,
        2141
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x2D2"
    },
    "409": {
      "fn": null,
      "jump": "i",
      "offset": [
        2105,
        2141
      ],
      "op": "JUMP",
      "path": "8"
    },
    "410": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7869,
        7976
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "411": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7869,
        7976
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x16E"
    },
    "415": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7869,
        7976
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x2D8"
    },
    "419": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "jump": "i",
      "offset": [
        7869,
        7976
      ],
      "op": "JUMP",
      "path": "8"
    },
    "420": {
      "offset": [
        2350,
        2385
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "421": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        2350,
        2385
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x1AE"
    },
    "425": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        2350,
        2385
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x364"
    },
    "429": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "jump": "i",
      "offset": [
        2350,
        2385
      ],
      "op": "JUMP",
      "path": "8"
    },
    "430": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        2350,
        2385
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "431": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        2350,
        2385
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "433": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        2350,
        2385
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "434": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        2350,
        2385
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x17D"
    },
    "438": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        2350,
        2385
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "439": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        2350,
        2385
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "440": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        2350,
        2385
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xFC1"
    },
    "444": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "jump": "i",
      "offset": [
        2350,
        2385
      ],
      "op": "JUMP",
      "path": "8"
    },
    "445": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        6876,
        7193
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "446": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        6876,
        7193
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x16E"
    },
    "450": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        6876,
        7193
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x36D"
    },
    "454": {
      "fn": "LeveragedTrading.getBtcPrice",
      "jump": "i",
      "offset": [
        6876,
        7193
      ],
      "op": "JUMP",
      "path": "8"
    },
    "455": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5159,
        5813
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "456": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5159,
        5813
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x1D1"
    },
    "460": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5159,
        5813
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x3FE"
    },
    "464": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "jump": "i",
      "offset": [
        5159,
        5813
      ],
      "op": "JUMP",
      "path": "8"
    },
    "465": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5159,
        5813
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "466": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5159,
        5813
      ],
      "op": "STOP",
      "path": "8"
    },
    "467": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "468": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x1D1"
    },
    "472": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x4A0"
    },
    "476": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMP",
      "path": "0"
    },
    "477": {
      "fn": "LeveragedTrading.getBtcDownPrice",
      "offset": [
        6645,
        6824
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "478": {
      "fn": "LeveragedTrading.getBtcDownPrice",
      "offset": [
        6645,
        6824
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x16E"
    },
    "482": {
      "fn": "LeveragedTrading.getBtcDownPrice",
      "offset": [
        6645,
        6824
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x4FD"
    },
    "486": {
      "fn": "LeveragedTrading.getBtcDownPrice",
      "jump": "i",
      "offset": [
        6645,
        6824
      ],
      "op": "JUMP",
      "path": "8"
    },
    "487": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "488": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x1F1"
    },
    "492": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x53F"
    },
    "496": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        973,
        1058
      ],
      "op": "JUMP",
      "path": "0"
    },
    "497": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "498": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "500": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "501": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x17D"
    },
    "505": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "506": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "507": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xF70"
    },
    "511": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        973,
        1058
      ],
      "op": "JUMP",
      "path": "0"
    },
    "512": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2707,
        3046
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "513": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2707,
        3046
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x1D1"
    },
    "517": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2707,
        3046
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x211"
    },
    "521": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2707,
        3046
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "522": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2707,
        3046
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "524": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2707,
        3046
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xEEA"
    },
    "528": {
      "fn": "LeveragedTrading.initiatePool",
      "jump": "i",
      "offset": [
        2707,
        3046
      ],
      "op": "JUMP",
      "path": "8"
    },
    "529": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2707,
        3046
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "530": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2707,
        3046
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x54E"
    },
    "534": {
      "fn": "LeveragedTrading.initiatePool",
      "jump": "i",
      "offset": [
        2707,
        3046
      ],
      "op": "JUMP",
      "path": "8"
    },
    "535": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4640,
        5153
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "536": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4640,
        5153
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x1D1"
    },
    "540": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4640,
        5153
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x228"
    },
    "544": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4640,
        5153
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "545": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4640,
        5153
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "547": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4640,
        5153
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xEEA"
    },
    "551": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "jump": "i",
      "offset": [
        4640,
        5153
      ],
      "op": "JUMP",
      "path": "8"
    },
    "552": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4640,
        5153
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "553": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4640,
        5153
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x69F"
    },
    "557": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "jump": "i",
      "offset": [
        4640,
        5153
      ],
      "op": "JUMP",
      "path": "8"
    },
    "558": {
      "offset": [
        2208,
        2240
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "559": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        2208,
        2240
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x16E"
    },
    "563": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        2208,
        2240
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x80F"
    },
    "567": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "jump": "i",
      "offset": [
        2208,
        2240
      ],
      "op": "JUMP",
      "path": "8"
    },
    "568": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3591,
        4142
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "569": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3591,
        4142
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x1D1"
    },
    "573": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3591,
        4142
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x249"
    },
    "577": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3591,
        4142
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "578": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3591,
        4142
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "580": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3591,
        4142
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xEEA"
    },
    "584": {
      "fn": "LeveragedTrading.issueBtcDown",
      "jump": "i",
      "offset": [
        3591,
        4142
      ],
      "op": "JUMP",
      "path": "8"
    },
    "585": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3591,
        4142
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "586": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3591,
        4142
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x815"
    },
    "590": {
      "fn": "LeveragedTrading.issueBtcDown",
      "jump": "i",
      "offset": [
        3591,
        4142
      ],
      "op": "JUMP",
      "path": "8"
    },
    "591": {
      "fn": "LeveragedTrading.getBtcdownBalance",
      "offset": [
        7982,
        8093
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "592": {
      "fn": "LeveragedTrading.getBtcdownBalance",
      "offset": [
        7982,
        8093
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x16E"
    },
    "596": {
      "fn": "LeveragedTrading.getBtcdownBalance",
      "offset": [
        7982,
        8093
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x982"
    },
    "600": {
      "fn": "LeveragedTrading.getBtcdownBalance",
      "jump": "i",
      "offset": [
        7982,
        8093
      ],
      "op": "JUMP",
      "path": "8"
    },
    "601": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4148,
        4634
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "602": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4148,
        4634
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x1D1"
    },
    "606": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4148,
        4634
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x26A"
    },
    "610": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4148,
        4634
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "611": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4148,
        4634
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "613": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4148,
        4634
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xEEA"
    },
    "617": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "jump": "i",
      "offset": [
        4148,
        4634
      ],
      "op": "JUMP",
      "path": "8"
    },
    "618": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4148,
        4634
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "619": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4148,
        4634
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x9B5"
    },
    "623": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "jump": "i",
      "offset": [
        4148,
        4634
      ],
      "op": "JUMP",
      "path": "8"
    },
    "624": {
      "offset": [
        2043,
        2077
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "625": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        2043,
        2077
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x16E"
    },
    "629": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        2043,
        2077
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xAAF"
    },
    "633": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "jump": "i",
      "offset": [
        2043,
        2077
      ],
      "op": "JUMP",
      "path": "8"
    },
    "634": {
      "offset": [
        1937,
        1972
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "635": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        1937,
        1972
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x16E"
    },
    "639": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        1937,
        1972
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xAB5"
    },
    "643": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "jump": "i",
      "offset": [
        1937,
        1972
      ],
      "op": "JUMP",
      "path": "8"
    },
    "644": {
      "fn": "LeveragedTrading.getBtcUpPrice",
      "offset": [
        6450,
        6607
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "645": {
      "fn": "LeveragedTrading.getBtcUpPrice",
      "offset": [
        6450,
        6607
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x16E"
    },
    "649": {
      "fn": "LeveragedTrading.getBtcUpPrice",
      "offset": [
        6450,
        6607
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xABB"
    },
    "653": {
      "fn": "LeveragedTrading.getBtcUpPrice",
      "jump": "i",
      "offset": [
        6450,
        6607
      ],
      "op": "JUMP",
      "path": "8"
    },
    "654": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "655": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x1D1"
    },
    "659": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x29F"
    },
    "663": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "664": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "666": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xE9F"
    },
    "670": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "671": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "672": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xAF0"
    },
    "676": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "677": {
      "offset": [
        2269,
        2300
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "678": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2269,
        2300
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x16E"
    },
    "682": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2269,
        2300
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xB6D"
    },
    "686": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2269,
        2300
      ],
      "op": "JUMP",
      "path": "8"
    },
    "687": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3052,
        3585
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "688": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3052,
        3585
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x1D1"
    },
    "692": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3052,
        3585
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x2C0"
    },
    "696": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3052,
        3585
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "697": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3052,
        3585
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "699": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3052,
        3585
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xEEA"
    },
    "703": {
      "fn": "LeveragedTrading.issueBtcUp",
      "jump": "i",
      "offset": [
        3052,
        3585
      ],
      "op": "JUMP",
      "path": "8"
    },
    "704": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3052,
        3585
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "705": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3052,
        3585
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xB73"
    },
    "709": {
      "fn": "LeveragedTrading.issueBtcUp",
      "jump": "i",
      "offset": [
        3052,
        3585
      ],
      "op": "JUMP",
      "path": "8"
    },
    "710": {
      "offset": [
        2148,
        2178
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "711": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        2148,
        2178
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x5"
    },
    "713": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        2148,
        2178
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "714": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        2148,
        2178
      ],
      "op": "DUP2",
      "path": "8"
    },
    "715": {
      "fn": "LeveragedTrading.issueBtcUp",
      "jump": "o",
      "offset": [
        2148,
        2178
      ],
      "op": "JUMP",
      "path": "8"
    },
    "716": {
      "offset": [
        1978,
        2015
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "717": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        1978,
        2015
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "719": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        1978,
        2015
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "720": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        1978,
        2015
      ],
      "op": "DUP2",
      "path": "8"
    },
    "721": {
      "fn": "LeveragedTrading.issueBtcUp",
      "jump": "o",
      "offset": [
        1978,
        2015
      ],
      "op": "JUMP",
      "path": "8"
    },
    "722": {
      "offset": [
        2105,
        2141
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "723": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        2105,
        2141
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "725": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        2105,
        2141
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "726": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        2105,
        2141
      ],
      "op": "DUP2",
      "path": "8"
    },
    "727": {
      "fn": "LeveragedTrading.issueBtcUp",
      "jump": "o",
      "offset": [
        2105,
        2141
      ],
      "op": "JUMP",
      "path": "8"
    },
    "728": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7869,
        7976
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "729": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7942,
        7947
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 0,
      "value": "0xA"
    },
    "731": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7942,
        7947
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "732": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7942,
        7969
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "734": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7942,
        7969
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "735": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "740": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "742": {
      "op": "SHL"
    },
    "743": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7942,
        7969
      ],
      "op": "DUP2",
      "path": "8"
    },
    "744": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7942,
        7969
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "745": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7916,
        7923
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "747": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7916,
        7923
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "748": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "750": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "752": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "754": {
      "op": "SHL"
    },
    "755": {
      "op": "SUB"
    },
    "756": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7942,
        7947
      ],
      "op": "AND",
      "path": "8"
    },
    "757": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7942,
        7947
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "758": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7942,
        7957
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x70A08231"
    },
    "763": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7942,
        7957
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "764": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7942,
        7969
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x30B"
    },
    "768": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7942,
        7969
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "769": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7958,
        7968
      ],
      "op": "CALLER",
      "path": "8"
    },
    "770": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7958,
        7968
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "771": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7942,
        7969
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "773": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7942,
        7969
      ],
      "op": "ADD",
      "path": "8"
    },
    "774": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7942,
        7969
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xF70"
    },
    "778": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "jump": "i",
      "offset": [
        7942,
        7969
      ],
      "op": "JUMP",
      "path": "8"
    },
    "779": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7942,
        7969
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "780": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7942,
        7969
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "782": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7942,
        7969
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "784": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7942,
        7969
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "785": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7942,
        7969
      ],
      "op": "DUP1",
      "path": "8"
    },
    "786": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7942,
        7969
      ],
      "op": "DUP4",
      "path": "8"
    },
    "787": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7942,
        7969
      ],
      "op": "SUB",
      "path": "8"
    },
    "788": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7942,
        7969
      ],
      "op": "DUP2",
      "path": "8"
    },
    "789": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7942,
        7969
      ],
      "op": "DUP7",
      "path": "8"
    },
    "790": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7942,
        7969
      ],
      "op": "DUP1",
      "path": "8"
    },
    "791": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7942,
        7969
      ],
      "op": "EXTCODESIZE",
      "path": "8"
    },
    "792": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7942,
        7969
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "793": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7942,
        7969
      ],
      "op": "DUP1",
      "path": "8"
    },
    "794": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7942,
        7969
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "795": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7942,
        7969
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x324"
    },
    "799": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7942,
        7969
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "800": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7942,
        7969
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "802": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7942,
        7969
      ],
      "op": "DUP1",
      "path": "8"
    },
    "803": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7942,
        7969
      ],
      "op": "REVERT",
      "path": "8"
    },
    "804": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7942,
        7969
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "805": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7942,
        7969
      ],
      "op": "POP",
      "path": "8"
    },
    "806": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7942,
        7969
      ],
      "op": "GAS",
      "path": "8"
    },
    "807": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7942,
        7969
      ],
      "op": "STATICCALL",
      "path": "8"
    },
    "808": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7942,
        7969
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "809": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7942,
        7969
      ],
      "op": "DUP1",
      "path": "8"
    },
    "810": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7942,
        7969
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "811": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7942,
        7969
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x339"
    },
    "815": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7942,
        7969
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "816": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7942,
        7969
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "817": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7942,
        7969
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "819": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7942,
        7969
      ],
      "op": "DUP1",
      "path": "8"
    },
    "820": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7942,
        7969
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "821": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7942,
        7969
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "822": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7942,
        7969
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "824": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7942,
        7969
      ],
      "op": "REVERT",
      "path": "8"
    },
    "825": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7942,
        7969
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "826": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7942,
        7969
      ],
      "op": "POP",
      "path": "8"
    },
    "827": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7942,
        7969
      ],
      "op": "POP",
      "path": "8"
    },
    "828": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7942,
        7969
      ],
      "op": "POP",
      "path": "8"
    },
    "829": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7942,
        7969
      ],
      "op": "POP",
      "path": "8"
    },
    "830": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7942,
        7969
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "832": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7942,
        7969
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "833": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7942,
        7969
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "834": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7942,
        7969
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "836": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7942,
        7969
      ],
      "op": "NOT",
      "path": "8"
    },
    "837": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7942,
        7969
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "839": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7942,
        7969
      ],
      "op": "DUP3",
      "path": "8"
    },
    "840": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7942,
        7969
      ],
      "op": "ADD",
      "path": "8"
    },
    "841": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7942,
        7969
      ],
      "op": "AND",
      "path": "8"
    },
    "842": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7942,
        7969
      ],
      "op": "DUP3",
      "path": "8"
    },
    "843": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7942,
        7969
      ],
      "op": "ADD",
      "path": "8"
    },
    "844": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7942,
        7969
      ],
      "op": "DUP1",
      "path": "8"
    },
    "845": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7942,
        7969
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "847": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7942,
        7969
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "848": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7942,
        7969
      ],
      "op": "POP",
      "path": "8"
    },
    "849": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7942,
        7969
      ],
      "op": "DUP2",
      "path": "8"
    },
    "850": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7942,
        7969
      ],
      "op": "ADD",
      "path": "8"
    },
    "851": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7942,
        7969
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "852": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7942,
        7969
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x35F"
    },
    "856": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7942,
        7969
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "857": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7942,
        7969
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "858": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7942,
        7969
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xF03"
    },
    "862": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "jump": "i",
      "offset": [
        7942,
        7969
      ],
      "op": "JUMP",
      "path": "8"
    },
    "863": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7942,
        7969
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "864": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7935,
        7969
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "865": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7935,
        7969
      ],
      "op": "POP",
      "path": "8"
    },
    "866": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        7869,
        7976
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "867": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "jump": "o",
      "offset": [
        7869,
        7976
      ],
      "op": "JUMP",
      "path": "8"
    },
    "868": {
      "offset": [
        2350,
        2385
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "869": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        2350,
        2385
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x8"
    },
    "871": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        2350,
        2385
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "872": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        2350,
        2385
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xFF"
    },
    "874": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        2350,
        2385
      ],
      "op": "AND",
      "path": "8"
    },
    "875": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        2350,
        2385
      ],
      "op": "DUP2",
      "path": "8"
    },
    "876": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "jump": "o",
      "offset": [
        2350,
        2385
      ],
      "op": "JUMP",
      "path": "8"
    },
    "877": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        6876,
        7193
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "878": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        6995,
        7012
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x9"
    },
    "880": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        6995,
        7012
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "881": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7045,
        7072
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "883": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7045,
        7072
      ],
      "op": "DUP1",
      "path": "8"
    },
    "884": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7045,
        7072
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "885": {
      "op": "PUSH4",
      "value": "0x3FABE5A3"
    },
    "890": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "892": {
      "op": "SHL"
    },
    "893": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7045,
        7072
      ],
      "op": "DUP2",
      "path": "8"
    },
    "894": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7045,
        7072
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "895": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7045,
        7072
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "896": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7045,
        7072
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "897": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        6920,
        6927
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "899": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        6920,
        6927
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "900": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "902": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "904": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "906": {
      "op": "SHL"
    },
    "907": {
      "op": "SUB"
    },
    "908": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        6995,
        7012
      ],
      "op": "AND",
      "path": "8"
    },
    "909": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        6995,
        7012
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "910": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        6920,
        6927
      ],
      "op": "DUP4",
      "path": "8"
    },
    "911": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        6920,
        6927
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "912": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        6995,
        7012
      ],
      "op": "DUP4",
      "path": "8"
    },
    "913": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        6995,
        7012
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "914": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7045,
        7070
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xFEAF968C"
    },
    "919": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7045,
        7070
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "920": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7045,
        7072
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "922": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7045,
        7072
      ],
      "op": "DUP1",
      "path": "8"
    },
    "923": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7045,
        7072
      ],
      "op": "DUP4",
      "path": "8"
    },
    "924": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7045,
        7072
      ],
      "op": "ADD",
      "path": "8"
    },
    "925": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7045,
        7072
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "926": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7045,
        7072
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xA0"
    },
    "928": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7045,
        7072
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "929": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7045,
        7072
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "930": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7045,
        7072
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "931": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7045,
        7072
      ],
      "op": "DUP3",
      "path": "8"
    },
    "932": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7045,
        7072
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "933": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7045,
        7072
      ],
      "op": "SUB",
      "path": "8"
    },
    "934": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7045,
        7072
      ],
      "op": "ADD",
      "path": "8"
    },
    "935": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7045,
        7072
      ],
      "op": "DUP2",
      "path": "8"
    },
    "936": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        6995,
        7012
      ],
      "op": "DUP7",
      "path": "8"
    },
    "937": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7045,
        7072
      ],
      "op": "DUP1",
      "path": "8"
    },
    "938": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7045,
        7072
      ],
      "op": "EXTCODESIZE",
      "path": "8"
    },
    "939": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7045,
        7072
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "940": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7045,
        7072
      ],
      "op": "DUP1",
      "path": "8"
    },
    "941": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7045,
        7072
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "942": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7045,
        7072
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x3B7"
    },
    "946": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7045,
        7072
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "947": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7045,
        7072
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "949": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7045,
        7072
      ],
      "op": "DUP1",
      "path": "8"
    },
    "950": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7045,
        7072
      ],
      "op": "REVERT",
      "path": "8"
    },
    "951": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7045,
        7072
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "952": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7045,
        7072
      ],
      "op": "POP",
      "path": "8"
    },
    "953": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7045,
        7072
      ],
      "op": "GAS",
      "path": "8"
    },
    "954": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7045,
        7072
      ],
      "op": "STATICCALL",
      "path": "8"
    },
    "955": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7045,
        7072
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "956": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7045,
        7072
      ],
      "op": "DUP1",
      "path": "8"
    },
    "957": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7045,
        7072
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "958": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7045,
        7072
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x3CC"
    },
    "962": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7045,
        7072
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "963": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7045,
        7072
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "964": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7045,
        7072
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "966": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7045,
        7072
      ],
      "op": "DUP1",
      "path": "8"
    },
    "967": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7045,
        7072
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "968": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7045,
        7072
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "969": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7045,
        7072
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "971": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7045,
        7072
      ],
      "op": "REVERT",
      "path": "8"
    },
    "972": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7045,
        7072
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "973": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7045,
        7072
      ],
      "op": "POP",
      "path": "8"
    },
    "974": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7045,
        7072
      ],
      "op": "POP",
      "path": "8"
    },
    "975": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7045,
        7072
      ],
      "op": "POP",
      "path": "8"
    },
    "976": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7045,
        7072
      ],
      "op": "POP",
      "path": "8"
    },
    "977": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7045,
        7072
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "979": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7045,
        7072
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "980": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7045,
        7072
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "981": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7045,
        7072
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "983": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7045,
        7072
      ],
      "op": "NOT",
      "path": "8"
    },
    "984": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7045,
        7072
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "986": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7045,
        7072
      ],
      "op": "DUP3",
      "path": "8"
    },
    "987": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7045,
        7072
      ],
      "op": "ADD",
      "path": "8"
    },
    "988": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7045,
        7072
      ],
      "op": "AND",
      "path": "8"
    },
    "989": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7045,
        7072
      ],
      "op": "DUP3",
      "path": "8"
    },
    "990": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7045,
        7072
      ],
      "op": "ADD",
      "path": "8"
    },
    "991": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7045,
        7072
      ],
      "op": "DUP1",
      "path": "8"
    },
    "992": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7045,
        7072
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "994": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7045,
        7072
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "995": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7045,
        7072
      ],
      "op": "POP",
      "path": "8"
    },
    "996": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7045,
        7072
      ],
      "op": "DUP2",
      "path": "8"
    },
    "997": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7045,
        7072
      ],
      "op": "ADD",
      "path": "8"
    },
    "998": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7045,
        7072
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "999": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7045,
        7072
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x3F2"
    },
    "1003": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7045,
        7072
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1004": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7045,
        7072
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1005": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7045,
        7072
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xF1C"
    },
    "1009": {
      "fn": "LeveragedTrading.getBtcPrice",
      "jump": "i",
      "offset": [
        7045,
        7072
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1010": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7045,
        7072
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1011": {
      "op": "POP"
    },
    "1012": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7023,
        7072
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1013": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7023,
        7072
      ],
      "op": "SWAP6",
      "path": "8"
    },
    "1014": {
      "op": "POP"
    },
    "1015": {
      "op": "POP"
    },
    "1016": {
      "op": "POP"
    },
    "1017": {
      "op": "POP"
    },
    "1018": {
      "op": "POP"
    },
    "1019": {
      "op": "POP"
    },
    "1020": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        6876,
        7193
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1021": {
      "fn": "LeveragedTrading.getBtcPrice",
      "jump": "o",
      "offset": [
        6876,
        7193
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1022": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5159,
        5813
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1023": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5212,
        5228
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1025": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5231,
        5244
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x40A"
    },
    "1029": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5231,
        5242
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x36D"
    },
    "1033": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "jump": "i",
      "offset": [
        5231,
        5244
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1034": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5231,
        5244
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1035": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5212,
        5244
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1036": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5212,
        5244
      ],
      "op": "POP",
      "path": "8"
    },
    "1037": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5277,
        5278
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1039": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5259,
        5274
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "1041": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5259,
        5274
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1042": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5259,
        5278
      ],
      "op": "GT",
      "path": "8"
    },
    "1043": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5258,
        5306
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1044": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5258,
        5306
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1045": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5258,
        5306
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x421"
    },
    "1049": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5258,
        5306
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1050": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5258,
        5306
      ],
      "op": "POP",
      "path": "8"
    },
    "1051": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5304,
        5305
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1053": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5284,
        5301
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1055": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5284,
        5301
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1056": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5284,
        5305
      ],
      "op": "GT",
      "path": "8"
    },
    "1057": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5258,
        5306
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1058": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5254,
        5773
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1059": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5254,
        5773
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x49B"
    },
    "1063": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5254,
        5773
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1064": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5322,
        5345
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1066": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5348,
        5376
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x434"
    },
    "1070": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5367,
        5375
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1071": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5348,
        5366
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xC6B"
    },
    "1075": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "jump": "i",
      "offset": [
        5348,
        5376
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1076": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5348,
        5376
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1077": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5322,
        5376
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1078": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5322,
        5376
      ],
      "op": "POP",
      "path": "8"
    },
    "1079": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5414,
        5415
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1081": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5394,
        5411
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x443"
    },
    "1085": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5402,
        5410
      ],
      "op": "DUP4",
      "path": "8"
    },
    "1086": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5394,
        5401
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xCB2"
    },
    "1090": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "jump": "i",
      "offset": [
        5394,
        5411
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1091": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5394,
        5411
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1092": {
      "branch": 57,
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5394,
        5415
      ],
      "op": "SGT",
      "path": "8"
    },
    "1093": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5390,
        5762
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1094": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5390,
        5762
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x474"
    },
    "1098": {
      "branch": 57,
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5390,
        5762
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1099": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5453,
        5468
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 1,
      "value": "0x3"
    },
    "1101": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5453,
        5468
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1102": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5453,
        5489
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x459"
    },
    "1106": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5453,
        5489
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1107": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5473,
        5488
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1108": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5453,
        5472
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xCD2"
    },
    "1112": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "jump": "i",
      "offset": [
        5453,
        5489
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1113": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5453,
        5489
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1114": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5435,
        5450
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "1116": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5435,
        5489
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "1117": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5527,
        5544
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 2,
      "value": "0x4"
    },
    "1119": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5527,
        5544
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1120": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5527,
        5565
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x46B"
    },
    "1124": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5527,
        5565
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1125": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5549,
        5564
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1126": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5527,
        5548
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xCE7"
    },
    "1130": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "jump": "i",
      "offset": [
        5527,
        5565
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1131": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5527,
        5565
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1132": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5507,
        5524
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1134": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5507,
        5565
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "1135": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5390,
        5762
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x499"
    },
    "1139": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5390,
        5762
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1140": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5390,
        5762
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1141": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5635,
        5650
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 3,
      "value": "0x3"
    },
    "1143": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5635,
        5650
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1144": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5635,
        5671
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x483"
    },
    "1148": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5635,
        5671
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1149": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5655,
        5670
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1150": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5635,
        5654
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xCE7"
    },
    "1154": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "jump": "i",
      "offset": [
        5635,
        5671
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1155": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5635,
        5671
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1156": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5617,
        5632
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "1158": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5617,
        5671
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "1159": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5709,
        5726
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 4,
      "value": "0x4"
    },
    "1161": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5709,
        5726
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1162": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5709,
        5747
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x495"
    },
    "1166": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5709,
        5747
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1167": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5731,
        5746
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1168": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5709,
        5730
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xCD2"
    },
    "1172": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "jump": "i",
      "offset": [
        5709,
        5747
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1173": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5709,
        5747
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1174": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5689,
        5706
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1176": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5689,
        5747
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "1177": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5390,
        5762
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1178": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5254,
        5773
      ],
      "op": "POP",
      "path": "8"
    },
    "1179": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5254,
        5773
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1180": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5783,
        5795
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 5,
      "value": "0x7"
    },
    "1182": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5783,
        5806
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "1183": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "jump": "o",
      "offset": [
        5159,
        5813
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1184": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1185": {
      "offset": [
        1196,
        1208
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x4AA"
    },
    "1189": {
      "offset": [
        1196,
        1206
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xCF5"
    },
    "1193": {
      "jump": "i",
      "offset": [
        1196,
        1208
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1194": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1196,
        1208
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1195": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1197": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1199": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1201": {
      "op": "SHL"
    },
    "1202": {
      "op": "SUB"
    },
    "1203": {
      "offset": [
        1185,
        1208
      ],
      "op": "AND",
      "path": "0"
    },
    "1204": {
      "offset": [
        1185,
        1192
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x4BD"
    },
    "1208": {
      "offset": [
        1185,
        1190
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x53F"
    },
    "1212": {
      "jump": "i",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1213": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1214": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1216": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1218": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1220": {
      "op": "SHL"
    },
    "1221": {
      "op": "SUB"
    },
    "1222": {
      "offset": [
        1185,
        1208
      ],
      "op": "AND",
      "path": "0"
    },
    "1223": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "1224": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x4EF"
    },
    "1228": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1229": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1231": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1232": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1236": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1238": {
      "op": "SHL"
    },
    "1239": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1240": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1241": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1243": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "1244": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x4E6"
    },
    "1248": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1249": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x1049"
    },
    "1253": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1254": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1255": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1257": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1258": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1259": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1260": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "SUB",
      "path": "0"
    },
    "1261": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1262": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "1263": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1264": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1690
      ],
      "op": "PUSH3",
      "path": "0",
      "statement": 6,
      "value": "0x4FB"
    },
    "1268": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1687,
        1688
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1270": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1678
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xCF9"
    },
    "1274": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1669,
        1690
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1275": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1690
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1276": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1277": {
      "fn": "LeveragedTrading.getBtcDownPrice",
      "offset": [
        6645,
        6824
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1278": {
      "fn": "LeveragedTrading.getBtcDownPrice",
      "offset": [
        6693,
        6700
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1280": {
      "fn": "LeveragedTrading.getBtcDownPrice",
      "offset": [
        6731,
        6744
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 7,
      "value": "0x6"
    },
    "1282": {
      "fn": "LeveragedTrading.getBtcDownPrice",
      "offset": [
        6731,
        6744
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1283": {
      "fn": "LeveragedTrading.getBtcDownPrice",
      "offset": [
        6748,
        6749
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1285": {
      "branch": 58,
      "fn": "LeveragedTrading.getBtcDownPrice",
      "offset": [
        6731,
        6749
      ],
      "op": "EQ",
      "path": "8"
    },
    "1286": {
      "fn": "LeveragedTrading.getBtcDownPrice",
      "offset": [
        6731,
        6817
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x538"
    },
    "1290": {
      "branch": 58,
      "fn": "LeveragedTrading.getBtcDownPrice",
      "offset": [
        6731,
        6817
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1291": {
      "fn": "LeveragedTrading.getBtcDownPrice",
      "offset": [
        6768,
        6817
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x532"
    },
    "1295": {
      "fn": "LeveragedTrading.getBtcDownPrice",
      "offset": [
        6803,
        6816
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x6"
    },
    "1297": {
      "fn": "LeveragedTrading.getBtcDownPrice",
      "offset": [
        6803,
        6816
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1298": {
      "fn": "LeveragedTrading.getBtcDownPrice",
      "offset": [
        6768,
        6798
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x52B"
    },
    "1302": {
      "fn": "LeveragedTrading.getBtcDownPrice",
      "offset": [
        6790,
        6797
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xF4240"
    },
    "1306": {
      "fn": "LeveragedTrading.getBtcDownPrice",
      "offset": [
        6768,
        6785
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1308": {
      "fn": "LeveragedTrading.getBtcDownPrice",
      "offset": [
        6768,
        6785
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1309": {
      "fn": "LeveragedTrading.getBtcDownPrice",
      "offset": [
        6768,
        6789
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xD49"
    },
    "1313": {
      "fn": "LeveragedTrading.getBtcDownPrice",
      "offset": [
        6768,
        6789
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1314": {
      "fn": "LeveragedTrading.getBtcDownPrice",
      "offset": [
        6768,
        6798
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1315": {
      "fn": "LeveragedTrading.getBtcDownPrice",
      "offset": [
        6768,
        6798
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1316": {
      "fn": "LeveragedTrading.getBtcDownPrice",
      "offset": [
        6768,
        6798
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xFFFFFFFF"
    },
    "1321": {
      "fn": "LeveragedTrading.getBtcDownPrice",
      "offset": [
        6768,
        6798
      ],
      "op": "AND",
      "path": "8"
    },
    "1322": {
      "fn": "LeveragedTrading.getBtcDownPrice",
      "jump": "i",
      "offset": [
        6768,
        6798
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1323": {
      "fn": "LeveragedTrading.getBtcDownPrice",
      "offset": [
        6768,
        6798
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1324": {
      "fn": "LeveragedTrading.getBtcDownPrice",
      "offset": [
        6768,
        6802
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1325": {
      "fn": "LeveragedTrading.getBtcDownPrice",
      "offset": [
        6768,
        6802
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xD57"
    },
    "1329": {
      "fn": "LeveragedTrading.getBtcDownPrice",
      "jump": "i",
      "offset": [
        6768,
        6817
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1330": {
      "fn": "LeveragedTrading.getBtcDownPrice",
      "offset": [
        6768,
        6817
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1331": {
      "fn": "LeveragedTrading.getBtcDownPrice",
      "offset": [
        6731,
        6817
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x35F"
    },
    "1335": {
      "fn": "LeveragedTrading.getBtcDownPrice",
      "offset": [
        6731,
        6817
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1336": {
      "fn": "LeveragedTrading.getBtcDownPrice",
      "offset": [
        6731,
        6817
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1337": {
      "op": "POP"
    },
    "1338": {
      "fn": "LeveragedTrading.getBtcDownPrice",
      "offset": [
        6753,
        6765
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "1340": {
      "fn": "LeveragedTrading.getBtcDownPrice",
      "offset": [
        6753,
        6765
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1341": {
      "fn": "LeveragedTrading.getBtcDownPrice",
      "offset": [
        6753,
        6765
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1342": {
      "fn": "LeveragedTrading.getBtcDownPrice",
      "jump": "o",
      "offset": [
        6645,
        6824
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1343": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1344": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1346": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 8
    },
    "1347": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1349": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1351": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1353": {
      "op": "SHL"
    },
    "1354": {
      "op": "SUB"
    },
    "1355": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "1356": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1357": {
      "fn": "Ownable.owner",
      "jump": "o",
      "offset": [
        973,
        1058
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1358": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2707,
        3046
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1359": {
      "offset": [
        1196,
        1208
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x558"
    },
    "1363": {
      "offset": [
        1196,
        1206
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xCF5"
    },
    "1367": {
      "jump": "i",
      "offset": [
        1196,
        1208
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1368": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        1196,
        1208
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1369": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1371": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1373": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1375": {
      "op": "SHL"
    },
    "1376": {
      "op": "SUB"
    },
    "1377": {
      "offset": [
        1185,
        1208
      ],
      "op": "AND",
      "path": "0"
    },
    "1378": {
      "offset": [
        1185,
        1192
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x56B"
    },
    "1382": {
      "offset": [
        1185,
        1190
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x53F"
    },
    "1386": {
      "jump": "i",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1387": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1388": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1390": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1392": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1394": {
      "op": "SHL"
    },
    "1395": {
      "op": "SUB"
    },
    "1396": {
      "offset": [
        1185,
        1208
      ],
      "op": "AND",
      "path": "0"
    },
    "1397": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "1398": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x594"
    },
    "1402": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1403": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1405": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1406": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1410": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1412": {
      "op": "SHL"
    },
    "1413": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1414": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1415": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1417": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "1418": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x4E6"
    },
    "1422": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1423": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x1049"
    },
    "1427": {
      "fn": "LeveragedTrading.initiatePool",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1428": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1429": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2785,
        2800
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 9,
      "value": "0x8"
    },
    "1431": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2785,
        2800
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1432": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2785,
        2800
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xFF"
    },
    "1434": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2785,
        2800
      ],
      "op": "AND",
      "path": "8"
    },
    "1435": {
      "branch": 59,
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2784,
        2800
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1436": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2776,
        2836
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x5BA"
    },
    "1440": {
      "branch": 59,
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2776,
        2836
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1441": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2776,
        2836
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1443": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2776,
        2836
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1444": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1448": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1450": {
      "op": "SHL"
    },
    "1451": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2776,
        2836
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1452": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2776,
        2836
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1453": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2776,
        2836
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1455": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2776,
        2836
      ],
      "op": "ADD",
      "path": "8"
    },
    "1456": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2776,
        2836
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x4E6"
    },
    "1460": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2776,
        2836
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1461": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2776,
        2836
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x1012"
    },
    "1465": {
      "fn": "LeveragedTrading.initiatePool",
      "jump": "i",
      "offset": [
        2776,
        2836
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1466": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2776,
        2836
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1467": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2873,
        2877
      ],
      "op": "ADDRESS",
      "path": "8",
      "statement": 10
    },
    "1468": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2855,
        2879
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1470": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2855,
        2879
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1471": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2855,
        2879
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x5C9"
    },
    "1475": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2855,
        2879
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1476": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2855,
        2879
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xE68"
    },
    "1480": {
      "fn": "LeveragedTrading.initiatePool",
      "jump": "i",
      "offset": [
        2855,
        2879
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1481": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2855,
        2879
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1482": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2855,
        2879
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x5D5"
    },
    "1486": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2855,
        2879
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1487": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2855,
        2879
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1488": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2855,
        2879
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xF70"
    },
    "1492": {
      "fn": "LeveragedTrading.initiatePool",
      "jump": "i",
      "offset": [
        2855,
        2879
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1493": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2855,
        2879
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1494": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2855,
        2879
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1496": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2855,
        2879
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1497": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2855,
        2879
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1498": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2855,
        2879
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1499": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2855,
        2879
      ],
      "op": "SUB",
      "path": "8"
    },
    "1500": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2855,
        2879
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1501": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2855,
        2879
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1503": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2855,
        2879
      ],
      "op": "CREATE",
      "path": "8"
    },
    "1504": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2855,
        2879
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1505": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2855,
        2879
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1506": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2855,
        2879
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1507": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2855,
        2879
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1508": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2855,
        2879
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x5F2"
    },
    "1512": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2855,
        2879
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1513": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2855,
        2879
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "1514": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2855,
        2879
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1516": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2855,
        2879
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1517": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2855,
        2879
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "1518": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2855,
        2879
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "1519": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2855,
        2879
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1521": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2855,
        2879
      ],
      "op": "REVERT",
      "path": "8"
    },
    "1522": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2855,
        2879
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1523": {
      "op": "POP"
    },
    "1524": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2847,
        2852
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xA"
    },
    "1526": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2847,
        2879
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1527": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2847,
        2879
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1528": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1530": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1532": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1534": {
      "op": "SHL"
    },
    "1535": {
      "op": "SUB"
    },
    "1536": {
      "op": "NOT"
    },
    "1537": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2847,
        2879
      ],
      "op": "AND",
      "path": "8"
    },
    "1538": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1540": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1542": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1544": {
      "op": "SHL"
    },
    "1545": {
      "op": "SUB"
    },
    "1546": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2847,
        2879
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "1547": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2847,
        2879
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1548": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2847,
        2879
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "1549": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2847,
        2879
      ],
      "op": "AND",
      "path": "8"
    },
    "1550": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2847,
        2879
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1551": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2847,
        2879
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1552": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2847,
        2879
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1553": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2847,
        2879
      ],
      "op": "OR",
      "path": "8"
    },
    "1554": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2847,
        2879
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1555": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2847,
        2879
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "1556": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2899,
        2925
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 11,
      "value": "0x40"
    },
    "1558": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2899,
        2925
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1559": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2919,
        2923
      ],
      "op": "ADDRESS",
      "path": "8"
    },
    "1560": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2919,
        2923
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1561": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2899,
        2925
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x623"
    },
    "1565": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2899,
        2925
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1566": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2899,
        2925
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xE76"
    },
    "1570": {
      "fn": "LeveragedTrading.initiatePool",
      "jump": "i",
      "offset": [
        2899,
        2925
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1571": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2899,
        2925
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1572": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2899,
        2925
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x62F"
    },
    "1576": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2899,
        2925
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1577": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2899,
        2925
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1578": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2899,
        2925
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xF70"
    },
    "1582": {
      "fn": "LeveragedTrading.initiatePool",
      "jump": "i",
      "offset": [
        2899,
        2925
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1583": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2899,
        2925
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1584": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2899,
        2925
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1586": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2899,
        2925
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1587": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2899,
        2925
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1588": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2899,
        2925
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1589": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2899,
        2925
      ],
      "op": "SUB",
      "path": "8"
    },
    "1590": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2899,
        2925
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1591": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2899,
        2925
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1593": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2899,
        2925
      ],
      "op": "CREATE",
      "path": "8"
    },
    "1594": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2899,
        2925
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1595": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2899,
        2925
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1596": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2899,
        2925
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1597": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2899,
        2925
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1598": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2899,
        2925
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x64C"
    },
    "1602": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2899,
        2925
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1603": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2899,
        2925
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "1604": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2899,
        2925
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1606": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2899,
        2925
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1607": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2899,
        2925
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "1608": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2899,
        2925
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "1609": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2899,
        2925
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1611": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2899,
        2925
      ],
      "op": "REVERT",
      "path": "8"
    },
    "1612": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2899,
        2925
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1613": {
      "op": "POP"
    },
    "1614": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2889,
        2896
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xB"
    },
    "1616": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2889,
        2925
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1617": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2889,
        2925
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1620": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1622": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1624": {
      "op": "SHL"
    },
    "1625": {
      "op": "SUB"
    },
    "1626": {
      "op": "NOT"
    },
    "1627": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2889,
        2925
      ],
      "op": "AND",
      "path": "8"
    },
    "1628": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1630": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1632": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1634": {
      "op": "SHL"
    },
    "1635": {
      "op": "SUB"
    },
    "1636": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2889,
        2925
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "1637": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2889,
        2925
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1638": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2889,
        2925
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "1639": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2889,
        2925
      ],
      "op": "AND",
      "path": "8"
    },
    "1640": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2889,
        2925
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1641": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2889,
        2925
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1642": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2889,
        2925
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1643": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2889,
        2925
      ],
      "op": "OR",
      "path": "8"
    },
    "1644": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2889,
        2925
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1645": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2889,
        2925
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "1646": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2936,
        2965
      ],
      "op": "PUSH3",
      "path": "8",
      "statement": 12,
      "value": "0x67E"
    },
    "1650": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2947,
        2964
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x2C0"
    },
    "1654": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2947,
        2957
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1655": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2962,
        2963
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "1657": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2947,
        2961
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xD57"
    },
    "1661": {
      "fn": "LeveragedTrading.initiatePool",
      "jump": "i",
      "offset": [
        2947,
        2964
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1662": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2936,
        2965
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1663": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2975,
        3006
      ],
      "op": "PUSH3",
      "path": "8",
      "statement": 13,
      "value": "0x68F"
    },
    "1667": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2988,
        3005
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x249"
    },
    "1671": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2988,
        2998
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1672": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        3003,
        3004
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "1674": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2988,
        3002
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xD57"
    },
    "1678": {
      "fn": "LeveragedTrading.initiatePool",
      "jump": "i",
      "offset": [
        2988,
        3005
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1679": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        2975,
        3006
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1680": {
      "op": "POP"
    },
    "1681": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        3017,
        3032
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 14,
      "value": "0x8"
    },
    "1683": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        3017,
        3039
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1684": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        3017,
        3039
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1685": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1687": {
      "op": "NOT"
    },
    "1688": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        3017,
        3039
      ],
      "op": "AND",
      "path": "8"
    },
    "1689": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        3035,
        3039
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "1691": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        3017,
        3039
      ],
      "op": "OR",
      "path": "8"
    },
    "1692": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        3017,
        3039
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1693": {
      "fn": "LeveragedTrading.initiatePool",
      "offset": [
        3017,
        3039
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "1694": {
      "fn": "LeveragedTrading.initiatePool",
      "jump": "o",
      "offset": [
        2707,
        3046
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1695": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4640,
        5153
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1696": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4711,
        4737
      ],
      "op": "PUSH3",
      "path": "8",
      "statement": 15,
      "value": "0x6A9"
    },
    "1700": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4711,
        4735
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x3FE"
    },
    "1704": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "jump": "i",
      "offset": [
        4711,
        4737
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1705": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4711,
        4737
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1706": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4747,
        4754
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 16,
      "value": "0xB"
    },
    "1708": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4747,
        4754
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1709": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4747,
        4782
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1711": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4747,
        4782
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1712": {
      "op": "PUSH4",
      "value": "0x852CD8D"
    },
    "1717": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "1719": {
      "op": "SHL"
    },
    "1720": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4747,
        4782
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1721": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4747,
        4782
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1722": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1724": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1726": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1728": {
      "op": "SHL"
    },
    "1729": {
      "op": "SUB"
    },
    "1730": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4747,
        4754
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1731": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4747,
        4754
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1732": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4747,
        4754
      ],
      "op": "AND",
      "path": "8"
    },
    "1733": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4747,
        4754
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1734": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4747,
        4759
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x42966C68"
    },
    "1739": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4747,
        4759
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1740": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4747,
        4782
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x6DB"
    },
    "1744": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4747,
        4782
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1745": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4760,
        4781
      ],
      "op": "DUP5",
      "path": "8"
    },
    "1746": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4760,
        4781
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1747": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4747,
        4782
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1749": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4747,
        4782
      ],
      "op": "ADD",
      "path": "8"
    },
    "1750": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4747,
        4782
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x10B5"
    },
    "1754": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "jump": "i",
      "offset": [
        4747,
        4782
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1755": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4747,
        4782
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1756": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4747,
        4782
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1758": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4747,
        4782
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1760": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4747,
        4782
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1761": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4747,
        4782
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1762": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4747,
        4782
      ],
      "op": "DUP4",
      "path": "8"
    },
    "1763": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4747,
        4782
      ],
      "op": "SUB",
      "path": "8"
    },
    "1764": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4747,
        4782
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1765": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4747,
        4782
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1767": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4747,
        4782
      ],
      "op": "DUP8",
      "path": "8"
    },
    "1768": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4747,
        4782
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1769": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4747,
        4782
      ],
      "op": "EXTCODESIZE",
      "path": "8"
    },
    "1770": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4747,
        4782
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1771": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4747,
        4782
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1772": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4747,
        4782
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1773": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4747,
        4782
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x6F6"
    },
    "1777": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4747,
        4782
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1778": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4747,
        4782
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1780": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4747,
        4782
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1781": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4747,
        4782
      ],
      "op": "REVERT",
      "path": "8"
    },
    "1782": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4747,
        4782
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1783": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4747,
        4782
      ],
      "op": "POP",
      "path": "8"
    },
    "1784": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4747,
        4782
      ],
      "op": "GAS",
      "path": "8"
    },
    "1785": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4747,
        4782
      ],
      "op": "CALL",
      "path": "8"
    },
    "1786": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4747,
        4782
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1787": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4747,
        4782
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1788": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4747,
        4782
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1789": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4747,
        4782
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x70B"
    },
    "1793": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4747,
        4782
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1794": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4747,
        4782
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "1795": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4747,
        4782
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1797": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4747,
        4782
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1798": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4747,
        4782
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "1799": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4747,
        4782
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "1800": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4747,
        4782
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1802": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4747,
        4782
      ],
      "op": "REVERT",
      "path": "8"
    },
    "1803": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4747,
        4782
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1804": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4747,
        4782
      ],
      "op": "POP",
      "path": "8"
    },
    "1805": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4747,
        4782
      ],
      "op": "POP",
      "path": "8"
    },
    "1806": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4747,
        4782
      ],
      "op": "POP",
      "path": "8"
    },
    "1807": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4747,
        4782
      ],
      "op": "POP",
      "path": "8"
    },
    "1808": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4808,
        4825
      ],
      "op": "PUSH3",
      "path": "8",
      "statement": 17,
      "value": "0x719"
    },
    "1812": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4808,
        4823
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x4FD"
    },
    "1816": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "jump": "i",
      "offset": [
        4808,
        4825
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1817": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4808,
        4825
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1818": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4793,
        4805
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "1820": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4793,
        4825
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1821": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4793,
        4825
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1822": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4793,
        4825
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "1823": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4835,
        4853
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1825": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4835,
        4853
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1826": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4856,
        4908
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x738"
    },
    "1830": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4856,
        4908
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1831": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4900,
        4907
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xF4240"
    },
    "1835": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4900,
        4907
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1836": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4856,
        4895
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x52B"
    },
    "1840": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4856,
        4895
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1841": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4856,
        4877
      ],
      "op": "DUP6",
      "path": "8"
    },
    "1842": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4856,
        4877
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1843": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4856,
        4881
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xD49"
    },
    "1847": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "jump": "i",
      "offset": [
        4856,
        4895
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1848": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4856,
        4908
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1849": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4943,
        4956
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 18,
      "value": "0x6"
    },
    "1851": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4943,
        4956
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1852": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4835,
        4908
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1853": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4835,
        4908
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1854": {
      "op": "POP"
    },
    "1855": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4943,
        4983
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x74A"
    },
    "1859": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4943,
        4983
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1860": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4961,
        4982
      ],
      "op": "DUP4",
      "path": "8"
    },
    "1861": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4943,
        4960
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xCE7"
    },
    "1865": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "jump": "i",
      "offset": [
        4943,
        4983
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1866": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4943,
        4983
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1867": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4927,
        4940
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x6"
    },
    "1869": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4927,
        4983
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "1870": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5013,
        5030
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 19,
      "value": "0x4"
    },
    "1872": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5013,
        5030
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1873": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5013,
        5046
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x75C"
    },
    "1877": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5013,
        5046
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1878": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5035,
        5045
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1879": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5013,
        5034
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xCE7"
    },
    "1883": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "jump": "i",
      "offset": [
        5013,
        5046
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1884": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5013,
        5046
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1885": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4993,
        5010
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1887": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4993,
        5046
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1888": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4993,
        5046
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1889": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4993,
        5046
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "1890": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5078,
        5089
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x8"
    },
    "1892": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5078,
        5089
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1893": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5107,
        5145
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 20,
      "value": "0x40"
    },
    "1895": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5107,
        5145
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1896": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "1901": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1903": {
      "op": "SHL"
    },
    "1904": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5107,
        5145
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1905": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5107,
        5145
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1906": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5078,
        5089
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x100"
    },
    "1909": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5078,
        5089
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1910": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5078,
        5089
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1911": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5078,
        5089
      ],
      "op": "DIV",
      "path": "8"
    },
    "1912": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1914": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1916": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1918": {
      "op": "SHL"
    },
    "1919": {
      "op": "SUB"
    },
    "1920": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5078,
        5089
      ],
      "op": "AND",
      "path": "8"
    },
    "1921": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5078,
        5089
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1922": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5078,
        5089
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1923": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5078,
        5089
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1924": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5107,
        5120
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xA9059CBB"
    },
    "1929": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5107,
        5120
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1930": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5107,
        5145
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x799"
    },
    "1934": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5107,
        5145
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1935": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5121,
        5131
      ],
      "op": "CALLER",
      "path": "8"
    },
    "1936": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5121,
        5131
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1937": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5134,
        5144
      ],
      "op": "DUP8",
      "path": "8"
    },
    "1938": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5134,
        5144
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1939": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5107,
        5145
      ],
      "op": "ADD",
      "path": "8"
    },
    "1940": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5107,
        5145
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xFA8"
    },
    "1944": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "jump": "i",
      "offset": [
        5107,
        5145
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1945": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5107,
        5145
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1946": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5107,
        5145
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1948": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5107,
        5145
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1950": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5107,
        5145
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1951": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5107,
        5145
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1952": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5107,
        5145
      ],
      "op": "DUP4",
      "path": "8"
    },
    "1953": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5107,
        5145
      ],
      "op": "SUB",
      "path": "8"
    },
    "1954": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5107,
        5145
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1955": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5107,
        5145
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1957": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5107,
        5145
      ],
      "op": "DUP8",
      "path": "8"
    },
    "1958": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5107,
        5145
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1959": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5107,
        5145
      ],
      "op": "EXTCODESIZE",
      "path": "8"
    },
    "1960": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5107,
        5145
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1961": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5107,
        5145
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1962": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5107,
        5145
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1963": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5107,
        5145
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x7B4"
    },
    "1967": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5107,
        5145
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1968": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5107,
        5145
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1970": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5107,
        5145
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1971": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5107,
        5145
      ],
      "op": "REVERT",
      "path": "8"
    },
    "1972": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5107,
        5145
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1973": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5107,
        5145
      ],
      "op": "POP",
      "path": "8"
    },
    "1974": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5107,
        5145
      ],
      "op": "GAS",
      "path": "8"
    },
    "1975": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5107,
        5145
      ],
      "op": "CALL",
      "path": "8"
    },
    "1976": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5107,
        5145
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1977": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5107,
        5145
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1978": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5107,
        5145
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1979": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5107,
        5145
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x7C9"
    },
    "1983": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5107,
        5145
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1984": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5107,
        5145
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "1985": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5107,
        5145
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1987": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5107,
        5145
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1988": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5107,
        5145
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "1989": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5107,
        5145
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "1990": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5107,
        5145
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1992": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5107,
        5145
      ],
      "op": "REVERT",
      "path": "8"
    },
    "1993": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5107,
        5145
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1994": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5107,
        5145
      ],
      "op": "POP",
      "path": "8"
    },
    "1995": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5107,
        5145
      ],
      "op": "POP",
      "path": "8"
    },
    "1996": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5107,
        5145
      ],
      "op": "POP",
      "path": "8"
    },
    "1997": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5107,
        5145
      ],
      "op": "POP",
      "path": "8"
    },
    "1998": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5107,
        5145
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2000": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5107,
        5145
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2001": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5107,
        5145
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "2002": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5107,
        5145
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "2004": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5107,
        5145
      ],
      "op": "NOT",
      "path": "8"
    },
    "2005": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5107,
        5145
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "2007": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5107,
        5145
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2008": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5107,
        5145
      ],
      "op": "ADD",
      "path": "8"
    },
    "2009": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5107,
        5145
      ],
      "op": "AND",
      "path": "8"
    },
    "2010": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5107,
        5145
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2011": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5107,
        5145
      ],
      "op": "ADD",
      "path": "8"
    },
    "2012": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5107,
        5145
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2013": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5107,
        5145
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2015": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5107,
        5145
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2016": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5107,
        5145
      ],
      "op": "POP",
      "path": "8"
    },
    "2017": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5107,
        5145
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2018": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5107,
        5145
      ],
      "op": "ADD",
      "path": "8"
    },
    "2019": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5107,
        5145
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2020": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5107,
        5145
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x7EF"
    },
    "2024": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5107,
        5145
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2025": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5107,
        5145
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2026": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5107,
        5145
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xEC8"
    },
    "2030": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "jump": "i",
      "offset": [
        5107,
        5145
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2031": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5107,
        5145
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2032": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5100,
        5146
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x80A"
    },
    "2036": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5100,
        5146
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2037": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2042": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2044": {
      "op": "SHL"
    },
    "2045": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5100,
        5146
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2047": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5100,
        5146
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2048": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5100,
        5146
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "2050": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5100,
        5146
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "2052": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5100,
        5146
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2053": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5100,
        5146
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x24"
    },
    "2055": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5100,
        5146
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2057": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5100,
        5146
      ],
      "op": "REVERT",
      "path": "8"
    },
    "2058": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5100,
        5146
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2059": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4640,
        5153
      ],
      "op": "POP",
      "path": "8"
    },
    "2060": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4640,
        5153
      ],
      "op": "POP",
      "path": "8"
    },
    "2061": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4640,
        5153
      ],
      "op": "POP",
      "path": "8"
    },
    "2062": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "jump": "o",
      "offset": [
        4640,
        5153
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2063": {
      "offset": [
        2208,
        2240
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2064": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        2208,
        2240
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x6"
    },
    "2066": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        2208,
        2240
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2067": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        2208,
        2240
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2068": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "jump": "o",
      "offset": [
        2208,
        2240
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2069": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3591,
        4142
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2070": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3650,
        3676
      ],
      "op": "PUSH3",
      "path": "8",
      "statement": 21,
      "value": "0x81F"
    },
    "2074": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3650,
        3674
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x3FE"
    },
    "2078": {
      "fn": "LeveragedTrading.issueBtcDown",
      "jump": "i",
      "offset": [
        3650,
        3676
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2079": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3650,
        3676
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2080": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3710,
        3727
      ],
      "op": "PUSH3",
      "path": "8",
      "statement": 22,
      "value": "0x829"
    },
    "2084": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3710,
        3725
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x4FD"
    },
    "2088": {
      "fn": "LeveragedTrading.issueBtcDown",
      "jump": "i",
      "offset": [
        3710,
        3727
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2089": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3710,
        3727
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2090": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3695,
        3707
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "2092": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3695,
        3727
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2093": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3695,
        3727
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2094": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3695,
        3727
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "2095": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3737,
        3766
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2097": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3737,
        3766
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2098": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3769,
        3810
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x845"
    },
    "2102": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3769,
        3810
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2103": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3769,
        3792
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x52B"
    },
    "2107": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3769,
        3779
      ],
      "op": "DUP5",
      "path": "8"
    },
    "2108": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3784,
        3791
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xF4240"
    },
    "2112": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3769,
        3783
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xD49"
    },
    "2116": {
      "fn": "LeveragedTrading.issueBtcDown",
      "jump": "i",
      "offset": [
        3769,
        3792
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2117": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3769,
        3810
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2118": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3821,
        3828
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 23,
      "value": "0xB"
    },
    "2120": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3821,
        3828
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2121": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3821,
        3856
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2123": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3821,
        3856
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2124": {
      "op": "PUSH4",
      "value": "0x140E25AD"
    },
    "2129": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "2131": {
      "op": "SHL"
    },
    "2132": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3821,
        3856
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2133": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3821,
        3856
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2134": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3737,
        3810
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2135": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3737,
        3810
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "2136": {
      "op": "POP"
    },
    "2137": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2139": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2141": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2143": {
      "op": "SHL"
    },
    "2144": {
      "op": "SUB"
    },
    "2145": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3821,
        3828
      ],
      "op": "AND",
      "path": "8"
    },
    "2146": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3821,
        3828
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2147": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3821,
        3833
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xA0712D68"
    },
    "2152": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3821,
        3833
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2153": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3821,
        3856
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x878"
    },
    "2157": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3821,
        3856
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2158": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3737,
        3810
      ],
      "op": "DUP5",
      "path": "8"
    },
    "2159": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3737,
        3810
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2160": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3821,
        3856
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "2162": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3821,
        3856
      ],
      "op": "ADD",
      "path": "8"
    },
    "2163": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3821,
        3856
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x10B5"
    },
    "2167": {
      "fn": "LeveragedTrading.issueBtcDown",
      "jump": "i",
      "offset": [
        3821,
        3856
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2168": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3821,
        3856
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2169": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3821,
        3856
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2171": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3821,
        3856
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2173": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3821,
        3856
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2174": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3821,
        3856
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2175": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3821,
        3856
      ],
      "op": "DUP4",
      "path": "8"
    },
    "2176": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3821,
        3856
      ],
      "op": "SUB",
      "path": "8"
    },
    "2177": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3821,
        3856
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2178": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3821,
        3856
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2180": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3821,
        3856
      ],
      "op": "DUP8",
      "path": "8"
    },
    "2181": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3821,
        3856
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2182": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3821,
        3856
      ],
      "op": "EXTCODESIZE",
      "path": "8"
    },
    "2183": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3821,
        3856
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2184": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3821,
        3856
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2185": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3821,
        3856
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2186": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3821,
        3856
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x893"
    },
    "2190": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3821,
        3856
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2191": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3821,
        3856
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2193": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3821,
        3856
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2194": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3821,
        3856
      ],
      "op": "REVERT",
      "path": "8"
    },
    "2195": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3821,
        3856
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2196": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3821,
        3856
      ],
      "op": "POP",
      "path": "8"
    },
    "2197": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3821,
        3856
      ],
      "op": "GAS",
      "path": "8"
    },
    "2198": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3821,
        3856
      ],
      "op": "CALL",
      "path": "8"
    },
    "2199": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3821,
        3856
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2200": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3821,
        3856
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2201": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3821,
        3856
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2202": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3821,
        3856
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x8A8"
    },
    "2206": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3821,
        3856
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2207": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3821,
        3856
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "2208": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3821,
        3856
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2210": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3821,
        3856
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2211": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3821,
        3856
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "2212": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3821,
        3856
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "2213": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3821,
        3856
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2215": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3821,
        3856
      ],
      "op": "REVERT",
      "path": "8"
    },
    "2216": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3821,
        3856
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2217": {
      "op": "POP"
    },
    "2218": {
      "op": "POP"
    },
    "2219": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3882,
        3895
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 24,
      "value": "0x6"
    },
    "2221": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3882,
        3895
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2222": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3882,
        3922
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x8BC"
    },
    "2226": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3882,
        3922
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "2227": {
      "op": "POP"
    },
    "2228": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3882,
        3895
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2229": {
      "op": "POP"
    },
    "2230": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3900,
        3921
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2231": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3882,
        3899
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xCD2"
    },
    "2235": {
      "fn": "LeveragedTrading.issueBtcDown",
      "jump": "i",
      "offset": [
        3882,
        3922
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2236": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3882,
        3922
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2237": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3866,
        3879
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x6"
    },
    "2239": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3866,
        3922
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "2240": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3952,
        3969
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 25,
      "value": "0x4"
    },
    "2242": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3952,
        3969
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2243": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3952,
        3985
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x8CE"
    },
    "2247": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3952,
        3985
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2248": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3974,
        3984
      ],
      "op": "DUP4",
      "path": "8"
    },
    "2249": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3952,
        3973
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xCD2"
    },
    "2253": {
      "fn": "LeveragedTrading.issueBtcDown",
      "jump": "i",
      "offset": [
        3952,
        3985
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2254": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3952,
        3985
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2255": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3932,
        3949
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "2257": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3932,
        3985
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2258": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3932,
        3985
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2259": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3932,
        3985
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "2260": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4017,
        4028
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x8"
    },
    "2262": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4017,
        4028
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2263": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4047,
        4103
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 26,
      "value": "0x40"
    },
    "2265": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4047,
        4103
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2266": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "2271": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2273": {
      "op": "SHL"
    },
    "2274": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4047,
        4103
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2275": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4047,
        4103
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2276": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4017,
        4028
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x100"
    },
    "2279": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4017,
        4028
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2280": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4017,
        4028
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2281": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4017,
        4028
      ],
      "op": "DIV",
      "path": "8"
    },
    "2282": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2284": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2286": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2288": {
      "op": "SHL"
    },
    "2289": {
      "op": "SUB"
    },
    "2290": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4017,
        4028
      ],
      "op": "AND",
      "path": "8"
    },
    "2291": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4017,
        4028
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2292": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4017,
        4028
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2293": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4017,
        4028
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2294": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4047,
        4064
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x23B872DD"
    },
    "2299": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4047,
        4064
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2300": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4047,
        4103
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x90D"
    },
    "2304": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4047,
        4103
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2305": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4065,
        4075
      ],
      "op": "CALLER",
      "path": "8"
    },
    "2306": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4065,
        4075
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2307": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4085,
        4089
      ],
      "op": "ADDRESS",
      "path": "8"
    },
    "2308": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4085,
        4089
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2309": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4092,
        4102
      ],
      "op": "DUP10",
      "path": "8"
    },
    "2310": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4092,
        4102
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2311": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4047,
        4103
      ],
      "op": "ADD",
      "path": "8"
    },
    "2312": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4047,
        4103
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xF84"
    },
    "2316": {
      "fn": "LeveragedTrading.issueBtcDown",
      "jump": "i",
      "offset": [
        4047,
        4103
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2317": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4047,
        4103
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2318": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4047,
        4103
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "2320": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4047,
        4103
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2322": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4047,
        4103
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2323": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4047,
        4103
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2324": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4047,
        4103
      ],
      "op": "DUP4",
      "path": "8"
    },
    "2325": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4047,
        4103
      ],
      "op": "SUB",
      "path": "8"
    },
    "2326": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4047,
        4103
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2327": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4047,
        4103
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2329": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4047,
        4103
      ],
      "op": "DUP8",
      "path": "8"
    },
    "2330": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4047,
        4103
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2331": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4047,
        4103
      ],
      "op": "EXTCODESIZE",
      "path": "8"
    },
    "2332": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4047,
        4103
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2333": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4047,
        4103
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2334": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4047,
        4103
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2335": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4047,
        4103
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x928"
    },
    "2339": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4047,
        4103
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2340": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4047,
        4103
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2342": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4047,
        4103
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2343": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4047,
        4103
      ],
      "op": "REVERT",
      "path": "8"
    },
    "2344": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4047,
        4103
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2345": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4047,
        4103
      ],
      "op": "POP",
      "path": "8"
    },
    "2346": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4047,
        4103
      ],
      "op": "GAS",
      "path": "8"
    },
    "2347": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4047,
        4103
      ],
      "op": "CALL",
      "path": "8"
    },
    "2348": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4047,
        4103
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2349": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4047,
        4103
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2350": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4047,
        4103
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2351": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4047,
        4103
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x93D"
    },
    "2355": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4047,
        4103
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2356": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4047,
        4103
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "2357": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4047,
        4103
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2359": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4047,
        4103
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2360": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4047,
        4103
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "2361": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4047,
        4103
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "2362": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4047,
        4103
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2364": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4047,
        4103
      ],
      "op": "REVERT",
      "path": "8"
    },
    "2365": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4047,
        4103
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2366": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4047,
        4103
      ],
      "op": "POP",
      "path": "8"
    },
    "2367": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4047,
        4103
      ],
      "op": "POP",
      "path": "8"
    },
    "2368": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4047,
        4103
      ],
      "op": "POP",
      "path": "8"
    },
    "2369": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4047,
        4103
      ],
      "op": "POP",
      "path": "8"
    },
    "2370": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4047,
        4103
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2372": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4047,
        4103
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2373": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4047,
        4103
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "2374": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4047,
        4103
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "2376": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4047,
        4103
      ],
      "op": "NOT",
      "path": "8"
    },
    "2377": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4047,
        4103
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "2379": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4047,
        4103
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2380": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4047,
        4103
      ],
      "op": "ADD",
      "path": "8"
    },
    "2381": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4047,
        4103
      ],
      "op": "AND",
      "path": "8"
    },
    "2382": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4047,
        4103
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2383": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4047,
        4103
      ],
      "op": "ADD",
      "path": "8"
    },
    "2384": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4047,
        4103
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2385": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4047,
        4103
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2387": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4047,
        4103
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2388": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4047,
        4103
      ],
      "op": "POP",
      "path": "8"
    },
    "2389": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4047,
        4103
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2390": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4047,
        4103
      ],
      "op": "ADD",
      "path": "8"
    },
    "2391": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4047,
        4103
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2392": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4047,
        4103
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x963"
    },
    "2396": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4047,
        4103
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2397": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4047,
        4103
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2398": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4047,
        4103
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xEC8"
    },
    "2402": {
      "fn": "LeveragedTrading.issueBtcDown",
      "jump": "i",
      "offset": [
        4047,
        4103
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2403": {
      "branch": 60,
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4047,
        4103
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2404": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4039,
        4135
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x80A"
    },
    "2408": {
      "branch": 60,
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4039,
        4135
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2409": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4039,
        4135
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2411": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4039,
        4135
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2412": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2416": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2418": {
      "op": "SHL"
    },
    "2419": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4039,
        4135
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2420": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4039,
        4135
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2421": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4039,
        4135
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "2423": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4039,
        4135
      ],
      "op": "ADD",
      "path": "8"
    },
    "2424": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4039,
        4135
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x4E6"
    },
    "2428": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4039,
        4135
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2429": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4039,
        4135
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x107E"
    },
    "2433": {
      "fn": "LeveragedTrading.issueBtcDown",
      "jump": "i",
      "offset": [
        4039,
        4135
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2434": {
      "fn": "LeveragedTrading.getBtcdownBalance",
      "offset": [
        7982,
        8093
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2435": {
      "fn": "LeveragedTrading.getBtcdownBalance",
      "offset": [
        8057,
        8064
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 27,
      "value": "0xB"
    },
    "2437": {
      "fn": "LeveragedTrading.getBtcdownBalance",
      "offset": [
        8057,
        8064
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2438": {
      "fn": "LeveragedTrading.getBtcdownBalance",
      "offset": [
        8057,
        8086
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2440": {
      "fn": "LeveragedTrading.getBtcdownBalance",
      "offset": [
        8057,
        8086
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2441": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2446": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2448": {
      "op": "SHL"
    },
    "2449": {
      "fn": "LeveragedTrading.getBtcdownBalance",
      "offset": [
        8057,
        8086
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2450": {
      "fn": "LeveragedTrading.getBtcdownBalance",
      "offset": [
        8057,
        8086
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2451": {
      "fn": "LeveragedTrading.getBtcdownBalance",
      "offset": [
        8031,
        8038
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2453": {
      "fn": "LeveragedTrading.getBtcdownBalance",
      "offset": [
        8031,
        8038
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2454": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2456": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2458": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2460": {
      "op": "SHL"
    },
    "2461": {
      "op": "SUB"
    },
    "2462": {
      "fn": "LeveragedTrading.getBtcdownBalance",
      "offset": [
        8057,
        8064
      ],
      "op": "AND",
      "path": "8"
    },
    "2463": {
      "fn": "LeveragedTrading.getBtcdownBalance",
      "offset": [
        8057,
        8064
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2464": {
      "fn": "LeveragedTrading.getBtcdownBalance",
      "offset": [
        8057,
        8074
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x70A08231"
    },
    "2469": {
      "fn": "LeveragedTrading.getBtcdownBalance",
      "offset": [
        8057,
        8074
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2470": {
      "fn": "LeveragedTrading.getBtcdownBalance",
      "offset": [
        8057,
        8086
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x30B"
    },
    "2474": {
      "fn": "LeveragedTrading.getBtcdownBalance",
      "offset": [
        8057,
        8086
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2475": {
      "fn": "LeveragedTrading.getBtcdownBalance",
      "offset": [
        8075,
        8085
      ],
      "op": "CALLER",
      "path": "8"
    },
    "2476": {
      "fn": "LeveragedTrading.getBtcdownBalance",
      "offset": [
        8075,
        8085
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2477": {
      "fn": "LeveragedTrading.getBtcdownBalance",
      "offset": [
        8057,
        8086
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "2479": {
      "fn": "LeveragedTrading.getBtcdownBalance",
      "offset": [
        8057,
        8086
      ],
      "op": "ADD",
      "path": "8"
    },
    "2480": {
      "fn": "LeveragedTrading.getBtcdownBalance",
      "offset": [
        8057,
        8086
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xF70"
    },
    "2484": {
      "fn": "LeveragedTrading.getBtcdownBalance",
      "jump": "i",
      "offset": [
        8057,
        8086
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2485": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4148,
        4634
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2486": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4217,
        4243
      ],
      "op": "PUSH3",
      "path": "8",
      "statement": 28,
      "value": "0x9BF"
    },
    "2490": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4217,
        4241
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x3FE"
    },
    "2494": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "jump": "i",
      "offset": [
        4217,
        4243
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2495": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4217,
        4243
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2496": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4253,
        4258
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 29,
      "value": "0xA"
    },
    "2498": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4253,
        4258
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2499": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4253,
        4286
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2501": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4253,
        4286
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2502": {
      "op": "PUSH4",
      "value": "0x852CD8D"
    },
    "2507": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "2509": {
      "op": "SHL"
    },
    "2510": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4253,
        4286
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2511": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4253,
        4286
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2512": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2514": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2516": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2518": {
      "op": "SHL"
    },
    "2519": {
      "op": "SUB"
    },
    "2520": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4253,
        4258
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2521": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4253,
        4258
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2522": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4253,
        4258
      ],
      "op": "AND",
      "path": "8"
    },
    "2523": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4253,
        4258
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2524": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4253,
        4263
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x42966C68"
    },
    "2529": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4253,
        4263
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2530": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4253,
        4286
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x9F1"
    },
    "2534": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4253,
        4286
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2535": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4264,
        4285
      ],
      "op": "DUP5",
      "path": "8"
    },
    "2536": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4264,
        4285
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2537": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4253,
        4286
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "2539": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4253,
        4286
      ],
      "op": "ADD",
      "path": "8"
    },
    "2540": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4253,
        4286
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x10B5"
    },
    "2544": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "jump": "i",
      "offset": [
        4253,
        4286
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2545": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4253,
        4286
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2546": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4253,
        4286
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2548": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4253,
        4286
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2550": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4253,
        4286
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2551": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4253,
        4286
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2552": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4253,
        4286
      ],
      "op": "DUP4",
      "path": "8"
    },
    "2553": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4253,
        4286
      ],
      "op": "SUB",
      "path": "8"
    },
    "2554": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4253,
        4286
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2555": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4253,
        4286
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2557": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4253,
        4286
      ],
      "op": "DUP8",
      "path": "8"
    },
    "2558": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4253,
        4286
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2559": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4253,
        4286
      ],
      "op": "EXTCODESIZE",
      "path": "8"
    },
    "2560": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4253,
        4286
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2561": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4253,
        4286
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2562": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4253,
        4286
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2563": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4253,
        4286
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xA0C"
    },
    "2567": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4253,
        4286
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2568": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4253,
        4286
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2570": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4253,
        4286
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2571": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4253,
        4286
      ],
      "op": "REVERT",
      "path": "8"
    },
    "2572": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4253,
        4286
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2573": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4253,
        4286
      ],
      "op": "POP",
      "path": "8"
    },
    "2574": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4253,
        4286
      ],
      "op": "GAS",
      "path": "8"
    },
    "2575": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4253,
        4286
      ],
      "op": "CALL",
      "path": "8"
    },
    "2576": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4253,
        4286
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2577": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4253,
        4286
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2578": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4253,
        4286
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2579": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4253,
        4286
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xA21"
    },
    "2583": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4253,
        4286
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2584": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4253,
        4286
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "2585": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4253,
        4286
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2587": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4253,
        4286
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2588": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4253,
        4286
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "2589": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4253,
        4286
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "2590": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4253,
        4286
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2592": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4253,
        4286
      ],
      "op": "REVERT",
      "path": "8"
    },
    "2593": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4253,
        4286
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2594": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4253,
        4286
      ],
      "op": "POP",
      "path": "8"
    },
    "2595": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4253,
        4286
      ],
      "op": "POP",
      "path": "8"
    },
    "2596": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4253,
        4286
      ],
      "op": "POP",
      "path": "8"
    },
    "2597": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4253,
        4286
      ],
      "op": "POP",
      "path": "8"
    },
    "2598": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4310,
        4325
      ],
      "op": "PUSH3",
      "path": "8",
      "statement": 30,
      "value": "0xA2F"
    },
    "2602": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4310,
        4323
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xABB"
    },
    "2606": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "jump": "i",
      "offset": [
        4310,
        4325
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2607": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4310,
        4325
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2608": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4297,
        4307
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "2610": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4297,
        4325
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2611": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4297,
        4325
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2612": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4297,
        4325
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "2613": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4335,
        4353
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2615": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4335,
        4353
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2616": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4356,
        4406
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xA4E"
    },
    "2620": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4356,
        4406
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2621": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4398,
        4405
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xF4240"
    },
    "2625": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4398,
        4405
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2626": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4356,
        4393
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x52B"
    },
    "2630": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4356,
        4393
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2631": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4356,
        4377
      ],
      "op": "DUP6",
      "path": "8"
    },
    "2632": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4356,
        4377
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2633": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4356,
        4381
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xD49"
    },
    "2637": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "jump": "i",
      "offset": [
        4356,
        4393
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2638": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4356,
        4406
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2639": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4431,
        4442
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 31,
      "value": "0x5"
    },
    "2641": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4431,
        4442
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2642": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4335,
        4406
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2643": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4335,
        4406
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2644": {
      "op": "POP"
    },
    "2645": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4431,
        4469
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xA60"
    },
    "2649": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4431,
        4469
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2650": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4447,
        4468
      ],
      "op": "DUP4",
      "path": "8"
    },
    "2651": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4431,
        4446
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xCE7"
    },
    "2655": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "jump": "i",
      "offset": [
        4431,
        4469
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2656": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4431,
        4469
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2657": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4417,
        4428
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x5"
    },
    "2659": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4417,
        4469
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "2660": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4497,
        4512
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 32,
      "value": "0x3"
    },
    "2662": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4497,
        4512
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2663": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4497,
        4528
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xA72"
    },
    "2667": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4497,
        4528
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2668": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4517,
        4527
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2669": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4497,
        4516
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xCE7"
    },
    "2673": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "jump": "i",
      "offset": [
        4497,
        4528
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2674": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4497,
        4528
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2675": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4479,
        4494
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "2677": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4479,
        4528
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "2678": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4560,
        4571
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x8"
    },
    "2680": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4560,
        4571
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2681": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4589,
        4626
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 33,
      "value": "0x40"
    },
    "2683": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4589,
        4626
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2684": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "2689": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2691": {
      "op": "SHL"
    },
    "2692": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4589,
        4626
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2693": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4589,
        4626
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2694": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4560,
        4571
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x100"
    },
    "2697": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4560,
        4571
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2698": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4560,
        4571
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2699": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4560,
        4571
      ],
      "op": "DIV",
      "path": "8"
    },
    "2700": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2702": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2704": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2706": {
      "op": "SHL"
    },
    "2707": {
      "op": "SUB"
    },
    "2708": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4560,
        4571
      ],
      "op": "AND",
      "path": "8"
    },
    "2709": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4560,
        4571
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2710": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4560,
        4571
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2711": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4560,
        4571
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2712": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4589,
        4602
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xA9059CBB"
    },
    "2717": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4589,
        4602
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2718": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4589,
        4626
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x799"
    },
    "2722": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4589,
        4626
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2723": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4603,
        4613
      ],
      "op": "CALLER",
      "path": "8"
    },
    "2724": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4603,
        4613
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2725": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4615,
        4625
      ],
      "op": "DUP7",
      "path": "8"
    },
    "2726": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4615,
        4625
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2727": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4589,
        4626
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "2729": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4589,
        4626
      ],
      "op": "ADD",
      "path": "8"
    },
    "2730": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4589,
        4626
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xFA8"
    },
    "2734": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "jump": "i",
      "offset": [
        4589,
        4626
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2735": {
      "offset": [
        2043,
        2077
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2736": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        2043,
        2077
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "2738": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        2043,
        2077
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2739": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        2043,
        2077
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2740": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "jump": "o",
      "offset": [
        2043,
        2077
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2741": {
      "offset": [
        1937,
        1972
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2742": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        1937,
        1972
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "2744": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        1937,
        1972
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2745": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        1937,
        1972
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2746": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "jump": "o",
      "offset": [
        1937,
        1972
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2747": {
      "fn": "LeveragedTrading.getBtcUpPrice",
      "offset": [
        6450,
        6607
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2748": {
      "fn": "LeveragedTrading.getBtcUpPrice",
      "offset": [
        6496,
        6503
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2750": {
      "fn": "LeveragedTrading.getBtcUpPrice",
      "offset": [
        6522,
        6533
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 34,
      "value": "0x5"
    },
    "2752": {
      "fn": "LeveragedTrading.getBtcUpPrice",
      "offset": [
        6522,
        6533
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2753": {
      "fn": "LeveragedTrading.getBtcUpPrice",
      "offset": [
        6537,
        6538
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2755": {
      "branch": 61,
      "fn": "LeveragedTrading.getBtcUpPrice",
      "offset": [
        6522,
        6538
      ],
      "op": "EQ",
      "path": "8"
    },
    "2756": {
      "fn": "LeveragedTrading.getBtcUpPrice",
      "offset": [
        6522,
        6600
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xAE9"
    },
    "2760": {
      "branch": 61,
      "fn": "LeveragedTrading.getBtcUpPrice",
      "offset": [
        6522,
        6600
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2761": {
      "fn": "LeveragedTrading.getBtcUpPrice",
      "offset": [
        6555,
        6600
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x532"
    },
    "2765": {
      "fn": "LeveragedTrading.getBtcUpPrice",
      "offset": [
        6588,
        6599
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x5"
    },
    "2767": {
      "fn": "LeveragedTrading.getBtcUpPrice",
      "offset": [
        6588,
        6599
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2768": {
      "fn": "LeveragedTrading.getBtcUpPrice",
      "offset": [
        6555,
        6583
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x52B"
    },
    "2772": {
      "fn": "LeveragedTrading.getBtcUpPrice",
      "offset": [
        6575,
        6582
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xF4240"
    },
    "2776": {
      "fn": "LeveragedTrading.getBtcUpPrice",
      "offset": [
        6555,
        6570
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "2778": {
      "fn": "LeveragedTrading.getBtcUpPrice",
      "offset": [
        6555,
        6570
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2779": {
      "fn": "LeveragedTrading.getBtcUpPrice",
      "offset": [
        6555,
        6574
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xD49"
    },
    "2783": {
      "fn": "LeveragedTrading.getBtcUpPrice",
      "offset": [
        6555,
        6574
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2784": {
      "fn": "LeveragedTrading.getBtcUpPrice",
      "offset": [
        6555,
        6583
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2785": {
      "fn": "LeveragedTrading.getBtcUpPrice",
      "offset": [
        6555,
        6583
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2786": {
      "fn": "LeveragedTrading.getBtcUpPrice",
      "offset": [
        6555,
        6583
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xFFFFFFFF"
    },
    "2791": {
      "fn": "LeveragedTrading.getBtcUpPrice",
      "offset": [
        6555,
        6583
      ],
      "op": "AND",
      "path": "8"
    },
    "2792": {
      "fn": "LeveragedTrading.getBtcUpPrice",
      "jump": "i",
      "offset": [
        6555,
        6583
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2793": {
      "fn": "LeveragedTrading.getBtcUpPrice",
      "offset": [
        6522,
        6600
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2794": {
      "op": "POP"
    },
    "2795": {
      "fn": "LeveragedTrading.getBtcUpPrice",
      "offset": [
        6542,
        6552
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "2797": {
      "fn": "LeveragedTrading.getBtcUpPrice",
      "offset": [
        6542,
        6552
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2798": {
      "fn": "LeveragedTrading.getBtcUpPrice",
      "offset": [
        6542,
        6552
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2799": {
      "fn": "LeveragedTrading.getBtcUpPrice",
      "jump": "o",
      "offset": [
        6450,
        6607
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2800": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2801": {
      "offset": [
        1196,
        1208
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xAFA"
    },
    "2805": {
      "offset": [
        1196,
        1206
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xCF5"
    },
    "2809": {
      "jump": "i",
      "offset": [
        1196,
        1208
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2810": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1196,
        1208
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2811": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2813": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2815": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2817": {
      "op": "SHL"
    },
    "2818": {
      "op": "SUB"
    },
    "2819": {
      "offset": [
        1185,
        1208
      ],
      "op": "AND",
      "path": "0"
    },
    "2820": {
      "offset": [
        1185,
        1192
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xB0D"
    },
    "2824": {
      "offset": [
        1185,
        1190
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x53F"
    },
    "2828": {
      "jump": "i",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2829": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2830": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2832": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2834": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2836": {
      "op": "SHL"
    },
    "2837": {
      "op": "SUB"
    },
    "2838": {
      "offset": [
        1185,
        1208
      ],
      "op": "AND",
      "path": "0"
    },
    "2839": {
      "branch": 66,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "2840": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xB36"
    },
    "2844": {
      "branch": 66,
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2845": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2847": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2848": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2852": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2854": {
      "op": "SHL"
    },
    "2855": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2856": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2857": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2859": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "2860": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x4E6"
    },
    "2864": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2865": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x1049"
    },
    "2869": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2870": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2871": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2873": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2875": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2877": {
      "op": "SHL"
    },
    "2878": {
      "op": "SUB"
    },
    "2879": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1934,
        1956
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 35
    },
    "2880": {
      "branch": 67,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1934,
        1956
      ],
      "op": "AND",
      "path": "0"
    },
    "2881": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xB5F"
    },
    "2885": {
      "branch": 67,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2886": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2888": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2889": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2893": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2895": {
      "op": "SHL"
    },
    "2896": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2897": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2898": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2900": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "ADD",
      "path": "0"
    },
    "2901": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x4E6"
    },
    "2905": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2906": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xFCC"
    },
    "2910": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1926,
        1999
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2911": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2912": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2028
      ],
      "op": "PUSH3",
      "path": "0",
      "statement": 36,
      "value": "0xB6A"
    },
    "2916": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2019,
        2027
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2917": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2018
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xCF9"
    },
    "2921": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2009,
        2028
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2922": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2028
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2923": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "POP",
      "path": "0"
    },
    "2924": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2925": {
      "offset": [
        2269,
        2300
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2926": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2269,
        2300
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x7"
    },
    "2928": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2269,
        2300
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2929": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2269,
        2300
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2930": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        2269,
        2300
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2931": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3052,
        3585
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2932": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3109,
        3135
      ],
      "op": "PUSH3",
      "path": "8",
      "statement": 37,
      "value": "0xB7D"
    },
    "2936": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3109,
        3133
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x3FE"
    },
    "2940": {
      "fn": "LeveragedTrading.issueBtcUp",
      "jump": "i",
      "offset": [
        3109,
        3135
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2941": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3109,
        3135
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2942": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3167,
        3182
      ],
      "op": "PUSH3",
      "path": "8",
      "statement": 38,
      "value": "0xB87"
    },
    "2946": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3167,
        3180
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xABB"
    },
    "2950": {
      "fn": "LeveragedTrading.issueBtcUp",
      "jump": "i",
      "offset": [
        3167,
        3182
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2951": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3167,
        3182
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2952": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3154,
        3164
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "2954": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3154,
        3182
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2955": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3154,
        3182
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2956": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3154,
        3182
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "2957": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3192,
        3221
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2959": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3192,
        3221
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2960": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3224,
        3263
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xBA3"
    },
    "2964": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3224,
        3263
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2965": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3224,
        3247
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x52B"
    },
    "2969": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3224,
        3234
      ],
      "op": "DUP5",
      "path": "8"
    },
    "2970": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3239,
        3246
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xF4240"
    },
    "2974": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3224,
        3238
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xD49"
    },
    "2978": {
      "fn": "LeveragedTrading.issueBtcUp",
      "jump": "i",
      "offset": [
        3224,
        3247
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2979": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3224,
        3263
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2980": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3274,
        3279
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 39,
      "value": "0xA"
    },
    "2982": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3274,
        3279
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2983": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3274,
        3307
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2985": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3274,
        3307
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2986": {
      "op": "PUSH4",
      "value": "0x140E25AD"
    },
    "2991": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "2993": {
      "op": "SHL"
    },
    "2994": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3274,
        3307
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2995": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3274,
        3307
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2996": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3192,
        3263
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2997": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3192,
        3263
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "2998": {
      "op": "POP"
    },
    "2999": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3001": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3003": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3005": {
      "op": "SHL"
    },
    "3006": {
      "op": "SUB"
    },
    "3007": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3274,
        3279
      ],
      "op": "AND",
      "path": "8"
    },
    "3008": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3274,
        3279
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3009": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3274,
        3284
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xA0712D68"
    },
    "3014": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3274,
        3284
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3015": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3274,
        3307
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xBD6"
    },
    "3019": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3274,
        3307
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3020": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3192,
        3263
      ],
      "op": "DUP5",
      "path": "8"
    },
    "3021": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3192,
        3263
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3022": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3274,
        3307
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "3024": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3274,
        3307
      ],
      "op": "ADD",
      "path": "8"
    },
    "3025": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3274,
        3307
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x10B5"
    },
    "3029": {
      "fn": "LeveragedTrading.issueBtcUp",
      "jump": "i",
      "offset": [
        3274,
        3307
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3030": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3274,
        3307
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3031": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3274,
        3307
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3033": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3274,
        3307
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3035": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3274,
        3307
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3036": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3274,
        3307
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3037": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3274,
        3307
      ],
      "op": "DUP4",
      "path": "8"
    },
    "3038": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3274,
        3307
      ],
      "op": "SUB",
      "path": "8"
    },
    "3039": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3274,
        3307
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3040": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3274,
        3307
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3042": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3274,
        3307
      ],
      "op": "DUP8",
      "path": "8"
    },
    "3043": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3274,
        3307
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3044": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3274,
        3307
      ],
      "op": "EXTCODESIZE",
      "path": "8"
    },
    "3045": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3274,
        3307
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "3046": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3274,
        3307
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3047": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3274,
        3307
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "3048": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3274,
        3307
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xBF1"
    },
    "3052": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3274,
        3307
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3053": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3274,
        3307
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3055": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3274,
        3307
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3056": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3274,
        3307
      ],
      "op": "REVERT",
      "path": "8"
    },
    "3057": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3274,
        3307
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3058": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3274,
        3307
      ],
      "op": "POP",
      "path": "8"
    },
    "3059": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3274,
        3307
      ],
      "op": "GAS",
      "path": "8"
    },
    "3060": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3274,
        3307
      ],
      "op": "CALL",
      "path": "8"
    },
    "3061": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3274,
        3307
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "3062": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3274,
        3307
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3063": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3274,
        3307
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "3064": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3274,
        3307
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xC06"
    },
    "3068": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3274,
        3307
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3069": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3274,
        3307
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "3070": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3274,
        3307
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3072": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3274,
        3307
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3073": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3274,
        3307
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "3074": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3274,
        3307
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "3075": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3274,
        3307
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3077": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3274,
        3307
      ],
      "op": "REVERT",
      "path": "8"
    },
    "3078": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3274,
        3307
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3079": {
      "op": "POP"
    },
    "3080": {
      "op": "POP"
    },
    "3081": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3331,
        3342
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 40,
      "value": "0x5"
    },
    "3083": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3331,
        3342
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3084": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3331,
        3369
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xC1A"
    },
    "3088": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3331,
        3369
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "3089": {
      "op": "POP"
    },
    "3090": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3331,
        3342
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3091": {
      "op": "POP"
    },
    "3092": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3347,
        3368
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3093": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3331,
        3346
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xCD2"
    },
    "3097": {
      "fn": "LeveragedTrading.issueBtcUp",
      "jump": "i",
      "offset": [
        3331,
        3369
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3098": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3331,
        3369
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3099": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3317,
        3328
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x5"
    },
    "3101": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3317,
        3369
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "3102": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3397,
        3412
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 41,
      "value": "0x3"
    },
    "3104": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3397,
        3412
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3105": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3397,
        3428
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xC2C"
    },
    "3109": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3397,
        3428
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3110": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3417,
        3427
      ],
      "op": "DUP4",
      "path": "8"
    },
    "3111": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3397,
        3416
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xCD2"
    },
    "3115": {
      "fn": "LeveragedTrading.issueBtcUp",
      "jump": "i",
      "offset": [
        3397,
        3428
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3116": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3397,
        3428
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3117": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3379,
        3394
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "3119": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3379,
        3428
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "3120": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3460,
        3471
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x8"
    },
    "3122": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3460,
        3471
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3123": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3490,
        3546
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 42,
      "value": "0x40"
    },
    "3125": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3490,
        3546
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3126": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "3131": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3133": {
      "op": "SHL"
    },
    "3134": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3490,
        3546
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3135": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3490,
        3546
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3136": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3460,
        3471
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x100"
    },
    "3139": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3460,
        3471
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3140": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3460,
        3471
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3141": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3460,
        3471
      ],
      "op": "DIV",
      "path": "8"
    },
    "3142": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3144": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3146": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3148": {
      "op": "SHL"
    },
    "3149": {
      "op": "SUB"
    },
    "3150": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3460,
        3471
      ],
      "op": "AND",
      "path": "8"
    },
    "3151": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3460,
        3471
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3152": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3460,
        3471
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3153": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3460,
        3471
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3154": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3490,
        3507
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x23B872DD"
    },
    "3159": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3490,
        3507
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3160": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3490,
        3546
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x90D"
    },
    "3164": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3490,
        3546
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3165": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3508,
        3518
      ],
      "op": "CALLER",
      "path": "8"
    },
    "3166": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3508,
        3518
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3167": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3528,
        3532
      ],
      "op": "ADDRESS",
      "path": "8"
    },
    "3168": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3528,
        3532
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3169": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3535,
        3545
      ],
      "op": "DUP9",
      "path": "8"
    },
    "3170": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3535,
        3545
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3171": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3490,
        3546
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "3173": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3490,
        3546
      ],
      "op": "ADD",
      "path": "8"
    },
    "3174": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3490,
        3546
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xF84"
    },
    "3178": {
      "branch": 62,
      "fn": "LeveragedTrading.issueBtcUp",
      "jump": "i",
      "offset": [
        3490,
        3546
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3179": {
      "fn": "LeveragedTrading.getRebalanceAmount",
      "offset": [
        6189,
        6414
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3180": {
      "fn": "LeveragedTrading.getRebalanceAmount",
      "offset": [
        6258,
        6265
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3182": {
      "fn": "LeveragedTrading.getRebalanceAmount",
      "offset": [
        6277,
        6294
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3183": {
      "fn": "LeveragedTrading.getRebalanceAmount",
      "offset": [
        6297,
        6319
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xC79"
    },
    "3187": {
      "fn": "LeveragedTrading.getRebalanceAmount",
      "offset": [
        6310,
        6318
      ],
      "op": "DUP4",
      "path": "8"
    },
    "3188": {
      "fn": "LeveragedTrading.getRebalanceAmount",
      "offset": [
        6297,
        6309
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xD65"
    },
    "3192": {
      "fn": "LeveragedTrading.getRebalanceAmount",
      "jump": "i",
      "offset": [
        6297,
        6319
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3193": {
      "fn": "LeveragedTrading.getRebalanceAmount",
      "offset": [
        6297,
        6319
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3194": {
      "fn": "LeveragedTrading.getRebalanceAmount",
      "offset": [
        6277,
        6319
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3195": {
      "fn": "LeveragedTrading.getRebalanceAmount",
      "offset": [
        6277,
        6319
      ],
      "op": "POP",
      "path": "8"
    },
    "3196": {
      "fn": "LeveragedTrading.getRebalanceAmount",
      "offset": [
        6337,
        6407
      ],
      "op": "PUSH3",
      "path": "8",
      "statement": 43,
      "value": "0xCA9"
    },
    "3200": {
      "fn": "LeveragedTrading.getRebalanceAmount",
      "offset": [
        6399,
        6406
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xF4240"
    },
    "3204": {
      "fn": "LeveragedTrading.getRebalanceAmount",
      "offset": [
        6337,
        6394
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x52B"
    },
    "3208": {
      "fn": "LeveragedTrading.getRebalanceAmount",
      "offset": [
        6381,
        6393
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xC92"
    },
    "3212": {
      "fn": "LeveragedTrading.getRebalanceAmount",
      "offset": [
        6383,
        6392
      ],
      "op": "DUP5",
      "path": "8"
    },
    "3213": {
      "fn": "LeveragedTrading.getRebalanceAmount",
      "offset": [
        6381,
        6382
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xDCF"
    },
    "3217": {
      "fn": "LeveragedTrading.getRebalanceAmount",
      "jump": "i",
      "offset": [
        6381,
        6393
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3218": {
      "fn": "LeveragedTrading.getRebalanceAmount",
      "offset": [
        6381,
        6393
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3219": {
      "fn": "LeveragedTrading.getRebalanceAmount",
      "offset": [
        6337,
        6376
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xCA2"
    },
    "3223": {
      "fn": "LeveragedTrading.getRebalanceAmount",
      "offset": [
        6341,
        6356
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "3225": {
      "fn": "LeveragedTrading.getRebalanceAmount",
      "offset": [
        6341,
        6356
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3226": {
      "fn": "LeveragedTrading.getRebalanceAmount",
      "offset": [
        6358,
        6375
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "3228": {
      "fn": "LeveragedTrading.getRebalanceAmount",
      "offset": [
        6358,
        6375
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3229": {
      "fn": "LeveragedTrading.getRebalanceAmount",
      "offset": [
        6337,
        6340
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xE4F"
    },
    "3233": {
      "fn": "LeveragedTrading.getRebalanceAmount",
      "jump": "i",
      "offset": [
        6337,
        6376
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3234": {
      "fn": "LeveragedTrading.getRebalanceAmount",
      "offset": [
        6337,
        6376
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3235": {
      "fn": "LeveragedTrading.getRebalanceAmount",
      "offset": [
        6337,
        6380
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3236": {
      "fn": "LeveragedTrading.getRebalanceAmount",
      "offset": [
        6337,
        6380
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xD49"
    },
    "3240": {
      "fn": "LeveragedTrading.getRebalanceAmount",
      "jump": "i",
      "offset": [
        6337,
        6394
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3241": {
      "fn": "LeveragedTrading.getRebalanceAmount",
      "offset": [
        6337,
        6407
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3242": {
      "fn": "LeveragedTrading.getRebalanceAmount",
      "offset": [
        6330,
        6407
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3243": {
      "fn": "LeveragedTrading.getRebalanceAmount",
      "offset": [
        6330,
        6407
      ],
      "op": "POP",
      "path": "8"
    },
    "3244": {
      "fn": "LeveragedTrading.getRebalanceAmount",
      "offset": [
        6330,
        6407
      ],
      "op": "POP",
      "path": "8"
    },
    "3245": {
      "fn": "LeveragedTrading.getRebalanceAmount",
      "offset": [
        6189,
        6414
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3246": {
      "fn": "LeveragedTrading.getRebalanceAmount",
      "offset": [
        6189,
        6414
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3247": {
      "fn": "LeveragedTrading.getRebalanceAmount",
      "offset": [
        6189,
        6414
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3248": {
      "fn": "LeveragedTrading.getRebalanceAmount",
      "offset": [
        6189,
        6414
      ],
      "op": "POP",
      "path": "8"
    },
    "3249": {
      "fn": "LeveragedTrading.getRebalanceAmount",
      "jump": "o",
      "offset": [
        6189,
        6414
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3250": {
      "fn": "LeveragedTrading.getSign",
      "offset": [
        5990,
        6182
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3251": {
      "fn": "LeveragedTrading.getSign",
      "offset": [
        6048,
        6054
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3253": {
      "fn": "LeveragedTrading.getSign",
      "offset": [
        6081,
        6093
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x7"
    },
    "3255": {
      "fn": "LeveragedTrading.getSign",
      "offset": [
        6081,
        6093
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3256": {
      "fn": "LeveragedTrading.getSign",
      "offset": [
        6070,
        6078
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3257": {
      "branch": 63,
      "fn": "LeveragedTrading.getSign",
      "offset": [
        6070,
        6093
      ],
      "op": "GT",
      "path": "8"
    },
    "3258": {
      "fn": "LeveragedTrading.getSign",
      "offset": [
        6066,
        6176
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "3259": {
      "fn": "LeveragedTrading.getSign",
      "offset": [
        6066,
        6176
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xCC8"
    },
    "3263": {
      "branch": 63,
      "fn": "LeveragedTrading.getSign",
      "offset": [
        6066,
        6176
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3264": {
      "op": "POP"
    },
    "3265": {
      "fn": "LeveragedTrading.getSign",
      "offset": [
        6116,
        6117
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 44,
      "value": "0x1"
    },
    "3267": {
      "fn": "LeveragedTrading.getSign",
      "offset": [
        6109,
        6117
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xCAD"
    },
    "3271": {
      "fn": "LeveragedTrading.getSign",
      "offset": [
        6109,
        6117
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3272": {
      "fn": "LeveragedTrading.getSign",
      "offset": [
        6066,
        6176
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3273": {
      "op": "POP"
    },
    "3274": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3276": {
      "op": "NOT"
    },
    "3277": {
      "fn": "LeveragedTrading.getSign",
      "offset": [
        6156,
        6165
      ],
      "op": "PUSH3",
      "path": "8",
      "statement": 45,
      "value": "0xCAD"
    },
    "3281": {
      "fn": "LeveragedTrading.getSign",
      "offset": [
        6156,
        6165
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3282": {
      "fn": "SafeMath.add",
      "offset": [
        2672,
        2768
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3283": {
      "fn": "SafeMath.add",
      "offset": [
        2730,
        2737
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3285": {
      "fn": "SafeMath.add",
      "offset": [
        2756,
        2761
      ],
      "op": "PUSH3",
      "path": "6",
      "statement": 46,
      "value": "0xCE0"
    },
    "3289": {
      "fn": "SafeMath.add",
      "offset": [
        2760,
        2761
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3290": {
      "fn": "SafeMath.add",
      "offset": [
        2756,
        2757
      ],
      "op": "DUP5",
      "path": "6"
    },
    "3291": {
      "fn": "SafeMath.add",
      "offset": [
        2756,
        2761
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0x10BE"
    },
    "3295": {
      "fn": "SafeMath.add",
      "jump": "i",
      "offset": [
        2756,
        2761
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3296": {
      "fn": "SafeMath.add",
      "offset": [
        2756,
        2761
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3297": {
      "fn": "SafeMath.add",
      "offset": [
        2749,
        2761
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "3298": {
      "fn": "SafeMath.add",
      "offset": [
        2672,
        2768
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "3299": {
      "op": "POP"
    },
    "3300": {
      "op": "POP"
    },
    "3301": {
      "op": "POP"
    },
    "3302": {
      "fn": "SafeMath.add",
      "jump": "o",
      "offset": [
        2672,
        2768
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3303": {
      "fn": "SafeMath.sub",
      "offset": [
        3039,
        3135
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3304": {
      "fn": "SafeMath.sub",
      "offset": [
        3097,
        3104
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3306": {
      "fn": "SafeMath.sub",
      "offset": [
        3123,
        3128
      ],
      "op": "PUSH3",
      "path": "6",
      "statement": 47,
      "value": "0xCE0"
    },
    "3310": {
      "fn": "SafeMath.sub",
      "offset": [
        3127,
        3128
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3311": {
      "fn": "SafeMath.sub",
      "offset": [
        3123,
        3124
      ],
      "op": "DUP5",
      "path": "6"
    },
    "3312": {
      "fn": "SafeMath.sub",
      "offset": [
        3123,
        3128
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0x1254"
    },
    "3316": {
      "fn": "SafeMath.sub",
      "jump": "i",
      "offset": [
        3123,
        3128
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3317": {
      "fn": "Context._msgSender",
      "offset": [
        586,
        682
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3318": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "5",
      "statement": 48
    },
    "3319": {
      "fn": "Context._msgSender",
      "offset": [
        586,
        682
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3320": {
      "fn": "Context._msgSender",
      "jump": "o",
      "offset": [
        586,
        682
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3321": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3322": {
      "fn": "Ownable._setOwner",
      "offset": [
        2096,
        2112
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3324": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3325": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3326": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3328": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3330": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3332": {
      "op": "SHL"
    },
    "3333": {
      "op": "SUB"
    },
    "3334": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 49
    },
    "3335": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3336": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "AND",
      "path": "0"
    },
    "3337": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3339": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3341": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3343": {
      "op": "SHL"
    },
    "3344": {
      "op": "SUB"
    },
    "3345": {
      "op": "NOT"
    },
    "3346": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3347": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "AND",
      "path": "0"
    },
    "3348": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3349": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "OR",
      "path": "0"
    },
    "3350": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3351": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3352": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 50,
      "value": "0x40"
    },
    "3354": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3355": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3356": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3357": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3358": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "AND",
      "path": "0"
    },
    "3359": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3360": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3361": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3362": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "3395": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3396": {
      "fn": "Ownable._setOwner",
      "offset": [
        2096,
        2112
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3397": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "LOG3",
      "path": "0"
    },
    "3398": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "POP",
      "path": "0"
    },
    "3399": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "POP",
      "path": "0"
    },
    "3400": {
      "fn": "Ownable._setOwner",
      "jump": "o",
      "offset": [
        2041,
        2210
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3401": {
      "fn": "SafeMath.mul",
      "offset": [
        3382,
        3478
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3402": {
      "fn": "SafeMath.mul",
      "offset": [
        3440,
        3447
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3404": {
      "fn": "SafeMath.mul",
      "offset": [
        3466,
        3471
      ],
      "op": "PUSH3",
      "path": "6",
      "statement": 51,
      "value": "0xCE0"
    },
    "3408": {
      "fn": "SafeMath.mul",
      "offset": [
        3470,
        3471
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3409": {
      "fn": "SafeMath.mul",
      "offset": [
        3466,
        3467
      ],
      "op": "DUP5",
      "path": "6"
    },
    "3410": {
      "fn": "SafeMath.mul",
      "offset": [
        3466,
        3471
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0x1232"
    },
    "3414": {
      "fn": "SafeMath.mul",
      "jump": "i",
      "offset": [
        3466,
        3471
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3415": {
      "fn": "SafeMath.div",
      "offset": [
        3767,
        3863
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3416": {
      "fn": "SafeMath.div",
      "offset": [
        3825,
        3832
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3418": {
      "fn": "SafeMath.div",
      "offset": [
        3851,
        3856
      ],
      "op": "PUSH3",
      "path": "6",
      "statement": 52,
      "value": "0xCE0"
    },
    "3422": {
      "fn": "SafeMath.div",
      "offset": [
        3855,
        3856
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3423": {
      "fn": "SafeMath.div",
      "offset": [
        3851,
        3852
      ],
      "op": "DUP5",
      "path": "6"
    },
    "3424": {
      "fn": "SafeMath.div",
      "offset": [
        3851,
        3856
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0x10D9"
    },
    "3428": {
      "fn": "SafeMath.div",
      "jump": "i",
      "offset": [
        3851,
        3856
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3429": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        7545,
        7863
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3430": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        7608,
        7615
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3432": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        7659,
        7671
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x7"
    },
    "3434": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        7659,
        7671
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3435": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        7648,
        7656
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3436": {
      "branch": 64,
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        7648,
        7671
      ],
      "op": "GT",
      "path": "8"
    },
    "3437": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        7644,
        7856
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "3438": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        7644,
        7856
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xDA8"
    },
    "3442": {
      "branch": 64,
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        7644,
        7856
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3443": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        7694,
        7746
      ],
      "op": "PUSH3",
      "path": "8",
      "statement": 53,
      "value": "0xDA0"
    },
    "3447": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        7738,
        7745
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xF4240"
    },
    "3451": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        7694,
        7733
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xD99"
    },
    "3455": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        7720,
        7732
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x7"
    },
    "3457": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        7720,
        7732
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3458": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        7694,
        7715
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x52B"
    },
    "3462": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        7707,
        7714
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xF4240"
    },
    "3466": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        7694,
        7702
      ],
      "op": "DUP8",
      "path": "8"
    },
    "3467": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        7694,
        7706
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xD49"
    },
    "3471": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        7694,
        7706
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3472": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        7694,
        7715
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3473": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        7694,
        7715
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3474": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        7694,
        7715
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xFFFFFFFF"
    },
    "3479": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        7694,
        7715
      ],
      "op": "AND",
      "path": "8"
    },
    "3480": {
      "fn": "LeveragedTrading.getPriceDiff",
      "jump": "i",
      "offset": [
        7694,
        7715
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3481": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        7694,
        7733
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3482": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        7694,
        7737
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3483": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        7694,
        7737
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xCE7"
    },
    "3487": {
      "fn": "LeveragedTrading.getPriceDiff",
      "jump": "i",
      "offset": [
        7694,
        7746
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3488": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        7694,
        7746
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3489": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        7687,
        7746
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3490": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        7687,
        7746
      ],
      "op": "POP",
      "path": "8"
    },
    "3491": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        7687,
        7746
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xCAD"
    },
    "3495": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        7687,
        7746
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3496": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        7644,
        7856
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3497": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        7793,
        7845
      ],
      "op": "PUSH3",
      "path": "8",
      "statement": 54,
      "value": "0xDA0"
    },
    "3501": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        7837,
        7844
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xF4240"
    },
    "3505": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        7793,
        7832
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xD99"
    },
    "3509": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        7823,
        7831
      ],
      "op": "DUP5",
      "path": "8"
    },
    "3510": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        7793,
        7818
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x52B"
    },
    "3514": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        7810,
        7817
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xF4240"
    },
    "3518": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        7793,
        7805
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x7"
    },
    "3520": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        7793,
        7805
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3521": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        7793,
        7809
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xD49"
    },
    "3525": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        7793,
        7809
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3526": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        7793,
        7818
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3527": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        7793,
        7818
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3528": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        7793,
        7818
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xFFFFFFFF"
    },
    "3533": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        7793,
        7818
      ],
      "op": "AND",
      "path": "8"
    },
    "3534": {
      "fn": "LeveragedTrading.getPriceDiff",
      "jump": "i",
      "offset": [
        7793,
        7818
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3535": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7314,
        7539
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3536": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7359,
        7366
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3538": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7359,
        7366
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3539": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7446,
        7451
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xDDF"
    },
    "3543": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7450,
        7451
      ],
      "op": "DUP4",
      "path": "8"
    },
    "3544": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7446,
        7447
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "3546": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7446,
        7451
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x1232"
    },
    "3550": {
      "fn": "LeveragedTrading.L",
      "jump": "i",
      "offset": [
        7446,
        7451
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3551": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7446,
        7451
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3552": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7434,
        7441
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xF4240"
    },
    "3556": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7425,
        7431
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xDF0"
    },
    "3560": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7430,
        7431
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "3562": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7425,
        7426
      ],
      "op": "DUP7",
      "path": "8"
    },
    "3563": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7425,
        7431
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x1147"
    },
    "3567": {
      "fn": "LeveragedTrading.L",
      "jump": "i",
      "offset": [
        7425,
        7431
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3568": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7425,
        7431
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3569": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7425,
        7441
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xDFC"
    },
    "3573": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7425,
        7441
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3574": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7425,
        7441
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3575": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7425,
        7441
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x10D9"
    },
    "3579": {
      "fn": "LeveragedTrading.L",
      "jump": "i",
      "offset": [
        7425,
        7441
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3580": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7425,
        7441
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3581": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7420,
        7442
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xE09"
    },
    "3585": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7420,
        7442
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3586": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7420,
        7421
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x9"
    },
    "3588": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7420,
        7442
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x1232"
    },
    "3592": {
      "fn": "LeveragedTrading.L",
      "jump": "i",
      "offset": [
        7420,
        7442
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3593": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7420,
        7442
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3594": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7420,
        7451
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xE15"
    },
    "3598": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7420,
        7451
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3599": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7420,
        7451
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3600": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7420,
        7451
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x10BE"
    },
    "3604": {
      "fn": "LeveragedTrading.L",
      "jump": "i",
      "offset": [
        7420,
        7451
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3605": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7420,
        7451
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3606": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7420,
        7461
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xE24"
    },
    "3610": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7420,
        7461
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3611": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7454,
        7461
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xF4240"
    },
    "3615": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7420,
        7461
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x10BE"
    },
    "3619": {
      "fn": "LeveragedTrading.L",
      "jump": "i",
      "offset": [
        7420,
        7461
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3620": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7420,
        7461
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3621": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7404,
        7461
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3622": {
      "op": "POP"
    },
    "3623": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7485,
        7493
      ],
      "op": "PUSH5",
      "path": "8",
      "value": "0xE8D4A51000"
    },
    "3629": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7521,
        7532
      ],
      "op": "PUSH3",
      "path": "8",
      "statement": 55,
      "value": "0xE38"
    },
    "3633": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7404,
        7461
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3634": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7485,
        7493
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3635": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7521,
        7532
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x10D9"
    },
    "3639": {
      "fn": "LeveragedTrading.L",
      "jump": "i",
      "offset": [
        7521,
        7532
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3640": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7521,
        7532
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3641": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7511,
        7532
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xE47"
    },
    "3645": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7511,
        7532
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3646": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7511,
        7518
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xF4240"
    },
    "3650": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7511,
        7532
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x1254"
    },
    "3654": {
      "fn": "LeveragedTrading.L",
      "jump": "i",
      "offset": [
        7511,
        7532
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3655": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7511,
        7532
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3656": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7504,
        7532
      ],
      "op": "SWAP5",
      "path": "8"
    },
    "3657": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7314,
        7539
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "3658": {
      "op": "POP"
    },
    "3659": {
      "op": "POP"
    },
    "3660": {
      "op": "POP"
    },
    "3661": {
      "op": "POP"
    },
    "3662": {
      "fn": "LeveragedTrading.L",
      "jump": "o",
      "offset": [
        7314,
        7539
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3663": {
      "fn": "LeveragedTrading.min",
      "offset": [
        7203,
        7308
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3664": {
      "fn": "LeveragedTrading.min",
      "offset": [
        7261,
        7268
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3666": {
      "fn": "LeveragedTrading.min",
      "offset": [
        7292,
        7293
      ],
      "op": "DUP2",
      "path": "8",
      "statement": 56
    },
    "3667": {
      "fn": "LeveragedTrading.min",
      "offset": [
        7287,
        7288
      ],
      "op": "DUP4",
      "path": "8"
    },
    "3668": {
      "fn": "LeveragedTrading.min",
      "offset": [
        7287,
        7293
      ],
      "op": "GT",
      "path": "8"
    },
    "3669": {
      "branch": 65,
      "fn": "LeveragedTrading.min",
      "offset": [
        7287,
        7293
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "3670": {
      "fn": "LeveragedTrading.min",
      "offset": [
        7287,
        7301
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xE61"
    },
    "3674": {
      "branch": 65,
      "fn": "LeveragedTrading.min",
      "offset": [
        7287,
        7301
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3675": {
      "fn": "LeveragedTrading.min",
      "offset": [
        7300,
        7301
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3676": {
      "fn": "LeveragedTrading.min",
      "offset": [
        7287,
        7301
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xCE0"
    },
    "3680": {
      "fn": "LeveragedTrading.min",
      "offset": [
        7287,
        7301
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3681": {
      "fn": "LeveragedTrading.min",
      "offset": [
        7287,
        7301
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3682": {
      "op": "POP"
    },
    "3683": {
      "fn": "LeveragedTrading.min",
      "offset": [
        7296,
        7297
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3684": {
      "fn": "LeveragedTrading.min",
      "offset": [
        7296,
        7297
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3685": {
      "fn": "LeveragedTrading.min",
      "offset": [
        7203,
        7308
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3686": {
      "op": "POP"
    },
    "3687": {
      "fn": "LeveragedTrading.min",
      "jump": "o",
      "offset": [
        7203,
        7308
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3688": {
      "op": "JUMPDEST"
    },
    "3689": {
      "op": "PUSH2",
      "value": "0xFA6"
    },
    "3692": {
      "op": "DUP1"
    },
    "3693": {
      "op": "PUSH3",
      "value": "0x1285"
    },
    "3697": {
      "op": "DUP4"
    },
    "3698": {
      "op": "CODECOPY"
    },
    "3699": {
      "op": "ADD"
    },
    "3700": {
      "op": "SWAP1"
    },
    "3701": {
      "jump": "o",
      "op": "JUMP"
    },
    "3702": {
      "op": "JUMPDEST"
    },
    "3703": {
      "op": "PUSH2",
      "value": "0xFAA"
    },
    "3706": {
      "op": "DUP1"
    },
    "3707": {
      "op": "PUSH3",
      "value": "0x222B"
    },
    "3711": {
      "op": "DUP4"
    },
    "3712": {
      "op": "CODECOPY"
    },
    "3713": {
      "op": "ADD"
    },
    "3714": {
      "op": "SWAP1"
    },
    "3715": {
      "jump": "o",
      "op": "JUMP"
    },
    "3716": {
      "op": "JUMPDEST"
    },
    "3717": {
      "op": "DUP1"
    },
    "3718": {
      "op": "MLOAD"
    },
    "3719": {
      "op": "PUSH10",
      "value": "0xFFFFFFFFFFFFFFFFFFFF"
    },
    "3730": {
      "op": "DUP2"
    },
    "3731": {
      "op": "AND"
    },
    "3732": {
      "op": "DUP2"
    },
    "3733": {
      "op": "EQ"
    },
    "3734": {
      "op": "PUSH3",
      "value": "0xCAD"
    },
    "3738": {
      "op": "JUMPI"
    },
    "3739": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3741": {
      "op": "DUP1"
    },
    "3742": {
      "op": "REVERT"
    },
    "3743": {
      "op": "JUMPDEST"
    },
    "3744": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3746": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3748": {
      "op": "DUP3"
    },
    "3749": {
      "op": "DUP5"
    },
    "3750": {
      "op": "SUB"
    },
    "3751": {
      "op": "SLT"
    },
    "3752": {
      "op": "ISZERO"
    },
    "3753": {
      "op": "PUSH3",
      "value": "0xEB1"
    },
    "3757": {
      "op": "JUMPI"
    },
    "3758": {
      "op": "DUP1"
    },
    "3759": {
      "op": "DUP2"
    },
    "3760": {
      "op": "REVERT"
    },
    "3761": {
      "op": "JUMPDEST"
    },
    "3762": {
      "op": "DUP2"
    },
    "3763": {
      "op": "CALLDATALOAD"
    },
    "3764": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3766": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3768": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3770": {
      "op": "SHL"
    },
    "3771": {
      "op": "SUB"
    },
    "3772": {
      "op": "DUP2"
    },
    "3773": {
      "op": "AND"
    },
    "3774": {
      "op": "DUP2"
    },
    "3775": {
      "op": "EQ"
    },
    "3776": {
      "op": "PUSH3",
      "value": "0xCE0"
    },
    "3780": {
      "op": "JUMPI"
    },
    "3781": {
      "op": "DUP2"
    },
    "3782": {
      "op": "DUP3"
    },
    "3783": {
      "op": "REVERT"
    },
    "3784": {
      "op": "JUMPDEST"
    },
    "3785": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3787": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3789": {
      "op": "DUP3"
    },
    "3790": {
      "op": "DUP5"
    },
    "3791": {
      "op": "SUB"
    },
    "3792": {
      "op": "SLT"
    },
    "3793": {
      "op": "ISZERO"
    },
    "3794": {
      "op": "PUSH3",
      "value": "0xEDA"
    },
    "3798": {
      "op": "JUMPI"
    },
    "3799": {
      "op": "DUP1"
    },
    "3800": {
      "op": "DUP2"
    },
    "3801": {
      "op": "REVERT"
    },
    "3802": {
      "op": "JUMPDEST"
    },
    "3803": {
      "op": "DUP2"
    },
    "3804": {
      "op": "MLOAD"
    },
    "3805": {
      "op": "DUP1"
    },
    "3806": {
      "op": "ISZERO"
    },
    "3807": {
      "op": "ISZERO"
    },
    "3808": {
      "op": "DUP2"
    },
    "3809": {
      "op": "EQ"
    },
    "3810": {
      "op": "PUSH3",
      "value": "0xCE0"
    },
    "3814": {
      "op": "JUMPI"
    },
    "3815": {
      "op": "DUP2"
    },
    "3816": {
      "op": "DUP3"
    },
    "3817": {
      "op": "REVERT"
    },
    "3818": {
      "op": "JUMPDEST"
    },
    "3819": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3821": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3823": {
      "op": "DUP3"
    },
    "3824": {
      "op": "DUP5"
    },
    "3825": {
      "op": "SUB"
    },
    "3826": {
      "op": "SLT"
    },
    "3827": {
      "op": "ISZERO"
    },
    "3828": {
      "op": "PUSH3",
      "value": "0xEFC"
    },
    "3832": {
      "op": "JUMPI"
    },
    "3833": {
      "op": "DUP1"
    },
    "3834": {
      "op": "DUP2"
    },
    "3835": {
      "op": "REVERT"
    },
    "3836": {
      "op": "JUMPDEST"
    },
    "3837": {
      "op": "POP"
    },
    "3838": {
      "op": "CALLDATALOAD"
    },
    "3839": {
      "op": "SWAP2"
    },
    "3840": {
      "op": "SWAP1"
    },
    "3841": {
      "op": "POP"
    },
    "3842": {
      "jump": "o",
      "op": "JUMP"
    },
    "3843": {
      "op": "JUMPDEST"
    },
    "3844": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3846": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3848": {
      "op": "DUP3"
    },
    "3849": {
      "op": "DUP5"
    },
    "3850": {
      "op": "SUB"
    },
    "3851": {
      "op": "SLT"
    },
    "3852": {
      "op": "ISZERO"
    },
    "3853": {
      "op": "PUSH3",
      "value": "0xF15"
    },
    "3857": {
      "op": "JUMPI"
    },
    "3858": {
      "op": "DUP1"
    },
    "3859": {
      "op": "DUP2"
    },
    "3860": {
      "op": "REVERT"
    },
    "3861": {
      "op": "JUMPDEST"
    },
    "3862": {
      "op": "POP"
    },
    "3863": {
      "op": "MLOAD"
    },
    "3864": {
      "op": "SWAP2"
    },
    "3865": {
      "op": "SWAP1"
    },
    "3866": {
      "op": "POP"
    },
    "3867": {
      "jump": "o",
      "op": "JUMP"
    },
    "3868": {
      "op": "JUMPDEST"
    },
    "3869": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3871": {
      "op": "DUP1"
    },
    "3872": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3874": {
      "op": "DUP1"
    },
    "3875": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3877": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3879": {
      "op": "DUP7"
    },
    "3880": {
      "op": "DUP9"
    },
    "3881": {
      "op": "SUB"
    },
    "3882": {
      "op": "SLT"
    },
    "3883": {
      "op": "ISZERO"
    },
    "3884": {
      "op": "PUSH3",
      "value": "0xF34"
    },
    "3888": {
      "op": "JUMPI"
    },
    "3889": {
      "op": "DUP1"
    },
    "3890": {
      "op": "DUP2"
    },
    "3891": {
      "op": "REVERT"
    },
    "3892": {
      "op": "JUMPDEST"
    },
    "3893": {
      "op": "PUSH3",
      "value": "0xF3F"
    },
    "3897": {
      "op": "DUP7"
    },
    "3898": {
      "op": "PUSH3",
      "value": "0xE84"
    },
    "3902": {
      "jump": "i",
      "op": "JUMP"
    },
    "3903": {
      "op": "JUMPDEST"
    },
    "3904": {
      "op": "SWAP5"
    },
    "3905": {
      "op": "POP"
    },
    "3906": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3908": {
      "op": "DUP7"
    },
    "3909": {
      "op": "ADD"
    },
    "3910": {
      "op": "MLOAD"
    },
    "3911": {
      "op": "SWAP4"
    },
    "3912": {
      "op": "POP"
    },
    "3913": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3915": {
      "op": "DUP7"
    },
    "3916": {
      "op": "ADD"
    },
    "3917": {
      "op": "MLOAD"
    },
    "3918": {
      "op": "SWAP3"
    },
    "3919": {
      "op": "POP"
    },
    "3920": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3922": {
      "op": "DUP7"
    },
    "3923": {
      "op": "ADD"
    },
    "3924": {
      "op": "MLOAD"
    },
    "3925": {
      "op": "SWAP2"
    },
    "3926": {
      "op": "POP"
    },
    "3927": {
      "op": "PUSH3",
      "value": "0xF64"
    },
    "3931": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3933": {
      "op": "DUP8"
    },
    "3934": {
      "op": "ADD"
    },
    "3935": {
      "op": "PUSH3",
      "value": "0xE84"
    },
    "3939": {
      "jump": "i",
      "op": "JUMP"
    },
    "3940": {
      "op": "JUMPDEST"
    },
    "3941": {
      "op": "SWAP1"
    },
    "3942": {
      "op": "POP"
    },
    "3943": {
      "op": "SWAP3"
    },
    "3944": {
      "op": "SWAP6"
    },
    "3945": {
      "op": "POP"
    },
    "3946": {
      "op": "SWAP3"
    },
    "3947": {
      "op": "SWAP6"
    },
    "3948": {
      "op": "SWAP1"
    },
    "3949": {
      "op": "SWAP4"
    },
    "3950": {
      "op": "POP"
    },
    "3951": {
      "jump": "o",
      "op": "JUMP"
    },
    "3952": {
      "op": "JUMPDEST"
    },
    "3953": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3955": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3957": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3959": {
      "op": "SHL"
    },
    "3960": {
      "op": "SUB"
    },
    "3961": {
      "op": "SWAP2"
    },
    "3962": {
      "op": "SWAP1"
    },
    "3963": {
      "op": "SWAP2"
    },
    "3964": {
      "op": "AND"
    },
    "3965": {
      "op": "DUP2"
    },
    "3966": {
      "op": "MSTORE"
    },
    "3967": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3969": {
      "op": "ADD"
    },
    "3970": {
      "op": "SWAP1"
    },
    "3971": {
      "jump": "o",
      "op": "JUMP"
    },
    "3972": {
      "op": "JUMPDEST"
    },
    "3973": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3975": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3977": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3979": {
      "op": "SHL"
    },
    "3980": {
      "op": "SUB"
    },
    "3981": {
      "op": "SWAP4"
    },
    "3982": {
      "op": "DUP5"
    },
    "3983": {
      "op": "AND"
    },
    "3984": {
      "op": "DUP2"
    },
    "3985": {
      "op": "MSTORE"
    },
    "3986": {
      "op": "SWAP2"
    },
    "3987": {
      "op": "SWAP1"
    },
    "3988": {
      "op": "SWAP3"
    },
    "3989": {
      "op": "AND"
    },
    "3990": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3992": {
      "op": "DUP3"
    },
    "3993": {
      "op": "ADD"
    },
    "3994": {
      "op": "MSTORE"
    },
    "3995": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3997": {
      "op": "DUP2"
    },
    "3998": {
      "op": "ADD"
    },
    "3999": {
      "op": "SWAP2"
    },
    "4000": {
      "op": "SWAP1"
    },
    "4001": {
      "op": "SWAP2"
    },
    "4002": {
      "op": "MSTORE"
    },
    "4003": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4005": {
      "op": "ADD"
    },
    "4006": {
      "op": "SWAP1"
    },
    "4007": {
      "jump": "o",
      "op": "JUMP"
    },
    "4008": {
      "op": "JUMPDEST"
    },
    "4009": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4011": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4013": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4015": {
      "op": "SHL"
    },
    "4016": {
      "op": "SUB"
    },
    "4017": {
      "op": "SWAP3"
    },
    "4018": {
      "op": "SWAP1"
    },
    "4019": {
      "op": "SWAP3"
    },
    "4020": {
      "op": "AND"
    },
    "4021": {
      "op": "DUP3"
    },
    "4022": {
      "op": "MSTORE"
    },
    "4023": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4025": {
      "op": "DUP3"
    },
    "4026": {
      "op": "ADD"
    },
    "4027": {
      "op": "MSTORE"
    },
    "4028": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4030": {
      "op": "ADD"
    },
    "4031": {
      "op": "SWAP1"
    },
    "4032": {
      "jump": "o",
      "op": "JUMP"
    },
    "4033": {
      "op": "JUMPDEST"
    },
    "4034": {
      "op": "SWAP1"
    },
    "4035": {
      "op": "ISZERO"
    },
    "4036": {
      "op": "ISZERO"
    },
    "4037": {
      "op": "DUP2"
    },
    "4038": {
      "op": "MSTORE"
    },
    "4039": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4041": {
      "op": "ADD"
    },
    "4042": {
      "op": "SWAP1"
    },
    "4043": {
      "jump": "o",
      "op": "JUMP"
    },
    "4044": {
      "op": "JUMPDEST"
    },
    "4045": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4047": {
      "op": "DUP1"
    },
    "4048": {
      "op": "DUP3"
    },
    "4049": {
      "op": "MSTORE"
    },
    "4050": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "4052": {
      "op": "SWAP1"
    },
    "4053": {
      "op": "DUP3"
    },
    "4054": {
      "op": "ADD"
    },
    "4055": {
      "op": "MSTORE"
    },
    "4056": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "4089": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4091": {
      "op": "DUP3"
    },
    "4092": {
      "op": "ADD"
    },
    "4093": {
      "op": "MSTORE"
    },
    "4094": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "4101": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "4103": {
      "op": "SHL"
    },
    "4104": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4106": {
      "op": "DUP3"
    },
    "4107": {
      "op": "ADD"
    },
    "4108": {
      "op": "MSTORE"
    },
    "4109": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4111": {
      "op": "ADD"
    },
    "4112": {
      "op": "SWAP1"
    },
    "4113": {
      "jump": "o",
      "op": "JUMP"
    },
    "4114": {
      "op": "JUMPDEST"
    },
    "4115": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4117": {
      "op": "DUP1"
    },
    "4118": {
      "op": "DUP3"
    },
    "4119": {
      "op": "MSTORE"
    },
    "4120": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4122": {
      "op": "SWAP1"
    },
    "4123": {
      "op": "DUP3"
    },
    "4124": {
      "op": "ADD"
    },
    "4125": {
      "op": "MSTORE"
    },
    "4126": {
      "op": "PUSH32",
      "value": "0x54686520706F6F6C2077617320616C726561647920696E697469617465642E00"
    },
    "4159": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4161": {
      "op": "DUP3"
    },
    "4162": {
      "op": "ADD"
    },
    "4163": {
      "op": "MSTORE"
    },
    "4164": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4166": {
      "op": "ADD"
    },
    "4167": {
      "op": "SWAP1"
    },
    "4168": {
      "jump": "o",
      "op": "JUMP"
    },
    "4169": {
      "op": "JUMPDEST"
    },
    "4170": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4172": {
      "op": "DUP1"
    },
    "4173": {
      "op": "DUP3"
    },
    "4174": {
      "op": "MSTORE"
    },
    "4175": {
      "op": "DUP2"
    },
    "4176": {
      "op": "DUP2"
    },
    "4177": {
      "op": "ADD"
    },
    "4178": {
      "op": "MSTORE"
    },
    "4179": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "4212": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4214": {
      "op": "DUP3"
    },
    "4215": {
      "op": "ADD"
    },
    "4216": {
      "op": "MSTORE"
    },
    "4217": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4219": {
      "op": "ADD"
    },
    "4220": {
      "op": "SWAP1"
    },
    "4221": {
      "jump": "o",
      "op": "JUMP"
    },
    "4222": {
      "op": "JUMPDEST"
    },
    "4223": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4225": {
      "op": "DUP1"
    },
    "4226": {
      "op": "DUP3"
    },
    "4227": {
      "op": "MSTORE"
    },
    "4228": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "4230": {
      "op": "SWAP1"
    },
    "4231": {
      "op": "DUP3"
    },
    "4232": {
      "op": "ADD"
    },
    "4233": {
      "op": "MSTORE"
    },
    "4234": {
      "op": "PUSH32",
      "value": "0x596F7520646F6E2774206861766520656E6F75676820555344432E0000000000"
    },
    "4267": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4269": {
      "op": "DUP3"
    },
    "4270": {
      "op": "ADD"
    },
    "4271": {
      "op": "MSTORE"
    },
    "4272": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4274": {
      "op": "ADD"
    },
    "4275": {
      "op": "SWAP1"
    },
    "4276": {
      "jump": "o",
      "op": "JUMP"
    },
    "4277": {
      "op": "JUMPDEST"
    },
    "4278": {
      "op": "SWAP1"
    },
    "4279": {
      "op": "DUP2"
    },
    "4280": {
      "op": "MSTORE"
    },
    "4281": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4283": {
      "op": "ADD"
    },
    "4284": {
      "op": "SWAP1"
    },
    "4285": {
      "jump": "o",
      "op": "JUMP"
    },
    "4286": {
      "op": "JUMPDEST"
    },
    "4287": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4289": {
      "op": "DUP3"
    },
    "4290": {
      "op": "NOT"
    },
    "4291": {
      "op": "DUP3"
    },
    "4292": {
      "op": "GT"
    },
    "4293": {
      "op": "ISZERO"
    },
    "4294": {
      "op": "PUSH3",
      "value": "0x10D4"
    },
    "4298": {
      "op": "JUMPI"
    },
    "4299": {
      "op": "PUSH3",
      "value": "0x10D4"
    },
    "4303": {
      "op": "PUSH3",
      "value": "0x126E"
    },
    "4307": {
      "jump": "i",
      "op": "JUMP"
    },
    "4308": {
      "op": "JUMPDEST"
    },
    "4309": {
      "op": "POP"
    },
    "4310": {
      "op": "ADD"
    },
    "4311": {
      "op": "SWAP1"
    },
    "4312": {
      "jump": "o",
      "op": "JUMP"
    },
    "4313": {
      "op": "JUMPDEST"
    },
    "4314": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4316": {
      "op": "DUP3"
    },
    "4317": {
      "op": "PUSH3",
      "value": "0x10F5"
    },
    "4321": {
      "op": "JUMPI"
    },
    "4322": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4327": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4329": {
      "op": "SHL"
    },
    "4330": {
      "op": "DUP2"
    },
    "4331": {
      "op": "MSTORE"
    },
    "4332": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "4334": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4336": {
      "op": "MSTORE"
    },
    "4337": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4339": {
      "op": "DUP2"
    },
    "4340": {
      "op": "REVERT"
    },
    "4341": {
      "op": "JUMPDEST"
    },
    "4342": {
      "op": "POP"
    },
    "4343": {
      "op": "DIV"
    },
    "4344": {
      "op": "SWAP1"
    },
    "4345": {
      "jump": "o",
      "op": "JUMP"
    },
    "4346": {
      "op": "JUMPDEST"
    },
    "4347": {
      "op": "DUP1"
    },
    "4348": {
      "op": "DUP3"
    },
    "4349": {
      "op": "JUMPDEST"
    },
    "4350": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4352": {
      "op": "DUP1"
    },
    "4353": {
      "op": "DUP7"
    },
    "4354": {
      "op": "GT"
    },
    "4355": {
      "op": "PUSH3",
      "value": "0x110E"
    },
    "4359": {
      "op": "JUMPI"
    },
    "4360": {
      "op": "POP"
    },
    "4361": {
      "op": "PUSH3",
      "value": "0x113E"
    },
    "4365": {
      "op": "JUMP"
    },
    "4366": {
      "op": "JUMPDEST"
    },
    "4367": {
      "op": "DUP2"
    },
    "4368": {
      "op": "DUP8"
    },
    "4369": {
      "op": "DIV"
    },
    "4370": {
      "op": "DUP3"
    },
    "4371": {
      "op": "GT"
    },
    "4372": {
      "op": "ISZERO"
    },
    "4373": {
      "op": "PUSH3",
      "value": "0x1123"
    },
    "4377": {
      "op": "JUMPI"
    },
    "4378": {
      "op": "PUSH3",
      "value": "0x1123"
    },
    "4382": {
      "op": "PUSH3",
      "value": "0x126E"
    },
    "4386": {
      "jump": "i",
      "op": "JUMP"
    },
    "4387": {
      "op": "JUMPDEST"
    },
    "4388": {
      "op": "DUP1"
    },
    "4389": {
      "op": "DUP7"
    },
    "4390": {
      "op": "AND"
    },
    "4391": {
      "op": "ISZERO"
    },
    "4392": {
      "op": "PUSH3",
      "value": "0x1131"
    },
    "4396": {
      "op": "JUMPI"
    },
    "4397": {
      "op": "SWAP2"
    },
    "4398": {
      "op": "DUP2"
    },
    "4399": {
      "op": "MUL"
    },
    "4400": {
      "op": "SWAP2"
    },
    "4401": {
      "op": "JUMPDEST"
    },
    "4402": {
      "op": "SWAP5"
    },
    "4403": {
      "op": "SWAP1"
    },
    "4404": {
      "op": "SWAP5"
    },
    "4405": {
      "op": "SHR"
    },
    "4406": {
      "op": "SWAP4"
    },
    "4407": {
      "op": "DUP1"
    },
    "4408": {
      "op": "MUL"
    },
    "4409": {
      "op": "PUSH3",
      "value": "0x10FD"
    },
    "4413": {
      "op": "JUMP"
    },
    "4414": {
      "op": "JUMPDEST"
    },
    "4415": {
      "op": "SWAP5"
    },
    "4416": {
      "op": "POP"
    },
    "4417": {
      "op": "SWAP5"
    },
    "4418": {
      "op": "SWAP3"
    },
    "4419": {
      "op": "POP"
    },
    "4420": {
      "op": "POP"
    },
    "4421": {
      "op": "POP"
    },
    "4422": {
      "jump": "o",
      "op": "JUMP"
    },
    "4423": {
      "op": "JUMPDEST"
    },
    "4424": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4426": {
      "op": "PUSH3",
      "value": "0xCE0"
    },
    "4430": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4432": {
      "op": "NOT"
    },
    "4433": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4435": {
      "op": "DUP6"
    },
    "4436": {
      "op": "AND"
    },
    "4437": {
      "op": "DUP5"
    },
    "4438": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4440": {
      "op": "DUP3"
    },
    "4441": {
      "op": "PUSH3",
      "value": "0x1166"
    },
    "4445": {
      "op": "JUMPI"
    },
    "4446": {
      "op": "POP"
    },
    "4447": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4449": {
      "op": "PUSH3",
      "value": "0xCE0"
    },
    "4453": {
      "op": "JUMP"
    },
    "4454": {
      "op": "JUMPDEST"
    },
    "4455": {
      "op": "DUP2"
    },
    "4456": {
      "op": "PUSH3",
      "value": "0x1175"
    },
    "4460": {
      "op": "JUMPI"
    },
    "4461": {
      "op": "POP"
    },
    "4462": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4464": {
      "op": "PUSH3",
      "value": "0xCE0"
    },
    "4468": {
      "op": "JUMP"
    },
    "4469": {
      "op": "JUMPDEST"
    },
    "4470": {
      "op": "DUP2"
    },
    "4471": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4473": {
      "op": "DUP2"
    },
    "4474": {
      "op": "EQ"
    },
    "4475": {
      "op": "PUSH3",
      "value": "0x118E"
    },
    "4479": {
      "op": "JUMPI"
    },
    "4480": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "4482": {
      "op": "DUP2"
    },
    "4483": {
      "op": "EQ"
    },
    "4484": {
      "op": "PUSH3",
      "value": "0x1199"
    },
    "4488": {
      "op": "JUMPI"
    },
    "4489": {
      "op": "PUSH3",
      "value": "0x11CD"
    },
    "4493": {
      "op": "JUMP"
    },
    "4494": {
      "op": "JUMPDEST"
    },
    "4495": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4497": {
      "op": "SWAP2"
    },
    "4498": {
      "op": "POP"
    },
    "4499": {
      "op": "POP"
    },
    "4500": {
      "op": "PUSH3",
      "value": "0xCE0"
    },
    "4504": {
      "op": "JUMP"
    },
    "4505": {
      "op": "JUMPDEST"
    },
    "4506": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4508": {
      "op": "DUP5"
    },
    "4509": {
      "op": "GT"
    },
    "4510": {
      "op": "ISZERO"
    },
    "4511": {
      "op": "PUSH3",
      "value": "0x11AD"
    },
    "4515": {
      "op": "JUMPI"
    },
    "4516": {
      "op": "PUSH3",
      "value": "0x11AD"
    },
    "4520": {
      "op": "PUSH3",
      "value": "0x126E"
    },
    "4524": {
      "jump": "i",
      "op": "JUMP"
    },
    "4525": {
      "op": "JUMPDEST"
    },
    "4526": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4528": {
      "op": "DUP5"
    },
    "4529": {
      "op": "SHL"
    },
    "4530": {
      "op": "SWAP2"
    },
    "4531": {
      "op": "POP"
    },
    "4532": {
      "op": "DUP5"
    },
    "4533": {
      "op": "DUP3"
    },
    "4534": {
      "op": "GT"
    },
    "4535": {
      "op": "ISZERO"
    },
    "4536": {
      "op": "PUSH3",
      "value": "0x11C6"
    },
    "4540": {
      "op": "JUMPI"
    },
    "4541": {
      "op": "PUSH3",
      "value": "0x11C6"
    },
    "4545": {
      "op": "PUSH3",
      "value": "0x126E"
    },
    "4549": {
      "jump": "i",
      "op": "JUMP"
    },
    "4550": {
      "op": "JUMPDEST"
    },
    "4551": {
      "op": "POP"
    },
    "4552": {
      "op": "PUSH3",
      "value": "0xCE0"
    },
    "4556": {
      "op": "JUMP"
    },
    "4557": {
      "op": "JUMPDEST"
    },
    "4558": {
      "op": "POP"
    },
    "4559": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4561": {
      "op": "DUP4"
    },
    "4562": {
      "op": "LT"
    },
    "4563": {
      "op": "PUSH2",
      "value": "0x133"
    },
    "4566": {
      "op": "DUP4"
    },
    "4567": {
      "op": "LT"
    },
    "4568": {
      "op": "AND"
    },
    "4569": {
      "op": "PUSH1",
      "value": "0x4E"
    },
    "4571": {
      "op": "DUP5"
    },
    "4572": {
      "op": "LT"
    },
    "4573": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "4575": {
      "op": "DUP5"
    },
    "4576": {
      "op": "LT"
    },
    "4577": {
      "op": "AND"
    },
    "4578": {
      "op": "OR"
    },
    "4579": {
      "op": "ISZERO"
    },
    "4580": {
      "op": "PUSH3",
      "value": "0x1205"
    },
    "4584": {
      "op": "JUMPI"
    },
    "4585": {
      "op": "POP"
    },
    "4586": {
      "op": "DUP2"
    },
    "4587": {
      "op": "DUP2"
    },
    "4588": {
      "op": "EXP"
    },
    "4589": {
      "op": "DUP4"
    },
    "4590": {
      "op": "DUP2"
    },
    "4591": {
      "op": "GT"
    },
    "4592": {
      "op": "ISZERO"
    },
    "4593": {
      "op": "PUSH3",
      "value": "0x11FF"
    },
    "4597": {
      "op": "JUMPI"
    },
    "4598": {
      "op": "PUSH3",
      "value": "0x11FF"
    },
    "4602": {
      "op": "PUSH3",
      "value": "0x126E"
    },
    "4606": {
      "jump": "i",
      "op": "JUMP"
    },
    "4607": {
      "op": "JUMPDEST"
    },
    "4608": {
      "op": "PUSH3",
      "value": "0xCE0"
    },
    "4612": {
      "op": "JUMP"
    },
    "4613": {
      "op": "JUMPDEST"
    },
    "4614": {
      "op": "PUSH3",
      "value": "0x1214"
    },
    "4618": {
      "op": "DUP5"
    },
    "4619": {
      "op": "DUP5"
    },
    "4620": {
      "op": "DUP5"
    },
    "4621": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4623": {
      "op": "PUSH3",
      "value": "0x10FA"
    },
    "4627": {
      "jump": "i",
      "op": "JUMP"
    },
    "4628": {
      "op": "JUMPDEST"
    },
    "4629": {
      "op": "DUP1"
    },
    "4630": {
      "op": "DUP7"
    },
    "4631": {
      "op": "DIV"
    },
    "4632": {
      "op": "DUP3"
    },
    "4633": {
      "op": "GT"
    },
    "4634": {
      "op": "ISZERO"
    },
    "4635": {
      "op": "PUSH3",
      "value": "0x1229"
    },
    "4639": {
      "op": "JUMPI"
    },
    "4640": {
      "op": "PUSH3",
      "value": "0x1229"
    },
    "4644": {
      "op": "PUSH3",
      "value": "0x126E"
    },
    "4648": {
      "jump": "i",
      "op": "JUMP"
    },
    "4649": {
      "op": "JUMPDEST"
    },
    "4650": {
      "op": "MUL"
    },
    "4651": {
      "op": "SWAP5"
    },
    "4652": {
      "op": "SWAP4"
    },
    "4653": {
      "op": "POP"
    },
    "4654": {
      "op": "POP"
    },
    "4655": {
      "op": "POP"
    },
    "4656": {
      "op": "POP"
    },
    "4657": {
      "jump": "o",
      "op": "JUMP"
    },
    "4658": {
      "op": "JUMPDEST"
    },
    "4659": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4661": {
      "op": "DUP2"
    },
    "4662": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4664": {
      "op": "NOT"
    },
    "4665": {
      "op": "DIV"
    },
    "4666": {
      "op": "DUP4"
    },
    "4667": {
      "op": "GT"
    },
    "4668": {
      "op": "DUP3"
    },
    "4669": {
      "op": "ISZERO"
    },
    "4670": {
      "op": "ISZERO"
    },
    "4671": {
      "op": "AND"
    },
    "4672": {
      "op": "ISZERO"
    },
    "4673": {
      "op": "PUSH3",
      "value": "0x124F"
    },
    "4677": {
      "op": "JUMPI"
    },
    "4678": {
      "op": "PUSH3",
      "value": "0x124F"
    },
    "4682": {
      "op": "PUSH3",
      "value": "0x126E"
    },
    "4686": {
      "jump": "i",
      "op": "JUMP"
    },
    "4687": {
      "op": "JUMPDEST"
    },
    "4688": {
      "op": "POP"
    },
    "4689": {
      "op": "MUL"
    },
    "4690": {
      "op": "SWAP1"
    },
    "4691": {
      "jump": "o",
      "op": "JUMP"
    },
    "4692": {
      "op": "JUMPDEST"
    },
    "4693": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4695": {
      "op": "DUP3"
    },
    "4696": {
      "op": "DUP3"
    },
    "4697": {
      "op": "LT"
    },
    "4698": {
      "op": "ISZERO"
    },
    "4699": {
      "op": "PUSH3",
      "value": "0x1269"
    },
    "4703": {
      "op": "JUMPI"
    },
    "4704": {
      "op": "PUSH3",
      "value": "0x1269"
    },
    "4708": {
      "op": "PUSH3",
      "value": "0x126E"
    },
    "4712": {
      "jump": "i",
      "op": "JUMP"
    },
    "4713": {
      "op": "JUMPDEST"
    },
    "4714": {
      "op": "POP"
    },
    "4715": {
      "op": "SUB"
    },
    "4716": {
      "op": "SWAP1"
    },
    "4717": {
      "jump": "o",
      "op": "JUMP"
    },
    "4718": {
      "op": "JUMPDEST"
    },
    "4719": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4724": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4726": {
      "op": "SHL"
    },
    "4727": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4729": {
      "op": "MSTORE"
    },
    "4730": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "4732": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4734": {
      "op": "MSTORE"
    },
    "4735": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4737": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4739": {
      "op": "REVERT"
    }
  },
  "sha1": "b7ec58e9b81b0754a67d4141a766f1f5216c272a",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport  {ERC20} from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport  {ERC20Burnable} from \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n\ninterface IERC20 {\n    function transfer(address recipient, uint256 amount) external returns (bool);\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n    function approve(address spender, uint256 amount) external returns (bool);\n}\n\n\ncontract BTCUP is  ERC20, ERC20Burnable {\n    address parentAddress;\n\n    constructor(address _parentAddress) ERC20(\"Bitcoin Up\", \"BTCUP\") {\n        parentAddress = _parentAddress;\n    }\n\n    function mint(uint256 quantity) public onlyParent {\n        _mint(tx.origin, quantity);\n    }\n\n    function burn(uint256 quantity) public override onlyParent {\n        burnFrom(tx.origin, quantity);\n    }\n\n    function decimals() public view override returns (uint8) {\n        return 6;\n    }\n\n    modifier onlyParent {\n        require(msg.sender == parentAddress);\n        _;\n    }\n}\n\ncontract BTCDOWN is ERC20, ERC20Burnable {\n    address parentAddress;\n\n    constructor(address _parentAddress) ERC20(\"Bitcoin Down\", \"BTCDOWN\") {\n        parentAddress = _parentAddress;\n    }\n\n    function mint(uint256 quantity) public onlyParent {\n        _mint(tx.origin, quantity);\n    }\n\n    function burn(uint256 quantity) public override onlyParent {\n        burnFrom(tx.origin, quantity);\n    }\n\n    function decimals() public view override returns (uint8) {\n        return 6;\n    }\n\n    modifier onlyParent {\n        require(msg.sender == parentAddress);\n        _;\n    }\n}\n\ncontract LeveragedTrading is Ownable {\n    using SafeMath for uint256;\n\n    uint256 public priceBtcUp = 10 ** 6;\n    uint256 public priceBtcDown = 10 ** 6;        // 6 decimals\n\n    uint256 public collateralBtcUp = 0;          //6 decimals\n    uint256 public collateralBtcDown = 0;\n\n    uint256 public amountBtcUp = 0;           // 6 decimals\n    uint256 public amountBtcDown = 0;         // 6 decimals\n\n    uint256 public lastBtcPrice = 0;       // 8 decimals, chainlink conventions\n\n    bool public poolIsInitiated = false;\n\n    address addressUsdc = 0xb7a4F3E9097C08dA09517b5aB877F7a917224ede;  // <- Kovan  //0xeb8f08a975Ab53E34D8a0330E0D34de942C95926;\n    address addressBtcUSDFeed =  0x6135b13325bfC4B00278B4abC5e20bbce2D6580e; // <- Kovan          // 0xECe365B379E1dD183B20fc5f022230C044d51404;\n\n    BTCUP btcUp;\n    BTCDOWN btcDown;\n\n    function initiatePool(uint256 amountUsdc) public onlyOwner {\n        require(!poolIsInitiated, \"The pool was already initiated.\");\n\n        btcUp = new BTCUP(address(this));\n        btcDown = new BTCDOWN(address(this));\n\n        issueBtcUp(amountUsdc.div(2));\n        issueBtcDown(amountUsdc.div(2));\n\n        poolIsInitiated = true;\n    }\n\n    function issueBtcUp(uint256 amountUsdc) public {\n        rebalanceLeveragedTokens();\n        \n        priceBtcUp = getBtcUpPrice();\n        uint256 amountLeveragedTokens = amountUsdc.mul(10 ** 6).div(priceBtcUp);\n\n        btcUp.mint(amountLeveragedTokens);\n        amountBtcUp = amountBtcUp.add(amountLeveragedTokens);\n        collateralBtcUp = collateralBtcUp.add(amountUsdc);\n\n        IERC20 usdc = IERC20(addressUsdc);\n        require(usdc.transferFrom(msg.sender, address(this), amountUsdc), \"You don't have enough USDC.\");\n    }\n\n    function issueBtcDown(uint256 amountUsdc) public {\n        rebalanceLeveragedTokens();\n        \n        priceBtcDown = getBtcDownPrice();\n        uint256 amountLeveragedTokens = amountUsdc.mul(10 ** 6).div(priceBtcDown);\n\n        btcDown.mint(amountLeveragedTokens);\n        amountBtcDown = amountBtcDown.add(amountLeveragedTokens);\n        collateralBtcDown = collateralBtcDown.add(amountUsdc);\n\n        IERC20 usdc = IERC20(addressUsdc);\n        require(usdc.transferFrom(msg.sender, address(this), amountUsdc), \"You don't have enough USDC.\");\n    }\n\n    function redeemBtcUp(uint256 amountLeveragedTokens) public {\n        rebalanceLeveragedTokens();\n        btcUp.burn(amountLeveragedTokens);\n\n        priceBtcUp = getBtcUpPrice();\n        uint256 amountUsdc = amountLeveragedTokens.mul(priceBtcUp).div(10 ** 6);\n\n        amountBtcUp = amountBtcUp.sub(amountLeveragedTokens);\n        collateralBtcUp = collateralBtcUp.sub(amountUsdc);\n\n        IERC20 usdc = IERC20(addressUsdc);\n        assert(usdc.transfer(msg.sender, amountUsdc));\n    }\n\n    function redeemBtcDown(uint256 amountLeveragedTokens) public {\n        rebalanceLeveragedTokens();\n        btcDown.burn(amountLeveragedTokens);\n\n        priceBtcDown = getBtcDownPrice();\n        uint256 amountUsdc = amountLeveragedTokens.mul(priceBtcDown).div(10 ** 6);\n        \n        amountBtcDown = amountBtcDown.sub(amountLeveragedTokens);\n        collateralBtcDown = collateralBtcDown.sub(amountUsdc);\n\n        IERC20 usdc = IERC20(addressUsdc);\n        assert(usdc.transfer(msg.sender,  amountUsdc));\n    }\n\n    function rebalanceLeveragedTokens() public {\n        uint256 btcPrice = getBtcPrice();\n        if ((collateralBtcUp > 0) && (collateralBtcDown > 0)) {\n            uint256 rebalanceAmount = getRebalanceAmount(btcPrice);\n            if (getSign(btcPrice) > 0) {\n                collateralBtcUp = collateralBtcUp.add(rebalanceAmount);\n                collateralBtcDown = collateralBtcDown.sub(rebalanceAmount);\n            }\n\n            else {\n                collateralBtcUp = collateralBtcUp.sub(rebalanceAmount);\n                collateralBtcDown = collateralBtcDown.add(rebalanceAmount);\n            }\n\n        }\n\n        lastBtcPrice = btcPrice;\n    }\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    function getSign(uint256 btcPrice) internal view returns (int256) {\n        if (btcPrice > lastBtcPrice) {\n            return 1;\n        }\n        else {\n            return -1;\n        }\n    }\n \n    function getRebalanceAmount(uint256 priceBtc) internal view returns (uint256) {\n        uint256 priceDiff = getPriceDiff(priceBtc);\n\n        return min(collateralBtcUp, collateralBtcDown).mul(L(priceDiff)).div(10 ** 6);\n    }\n\n// getBtcUpPrice() 6 decimals\n    function getBtcUpPrice() public view returns (uint256) {\n        return amountBtcUp == 0 ?  priceBtcUp : collateralBtcUp.mul(10 ** 6).div(amountBtcUp);\n    }\n\n// getBtcDownPrice() 6 decimals\n    function getBtcDownPrice() public view returns (uint256) {//6 decimals\n        return amountBtcDown == 0 ?  priceBtcDown : collateralBtcDown.mul(10 ** 6).div(amountBtcDown);\n    }\n\n// get the price of our asset with 8 decimals\n    function getBtcPrice() public view returns (uint256) {\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(addressBtcUSDFeed);\n        (,int256 answer,,,) = priceFeed.latestRoundData();\n\n         return uint256(answer);             // we call chainlink oracle to get the price of the asset\n         \n    }\n    \n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a <= b ? a : b;\n    }\n\n    function L(uint256 x) internal pure returns (uint256) {            //6  decimals\n\n        uint256 denom = 9 * (x ** 2 / 10 ** 6)  + 3 * x + 10 ** 6;\n        uint256 num = 10 ** 12;\n\n        return 10 ** 6 - num / denom;\n    }\n\n    function getPriceDiff(uint256 btcPrice) internal view returns (uint256) {     //6 decimals\n        if (btcPrice > lastBtcPrice) {\n            return btcPrice.mul(10 ** 6).div(lastBtcPrice).sub(10 ** 6);\n        }\n\n        else {\n            return lastBtcPrice.mul(10 ** 6).div(btcPrice).sub(10 ** 6);\n        }\n\n    }\n\n    function getBtcupBalance() public view returns(uint256) {\n        return btcUp.balanceOf(msg.sender);\n    }\n\n    function getBtcdownBalance() public view returns(uint256) {\n        return btcDown.balanceOf(msg.sender);\n    }\n\n}\n\n",
  "sourceMap": "1861:6235:8:-:0;;;1965:7;1937:35;;;;1978:37;;-1:-1:-1;2043:34:8;;;;2105:36;;;;2148:30;;;;2208:32;;;;2269:31;;2350:35;;;2392:64;-1:-1:-1;;;;;;2392:64:8;;;;;;2522:71;;;-1:-1:-1;;;;;;2522:71:8;2551:42;2522:71;;;1861:6235;;;;;;;;;-1:-1:-1;867:23:0;877:12;:10;:12::i;:::-;867:9;:23::i;:::-;1861:6235:8;;586:96:5;665:10;586:96;:::o;2041:169:0:-;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2041:169;;:::o;1861:6235:8:-;;;;;;;",
  "sourcePath": "contracts/LeveragedTrading.sol",
  "type": "contract"
}