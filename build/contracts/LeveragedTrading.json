{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "amountBtcDown",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "amountBtcUp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "collateralBtcDown",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "collateralBtcUp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBtcDownPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBtcPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBtcUpPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBtcdownBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBtcupBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountUsdc",
          "type": "uint256"
        }
      ],
      "name": "initializePool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountUsdc",
          "type": "uint256"
        }
      ],
      "name": "issueBtcDown",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountUsdc",
          "type": "uint256"
        }
      ],
      "name": "issueBtcUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastBtcPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "poolIsInitialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceBtcDown",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceBtcUp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rebalanceLeveragedTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountLeveragedTokens",
          "type": "uint256"
        }
      ],
      "name": "redeemBtcDown",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountLeveragedTokens",
          "type": "uint256"
        }
      ],
      "name": "redeemBtcUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/home/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/access/Ownable.sol",
    "1": "/home/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/ERC20.sol",
    "2": "/home/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/IERC20.sol",
    "3": "/home/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/extensions/ERC20Burnable.sol",
    "4": "/home/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/extensions/IERC20Metadata.sol",
    "5": "/home/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/Context.sol",
    "6": "/home/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/math/SafeMath.sol",
    "7": "/home/alex/.brownie/packages/smartcontractkit/chainlink@1.3.0/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
    "8": "contracts/LeveragedTrading.sol"
  },
  "ast": {
    "absolutePath": "contracts/LeveragedTrading.sol",
    "exportedSymbols": {
      "AggregatorV3Interface": [
        1934
      ],
      "BTCDOWN": [
        178
      ],
      "BTCUP": [
        108
      ],
      "Context": [
        1955
      ],
      "ERC20": [
        1514
      ],
      "ERC20Burnable": [
        1576
      ],
      "IERC20": [
        38
      ],
      "LeveragedTrading": [
        864
      ],
      "Ownable": [
        968
      ],
      "SafeMath": [
        1888
      ]
    },
    "id": 865,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:8"
      },
      {
        "absolutePath": "/home/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 865,
        "sourceUnit": 1515,
        "src": "57:69:8",
        "symbolAliases": [
          {
            "foreign": {
              "id": 2,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "66:5:8",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        "file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 865,
        "sourceUnit": 1577,
        "src": "127:96:8",
        "symbolAliases": [
          {
            "foreign": {
              "id": 4,
              "name": "ERC20Burnable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "136:13:8",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/alex/.brownie/packages/smartcontractkit/chainlink@1.3.0/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "id": 6,
        "nodeType": "ImportDirective",
        "scope": 865,
        "sourceUnit": 1935,
        "src": "224:76:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 7,
        "nodeType": "ImportDirective",
        "scope": 865,
        "sourceUnit": 1889,
        "src": "301:57:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 8,
        "nodeType": "ImportDirective",
        "scope": 865,
        "sourceUnit": 969,
        "src": "359:52:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 38,
        "linearizedBaseContracts": [
          38
        ],
        "name": "IERC20",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "a9059cbb",
            "id": 17,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 17,
                  "src": "455:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "455:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 17,
                  "src": "474:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "474:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "454:35:8"
            },
            "returnParameters": {
              "id": 16,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 17,
                  "src": "508:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 14,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "508:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "507:6:8"
            },
            "scope": 38,
            "src": "437:77:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "23b872dd",
            "id": 28,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 28,
                  "src": "541:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "541:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 28,
                  "src": "557:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "557:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 28,
                  "src": "576:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "576:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "540:51:8"
            },
            "returnParameters": {
              "id": 27,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 28,
                  "src": "610:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 25,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "610:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "609:6:8"
            },
            "scope": 38,
            "src": "519:97:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "095ea7b3",
            "id": 37,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 33,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 37,
                  "src": "638:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 29,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "638:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 37,
                  "src": "655:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "655:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "637:33:8"
            },
            "returnParameters": {
              "id": 36,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 37,
                  "src": "689:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 34,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "689:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "688:6:8"
            },
            "scope": 38,
            "src": "621:74:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 865,
        "src": "414:283:8"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 39,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1514,
              "src": "719:5:8"
            },
            "id": 40,
            "nodeType": "InheritanceSpecifier",
            "src": "719:5:8"
          },
          {
            "baseName": {
              "id": 41,
              "name": "ERC20Burnable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1576,
              "src": "726:13:8"
            },
            "id": 42,
            "nodeType": "InheritanceSpecifier",
            "src": "726:13:8"
          }
        ],
        "contractDependencies": [
          1514,
          1576,
          1955,
          2033,
          2058
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 108,
        "linearizedBaseContracts": [
          108,
          1576,
          1514,
          2058,
          2033,
          1955
        ],
        "name": "BTCUP",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 44,
            "mutability": "mutable",
            "name": "parentAddress",
            "nodeType": "VariableDeclaration",
            "scope": 108,
            "src": "746:21:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 43,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "746:7:8",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 57,
              "nodeType": "Block",
              "src": "839:47:8",
              "statements": [
                {
                  "expression": {
                    "id": 55,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 53,
                      "name": "parentAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "849:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 54,
                      "name": "_parentAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "865:14:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "849:30:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 56,
                  "nodeType": "ExpressionStatement",
                  "src": "849:30:8"
                }
              ]
            },
            "id": 58,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "426974636f696e205570",
                    "id": 49,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "816:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_9cbc1d0721872492c3eae100dd6a7dad3b4b199dc4e72a46010b2b1c98a11964",
                      "typeString": "literal_string \"Bitcoin Up\""
                    },
                    "value": "Bitcoin Up"
                  },
                  {
                    "hexValue": "4254435550",
                    "id": 50,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "830:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_f92903022a172a42cae03bdc1621474c2ab6bc2b8980d8251e05283c61f8c975",
                      "typeString": "literal_string \"BTCUP\""
                    },
                    "value": "BTCUP"
                  }
                ],
                "id": 51,
                "modifierName": {
                  "id": 48,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1514,
                  "src": "810:5:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "810:28:8"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 47,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46,
                  "mutability": "mutable",
                  "name": "_parentAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 58,
                  "src": "786:22:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "786:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "785:24:8"
            },
            "returnParameters": {
              "id": 52,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "839:0:8"
            },
            "scope": 108,
            "src": "774:112:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 71,
              "nodeType": "Block",
              "src": "942:43:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 66,
                          "name": "tx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -26,
                          "src": "958:2:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_transaction",
                            "typeString": "tx"
                          }
                        },
                        "id": 67,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "origin",
                        "nodeType": "MemberAccess",
                        "src": "958:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 68,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60,
                        "src": "969:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 65,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1374,
                      "src": "952:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 69,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "952:26:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 70,
                  "nodeType": "ExpressionStatement",
                  "src": "952:26:8"
                }
              ]
            },
            "functionSelector": "a0712d68",
            "id": 72,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 63,
                "modifierName": {
                  "id": 62,
                  "name": "onlyParent",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 107,
                  "src": "931:10:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "931:10:8"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 61,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nodeType": "VariableDeclaration",
                  "scope": 72,
                  "src": "906:16:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "906:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "905:18:8"
            },
            "returnParameters": {
              "id": 64,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "942:0:8"
            },
            "scope": 108,
            "src": "892:93:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1536
            ],
            "body": {
              "id": 86,
              "nodeType": "Block",
              "src": "1050:46:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 81,
                          "name": "tx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -26,
                          "src": "1069:2:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_transaction",
                            "typeString": "tx"
                          }
                        },
                        "id": 82,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "origin",
                        "nodeType": "MemberAccess",
                        "src": "1069:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 83,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74,
                        "src": "1080:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 80,
                      "name": "burnFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1575,
                      "src": "1060:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1060:29:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85,
                  "nodeType": "ExpressionStatement",
                  "src": "1060:29:8"
                }
              ]
            },
            "functionSelector": "42966c68",
            "id": 87,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 78,
                "modifierName": {
                  "id": 77,
                  "name": "onlyParent",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 107,
                  "src": "1039:10:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "1039:10:8"
              }
            ],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 76,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1030:8:8"
            },
            "parameters": {
              "id": 75,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "1005:16:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1005:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1004:18:8"
            },
            "returnParameters": {
              "id": 79,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1050:0:8"
            },
            "scope": 108,
            "src": "991:105:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1043
            ],
            "body": {
              "id": 95,
              "nodeType": "Block",
              "src": "1159:25:8",
              "statements": [
                {
                  "expression": {
                    "hexValue": "36",
                    "id": 93,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1176:1:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_6_by_1",
                      "typeString": "int_const 6"
                    },
                    "value": "6"
                  },
                  "functionReturnParameters": 92,
                  "id": 94,
                  "nodeType": "Return",
                  "src": "1169:8:8"
                }
              ]
            },
            "functionSelector": "313ce567",
            "id": 96,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 89,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1134:8:8"
            },
            "parameters": {
              "id": 88,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1119:2:8"
            },
            "returnParameters": {
              "id": 92,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 96,
                  "src": "1152:5:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 90,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1152:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1151:7:8"
            },
            "scope": 108,
            "src": "1102:82:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 106,
              "nodeType": "Block",
              "src": "1210:64:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 99,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1228:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1228:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 101,
                          "name": "parentAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "1242:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1228:27:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 98,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1220:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1220:36:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 104,
                  "nodeType": "ExpressionStatement",
                  "src": "1220:36:8"
                },
                {
                  "id": 105,
                  "nodeType": "PlaceholderStatement",
                  "src": "1266:1:8"
                }
              ]
            },
            "id": 107,
            "name": "onlyParent",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 97,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1210:0:8"
            },
            "src": "1190:84:8",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 865,
        "src": "700:576:8"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 109,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1514,
              "src": "1299:5:8"
            },
            "id": 110,
            "nodeType": "InheritanceSpecifier",
            "src": "1299:5:8"
          },
          {
            "baseName": {
              "id": 111,
              "name": "ERC20Burnable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1576,
              "src": "1306:13:8"
            },
            "id": 112,
            "nodeType": "InheritanceSpecifier",
            "src": "1306:13:8"
          }
        ],
        "contractDependencies": [
          1514,
          1576,
          1955,
          2033,
          2058
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 178,
        "linearizedBaseContracts": [
          178,
          1576,
          1514,
          2058,
          2033,
          1955
        ],
        "name": "BTCDOWN",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 114,
            "mutability": "mutable",
            "name": "parentAddress",
            "nodeType": "VariableDeclaration",
            "scope": 178,
            "src": "1326:21:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 113,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1326:7:8",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 127,
              "nodeType": "Block",
              "src": "1423:47:8",
              "statements": [
                {
                  "expression": {
                    "id": 125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 123,
                      "name": "parentAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 114,
                      "src": "1433:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 124,
                      "name": "_parentAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 116,
                      "src": "1449:14:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1433:30:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 126,
                  "nodeType": "ExpressionStatement",
                  "src": "1433:30:8"
                }
              ]
            },
            "id": 128,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "426974636f696e20446f776e",
                    "id": 119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1396:14:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_165fe89d7acd7320260d3007f731660e2a452d2e9dbef2c2e44ee15c6b8bc1ec",
                      "typeString": "literal_string \"Bitcoin Down\""
                    },
                    "value": "Bitcoin Down"
                  },
                  {
                    "hexValue": "425443444f574e",
                    "id": 120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1412:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_72f3d7098f717fcc170dbb6c7dad0b9049f1ed825e03177180edf7a0240d28f2",
                      "typeString": "literal_string \"BTCDOWN\""
                    },
                    "value": "BTCDOWN"
                  }
                ],
                "id": 121,
                "modifierName": {
                  "id": 118,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1514,
                  "src": "1390:5:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "1390:32:8"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 116,
                  "mutability": "mutable",
                  "name": "_parentAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 128,
                  "src": "1366:22:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 115,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1366:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1365:24:8"
            },
            "returnParameters": {
              "id": 122,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1423:0:8"
            },
            "scope": 178,
            "src": "1354:116:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 141,
              "nodeType": "Block",
              "src": "1526:43:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 136,
                          "name": "tx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -26,
                          "src": "1542:2:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_transaction",
                            "typeString": "tx"
                          }
                        },
                        "id": 137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "origin",
                        "nodeType": "MemberAccess",
                        "src": "1542:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 138,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 130,
                        "src": "1553:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 135,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1374,
                      "src": "1536:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1536:26:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 140,
                  "nodeType": "ExpressionStatement",
                  "src": "1536:26:8"
                }
              ]
            },
            "functionSelector": "a0712d68",
            "id": 142,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 133,
                "modifierName": {
                  "id": 132,
                  "name": "onlyParent",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 177,
                  "src": "1515:10:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "1515:10:8"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 131,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 130,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nodeType": "VariableDeclaration",
                  "scope": 142,
                  "src": "1490:16:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 129,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1490:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1489:18:8"
            },
            "returnParameters": {
              "id": 134,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1526:0:8"
            },
            "scope": 178,
            "src": "1476:93:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1536
            ],
            "body": {
              "id": 156,
              "nodeType": "Block",
              "src": "1634:46:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 151,
                          "name": "tx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -26,
                          "src": "1653:2:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_transaction",
                            "typeString": "tx"
                          }
                        },
                        "id": 152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "origin",
                        "nodeType": "MemberAccess",
                        "src": "1653:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 153,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 144,
                        "src": "1664:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 150,
                      "name": "burnFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1575,
                      "src": "1644:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1644:29:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 155,
                  "nodeType": "ExpressionStatement",
                  "src": "1644:29:8"
                }
              ]
            },
            "functionSelector": "42966c68",
            "id": 157,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 148,
                "modifierName": {
                  "id": 147,
                  "name": "onlyParent",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 177,
                  "src": "1623:10:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "1623:10:8"
              }
            ],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 146,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1614:8:8"
            },
            "parameters": {
              "id": 145,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 144,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nodeType": "VariableDeclaration",
                  "scope": 157,
                  "src": "1589:16:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 143,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1589:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1588:18:8"
            },
            "returnParameters": {
              "id": 149,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1634:0:8"
            },
            "scope": 178,
            "src": "1575:105:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1043
            ],
            "body": {
              "id": 165,
              "nodeType": "Block",
              "src": "1743:25:8",
              "statements": [
                {
                  "expression": {
                    "hexValue": "36",
                    "id": 163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1760:1:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_6_by_1",
                      "typeString": "int_const 6"
                    },
                    "value": "6"
                  },
                  "functionReturnParameters": 162,
                  "id": 164,
                  "nodeType": "Return",
                  "src": "1753:8:8"
                }
              ]
            },
            "functionSelector": "313ce567",
            "id": 166,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 159,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1718:8:8"
            },
            "parameters": {
              "id": 158,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1703:2:8"
            },
            "returnParameters": {
              "id": 162,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 161,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 166,
                  "src": "1736:5:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 160,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1736:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1735:7:8"
            },
            "scope": 178,
            "src": "1686:82:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 176,
              "nodeType": "Block",
              "src": "1794:64:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 169,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1812:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 170,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1812:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 171,
                          "name": "parentAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 114,
                          "src": "1826:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1812:27:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 168,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1804:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1804:36:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 174,
                  "nodeType": "ExpressionStatement",
                  "src": "1804:36:8"
                },
                {
                  "id": 175,
                  "nodeType": "PlaceholderStatement",
                  "src": "1850:1:8"
                }
              ]
            },
            "id": 177,
            "name": "onlyParent",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 167,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1794:0:8"
            },
            "src": "1774:84:8",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 865,
        "src": "1279:581:8"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 179,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 968,
              "src": "1892:7:8"
            },
            "id": 180,
            "nodeType": "InheritanceSpecifier",
            "src": "1892:7:8"
          }
        ],
        "contractDependencies": [
          108,
          178,
          968,
          1955
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 864,
        "linearizedBaseContracts": [
          864,
          968,
          1955
        ],
        "name": "LeveragedTrading",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 183,
            "libraryName": {
              "id": 181,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1888,
              "src": "1912:8:8"
            },
            "nodeType": "UsingForDirective",
            "src": "1906:27:8",
            "typeName": {
              "id": 182,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1925:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "f0156e8a",
            "id": 188,
            "mutability": "mutable",
            "name": "priceBtcUp",
            "nodeType": "VariableDeclaration",
            "scope": 864,
            "src": "1939:35:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 184,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1939:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_1000000_by_1",
                "typeString": "int_const 1000000"
              },
              "id": 187,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "3130",
                "id": 185,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1967:2:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10_by_1",
                  "typeString": "int_const 10"
                },
                "value": "10"
              },
              "nodeType": "BinaryOperation",
              "operator": "**",
              "rightExpression": {
                "hexValue": "36",
                "id": 186,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1973:1:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_6_by_1",
                  "typeString": "int_const 6"
                },
                "value": "6"
              },
              "src": "1967:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000_by_1",
                "typeString": "int_const 1000000"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0c3e5343",
            "id": 193,
            "mutability": "mutable",
            "name": "priceBtcDown",
            "nodeType": "VariableDeclaration",
            "scope": 864,
            "src": "1980:37:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 189,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1980:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_1000000_by_1",
                "typeString": "int_const 1000000"
              },
              "id": 192,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "3130",
                "id": 190,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2010:2:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10_by_1",
                  "typeString": "int_const 10"
                },
                "value": "10"
              },
              "nodeType": "BinaryOperation",
              "operator": "**",
              "rightExpression": {
                "hexValue": "36",
                "id": 191,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2016:1:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_6_by_1",
                  "typeString": "int_const 6"
                },
                "value": "6"
              },
              "src": "2010:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000_by_1",
                "typeString": "int_const 1000000"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "dde7be2c",
            "id": 196,
            "mutability": "mutable",
            "name": "collateralBtcUp",
            "nodeType": "VariableDeclaration",
            "scope": 864,
            "src": "2045:34:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 194,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2045:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 195,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2078:1:8",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "14d7c6d2",
            "id": 199,
            "mutability": "mutable",
            "name": "collateralBtcDown",
            "nodeType": "VariableDeclaration",
            "scope": 864,
            "src": "2107:36:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 197,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2107:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 198,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2142:1:8",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0034b9cc",
            "id": 202,
            "mutability": "mutable",
            "name": "amountBtcUp",
            "nodeType": "VariableDeclaration",
            "scope": 864,
            "src": "2150:30:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 200,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2150:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 201,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2179:1:8",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b75cbe0b",
            "id": 205,
            "mutability": "mutable",
            "name": "amountBtcDown",
            "nodeType": "VariableDeclaration",
            "scope": 864,
            "src": "2210:32:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 203,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2210:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 204,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2241:1:8",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f4352c57",
            "id": 208,
            "mutability": "mutable",
            "name": "lastBtcPrice",
            "nodeType": "VariableDeclaration",
            "scope": 864,
            "src": "2271:31:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 206,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2271:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 207,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2301:1:8",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "feae67b0",
            "id": 211,
            "mutability": "mutable",
            "name": "poolIsInitialized",
            "nodeType": "VariableDeclaration",
            "scope": 864,
            "src": "2352:37:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 209,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "2352:4:8",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 210,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2384:5:8",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 214,
            "mutability": "mutable",
            "name": "addressUsdc",
            "nodeType": "VariableDeclaration",
            "scope": 864,
            "src": "2396:64:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 212,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2396:7:8",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307862376134463345393039374330386441303935313762356142383737463761393137323234656465",
              "id": 213,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2418:42:8",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xb7a4F3E9097C08dA09517b5aB877F7a917224ede"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 217,
            "mutability": "mutable",
            "name": "addressBtcUSDFeed",
            "nodeType": "VariableDeclaration",
            "scope": 864,
            "src": "2526:71:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 215,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2526:7:8",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307836313335623133333235626643344230303237384234616243356532306262636532443635383065",
              "id": 216,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2555:42:8",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x6135b13325bfC4B00278B4abC5e20bbce2D6580e"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 220,
            "mutability": "mutable",
            "name": "btcUp",
            "nodeType": "VariableDeclaration",
            "scope": 864,
            "src": "2672:11:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_BTCUP_$108",
              "typeString": "contract BTCUP"
            },
            "typeName": {
              "id": 219,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 218,
                "name": "BTCUP",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 108,
                "src": "2672:5:8"
              },
              "referencedDeclaration": 108,
              "src": "2672:5:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BTCUP_$108",
                "typeString": "contract BTCUP"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 223,
            "mutability": "mutable",
            "name": "btcDown",
            "nodeType": "VariableDeclaration",
            "scope": 864,
            "src": "2689:15:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_BTCDOWN_$178",
              "typeString": "contract BTCDOWN"
            },
            "typeName": {
              "id": 222,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 221,
                "name": "BTCDOWN",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 178,
                "src": "2689:7:8"
              },
              "referencedDeclaration": 178,
              "src": "2689:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BTCDOWN_$178",
                "typeString": "contract BTCDOWN"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 276,
              "nodeType": "Block",
              "src": "2772:286:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2790:18:8",
                        "subExpression": {
                          "id": 231,
                          "name": "poolIsInitialized",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 211,
                          "src": "2791:17:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520706f6f6c2077617320616c726561647920696e697469616c697a65642e",
                        "id": 233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2810:35:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bc0cbdd852a361dc2085b6876378a83c79cecb9ee35d2f2932c6aa66b51f030d",
                          "typeString": "literal_string \"The pool was already initialized.\""
                        },
                        "value": "The pool was already initialized."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bc0cbdd852a361dc2085b6876378a83c79cecb9ee35d2f2932c6aa66b51f030d",
                          "typeString": "literal_string \"The pool was already initialized.\""
                        }
                      ],
                      "id": 230,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2782:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2782:64:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 235,
                  "nodeType": "ExpressionStatement",
                  "src": "2782:64:8"
                },
                {
                  "expression": {
                    "id": 238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 236,
                      "name": "poolIsInitialized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 211,
                      "src": "2856:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 237,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2876:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2856:24:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 239,
                  "nodeType": "ExpressionStatement",
                  "src": "2856:24:8"
                },
                {
                  "expression": {
                    "id": 249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 240,
                      "name": "btcUp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 220,
                      "src": "2891:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BTCUP_$108",
                        "typeString": "contract BTCUP"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 246,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "2917:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LeveragedTrading_$864",
                                "typeString": "contract LeveragedTrading"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_LeveragedTrading_$864",
                                "typeString": "contract LeveragedTrading"
                              }
                            ],
                            "id": 245,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2909:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 244,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2909:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 247,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2909:13:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2899:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_BTCUP_$108_$",
                          "typeString": "function (address) returns (contract BTCUP)"
                        },
                        "typeName": {
                          "id": 242,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 241,
                            "name": "BTCUP",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 108,
                            "src": "2903:5:8"
                          },
                          "referencedDeclaration": 108,
                          "src": "2903:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BTCUP_$108",
                            "typeString": "contract BTCUP"
                          }
                        }
                      },
                      "id": 248,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2899:24:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BTCUP_$108",
                        "typeString": "contract BTCUP"
                      }
                    },
                    "src": "2891:32:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BTCUP_$108",
                      "typeString": "contract BTCUP"
                    }
                  },
                  "id": 250,
                  "nodeType": "ExpressionStatement",
                  "src": "2891:32:8"
                },
                {
                  "expression": {
                    "id": 260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 251,
                      "name": "btcDown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 223,
                      "src": "2933:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BTCDOWN_$178",
                        "typeString": "contract BTCDOWN"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 257,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "2963:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LeveragedTrading_$864",
                                "typeString": "contract LeveragedTrading"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_LeveragedTrading_$864",
                                "typeString": "contract LeveragedTrading"
                              }
                            ],
                            "id": 256,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2955:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 255,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2955:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2955:13:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2943:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_BTCDOWN_$178_$",
                          "typeString": "function (address) returns (contract BTCDOWN)"
                        },
                        "typeName": {
                          "id": 253,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 252,
                            "name": "BTCDOWN",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 178,
                            "src": "2947:7:8"
                          },
                          "referencedDeclaration": 178,
                          "src": "2947:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BTCDOWN_$178",
                            "typeString": "contract BTCDOWN"
                          }
                        }
                      },
                      "id": 259,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2943:26:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BTCDOWN_$178",
                        "typeString": "contract BTCDOWN"
                      }
                    },
                    "src": "2933:36:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BTCDOWN_$178",
                      "typeString": "contract BTCDOWN"
                    }
                  },
                  "id": 261,
                  "nodeType": "ExpressionStatement",
                  "src": "2933:36:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "32",
                            "id": 265,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3006:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            }
                          ],
                          "expression": {
                            "id": 263,
                            "name": "amountUsdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 225,
                            "src": "2991:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 264,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1797,
                          "src": "2991:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2991:17:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 262,
                      "name": "issueBtcUp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 349,
                      "src": "2980:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2980:29:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 268,
                  "nodeType": "ExpressionStatement",
                  "src": "2980:29:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "32",
                            "id": 272,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3047:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            }
                          ],
                          "expression": {
                            "id": 270,
                            "name": "amountUsdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 225,
                            "src": "3032:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 271,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1797,
                          "src": "3032:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3032:17:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 269,
                      "name": "issueBtcDown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 421,
                      "src": "3019:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3019:31:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 275,
                  "nodeType": "ExpressionStatement",
                  "src": "3019:31:8"
                }
              ]
            },
            "functionSelector": "98881bc9",
            "id": 277,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 228,
                "modifierName": {
                  "id": 227,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 911,
                  "src": "2762:9:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "2762:9:8"
              }
            ],
            "name": "initializePool",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 226,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 225,
                  "mutability": "mutable",
                  "name": "amountUsdc",
                  "nodeType": "VariableDeclaration",
                  "scope": 277,
                  "src": "2735:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 224,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2735:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2734:20:8"
            },
            "returnParameters": {
              "id": 229,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2772:0:8"
            },
            "scope": 864,
            "src": "2711:347:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 348,
              "nodeType": "Block",
              "src": "3111:549:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 283,
                        "name": "poolIsInitialized",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 211,
                        "src": "3129:17:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520706f6f6c20776173206e6f7420696e697469616c697a65642e",
                        "id": 284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3148:31:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6c8581b5569b04a7d890ff8cc008c6c56dcd9e4620e22744b1def67d6b62938e",
                          "typeString": "literal_string \"The pool was not initialized.\""
                        },
                        "value": "The pool was not initialized."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6c8581b5569b04a7d890ff8cc008c6c56dcd9e4620e22744b1def67d6b62938e",
                          "typeString": "literal_string \"The pool was not initialized.\""
                        }
                      ],
                      "id": 282,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3121:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3121:59:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 286,
                  "nodeType": "ExpressionStatement",
                  "src": "3121:59:8"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 287,
                      "name": "rebalanceLeveragedTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 621,
                      "src": "3190:24:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3190:26:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 289,
                  "nodeType": "ExpressionStatement",
                  "src": "3190:26:8"
                },
                {
                  "expression": {
                    "id": 293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 290,
                      "name": "priceBtcUp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 188,
                      "src": "3235:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 291,
                        "name": "getBtcUpPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 690,
                        "src": "3248:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 292,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3248:15:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3235:28:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 294,
                  "nodeType": "ExpressionStatement",
                  "src": "3235:28:8"
                },
                {
                  "assignments": [
                    296
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 296,
                      "mutability": "mutable",
                      "name": "amountLeveragedTokens",
                      "nodeType": "VariableDeclaration",
                      "scope": 348,
                      "src": "3273:29:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 295,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3273:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 306,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 304,
                        "name": "priceBtcUp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 188,
                        "src": "3333:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_1000000_by_1",
                              "typeString": "int_const 1000000"
                            },
                            "id": 301,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 299,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3320:2:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "hexValue": "36",
                              "id": 300,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3326:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_6_by_1",
                                "typeString": "int_const 6"
                              },
                              "value": "6"
                            },
                            "src": "3320:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000_by_1",
                              "typeString": "int_const 1000000"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1000000_by_1",
                              "typeString": "int_const 1000000"
                            }
                          ],
                          "expression": {
                            "id": 297,
                            "name": "amountUsdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 279,
                            "src": "3305:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1782,
                          "src": "3305:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3305:23:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 303,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1797,
                      "src": "3305:27:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3305:39:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3273:71:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 310,
                        "name": "amountLeveragedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 296,
                        "src": "3366:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 307,
                        "name": "btcUp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 220,
                        "src": "3355:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BTCUP_$108",
                          "typeString": "contract BTCUP"
                        }
                      },
                      "id": 309,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72,
                      "src": "3355:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3355:33:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 312,
                  "nodeType": "ExpressionStatement",
                  "src": "3355:33:8"
                },
                {
                  "expression": {
                    "id": 318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 313,
                      "name": "amountBtcUp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 202,
                      "src": "3398:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 316,
                          "name": "amountLeveragedTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 296,
                          "src": "3428:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 314,
                          "name": "amountBtcUp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 202,
                          "src": "3412:11:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1752,
                        "src": "3412:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 317,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3412:38:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3398:52:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 319,
                  "nodeType": "ExpressionStatement",
                  "src": "3398:52:8"
                },
                {
                  "expression": {
                    "id": 325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 320,
                      "name": "collateralBtcUp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 196,
                      "src": "3460:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 323,
                          "name": "amountUsdc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 279,
                          "src": "3498:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 321,
                          "name": "collateralBtcUp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 196,
                          "src": "3478:15:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1752,
                        "src": "3478:19:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 324,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3478:31:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3460:49:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 326,
                  "nodeType": "ExpressionStatement",
                  "src": "3460:49:8"
                },
                {
                  "assignments": [
                    329
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 329,
                      "mutability": "mutable",
                      "name": "usdc",
                      "nodeType": "VariableDeclaration",
                      "scope": 348,
                      "src": "3520:11:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$38",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 328,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 327,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 38,
                          "src": "3520:6:8"
                        },
                        "referencedDeclaration": 38,
                        "src": "3520:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$38",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 333,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 331,
                        "name": "addressUsdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 214,
                        "src": "3541:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 330,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "3534:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$38_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3534:19:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$38",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3520:33:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 337,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3589:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 338,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3589:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 341,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "3609:4:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LeveragedTrading_$864",
                                  "typeString": "contract LeveragedTrading"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LeveragedTrading_$864",
                                  "typeString": "contract LeveragedTrading"
                                }
                              ],
                              "id": 340,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3601:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 339,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3601:7:8",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 342,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3601:13:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 343,
                            "name": "amountUsdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 279,
                            "src": "3616:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 335,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 329,
                            "src": "3571:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$38",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 336,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28,
                          "src": "3571:17:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3571:56:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "55534443207472616e73666572206661696c65642e",
                        "id": 345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3629:23:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4423603f23b62bc938c76ebee4735d5f883a335a9c94590879f4de27de08569c",
                          "typeString": "literal_string \"USDC transfer failed.\""
                        },
                        "value": "USDC transfer failed."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4423603f23b62bc938c76ebee4735d5f883a335a9c94590879f4de27de08569c",
                          "typeString": "literal_string \"USDC transfer failed.\""
                        }
                      ],
                      "id": 334,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3563:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3563:90:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 347,
                  "nodeType": "ExpressionStatement",
                  "src": "3563:90:8"
                }
              ]
            },
            "functionSelector": "f530c04a",
            "id": 349,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "issueBtcUp",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 280,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 279,
                  "mutability": "mutable",
                  "name": "amountUsdc",
                  "nodeType": "VariableDeclaration",
                  "scope": 349,
                  "src": "3084:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 278,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3084:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3083:20:8"
            },
            "returnParameters": {
              "id": 281,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3111:0:8"
            },
            "scope": 864,
            "src": "3064:596:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 420,
              "nodeType": "Block",
              "src": "3715:565:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 355,
                        "name": "poolIsInitialized",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 211,
                        "src": "3733:17:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520706f6f6c20776173206e6f7420696e697469616c697a65642e",
                        "id": 356,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3752:31:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6c8581b5569b04a7d890ff8cc008c6c56dcd9e4620e22744b1def67d6b62938e",
                          "typeString": "literal_string \"The pool was not initialized.\""
                        },
                        "value": "The pool was not initialized."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6c8581b5569b04a7d890ff8cc008c6c56dcd9e4620e22744b1def67d6b62938e",
                          "typeString": "literal_string \"The pool was not initialized.\""
                        }
                      ],
                      "id": 354,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3725:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3725:59:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 358,
                  "nodeType": "ExpressionStatement",
                  "src": "3725:59:8"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 359,
                      "name": "rebalanceLeveragedTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 621,
                      "src": "3794:24:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3794:26:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 361,
                  "nodeType": "ExpressionStatement",
                  "src": "3794:26:8"
                },
                {
                  "expression": {
                    "id": 365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 362,
                      "name": "priceBtcDown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 193,
                      "src": "3839:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 363,
                        "name": "getBtcDownPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 711,
                        "src": "3854:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 364,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3854:17:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3839:32:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 366,
                  "nodeType": "ExpressionStatement",
                  "src": "3839:32:8"
                },
                {
                  "assignments": [
                    368
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 368,
                      "mutability": "mutable",
                      "name": "amountLeveragedTokens",
                      "nodeType": "VariableDeclaration",
                      "scope": 420,
                      "src": "3881:29:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 367,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3881:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 378,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 376,
                        "name": "priceBtcDown",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 193,
                        "src": "3941:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_1000000_by_1",
                              "typeString": "int_const 1000000"
                            },
                            "id": 373,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 371,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3928:2:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "hexValue": "36",
                              "id": 372,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3934:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_6_by_1",
                                "typeString": "int_const 6"
                              },
                              "value": "6"
                            },
                            "src": "3928:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000_by_1",
                              "typeString": "int_const 1000000"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1000000_by_1",
                              "typeString": "int_const 1000000"
                            }
                          ],
                          "expression": {
                            "id": 369,
                            "name": "amountUsdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 351,
                            "src": "3913:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 370,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1782,
                          "src": "3913:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 374,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3913:23:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 375,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1797,
                      "src": "3913:27:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3913:41:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3881:73:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 382,
                        "name": "amountLeveragedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 368,
                        "src": "3978:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 379,
                        "name": "btcDown",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 223,
                        "src": "3965:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BTCDOWN_$178",
                          "typeString": "contract BTCDOWN"
                        }
                      },
                      "id": 381,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 142,
                      "src": "3965:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3965:35:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 384,
                  "nodeType": "ExpressionStatement",
                  "src": "3965:35:8"
                },
                {
                  "expression": {
                    "id": 390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 385,
                      "name": "amountBtcDown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 205,
                      "src": "4010:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 388,
                          "name": "amountLeveragedTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 368,
                          "src": "4044:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 386,
                          "name": "amountBtcDown",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 205,
                          "src": "4026:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1752,
                        "src": "4026:17:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 389,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4026:40:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4010:56:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 391,
                  "nodeType": "ExpressionStatement",
                  "src": "4010:56:8"
                },
                {
                  "expression": {
                    "id": 397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 392,
                      "name": "collateralBtcDown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 199,
                      "src": "4076:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 395,
                          "name": "amountUsdc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 351,
                          "src": "4118:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 393,
                          "name": "collateralBtcDown",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 199,
                          "src": "4096:17:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1752,
                        "src": "4096:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 396,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4096:33:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4076:53:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 398,
                  "nodeType": "ExpressionStatement",
                  "src": "4076:53:8"
                },
                {
                  "assignments": [
                    401
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 401,
                      "mutability": "mutable",
                      "name": "usdc",
                      "nodeType": "VariableDeclaration",
                      "scope": 420,
                      "src": "4140:11:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$38",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 400,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 399,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 38,
                          "src": "4140:6:8"
                        },
                        "referencedDeclaration": 38,
                        "src": "4140:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$38",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 405,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 403,
                        "name": "addressUsdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 214,
                        "src": "4161:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 402,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "4154:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$38_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4154:19:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$38",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4140:33:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 409,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4209:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 410,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4209:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 413,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "4229:4:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LeveragedTrading_$864",
                                  "typeString": "contract LeveragedTrading"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LeveragedTrading_$864",
                                  "typeString": "contract LeveragedTrading"
                                }
                              ],
                              "id": 412,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4221:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 411,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4221:7:8",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 414,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4221:13:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 415,
                            "name": "amountUsdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 351,
                            "src": "4236:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 407,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 401,
                            "src": "4191:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$38",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 408,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28,
                          "src": "4191:17:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4191:56:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "55534443207472616e73666572206661696c65642e",
                        "id": 417,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4249:23:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4423603f23b62bc938c76ebee4735d5f883a335a9c94590879f4de27de08569c",
                          "typeString": "literal_string \"USDC transfer failed.\""
                        },
                        "value": "USDC transfer failed."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4423603f23b62bc938c76ebee4735d5f883a335a9c94590879f4de27de08569c",
                          "typeString": "literal_string \"USDC transfer failed.\""
                        }
                      ],
                      "id": 406,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4183:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4183:90:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 419,
                  "nodeType": "ExpressionStatement",
                  "src": "4183:90:8"
                }
              ]
            },
            "functionSelector": "c46d4f09",
            "id": 421,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "issueBtcDown",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 352,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 351,
                  "mutability": "mutable",
                  "name": "amountUsdc",
                  "nodeType": "VariableDeclaration",
                  "scope": 421,
                  "src": "3688:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 350,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3688:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3687:20:8"
            },
            "returnParameters": {
              "id": 353,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3715:0:8"
            },
            "scope": 864,
            "src": "3666:614:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 487,
              "nodeType": "Block",
              "src": "4345:496:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 427,
                        "name": "poolIsInitialized",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 211,
                        "src": "4363:17:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520706f6f6c20776173206e6f7420696e697469616c697a65642e",
                        "id": 428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4382:31:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6c8581b5569b04a7d890ff8cc008c6c56dcd9e4620e22744b1def67d6b62938e",
                          "typeString": "literal_string \"The pool was not initialized.\""
                        },
                        "value": "The pool was not initialized."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6c8581b5569b04a7d890ff8cc008c6c56dcd9e4620e22744b1def67d6b62938e",
                          "typeString": "literal_string \"The pool was not initialized.\""
                        }
                      ],
                      "id": 426,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4355:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4355:59:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 430,
                  "nodeType": "ExpressionStatement",
                  "src": "4355:59:8"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 431,
                      "name": "rebalanceLeveragedTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 621,
                      "src": "4424:24:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4424:26:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 433,
                  "nodeType": "ExpressionStatement",
                  "src": "4424:26:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 437,
                        "name": "amountLeveragedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 423,
                        "src": "4471:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 434,
                        "name": "btcUp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 220,
                        "src": "4460:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BTCUP_$108",
                          "typeString": "contract BTCUP"
                        }
                      },
                      "id": 436,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 87,
                      "src": "4460:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4460:33:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 439,
                  "nodeType": "ExpressionStatement",
                  "src": "4460:33:8"
                },
                {
                  "expression": {
                    "id": 443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 440,
                      "name": "priceBtcUp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 188,
                      "src": "4504:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 441,
                        "name": "getBtcUpPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 690,
                        "src": "4517:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 442,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4517:15:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4504:28:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 444,
                  "nodeType": "ExpressionStatement",
                  "src": "4504:28:8"
                },
                {
                  "assignments": [
                    446
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 446,
                      "mutability": "mutable",
                      "name": "amountUsdc",
                      "nodeType": "VariableDeclaration",
                      "scope": 487,
                      "src": "4542:18:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 445,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4542:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 456,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        },
                        "id": 454,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3130",
                          "id": 452,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4605:2:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "hexValue": "36",
                          "id": 453,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4611:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_6_by_1",
                            "typeString": "int_const 6"
                          },
                          "value": "6"
                        },
                        "src": "4605:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 449,
                            "name": "priceBtcUp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 188,
                            "src": "4589:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 447,
                            "name": "amountLeveragedTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 423,
                            "src": "4563:21:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 448,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1782,
                          "src": "4563:25:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4563:37:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 451,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1797,
                      "src": "4563:41:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4563:50:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4542:71:8"
                },
                {
                  "expression": {
                    "id": 462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 457,
                      "name": "amountBtcUp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 202,
                      "src": "4624:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 460,
                          "name": "amountLeveragedTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 423,
                          "src": "4654:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 458,
                          "name": "amountBtcUp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 202,
                          "src": "4638:11:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 459,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1767,
                        "src": "4638:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 461,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4638:38:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4624:52:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 463,
                  "nodeType": "ExpressionStatement",
                  "src": "4624:52:8"
                },
                {
                  "expression": {
                    "id": 469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 464,
                      "name": "collateralBtcUp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 196,
                      "src": "4686:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 467,
                          "name": "amountUsdc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 446,
                          "src": "4724:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 465,
                          "name": "collateralBtcUp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 196,
                          "src": "4704:15:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1767,
                        "src": "4704:19:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 468,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4704:31:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4686:49:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 470,
                  "nodeType": "ExpressionStatement",
                  "src": "4686:49:8"
                },
                {
                  "assignments": [
                    473
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 473,
                      "mutability": "mutable",
                      "name": "usdc",
                      "nodeType": "VariableDeclaration",
                      "scope": 487,
                      "src": "4746:11:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$38",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 472,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 471,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 38,
                          "src": "4746:6:8"
                        },
                        "referencedDeclaration": 38,
                        "src": "4746:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$38",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 477,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 475,
                        "name": "addressUsdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 214,
                        "src": "4767:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 474,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "4760:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$38_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4760:19:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$38",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4746:33:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 481,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4810:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 482,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4810:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 483,
                            "name": "amountUsdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 446,
                            "src": "4822:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 479,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 473,
                            "src": "4796:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$38",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 480,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17,
                          "src": "4796:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 484,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4796:37:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 478,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "4789:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4789:45:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 486,
                  "nodeType": "ExpressionStatement",
                  "src": "4789:45:8"
                }
              ]
            },
            "functionSelector": "d1ee539d",
            "id": 488,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redeemBtcUp",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 424,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 423,
                  "mutability": "mutable",
                  "name": "amountLeveragedTokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 488,
                  "src": "4307:29:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 422,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4307:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4306:31:8"
            },
            "returnParameters": {
              "id": 425,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4345:0:8"
            },
            "scope": 864,
            "src": "4286:555:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 554,
              "nodeType": "Block",
              "src": "4908:521:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 494,
                        "name": "poolIsInitialized",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 211,
                        "src": "4926:17:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520706f6f6c20776173206e6f7420696e697469616c697a65642e",
                        "id": 495,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4945:31:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6c8581b5569b04a7d890ff8cc008c6c56dcd9e4620e22744b1def67d6b62938e",
                          "typeString": "literal_string \"The pool was not initialized.\""
                        },
                        "value": "The pool was not initialized."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6c8581b5569b04a7d890ff8cc008c6c56dcd9e4620e22744b1def67d6b62938e",
                          "typeString": "literal_string \"The pool was not initialized.\""
                        }
                      ],
                      "id": 493,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4918:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4918:59:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 497,
                  "nodeType": "ExpressionStatement",
                  "src": "4918:59:8"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 498,
                      "name": "rebalanceLeveragedTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 621,
                      "src": "4987:24:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4987:26:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 500,
                  "nodeType": "ExpressionStatement",
                  "src": "4987:26:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 504,
                        "name": "amountLeveragedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 490,
                        "src": "5036:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 501,
                        "name": "btcDown",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 223,
                        "src": "5023:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BTCDOWN_$178",
                          "typeString": "contract BTCDOWN"
                        }
                      },
                      "id": 503,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 157,
                      "src": "5023:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5023:35:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 506,
                  "nodeType": "ExpressionStatement",
                  "src": "5023:35:8"
                },
                {
                  "expression": {
                    "id": 510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 507,
                      "name": "priceBtcDown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 193,
                      "src": "5069:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 508,
                        "name": "getBtcDownPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 711,
                        "src": "5084:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 509,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5084:17:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5069:32:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 511,
                  "nodeType": "ExpressionStatement",
                  "src": "5069:32:8"
                },
                {
                  "assignments": [
                    513
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 513,
                      "mutability": "mutable",
                      "name": "amountUsdc",
                      "nodeType": "VariableDeclaration",
                      "scope": 554,
                      "src": "5111:18:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 512,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5111:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 523,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        },
                        "id": 521,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3130",
                          "id": 519,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5176:2:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "hexValue": "36",
                          "id": 520,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5182:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_6_by_1",
                            "typeString": "int_const 6"
                          },
                          "value": "6"
                        },
                        "src": "5176:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 516,
                            "name": "priceBtcDown",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 193,
                            "src": "5158:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 514,
                            "name": "amountLeveragedTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 490,
                            "src": "5132:21:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 515,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1782,
                          "src": "5132:25:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 517,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5132:39:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 518,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1797,
                      "src": "5132:43:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5132:52:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5111:73:8"
                },
                {
                  "expression": {
                    "id": 529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 524,
                      "name": "amountBtcDown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 205,
                      "src": "5203:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 527,
                          "name": "amountLeveragedTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 490,
                          "src": "5237:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 525,
                          "name": "amountBtcDown",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 205,
                          "src": "5219:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 526,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1767,
                        "src": "5219:17:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 528,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5219:40:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5203:56:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 530,
                  "nodeType": "ExpressionStatement",
                  "src": "5203:56:8"
                },
                {
                  "expression": {
                    "id": 536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 531,
                      "name": "collateralBtcDown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 199,
                      "src": "5269:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 534,
                          "name": "amountUsdc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 513,
                          "src": "5311:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 532,
                          "name": "collateralBtcDown",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 199,
                          "src": "5289:17:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 533,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1767,
                        "src": "5289:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 535,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5289:33:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5269:53:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 537,
                  "nodeType": "ExpressionStatement",
                  "src": "5269:53:8"
                },
                {
                  "assignments": [
                    540
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 540,
                      "mutability": "mutable",
                      "name": "usdc",
                      "nodeType": "VariableDeclaration",
                      "scope": 554,
                      "src": "5333:11:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$38",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 539,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 538,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 38,
                          "src": "5333:6:8"
                        },
                        "referencedDeclaration": 38,
                        "src": "5333:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$38",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 544,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 542,
                        "name": "addressUsdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 214,
                        "src": "5354:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 541,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "5347:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$38_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5347:19:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$38",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5333:33:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 548,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5397:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 549,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5397:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 550,
                            "name": "amountUsdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 513,
                            "src": "5410:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 546,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 540,
                            "src": "5383:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$38",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 547,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17,
                          "src": "5383:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5383:38:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 545,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "5376:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5376:46:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 553,
                  "nodeType": "ExpressionStatement",
                  "src": "5376:46:8"
                }
              ]
            },
            "functionSelector": "a14274e8",
            "id": 555,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redeemBtcDown",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 491,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 490,
                  "mutability": "mutable",
                  "name": "amountLeveragedTokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 555,
                  "src": "4870:29:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 489,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4870:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4869:31:8"
            },
            "returnParameters": {
              "id": 492,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4908:0:8"
            },
            "scope": 864,
            "src": "4847:582:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 620,
              "nodeType": "Block",
              "src": "5478:610:8",
              "statements": [
                {
                  "assignments": [
                    559
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 559,
                      "mutability": "mutable",
                      "name": "btcPrice",
                      "nodeType": "VariableDeclaration",
                      "scope": 620,
                      "src": "5488:16:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 558,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5488:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 562,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 560,
                      "name": "getBtcPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 735,
                      "src": "5507:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5507:13:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5488:32:8"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 565,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 563,
                            "name": "collateralBtcUp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 196,
                            "src": "5535:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 564,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5553:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5535:19:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 566,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "5534:21:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 569,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 567,
                            "name": "collateralBtcDown",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 199,
                            "src": "5560:17:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 568,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5580:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5560:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 570,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "5559:23:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5534:48:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 615,
                  "nodeType": "IfStatement",
                  "src": "5530:519:8",
                  "trueBody": {
                    "id": 614,
                    "nodeType": "Block",
                    "src": "5584:465:8",
                    "statements": [
                      {
                        "assignments": [
                          573
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 573,
                            "mutability": "mutable",
                            "name": "rebalanceAmount",
                            "nodeType": "VariableDeclaration",
                            "scope": 614,
                            "src": "5598:23:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 572,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5598:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 577,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 575,
                              "name": "btcPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 559,
                              "src": "5643:8:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 574,
                            "name": "getRebalanceAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 669,
                            "src": "5624:18:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view returns (uint256)"
                            }
                          },
                          "id": 576,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5624:28:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5598:54:8"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          },
                          "id": 582,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 579,
                                "name": "btcPrice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 559,
                                "src": "5678:8:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 578,
                              "name": "getSign",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 640,
                              "src": "5670:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_int256_$",
                                "typeString": "function (uint256) view returns (int256)"
                              }
                            },
                            "id": 580,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5670:17:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 581,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5690:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5670:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 612,
                          "nodeType": "Block",
                          "src": "5875:163:8",
                          "statements": [
                            {
                              "expression": {
                                "id": 603,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 598,
                                  "name": "collateralBtcUp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 196,
                                  "src": "5893:15:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 601,
                                      "name": "rebalanceAmount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 573,
                                      "src": "5931:15:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 599,
                                      "name": "collateralBtcUp",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 196,
                                      "src": "5911:15:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 600,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sub",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1767,
                                    "src": "5911:19:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 602,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5911:36:8",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5893:54:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 604,
                              "nodeType": "ExpressionStatement",
                              "src": "5893:54:8"
                            },
                            {
                              "expression": {
                                "id": 610,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 605,
                                  "name": "collateralBtcDown",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 199,
                                  "src": "5965:17:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 608,
                                      "name": "rebalanceAmount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 573,
                                      "src": "6007:15:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 606,
                                      "name": "collateralBtcDown",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 199,
                                      "src": "5985:17:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 607,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "add",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1752,
                                    "src": "5985:21:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 609,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5985:38:8",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5965:58:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 611,
                              "nodeType": "ExpressionStatement",
                              "src": "5965:58:8"
                            }
                          ]
                        },
                        "id": 613,
                        "nodeType": "IfStatement",
                        "src": "5666:372:8",
                        "trueBody": {
                          "id": 597,
                          "nodeType": "Block",
                          "src": "5693:163:8",
                          "statements": [
                            {
                              "expression": {
                                "id": 588,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 583,
                                  "name": "collateralBtcUp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 196,
                                  "src": "5711:15:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 586,
                                      "name": "rebalanceAmount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 573,
                                      "src": "5749:15:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 584,
                                      "name": "collateralBtcUp",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 196,
                                      "src": "5729:15:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 585,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "add",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1752,
                                    "src": "5729:19:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 587,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5729:36:8",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5711:54:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 589,
                              "nodeType": "ExpressionStatement",
                              "src": "5711:54:8"
                            },
                            {
                              "expression": {
                                "id": 595,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 590,
                                  "name": "collateralBtcDown",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 199,
                                  "src": "5783:17:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 593,
                                      "name": "rebalanceAmount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 573,
                                      "src": "5825:15:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 591,
                                      "name": "collateralBtcDown",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 199,
                                      "src": "5803:17:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 592,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sub",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1767,
                                    "src": "5803:21:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 594,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5803:38:8",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5783:58:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 596,
                              "nodeType": "ExpressionStatement",
                              "src": "5783:58:8"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 618,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 616,
                      "name": "lastBtcPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 208,
                      "src": "6058:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 617,
                      "name": "btcPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 559,
                      "src": "6073:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6058:23:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 619,
                  "nodeType": "ExpressionStatement",
                  "src": "6058:23:8"
                }
              ]
            },
            "functionSelector": "6e5d6615",
            "id": 621,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "rebalanceLeveragedTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 556,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5468:2:8"
            },
            "returnParameters": {
              "id": 557,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5478:0:8"
            },
            "scope": 864,
            "src": "5435:653:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 639,
              "nodeType": "Block",
              "src": "6331:126:8",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 628,
                      "name": "btcPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 623,
                      "src": "6345:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 629,
                      "name": "lastBtcPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 208,
                      "src": "6356:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6345:23:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 637,
                    "nodeType": "Block",
                    "src": "6417:34:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 635,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "-",
                          "prefix": true,
                          "src": "6438:2:8",
                          "subExpression": {
                            "hexValue": "31",
                            "id": 634,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6439:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_minus_1_by_1",
                            "typeString": "int_const -1"
                          }
                        },
                        "functionReturnParameters": 627,
                        "id": 636,
                        "nodeType": "Return",
                        "src": "6431:9:8"
                      }
                    ]
                  },
                  "id": 638,
                  "nodeType": "IfStatement",
                  "src": "6341:110:8",
                  "trueBody": {
                    "id": 633,
                    "nodeType": "Block",
                    "src": "6370:33:8",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "31",
                          "id": 631,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6391:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "functionReturnParameters": 627,
                        "id": 632,
                        "nodeType": "Return",
                        "src": "6384:8:8"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 640,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSign",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 624,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 623,
                  "mutability": "mutable",
                  "name": "btcPrice",
                  "nodeType": "VariableDeclaration",
                  "scope": 640,
                  "src": "6282:16:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 622,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6282:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6281:18:8"
            },
            "returnParameters": {
              "id": 627,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 626,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 640,
                  "src": "6323:6:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 625,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6323:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6322:8:8"
            },
            "scope": 864,
            "src": "6265:192:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 668,
              "nodeType": "Block",
              "src": "6542:147:8",
              "statements": [
                {
                  "assignments": [
                    648
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 648,
                      "mutability": "mutable",
                      "name": "priceDiff",
                      "nodeType": "VariableDeclaration",
                      "scope": 668,
                      "src": "6552:17:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 647,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6552:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 652,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 650,
                        "name": "priceBtc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 642,
                        "src": "6585:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 649,
                      "name": "getPriceDiff",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 839,
                      "src": "6572:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6572:22:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6552:42:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        },
                        "id": 665,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3130",
                          "id": 663,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6674:2:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "hexValue": "36",
                          "id": 664,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6680:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_6_by_1",
                            "typeString": "int_const 6"
                          },
                          "value": "6"
                        },
                        "src": "6674:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 659,
                                "name": "priceDiff",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 648,
                                "src": "6658:9:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 658,
                              "name": "L",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 795,
                              "src": "6656:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256) pure returns (uint256)"
                              }
                            },
                            "id": 660,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6656:12:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 654,
                                "name": "collateralBtcUp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 196,
                                "src": "6616:15:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 655,
                                "name": "collateralBtcDown",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 199,
                                "src": "6633:17:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 653,
                              "name": "min",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 752,
                              "src": "6612:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 656,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6612:39:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 657,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1782,
                          "src": "6612:43:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 661,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6612:57:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 662,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1797,
                      "src": "6612:61:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6612:70:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 646,
                  "id": 667,
                  "nodeType": "Return",
                  "src": "6605:77:8"
                }
              ]
            },
            "id": 669,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRebalanceAmount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 643,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 642,
                  "mutability": "mutable",
                  "name": "priceBtc",
                  "nodeType": "VariableDeclaration",
                  "scope": 669,
                  "src": "6492:16:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 641,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6492:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6491:18:8"
            },
            "returnParameters": {
              "id": 646,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 645,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 669,
                  "src": "6533:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 644,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6533:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6532:9:8"
            },
            "scope": 864,
            "src": "6464:225:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 689,
              "nodeType": "Block",
              "src": "6780:102:8",
              "statements": [
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 676,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 674,
                        "name": "amountBtcUp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 202,
                        "src": "6797:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 675,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6812:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "6797:16:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "arguments": [
                        {
                          "id": 685,
                          "name": "amountBtcUp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 202,
                          "src": "6863:11:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              },
                              "id": 682,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 680,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6850:2:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "36",
                                "id": 681,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6856:1:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_6_by_1",
                                  "typeString": "int_const 6"
                                },
                                "value": "6"
                              },
                              "src": "6850:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              }
                            ],
                            "expression": {
                              "id": 678,
                              "name": "collateralBtcUp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 196,
                              "src": "6830:15:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 679,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1782,
                            "src": "6830:19:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 683,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6830:28:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 684,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1797,
                        "src": "6830:32:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 686,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6830:45:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "6797:78:8",
                    "trueExpression": {
                      "id": 677,
                      "name": "priceBtcUp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 188,
                      "src": "6817:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 673,
                  "id": 688,
                  "nodeType": "Return",
                  "src": "6790:85:8"
                }
              ]
            },
            "functionSelector": "f06847d6",
            "id": 690,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBtcUpPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 670,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6747:2:8"
            },
            "returnParameters": {
              "id": 673,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 672,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 690,
                  "src": "6771:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 671,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6771:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6770:9:8"
            },
            "scope": 864,
            "src": "6725:157:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 710,
              "nodeType": "Block",
              "src": "6977:122:8",
              "statements": [
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 697,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 695,
                        "name": "amountBtcDown",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 205,
                        "src": "7006:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 696,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7023:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "7006:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "arguments": [
                        {
                          "id": 706,
                          "name": "amountBtcDown",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 205,
                          "src": "7078:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              },
                              "id": 703,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 701,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7065:2:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "36",
                                "id": 702,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7071:1:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_6_by_1",
                                  "typeString": "int_const 6"
                                },
                                "value": "6"
                              },
                              "src": "7065:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              }
                            ],
                            "expression": {
                              "id": 699,
                              "name": "collateralBtcDown",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 199,
                              "src": "7043:17:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 700,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1782,
                            "src": "7043:21:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 704,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7043:30:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 705,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1797,
                        "src": "7043:34:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 707,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7043:49:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "7006:86:8",
                    "trueExpression": {
                      "id": 698,
                      "name": "priceBtcDown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 193,
                      "src": "7028:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 694,
                  "id": 709,
                  "nodeType": "Return",
                  "src": "6999:93:8"
                }
              ]
            },
            "functionSelector": "81c2b29b",
            "id": 711,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBtcDownPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 691,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6944:2:8"
            },
            "returnParameters": {
              "id": 694,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 693,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 711,
                  "src": "6968:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 692,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6968:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6967:9:8"
            },
            "scope": 864,
            "src": "6920:179:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 734,
              "nodeType": "Block",
              "src": "7204:264:8",
              "statements": [
                {
                  "assignments": [
                    718
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 718,
                      "mutability": "mutable",
                      "name": "priceFeed",
                      "nodeType": "VariableDeclaration",
                      "scope": 734,
                      "src": "7214:31:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$1934",
                        "typeString": "contract AggregatorV3Interface"
                      },
                      "typeName": {
                        "id": 717,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 716,
                          "name": "AggregatorV3Interface",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1934,
                          "src": "7214:21:8"
                        },
                        "referencedDeclaration": 1934,
                        "src": "7214:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$1934",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 722,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 720,
                        "name": "addressBtcUSDFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 217,
                        "src": "7270:17:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 719,
                      "name": "AggregatorV3Interface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1934,
                      "src": "7248:21:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$1934_$",
                        "typeString": "type(contract AggregatorV3Interface)"
                      }
                    },
                    "id": 721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7248:40:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$1934",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7214:74:8"
                },
                {
                  "assignments": [
                    null,
                    724,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 724,
                      "mutability": "mutable",
                      "name": "answer",
                      "nodeType": "VariableDeclaration",
                      "scope": 734,
                      "src": "7300:13:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 723,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7300:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null
                  ],
                  "id": 728,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 725,
                        "name": "priceFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 718,
                        "src": "7320:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$1934",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 726,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1933,
                      "src": "7320:25:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 727,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7320:27:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7298:49:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 731,
                        "name": "answer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 724,
                        "src": "7374:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 730,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "7366:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 729,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7366:7:8",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7366:15:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 715,
                  "id": 733,
                  "nodeType": "Return",
                  "src": "7359:22:8"
                }
              ]
            },
            "functionSelector": "3a3610bc",
            "id": 735,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBtcPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 712,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7171:2:8"
            },
            "returnParameters": {
              "id": 715,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 714,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 735,
                  "src": "7195:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 713,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7195:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7194:9:8"
            },
            "scope": 864,
            "src": "7151:317:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 751,
              "nodeType": "Block",
              "src": "7545:38:8",
              "statements": [
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 746,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 744,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 737,
                        "src": "7562:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<=",
                      "rightExpression": {
                        "id": 745,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 739,
                        "src": "7567:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "7562:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 748,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 739,
                      "src": "7575:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "7562:14:8",
                    "trueExpression": {
                      "id": 747,
                      "name": "a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 737,
                      "src": "7571:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 743,
                  "id": 750,
                  "nodeType": "Return",
                  "src": "7555:21:8"
                }
              ]
            },
            "id": 752,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "min",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 740,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 737,
                  "mutability": "mutable",
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 752,
                  "src": "7491:9:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 736,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7491:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 739,
                  "mutability": "mutable",
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 752,
                  "src": "7502:9:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 738,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7502:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7490:22:8"
            },
            "returnParameters": {
              "id": 743,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 742,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 752,
                  "src": "7536:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 741,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7536:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7535:9:8"
            },
            "scope": 864,
            "src": "7478:105:8",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 794,
              "nodeType": "Block",
              "src": "7643:171:8",
              "statements": [
                {
                  "assignments": [
                    760
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 760,
                      "mutability": "mutable",
                      "name": "denom",
                      "nodeType": "VariableDeclaration",
                      "scope": 794,
                      "src": "7679:13:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 759,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7679:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 779,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 778,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 774,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 770,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "39",
                          "id": 761,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7695:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_9_by_1",
                            "typeString": "int_const 9"
                          },
                          "value": "9"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 768,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 764,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 762,
                                  "name": "x",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 754,
                                  "src": "7700:1:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "hexValue": "32",
                                  "id": 763,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7705:1:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "src": "7700:6:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_rational_1000000_by_1",
                                  "typeString": "int_const 1000000"
                                },
                                "id": 767,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "3130",
                                  "id": 765,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7709:2:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10_by_1",
                                    "typeString": "int_const 10"
                                  },
                                  "value": "10"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "hexValue": "36",
                                  "id": 766,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7715:1:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_6_by_1",
                                    "typeString": "int_const 6"
                                  },
                                  "value": "6"
                                },
                                "src": "7709:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000_by_1",
                                  "typeString": "int_const 1000000"
                                }
                              },
                              "src": "7700:16:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 769,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "7699:18:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7695:22:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 773,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "33",
                          "id": 771,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7721:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "id": 772,
                          "name": "x",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 754,
                          "src": "7725:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7721:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "7695:31:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_rational_1000000_by_1",
                        "typeString": "int_const 1000000"
                      },
                      "id": 777,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3130",
                        "id": 775,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7729:2:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "hexValue": "36",
                        "id": 776,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7735:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        },
                        "value": "6"
                      },
                      "src": "7729:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000_by_1",
                        "typeString": "int_const 1000000"
                      }
                    },
                    "src": "7695:41:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7679:57:8"
                },
                {
                  "assignments": [
                    781
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 781,
                      "mutability": "mutable",
                      "name": "num",
                      "nodeType": "VariableDeclaration",
                      "scope": 794,
                      "src": "7746:11:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 780,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7746:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 785,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_rational_1000000000000_by_1",
                      "typeString": "int_const 1000000000000"
                    },
                    "id": 784,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3130",
                      "id": 782,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7760:2:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "hexValue": "3132",
                      "id": 783,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7766:2:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_12_by_1",
                        "typeString": "int_const 12"
                      },
                      "value": "12"
                    },
                    "src": "7760:8:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000000_by_1",
                      "typeString": "int_const 1000000000000"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7746:22:8"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_rational_1000000_by_1",
                        "typeString": "int_const 1000000"
                      },
                      "id": 788,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3130",
                        "id": 786,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7786:2:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "hexValue": "36",
                        "id": 787,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7792:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        },
                        "value": "6"
                      },
                      "src": "7786:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000_by_1",
                        "typeString": "int_const 1000000"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 791,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 789,
                        "name": "num",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 781,
                        "src": "7796:3:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "id": 790,
                        "name": "denom",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 760,
                        "src": "7802:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "7796:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7786:21:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 758,
                  "id": 793,
                  "nodeType": "Return",
                  "src": "7779:28:8"
                }
              ]
            },
            "id": 795,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "L",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 755,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 754,
                  "mutability": "mutable",
                  "name": "x",
                  "nodeType": "VariableDeclaration",
                  "scope": 795,
                  "src": "7600:9:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 753,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7600:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7599:11:8"
            },
            "returnParameters": {
              "id": 758,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 757,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 795,
                  "src": "7634:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 756,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7634:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7633:9:8"
            },
            "scope": 864,
            "src": "7589:225:8",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 838,
              "nodeType": "Block",
              "src": "7892:246:8",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 802,
                      "name": "btcPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 797,
                      "src": "7923:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 803,
                      "name": "lastBtcPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 208,
                      "src": "7934:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7923:23:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 836,
                    "nodeType": "Block",
                    "src": "8047:84:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              },
                              "id": 833,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 831,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8112:2:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "36",
                                "id": 832,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8118:1:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_6_by_1",
                                  "typeString": "int_const 6"
                                },
                                "value": "6"
                              },
                              "src": "8112:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 828,
                                  "name": "btcPrice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 797,
                                  "src": "8098:8:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_rational_1000000_by_1",
                                        "typeString": "int_const 1000000"
                                      },
                                      "id": 825,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "hexValue": "3130",
                                        "id": 823,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "8085:2:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_10_by_1",
                                          "typeString": "int_const 10"
                                        },
                                        "value": "10"
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "**",
                                      "rightExpression": {
                                        "hexValue": "36",
                                        "id": 824,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "8091:1:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_6_by_1",
                                          "typeString": "int_const 6"
                                        },
                                        "value": "6"
                                      },
                                      "src": "8085:7:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1000000_by_1",
                                        "typeString": "int_const 1000000"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_1000000_by_1",
                                        "typeString": "int_const 1000000"
                                      }
                                    ],
                                    "expression": {
                                      "id": 821,
                                      "name": "lastBtcPrice",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 208,
                                      "src": "8068:12:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 822,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1782,
                                    "src": "8068:16:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 826,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8068:25:8",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 827,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1797,
                                "src": "8068:29:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 829,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8068:39:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 830,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1767,
                            "src": "8068:43:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 834,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8068:52:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 801,
                        "id": 835,
                        "nodeType": "Return",
                        "src": "8061:59:8"
                      }
                    ]
                  },
                  "id": 837,
                  "nodeType": "IfStatement",
                  "src": "7919:212:8",
                  "trueBody": {
                    "id": 820,
                    "nodeType": "Block",
                    "src": "7948:84:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              },
                              "id": 817,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 815,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8013:2:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "36",
                                "id": 816,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8019:1:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_6_by_1",
                                  "typeString": "int_const 6"
                                },
                                "value": "6"
                              },
                              "src": "8013:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 812,
                                  "name": "lastBtcPrice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 208,
                                  "src": "7995:12:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_rational_1000000_by_1",
                                        "typeString": "int_const 1000000"
                                      },
                                      "id": 809,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "hexValue": "3130",
                                        "id": 807,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7982:2:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_10_by_1",
                                          "typeString": "int_const 10"
                                        },
                                        "value": "10"
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "**",
                                      "rightExpression": {
                                        "hexValue": "36",
                                        "id": 808,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7988:1:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_6_by_1",
                                          "typeString": "int_const 6"
                                        },
                                        "value": "6"
                                      },
                                      "src": "7982:7:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1000000_by_1",
                                        "typeString": "int_const 1000000"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_1000000_by_1",
                                        "typeString": "int_const 1000000"
                                      }
                                    ],
                                    "expression": {
                                      "id": 805,
                                      "name": "btcPrice",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 797,
                                      "src": "7969:8:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 806,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1782,
                                    "src": "7969:12:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 810,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7969:21:8",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 811,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1797,
                                "src": "7969:25:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 813,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7969:39:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 814,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1767,
                            "src": "7969:43:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 818,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7969:52:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 801,
                        "id": 819,
                        "nodeType": "Return",
                        "src": "7962:59:8"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 839,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPriceDiff",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 798,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 797,
                  "mutability": "mutable",
                  "name": "btcPrice",
                  "nodeType": "VariableDeclaration",
                  "scope": 839,
                  "src": "7842:16:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 796,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7842:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7841:18:8"
            },
            "returnParameters": {
              "id": 801,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 800,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 839,
                  "src": "7883:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 799,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7883:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7882:9:8"
            },
            "scope": 864,
            "src": "7820:318:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 850,
              "nodeType": "Block",
              "src": "8200:51:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 846,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8233:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 847,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8233:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 844,
                        "name": "btcUp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 220,
                        "src": "8217:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BTCUP_$108",
                          "typeString": "contract BTCUP"
                        }
                      },
                      "id": 845,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1067,
                      "src": "8217:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8217:27:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 843,
                  "id": 849,
                  "nodeType": "Return",
                  "src": "8210:34:8"
                }
              ]
            },
            "functionSelector": "157d0129",
            "id": 851,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBtcupBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 840,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8168:2:8"
            },
            "returnParameters": {
              "id": 843,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 842,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 851,
                  "src": "8191:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 841,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8191:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8190:9:8"
            },
            "scope": 864,
            "src": "8144:107:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 862,
              "nodeType": "Block",
              "src": "8315:53:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 858,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8350:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8350:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 856,
                        "name": "btcDown",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 223,
                        "src": "8332:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BTCDOWN_$178",
                          "typeString": "contract BTCDOWN"
                        }
                      },
                      "id": 857,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1067,
                      "src": "8332:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8332:29:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 855,
                  "id": 861,
                  "nodeType": "Return",
                  "src": "8325:36:8"
                }
              ]
            },
            "functionSelector": "c7e3b124",
            "id": 863,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBtcdownBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 852,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8283:2:8"
            },
            "returnParameters": {
              "id": 855,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 854,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 863,
                  "src": "8306:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 853,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8306:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8305:9:8"
            },
            "scope": 864,
            "src": "8257:111:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 865,
        "src": "1863:6509:8"
      }
    ],
    "src": "32:8340:8"
  },
  "bytecode": "6080604052620f42406001819055600255600060038190556004819055600581905560068190556007556008805474b7a4f3e9097c08da09517b5ab877f7a917224ede006001600160a81b0319909116179055600980546001600160a01b031916736135b13325bfc4b00278b4abc5e20bbce2d6580e17905534801561008457600080fd5b5061009561009061009a565b61009e565b6100ee565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6132d5806100fd6000396000f3fe60806040523480156200001157600080fd5b50600436106200015f5760003560e01c8063b75cbe0b11620000c9578063f0156e8a1162000087578063f0156e8a1462000261578063f06847d6146200026b578063f2fde38b1462000275578063f4352c57146200028c578063f530c04a1462000296578063feae67b014620002ad576200015f565b8063b75cbe0b1462000215578063c46d4f09146200021f578063c7e3b1241462000236578063d1ee539d1462000240578063dde7be2c1462000257576200015f565b80636e5d661511620001235780636e5d661514620001ae578063715018a614620001ba57806381c2b29b14620001c45780638da5cb5b14620001ce57806398881bc914620001e7578063a14274e814620001fe576200015f565b806234b9cc14620001645780630c3e5343146200018657806314d7c6d21462000190578063157d0129146200019a5780633a3610bc14620001a4575b600080fd5b6200016e620002c6565b6040516200017d919062001180565b60405180910390f35b6200016e620002cc565b6200016e620002d2565b6200016e620002d8565b6200016e62000364565b620001b8620003f5565b005b620001b862000497565b6200016e620004f4565b620001d862000536565b6040516200017d919062001002565b620001b8620001f836600462000f7c565b62000545565b620001b86200020f36600462000f7c565b62000697565b6200016e6200082c565b620001b86200023036600462000f7c565b62000832565b6200016e620009c4565b620001b86200025136600462000f7c565b620009f7565b6200016e62000b16565b6200016e62000b1c565b6200016e62000b22565b620001b86200028636600462000f31565b62000b57565b6200016e62000bd1565b620001b8620002a736600462000f7c565b62000bd7565b620002b762000cf4565b6040516200017d919062001053565b60055481565b60025481565b60045481565b600a546040516370a0823160e01b81526000916001600160a01b0316906370a08231906200030b90339060040162001002565b60206040518083038186803b1580156200032457600080fd5b505afa15801562000339573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200035f919062000f95565b905090565b60095460408051633fabe5a360e21b815290516000926001600160a01b0316918391839163feaf968c9160048083019260a0929190829003018186803b158015620003ae57600080fd5b505afa158015620003c3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003e9919062000fae565b50919550505050505090565b60006200040162000364565b905060006003541180156200041857506000600454115b15620004925760006200042b8262000cfd565b905060006200043a8362000d44565b13156200046b5760035462000450908262000d64565b60035560045462000462908262000d79565b60045562000490565b6003546200047a908262000d79565b6003556004546200048c908262000d64565b6004555b505b600755565b620004a162000d87565b6001600160a01b0316620004b462000536565b6001600160a01b031614620004e65760405162461bcd60e51b8152600401620004dd906200110a565b60405180910390fd5b620004f2600062000d8b565b565b60006006546000146200052f576200052960065462000522620f424060045462000ddb90919063ffffffff16565b9062000de9565b6200035f565b5060025490565b6000546001600160a01b031690565b6200054f62000d87565b6001600160a01b03166200056262000536565b6001600160a01b0316146200058b5760405162461bcd60e51b8152600401620004dd906200110a565b60085460ff1615620005b15760405162461bcd60e51b8152600401620004dd906200113f565b6008805460ff191660011790556040513090620005ce9062000efa565b620005da919062001002565b604051809103906000f080158015620005f7573d6000803e3d6000fd5b50600a80546001600160a01b0319166001600160a01b03929092169190911790556040513090620006289062000f08565b62000634919062001002565b604051809103906000f08015801562000651573d6000803e3d6000fd5b50600b80546001600160a01b0319166001600160a01b039290921691909117905562000683620002a782600262000de9565b620006946200023082600262000de9565b50565b60085460ff16620006bc5760405162461bcd60e51b8152600401620004dd90620010d3565b620006c6620003f5565b600b54604051630852cd8d60e31b81526001600160a01b03909116906342966c6890620006f890849060040162001180565b600060405180830381600087803b1580156200071357600080fd5b505af115801562000728573d6000803e3d6000fd5b5050505062000736620004f4565b60028190556000906200075590620f4240906200052290859062000ddb565b60065490915062000767908362000d79565b60065560045462000779908262000d79565b600490815560085460405163a9059cbb60e01b81526101009091046001600160a01b031691829163a9059cbb91620007b69133918791016200103a565b602060405180830381600087803b158015620007d157600080fd5b505af1158015620007e6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200080c919062000f5a565b6200082757634e487b7160e01b600052600160045260246000fd5b505050565b60065481565b60085460ff16620008575760405162461bcd60e51b8152600401620004dd90620010d3565b62000861620003f5565b6200086b620004f4565b600281905560009062000887906200052284620f424062000ddb565b600b5460405163140e25ad60e31b81529192506001600160a01b03169063a0712d6890620008ba90849060040162001180565b600060405180830381600087803b158015620008d557600080fd5b505af1158015620008ea573d6000803e3d6000fd5b5050600654620008fe925090508262000d64565b60065560045462000910908362000d64565b60049081556008546040516323b872dd60e01b81526101009091046001600160a01b03169182916323b872dd916200094f913391309189910162001016565b602060405180830381600087803b1580156200096a57600080fd5b505af11580156200097f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620009a5919062000f5a565b620008275760405162461bcd60e51b8152600401620004dd90620010a4565b600b546040516370a0823160e01b81526000916001600160a01b0316906370a08231906200030b90339060040162001002565b60085460ff1662000a1c5760405162461bcd60e51b8152600401620004dd90620010d3565b62000a26620003f5565b600a54604051630852cd8d60e31b81526001600160a01b03909116906342966c689062000a5890849060040162001180565b600060405180830381600087803b15801562000a7357600080fd5b505af115801562000a88573d6000803e3d6000fd5b5050505062000a9662000b22565b600181905560009062000ab590620f4240906200052290859062000ddb565b60055490915062000ac7908362000d79565b60055560035462000ad9908262000d79565b60035560085460405163a9059cbb60e01b81526101009091046001600160a01b031690819063a9059cbb90620007b690339086906004016200103a565b60035481565b60015481565b600060055460001462000b50576200052960055462000522620f424060035462000ddb90919063ffffffff16565b5060015490565b62000b6162000d87565b6001600160a01b031662000b7462000536565b6001600160a01b03161462000b9d5760405162461bcd60e51b8152600401620004dd906200110a565b6001600160a01b03811662000bc65760405162461bcd60e51b8152600401620004dd906200105e565b620006948162000d8b565b60075481565b60085460ff1662000bfc5760405162461bcd60e51b8152600401620004dd90620010d3565b62000c06620003f5565b62000c1062000b22565b600181905560009062000c2c906200052284620f424062000ddb565b600a5460405163140e25ad60e31b81529192506001600160a01b03169063a0712d689062000c5f90849060040162001180565b600060405180830381600087803b15801562000c7a57600080fd5b505af115801562000c8f573d6000803e3d6000fd5b505060055462000ca3925090508262000d64565b60055560035462000cb5908362000d64565b6003556008546040516323b872dd60e01b81526101009091046001600160a01b03169081906323b872dd906200094f9033903090889060040162001016565b60085460ff1681565b60008062000d0b8362000df7565b905062000d3b620f42406200052262000d248462000e61565b62000d3460035460045462000ee1565b9062000ddb565b9150505b919050565b600060075482111562000d5a5750600162000d3f565b5060001962000d3f565b600062000d72828462001189565b9392505050565b600062000d7282846200131f565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600062000d728284620012fd565b600062000d728284620011a4565b600060075482111562000e3a5762000e32620f424062000e2b60075462000522620f42408762000ddb90919063ffffffff16565b9062000d79565b905062000d3f565b62000e32620f424062000e2b8462000522620f424060075462000ddb90919063ffffffff16565b60008062000e71836003620012fd565b620f424062000e8260028662001212565b62000e8e9190620011a4565b62000e9b906009620012fd565b62000ea7919062001189565b62000eb690620f424062001189565b905064e8d4a5100062000eca8282620011a4565b62000ed990620f42406200131f565b949350505050565b60008183111562000ef3578162000d72565b5090919050565b610fa6806200135083390190565b610faa80620022f683390190565b805169ffffffffffffffffffff8116811462000d3f57600080fd5b60006020828403121562000f43578081fd5b81356001600160a01b038116811462000d72578182fd5b60006020828403121562000f6c578081fd5b8151801515811462000d72578182fd5b60006020828403121562000f8e578081fd5b5035919050565b60006020828403121562000fa7578081fd5b5051919050565b600080600080600060a0868803121562000fc6578081fd5b62000fd18662000f16565b945060208601519350604086015192506060860151915062000ff66080870162000f16565b90509295509295909350565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252601590820152742aa9a221903a3930b739b332b9103330b4b632b21760591b604082015260600190565b6020808252601d908201527f54686520706f6f6c20776173206e6f7420696e697469616c697a65642e000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526021908201527f54686520706f6f6c2077617320616c726561647920696e697469616c697a65646040820152601760f91b606082015260800190565b90815260200190565b600082198211156200119f576200119f62001339565b500190565b600082620011c057634e487b7160e01b81526012600452602481fd5b500490565b80825b6001808611620011d9575062001209565b818704821115620011ee57620011ee62001339565b80861615620011fc57918102915b9490941c938002620011c8565b94509492505050565b600062000d7260001960ff851684600082620012315750600162000d72565b81620012405750600062000d72565b8160018114620012595760028114620012645762001298565b600191505062000d72565b60ff84111562001278576200127862001339565b6001841b91508482111562001291576200129162001339565b5062000d72565b5060208310610133831016604e8410600b8410161715620012d0575081810a83811115620012ca57620012ca62001339565b62000d72565b620012df8484846001620011c5565b808604821115620012f457620012f462001339565b02949350505050565b60008160001904831182151516156200131a576200131a62001339565b500290565b60008282101562001334576200133462001339565b500390565b634e487b7160e01b600052601160045260246000fdfe60806040523480156200001157600080fd5b5060405162000fa638038062000fa6833981016040819052620000349162000169565b604080518082018252600a8152690426974636f696e2055760b41b602080830191825283518085019094526005845264042544355560dc1b9084015281519192916200008391600391620000c3565b50805162000099906004906020840190620000c3565b5050600580546001600160a01b0319166001600160a01b03939093169290921790915550620001d6565b828054620000d19062000199565b90600052602060002090601f016020900481019282620000f5576000855562000140565b82601f106200011057805160ff191683800117855562000140565b8280016001018555821562000140579182015b828111156200014057825182559160200191906001019062000123565b506200014e92915062000152565b5090565b5b808211156200014e576000815560010162000153565b6000602082840312156200017b578081fd5b81516001600160a01b038116811462000192578182fd5b9392505050565b600281046001821680620001ae57607f821691505b60208210811415620001d057634e487b7160e01b600052602260045260246000fd5b50919050565b610dc080620001e66000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c578063a0712d6811610066578063a0712d68146101c0578063a457c2d7146101d3578063a9059cbb146101e6578063dd62ed3e146101f9576100ea565b806370a082311461019257806379cc6790146101a557806395d89b41146101b8576100ea565b806323b872dd116100c857806323b872dd14610142578063313ce56714610155578063395093511461016a57806342966c681461017d576100ea565b806306fdde03146100ef578063095ea7b31461010d57806318160ddd1461012d575b600080fd5b6100f761020c565b60405161010491906109c1565b60405180910390f35b61012061011b366004610975565b61029e565b60405161010491906109b6565b6101356102bb565b6040516101049190610cf3565b61012061015036600461093a565b6102c1565b61015d61035a565b6040516101049190610cfc565b610120610178366004610975565b61035f565b61019061018b36600461099e565b6103b3565b005b6101356101a03660046108e7565b6103d7565b6101906101b3366004610975565b6103f6565b6100f7610449565b6101906101ce36600461099e565b610458565b6101206101e1366004610975565b610479565b6101206101f4366004610975565b6104f2565b610135610207366004610908565b610506565b60606003805461021b90610d39565b80601f016020809104026020016040519081016040528092919081815260200182805461024790610d39565b80156102945780601f1061026957610100808354040283529160200191610294565b820191906000526020600020905b81548152906001019060200180831161027757829003601f168201915b5050505050905090565b60006102b26102ab610531565b8484610535565b50600192915050565b60025490565b60006102ce8484846105e9565b6001600160a01b0384166000908152600160205260408120816102ef610531565b6001600160a01b03166001600160a01b031681526020019081526020016000205490508281101561033b5760405162461bcd60e51b815260040161033290610b21565b60405180910390fd5b61034f85610347610531565b858403610535565b506001949350505050565b600690565b60006102b261036c610531565b84846001600061037a610531565b6001600160a01b03908116825260208083019390935260409182016000908120918b16815292529020546103ae9190610d0a565b610535565b6005546001600160a01b031633146103ca57600080fd5b6103d432826103f6565b50565b6001600160a01b0381166000908152602081905260409020545b919050565b600061040483610207610531565b9050818110156104265760405162461bcd60e51b815260040161033290610b69565b61043a83610432610531565b848403610535565b6104448383610713565b505050565b60606004805461021b90610d39565b6005546001600160a01b0316331461046f57600080fd5b6103d43282610804565b60008060016000610488610531565b6001600160a01b03908116825260208083019390935260409182016000908120918816815292529020549050828110156104d45760405162461bcd60e51b815260040161033290610c77565b6104e86104df610531565b85858403610535565b5060019392505050565b60006102b26104ff610531565b84846105e9565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b03831661055b5760405162461bcd60e51b815260040161033290610c33565b6001600160a01b0382166105815760405162461bcd60e51b815260040161033290610a99565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906105dc908590610cf3565b60405180910390a3505050565b6001600160a01b03831661060f5760405162461bcd60e51b815260040161033290610bee565b6001600160a01b0382166106355760405162461bcd60e51b815260040161033290610a14565b610640838383610444565b6001600160a01b038316600090815260208190526040902054818110156106795760405162461bcd60e51b815260040161033290610adb565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106b0908490610d0a565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106fa9190610cf3565b60405180910390a361070d848484610444565b50505050565b6001600160a01b0382166107395760405162461bcd60e51b815260040161033290610bad565b61074582600083610444565b6001600160a01b0382166000908152602081905260409020548181101561077e5760405162461bcd60e51b815260040161033290610a57565b6001600160a01b03831660009081526020819052604081208383039055600280548492906107ad908490610d22565b90915550506040516000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906107f0908690610cf3565b60405180910390a361044483600084610444565b6001600160a01b03821661082a5760405162461bcd60e51b815260040161033290610cbc565b61083660008383610444565b80600260008282546108489190610d0a565b90915550506001600160a01b03821660009081526020819052604081208054839290610875908490610d0a565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906108b8908590610cf3565b60405180910390a36108cc60008383610444565b5050565b80356001600160a01b03811681146103f157600080fd5b6000602082840312156108f8578081fd5b610901826108d0565b9392505050565b6000806040838503121561091a578081fd5b610923836108d0565b9150610931602084016108d0565b90509250929050565b60008060006060848603121561094e578081fd5b610957846108d0565b9250610965602085016108d0565b9150604084013590509250925092565b60008060408385031215610987578182fd5b610990836108d0565b946020939093013593505050565b6000602082840312156109af578081fd5b5035919050565b901515815260200190565b6000602080835283518082850152825b818110156109ed578581018301518582016040015282016109d1565b818111156109fe5783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526022908201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604082015261636560f01b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b60208082526028908201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616040820152676c6c6f77616e636560c01b606082015260800190565b60208082526024908201527f45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77604082015263616e636560e01b606082015260800190565b60208082526021908201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736040820152607360f81b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604082015264207a65726f60d81b606082015260800190565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b60ff91909116815260200190565b60008219821115610d1d57610d1d610d74565b500190565b600082821015610d3457610d34610d74565b500390565b600281046001821680610d4d57607f821691505b60208210811415610d6e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea26469706673582212209723af2eaee63f1c3754ecb6ed855c3e771d9fe634eebf416ce1355866911c6d64736f6c6343000800003360806040523480156200001157600080fd5b5060405162000faa38038062000faa83398101604081905262000034916200016d565b604080518082018252600c81526b2134ba31b7b4b7102237bbb760a11b602080830191825283518085019094526007845266212a21a227aba760c91b9084015281519192916200008791600391620000c7565b5080516200009d906004906020840190620000c7565b5050600580546001600160a01b0319166001600160a01b03939093169290921790915550620001da565b828054620000d5906200019d565b90600052602060002090601f016020900481019282620000f9576000855562000144565b82601f106200011457805160ff191683800117855562000144565b8280016001018555821562000144579182015b828111156200014457825182559160200191906001019062000127565b506200015292915062000156565b5090565b5b8082111562000152576000815560010162000157565b6000602082840312156200017f578081fd5b81516001600160a01b038116811462000196578182fd5b9392505050565b600281046001821680620001b257607f821691505b60208210811415620001d457634e487b7160e01b600052602260045260246000fd5b50919050565b610dc080620001ea6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c578063a0712d6811610066578063a0712d68146101c0578063a457c2d7146101d3578063a9059cbb146101e6578063dd62ed3e146101f9576100ea565b806370a082311461019257806379cc6790146101a557806395d89b41146101b8576100ea565b806323b872dd116100c857806323b872dd14610142578063313ce56714610155578063395093511461016a57806342966c681461017d576100ea565b806306fdde03146100ef578063095ea7b31461010d57806318160ddd1461012d575b600080fd5b6100f761020c565b60405161010491906109c1565b60405180910390f35b61012061011b366004610975565b61029e565b60405161010491906109b6565b6101356102bb565b6040516101049190610cf3565b61012061015036600461093a565b6102c1565b61015d61035a565b6040516101049190610cfc565b610120610178366004610975565b61035f565b61019061018b36600461099e565b6103b3565b005b6101356101a03660046108e7565b6103d7565b6101906101b3366004610975565b6103f6565b6100f7610449565b6101906101ce36600461099e565b610458565b6101206101e1366004610975565b610479565b6101206101f4366004610975565b6104f2565b610135610207366004610908565b610506565b60606003805461021b90610d39565b80601f016020809104026020016040519081016040528092919081815260200182805461024790610d39565b80156102945780601f1061026957610100808354040283529160200191610294565b820191906000526020600020905b81548152906001019060200180831161027757829003601f168201915b5050505050905090565b60006102b26102ab610531565b8484610535565b50600192915050565b60025490565b60006102ce8484846105e9565b6001600160a01b0384166000908152600160205260408120816102ef610531565b6001600160a01b03166001600160a01b031681526020019081526020016000205490508281101561033b5760405162461bcd60e51b815260040161033290610b21565b60405180910390fd5b61034f85610347610531565b858403610535565b506001949350505050565b600690565b60006102b261036c610531565b84846001600061037a610531565b6001600160a01b03908116825260208083019390935260409182016000908120918b16815292529020546103ae9190610d0a565b610535565b6005546001600160a01b031633146103ca57600080fd5b6103d432826103f6565b50565b6001600160a01b0381166000908152602081905260409020545b919050565b600061040483610207610531565b9050818110156104265760405162461bcd60e51b815260040161033290610b69565b61043a83610432610531565b848403610535565b6104448383610713565b505050565b60606004805461021b90610d39565b6005546001600160a01b0316331461046f57600080fd5b6103d43282610804565b60008060016000610488610531565b6001600160a01b03908116825260208083019390935260409182016000908120918816815292529020549050828110156104d45760405162461bcd60e51b815260040161033290610c77565b6104e86104df610531565b85858403610535565b5060019392505050565b60006102b26104ff610531565b84846105e9565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b03831661055b5760405162461bcd60e51b815260040161033290610c33565b6001600160a01b0382166105815760405162461bcd60e51b815260040161033290610a99565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906105dc908590610cf3565b60405180910390a3505050565b6001600160a01b03831661060f5760405162461bcd60e51b815260040161033290610bee565b6001600160a01b0382166106355760405162461bcd60e51b815260040161033290610a14565b610640838383610444565b6001600160a01b038316600090815260208190526040902054818110156106795760405162461bcd60e51b815260040161033290610adb565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106b0908490610d0a565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106fa9190610cf3565b60405180910390a361070d848484610444565b50505050565b6001600160a01b0382166107395760405162461bcd60e51b815260040161033290610bad565b61074582600083610444565b6001600160a01b0382166000908152602081905260409020548181101561077e5760405162461bcd60e51b815260040161033290610a57565b6001600160a01b03831660009081526020819052604081208383039055600280548492906107ad908490610d22565b90915550506040516000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906107f0908690610cf3565b60405180910390a361044483600084610444565b6001600160a01b03821661082a5760405162461bcd60e51b815260040161033290610cbc565b61083660008383610444565b80600260008282546108489190610d0a565b90915550506001600160a01b03821660009081526020819052604081208054839290610875908490610d0a565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906108b8908590610cf3565b60405180910390a36108cc60008383610444565b5050565b80356001600160a01b03811681146103f157600080fd5b6000602082840312156108f8578081fd5b610901826108d0565b9392505050565b6000806040838503121561091a578081fd5b610923836108d0565b9150610931602084016108d0565b90509250929050565b60008060006060848603121561094e578081fd5b610957846108d0565b9250610965602085016108d0565b9150604084013590509250925092565b60008060408385031215610987578182fd5b610990836108d0565b946020939093013593505050565b6000602082840312156109af578081fd5b5035919050565b901515815260200190565b6000602080835283518082850152825b818110156109ed578581018301518582016040015282016109d1565b818111156109fe5783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526022908201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604082015261636560f01b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b60208082526028908201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616040820152676c6c6f77616e636560c01b606082015260800190565b60208082526024908201527f45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77604082015263616e636560e01b606082015260800190565b60208082526021908201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736040820152607360f81b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604082015264207a65726f60d81b606082015260800190565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b60ff91909116815260200190565b60008219821115610d1d57610d1d610d74565b500190565b600082821015610d3457610d34610d74565b500390565b600281046001821680610d4d57607f821691505b60208210811415610d6e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220e1324e8496a17cfdb5264c6f7cc3caa5e9dbb3e06697130d232c976a41661da064736f6c63430008000033a26469706673582212208f2cc2af1003fad0d1bfd2192ad3e58ecadf26ade40c31717814f840251338f764736f6c63430008000033",
  "bytecodeSha1": "6082d780470ff023c04b7bd58ba2c3ee9de15ca3",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.0+commit.c7dfd78e"
  },
  "contractName": "LeveragedTrading",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "74": [
            1185,
            1208,
            true
          ],
          "75": [
            1934,
            1956,
            true
          ]
        }
      },
      "1": {},
      "2": {},
      "3": {},
      "4": {},
      "5": {},
      "6": {},
      "7": {},
      "8": {
        "LeveragedTrading.getBtcDownPrice": {
          "62": [
            7006,
            7024,
            true
          ]
        },
        "LeveragedTrading.getBtcUpPrice": {
          "68": [
            6797,
            6813,
            true
          ]
        },
        "LeveragedTrading.getPriceDiff": {
          "72": [
            7923,
            7946,
            false
          ]
        },
        "LeveragedTrading.getSign": {
          "71": [
            6345,
            6368,
            false
          ]
        },
        "LeveragedTrading.initializePool": {
          "63": [
            2790,
            2808,
            true
          ]
        },
        "LeveragedTrading.issueBtcDown": {
          "65": [
            3733,
            3750,
            true
          ],
          "66": [
            4191,
            4247,
            true
          ]
        },
        "LeveragedTrading.issueBtcUp": {
          "69": [
            3129,
            3146,
            true
          ],
          "70": [
            3571,
            3627,
            true
          ]
        },
        "LeveragedTrading.min": {
          "73": [
            7562,
            7568,
            true
          ]
        },
        "LeveragedTrading.rebalanceLeveragedTokens": {
          "61": [
            5670,
            5691,
            false
          ]
        },
        "LeveragedTrading.redeemBtcDown": {
          "64": [
            4926,
            4943,
            true
          ]
        },
        "LeveragedTrading.redeemBtcUp": {
          "67": [
            4363,
            4380,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Ownable._setOwner": {
          "53": [
            2131,
            2148
          ],
          "54": [
            2158,
            2203
          ]
        },
        "Ownable.owner": {
          "8": [
            1038,
            1051
          ]
        },
        "Ownable.renounceOwnership": {
          "6": [
            1669,
            1690
          ]
        },
        "Ownable.transferOwnership": {
          "38": [
            1926,
            1999
          ],
          "39": [
            2009,
            2028
          ]
        }
      },
      "1": {},
      "2": {},
      "3": {},
      "4": {},
      "5": {
        "Context._msgSender": {
          "52": [
            658,
            675
          ]
        }
      },
      "6": {
        "SafeMath.add": {
          "50": [
            2749,
            2761
          ]
        },
        "SafeMath.div": {
          "56": [
            3844,
            3856
          ]
        },
        "SafeMath.mul": {
          "55": [
            3459,
            3471
          ]
        },
        "SafeMath.sub": {
          "51": [
            3116,
            3128
          ]
        }
      },
      "7": {},
      "8": {
        "LeveragedTrading.L": {
          "59": [
            7779,
            7807
          ]
        },
        "LeveragedTrading.getBtcDownPrice": {
          "7": [
            6999,
            7092
          ]
        },
        "LeveragedTrading.getBtcUpPrice": {
          "37": [
            6790,
            6875
          ]
        },
        "LeveragedTrading.getBtcdownBalance": {
          "29": [
            8325,
            8361
          ]
        },
        "LeveragedTrading.getBtcupBalance": {
          "0": [
            8210,
            8244
          ]
        },
        "LeveragedTrading.getPriceDiff": {
          "57": [
            7962,
            8021
          ],
          "58": [
            8061,
            8120
          ]
        },
        "LeveragedTrading.getRebalanceAmount": {
          "47": [
            6605,
            6682
          ]
        },
        "LeveragedTrading.getSign": {
          "48": [
            6384,
            6392
          ],
          "49": [
            6431,
            6440
          ]
        },
        "LeveragedTrading.initializePool": {
          "9": [
            2782,
            2846
          ],
          "10": [
            2856,
            2880
          ],
          "11": [
            2891,
            2923
          ],
          "12": [
            2933,
            2969
          ],
          "13": [
            2980,
            3009
          ],
          "14": [
            3019,
            3050
          ]
        },
        "LeveragedTrading.issueBtcDown": {
          "22": [
            3725,
            3784
          ],
          "23": [
            3794,
            3820
          ],
          "24": [
            3839,
            3871
          ],
          "25": [
            3965,
            4000
          ],
          "26": [
            4010,
            4066
          ],
          "27": [
            4076,
            4129
          ],
          "28": [
            4183,
            4273
          ]
        },
        "LeveragedTrading.issueBtcUp": {
          "40": [
            3121,
            3180
          ],
          "41": [
            3190,
            3216
          ],
          "42": [
            3235,
            3263
          ],
          "43": [
            3355,
            3388
          ],
          "44": [
            3398,
            3450
          ],
          "45": [
            3460,
            3509
          ],
          "46": [
            3563,
            3653
          ]
        },
        "LeveragedTrading.min": {
          "60": [
            7555,
            7576
          ]
        },
        "LeveragedTrading.rebalanceLeveragedTokens": {
          "1": [
            5711,
            5765
          ],
          "2": [
            5783,
            5841
          ],
          "3": [
            5893,
            5947
          ],
          "4": [
            5965,
            6023
          ],
          "5": [
            6058,
            6081
          ]
        },
        "LeveragedTrading.redeemBtcDown": {
          "15": [
            4918,
            4977
          ],
          "16": [
            4987,
            5013
          ],
          "17": [
            5023,
            5058
          ],
          "18": [
            5069,
            5101
          ],
          "19": [
            5203,
            5259
          ],
          "20": [
            5269,
            5322
          ],
          "21": [
            5376,
            5422
          ]
        },
        "LeveragedTrading.redeemBtcUp": {
          "30": [
            4355,
            4414
          ],
          "31": [
            4424,
            4450
          ],
          "32": [
            4460,
            4493
          ],
          "33": [
            4504,
            4532
          ],
          "34": [
            4624,
            4676
          ],
          "35": [
            4686,
            4735
          ],
          "36": [
            4789,
            4834
          ]
        }
      }
    }
  },
  "dependencies": [
    "smartcontractkit/chainlink@1.3.0/AggregatorV3Interface",
    "BTCDOWN",
    "BTCUP",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/ERC20",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/ERC20Burnable",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/IERC20",
    "IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/IERC20Metadata",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/Ownable",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/SafeMath"
  ],
  "deployedBytecode": "60806040523480156200001157600080fd5b50600436106200015f5760003560e01c8063b75cbe0b11620000c9578063f0156e8a1162000087578063f0156e8a1462000261578063f06847d6146200026b578063f2fde38b1462000275578063f4352c57146200028c578063f530c04a1462000296578063feae67b014620002ad576200015f565b8063b75cbe0b1462000215578063c46d4f09146200021f578063c7e3b1241462000236578063d1ee539d1462000240578063dde7be2c1462000257576200015f565b80636e5d661511620001235780636e5d661514620001ae578063715018a614620001ba57806381c2b29b14620001c45780638da5cb5b14620001ce57806398881bc914620001e7578063a14274e814620001fe576200015f565b806234b9cc14620001645780630c3e5343146200018657806314d7c6d21462000190578063157d0129146200019a5780633a3610bc14620001a4575b600080fd5b6200016e620002c6565b6040516200017d919062001180565b60405180910390f35b6200016e620002cc565b6200016e620002d2565b6200016e620002d8565b6200016e62000364565b620001b8620003f5565b005b620001b862000497565b6200016e620004f4565b620001d862000536565b6040516200017d919062001002565b620001b8620001f836600462000f7c565b62000545565b620001b86200020f36600462000f7c565b62000697565b6200016e6200082c565b620001b86200023036600462000f7c565b62000832565b6200016e620009c4565b620001b86200025136600462000f7c565b620009f7565b6200016e62000b16565b6200016e62000b1c565b6200016e62000b22565b620001b86200028636600462000f31565b62000b57565b6200016e62000bd1565b620001b8620002a736600462000f7c565b62000bd7565b620002b762000cf4565b6040516200017d919062001053565b60055481565b60025481565b60045481565b600a546040516370a0823160e01b81526000916001600160a01b0316906370a08231906200030b90339060040162001002565b60206040518083038186803b1580156200032457600080fd5b505afa15801562000339573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200035f919062000f95565b905090565b60095460408051633fabe5a360e21b815290516000926001600160a01b0316918391839163feaf968c9160048083019260a0929190829003018186803b158015620003ae57600080fd5b505afa158015620003c3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003e9919062000fae565b50919550505050505090565b60006200040162000364565b905060006003541180156200041857506000600454115b15620004925760006200042b8262000cfd565b905060006200043a8362000d44565b13156200046b5760035462000450908262000d64565b60035560045462000462908262000d79565b60045562000490565b6003546200047a908262000d79565b6003556004546200048c908262000d64565b6004555b505b600755565b620004a162000d87565b6001600160a01b0316620004b462000536565b6001600160a01b031614620004e65760405162461bcd60e51b8152600401620004dd906200110a565b60405180910390fd5b620004f2600062000d8b565b565b60006006546000146200052f576200052960065462000522620f424060045462000ddb90919063ffffffff16565b9062000de9565b6200035f565b5060025490565b6000546001600160a01b031690565b6200054f62000d87565b6001600160a01b03166200056262000536565b6001600160a01b0316146200058b5760405162461bcd60e51b8152600401620004dd906200110a565b60085460ff1615620005b15760405162461bcd60e51b8152600401620004dd906200113f565b6008805460ff191660011790556040513090620005ce9062000efa565b620005da919062001002565b604051809103906000f080158015620005f7573d6000803e3d6000fd5b50600a80546001600160a01b0319166001600160a01b03929092169190911790556040513090620006289062000f08565b62000634919062001002565b604051809103906000f08015801562000651573d6000803e3d6000fd5b50600b80546001600160a01b0319166001600160a01b039290921691909117905562000683620002a782600262000de9565b620006946200023082600262000de9565b50565b60085460ff16620006bc5760405162461bcd60e51b8152600401620004dd90620010d3565b620006c6620003f5565b600b54604051630852cd8d60e31b81526001600160a01b03909116906342966c6890620006f890849060040162001180565b600060405180830381600087803b1580156200071357600080fd5b505af115801562000728573d6000803e3d6000fd5b5050505062000736620004f4565b60028190556000906200075590620f4240906200052290859062000ddb565b60065490915062000767908362000d79565b60065560045462000779908262000d79565b600490815560085460405163a9059cbb60e01b81526101009091046001600160a01b031691829163a9059cbb91620007b69133918791016200103a565b602060405180830381600087803b158015620007d157600080fd5b505af1158015620007e6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200080c919062000f5a565b6200082757634e487b7160e01b600052600160045260246000fd5b505050565b60065481565b60085460ff16620008575760405162461bcd60e51b8152600401620004dd90620010d3565b62000861620003f5565b6200086b620004f4565b600281905560009062000887906200052284620f424062000ddb565b600b5460405163140e25ad60e31b81529192506001600160a01b03169063a0712d6890620008ba90849060040162001180565b600060405180830381600087803b158015620008d557600080fd5b505af1158015620008ea573d6000803e3d6000fd5b5050600654620008fe925090508262000d64565b60065560045462000910908362000d64565b60049081556008546040516323b872dd60e01b81526101009091046001600160a01b03169182916323b872dd916200094f913391309189910162001016565b602060405180830381600087803b1580156200096a57600080fd5b505af11580156200097f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620009a5919062000f5a565b620008275760405162461bcd60e51b8152600401620004dd90620010a4565b600b546040516370a0823160e01b81526000916001600160a01b0316906370a08231906200030b90339060040162001002565b60085460ff1662000a1c5760405162461bcd60e51b8152600401620004dd90620010d3565b62000a26620003f5565b600a54604051630852cd8d60e31b81526001600160a01b03909116906342966c689062000a5890849060040162001180565b600060405180830381600087803b15801562000a7357600080fd5b505af115801562000a88573d6000803e3d6000fd5b5050505062000a9662000b22565b600181905560009062000ab590620f4240906200052290859062000ddb565b60055490915062000ac7908362000d79565b60055560035462000ad9908262000d79565b60035560085460405163a9059cbb60e01b81526101009091046001600160a01b031690819063a9059cbb90620007b690339086906004016200103a565b60035481565b60015481565b600060055460001462000b50576200052960055462000522620f424060035462000ddb90919063ffffffff16565b5060015490565b62000b6162000d87565b6001600160a01b031662000b7462000536565b6001600160a01b03161462000b9d5760405162461bcd60e51b8152600401620004dd906200110a565b6001600160a01b03811662000bc65760405162461bcd60e51b8152600401620004dd906200105e565b620006948162000d8b565b60075481565b60085460ff1662000bfc5760405162461bcd60e51b8152600401620004dd90620010d3565b62000c06620003f5565b62000c1062000b22565b600181905560009062000c2c906200052284620f424062000ddb565b600a5460405163140e25ad60e31b81529192506001600160a01b03169063a0712d689062000c5f90849060040162001180565b600060405180830381600087803b15801562000c7a57600080fd5b505af115801562000c8f573d6000803e3d6000fd5b505060055462000ca3925090508262000d64565b60055560035462000cb5908362000d64565b6003556008546040516323b872dd60e01b81526101009091046001600160a01b03169081906323b872dd906200094f9033903090889060040162001016565b60085460ff1681565b60008062000d0b8362000df7565b905062000d3b620f42406200052262000d248462000e61565b62000d3460035460045462000ee1565b9062000ddb565b9150505b919050565b600060075482111562000d5a5750600162000d3f565b5060001962000d3f565b600062000d72828462001189565b9392505050565b600062000d7282846200131f565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600062000d728284620012fd565b600062000d728284620011a4565b600060075482111562000e3a5762000e32620f424062000e2b60075462000522620f42408762000ddb90919063ffffffff16565b9062000d79565b905062000d3f565b62000e32620f424062000e2b8462000522620f424060075462000ddb90919063ffffffff16565b60008062000e71836003620012fd565b620f424062000e8260028662001212565b62000e8e9190620011a4565b62000e9b906009620012fd565b62000ea7919062001189565b62000eb690620f424062001189565b905064e8d4a5100062000eca8282620011a4565b62000ed990620f42406200131f565b949350505050565b60008183111562000ef3578162000d72565b5090919050565b610fa6806200135083390190565b610faa80620022f683390190565b805169ffffffffffffffffffff8116811462000d3f57600080fd5b60006020828403121562000f43578081fd5b81356001600160a01b038116811462000d72578182fd5b60006020828403121562000f6c578081fd5b8151801515811462000d72578182fd5b60006020828403121562000f8e578081fd5b5035919050565b60006020828403121562000fa7578081fd5b5051919050565b600080600080600060a0868803121562000fc6578081fd5b62000fd18662000f16565b945060208601519350604086015192506060860151915062000ff66080870162000f16565b90509295509295909350565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252601590820152742aa9a221903a3930b739b332b9103330b4b632b21760591b604082015260600190565b6020808252601d908201527f54686520706f6f6c20776173206e6f7420696e697469616c697a65642e000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526021908201527f54686520706f6f6c2077617320616c726561647920696e697469616c697a65646040820152601760f91b606082015260800190565b90815260200190565b600082198211156200119f576200119f62001339565b500190565b600082620011c057634e487b7160e01b81526012600452602481fd5b500490565b80825b6001808611620011d9575062001209565b818704821115620011ee57620011ee62001339565b80861615620011fc57918102915b9490941c938002620011c8565b94509492505050565b600062000d7260001960ff851684600082620012315750600162000d72565b81620012405750600062000d72565b8160018114620012595760028114620012645762001298565b600191505062000d72565b60ff84111562001278576200127862001339565b6001841b91508482111562001291576200129162001339565b5062000d72565b5060208310610133831016604e8410600b8410161715620012d0575081810a83811115620012ca57620012ca62001339565b62000d72565b620012df8484846001620011c5565b808604821115620012f457620012f462001339565b02949350505050565b60008160001904831182151516156200131a576200131a62001339565b500290565b60008282101562001334576200133462001339565b500390565b634e487b7160e01b600052601160045260246000fdfe60806040523480156200001157600080fd5b5060405162000fa638038062000fa6833981016040819052620000349162000169565b604080518082018252600a8152690426974636f696e2055760b41b602080830191825283518085019094526005845264042544355560dc1b9084015281519192916200008391600391620000c3565b50805162000099906004906020840190620000c3565b5050600580546001600160a01b0319166001600160a01b03939093169290921790915550620001d6565b828054620000d19062000199565b90600052602060002090601f016020900481019282620000f5576000855562000140565b82601f106200011057805160ff191683800117855562000140565b8280016001018555821562000140579182015b828111156200014057825182559160200191906001019062000123565b506200014e92915062000152565b5090565b5b808211156200014e576000815560010162000153565b6000602082840312156200017b578081fd5b81516001600160a01b038116811462000192578182fd5b9392505050565b600281046001821680620001ae57607f821691505b60208210811415620001d057634e487b7160e01b600052602260045260246000fd5b50919050565b610dc080620001e66000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c578063a0712d6811610066578063a0712d68146101c0578063a457c2d7146101d3578063a9059cbb146101e6578063dd62ed3e146101f9576100ea565b806370a082311461019257806379cc6790146101a557806395d89b41146101b8576100ea565b806323b872dd116100c857806323b872dd14610142578063313ce56714610155578063395093511461016a57806342966c681461017d576100ea565b806306fdde03146100ef578063095ea7b31461010d57806318160ddd1461012d575b600080fd5b6100f761020c565b60405161010491906109c1565b60405180910390f35b61012061011b366004610975565b61029e565b60405161010491906109b6565b6101356102bb565b6040516101049190610cf3565b61012061015036600461093a565b6102c1565b61015d61035a565b6040516101049190610cfc565b610120610178366004610975565b61035f565b61019061018b36600461099e565b6103b3565b005b6101356101a03660046108e7565b6103d7565b6101906101b3366004610975565b6103f6565b6100f7610449565b6101906101ce36600461099e565b610458565b6101206101e1366004610975565b610479565b6101206101f4366004610975565b6104f2565b610135610207366004610908565b610506565b60606003805461021b90610d39565b80601f016020809104026020016040519081016040528092919081815260200182805461024790610d39565b80156102945780601f1061026957610100808354040283529160200191610294565b820191906000526020600020905b81548152906001019060200180831161027757829003601f168201915b5050505050905090565b60006102b26102ab610531565b8484610535565b50600192915050565b60025490565b60006102ce8484846105e9565b6001600160a01b0384166000908152600160205260408120816102ef610531565b6001600160a01b03166001600160a01b031681526020019081526020016000205490508281101561033b5760405162461bcd60e51b815260040161033290610b21565b60405180910390fd5b61034f85610347610531565b858403610535565b506001949350505050565b600690565b60006102b261036c610531565b84846001600061037a610531565b6001600160a01b03908116825260208083019390935260409182016000908120918b16815292529020546103ae9190610d0a565b610535565b6005546001600160a01b031633146103ca57600080fd5b6103d432826103f6565b50565b6001600160a01b0381166000908152602081905260409020545b919050565b600061040483610207610531565b9050818110156104265760405162461bcd60e51b815260040161033290610b69565b61043a83610432610531565b848403610535565b6104448383610713565b505050565b60606004805461021b90610d39565b6005546001600160a01b0316331461046f57600080fd5b6103d43282610804565b60008060016000610488610531565b6001600160a01b03908116825260208083019390935260409182016000908120918816815292529020549050828110156104d45760405162461bcd60e51b815260040161033290610c77565b6104e86104df610531565b85858403610535565b5060019392505050565b60006102b26104ff610531565b84846105e9565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b03831661055b5760405162461bcd60e51b815260040161033290610c33565b6001600160a01b0382166105815760405162461bcd60e51b815260040161033290610a99565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906105dc908590610cf3565b60405180910390a3505050565b6001600160a01b03831661060f5760405162461bcd60e51b815260040161033290610bee565b6001600160a01b0382166106355760405162461bcd60e51b815260040161033290610a14565b610640838383610444565b6001600160a01b038316600090815260208190526040902054818110156106795760405162461bcd60e51b815260040161033290610adb565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106b0908490610d0a565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106fa9190610cf3565b60405180910390a361070d848484610444565b50505050565b6001600160a01b0382166107395760405162461bcd60e51b815260040161033290610bad565b61074582600083610444565b6001600160a01b0382166000908152602081905260409020548181101561077e5760405162461bcd60e51b815260040161033290610a57565b6001600160a01b03831660009081526020819052604081208383039055600280548492906107ad908490610d22565b90915550506040516000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906107f0908690610cf3565b60405180910390a361044483600084610444565b6001600160a01b03821661082a5760405162461bcd60e51b815260040161033290610cbc565b61083660008383610444565b80600260008282546108489190610d0a565b90915550506001600160a01b03821660009081526020819052604081208054839290610875908490610d0a565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906108b8908590610cf3565b60405180910390a36108cc60008383610444565b5050565b80356001600160a01b03811681146103f157600080fd5b6000602082840312156108f8578081fd5b610901826108d0565b9392505050565b6000806040838503121561091a578081fd5b610923836108d0565b9150610931602084016108d0565b90509250929050565b60008060006060848603121561094e578081fd5b610957846108d0565b9250610965602085016108d0565b9150604084013590509250925092565b60008060408385031215610987578182fd5b610990836108d0565b946020939093013593505050565b6000602082840312156109af578081fd5b5035919050565b901515815260200190565b6000602080835283518082850152825b818110156109ed578581018301518582016040015282016109d1565b818111156109fe5783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526022908201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604082015261636560f01b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b60208082526028908201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616040820152676c6c6f77616e636560c01b606082015260800190565b60208082526024908201527f45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77604082015263616e636560e01b606082015260800190565b60208082526021908201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736040820152607360f81b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604082015264207a65726f60d81b606082015260800190565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b60ff91909116815260200190565b60008219821115610d1d57610d1d610d74565b500190565b600082821015610d3457610d34610d74565b500390565b600281046001821680610d4d57607f821691505b60208210811415610d6e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea26469706673582212209723af2eaee63f1c3754ecb6ed855c3e771d9fe634eebf416ce1355866911c6d64736f6c6343000800003360806040523480156200001157600080fd5b5060405162000faa38038062000faa83398101604081905262000034916200016d565b604080518082018252600c81526b2134ba31b7b4b7102237bbb760a11b602080830191825283518085019094526007845266212a21a227aba760c91b9084015281519192916200008791600391620000c7565b5080516200009d906004906020840190620000c7565b5050600580546001600160a01b0319166001600160a01b03939093169290921790915550620001da565b828054620000d5906200019d565b90600052602060002090601f016020900481019282620000f9576000855562000144565b82601f106200011457805160ff191683800117855562000144565b8280016001018555821562000144579182015b828111156200014457825182559160200191906001019062000127565b506200015292915062000156565b5090565b5b8082111562000152576000815560010162000157565b6000602082840312156200017f578081fd5b81516001600160a01b038116811462000196578182fd5b9392505050565b600281046001821680620001b257607f821691505b60208210811415620001d457634e487b7160e01b600052602260045260246000fd5b50919050565b610dc080620001ea6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c578063a0712d6811610066578063a0712d68146101c0578063a457c2d7146101d3578063a9059cbb146101e6578063dd62ed3e146101f9576100ea565b806370a082311461019257806379cc6790146101a557806395d89b41146101b8576100ea565b806323b872dd116100c857806323b872dd14610142578063313ce56714610155578063395093511461016a57806342966c681461017d576100ea565b806306fdde03146100ef578063095ea7b31461010d57806318160ddd1461012d575b600080fd5b6100f761020c565b60405161010491906109c1565b60405180910390f35b61012061011b366004610975565b61029e565b60405161010491906109b6565b6101356102bb565b6040516101049190610cf3565b61012061015036600461093a565b6102c1565b61015d61035a565b6040516101049190610cfc565b610120610178366004610975565b61035f565b61019061018b36600461099e565b6103b3565b005b6101356101a03660046108e7565b6103d7565b6101906101b3366004610975565b6103f6565b6100f7610449565b6101906101ce36600461099e565b610458565b6101206101e1366004610975565b610479565b6101206101f4366004610975565b6104f2565b610135610207366004610908565b610506565b60606003805461021b90610d39565b80601f016020809104026020016040519081016040528092919081815260200182805461024790610d39565b80156102945780601f1061026957610100808354040283529160200191610294565b820191906000526020600020905b81548152906001019060200180831161027757829003601f168201915b5050505050905090565b60006102b26102ab610531565b8484610535565b50600192915050565b60025490565b60006102ce8484846105e9565b6001600160a01b0384166000908152600160205260408120816102ef610531565b6001600160a01b03166001600160a01b031681526020019081526020016000205490508281101561033b5760405162461bcd60e51b815260040161033290610b21565b60405180910390fd5b61034f85610347610531565b858403610535565b506001949350505050565b600690565b60006102b261036c610531565b84846001600061037a610531565b6001600160a01b03908116825260208083019390935260409182016000908120918b16815292529020546103ae9190610d0a565b610535565b6005546001600160a01b031633146103ca57600080fd5b6103d432826103f6565b50565b6001600160a01b0381166000908152602081905260409020545b919050565b600061040483610207610531565b9050818110156104265760405162461bcd60e51b815260040161033290610b69565b61043a83610432610531565b848403610535565b6104448383610713565b505050565b60606004805461021b90610d39565b6005546001600160a01b0316331461046f57600080fd5b6103d43282610804565b60008060016000610488610531565b6001600160a01b03908116825260208083019390935260409182016000908120918816815292529020549050828110156104d45760405162461bcd60e51b815260040161033290610c77565b6104e86104df610531565b85858403610535565b5060019392505050565b60006102b26104ff610531565b84846105e9565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b03831661055b5760405162461bcd60e51b815260040161033290610c33565b6001600160a01b0382166105815760405162461bcd60e51b815260040161033290610a99565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906105dc908590610cf3565b60405180910390a3505050565b6001600160a01b03831661060f5760405162461bcd60e51b815260040161033290610bee565b6001600160a01b0382166106355760405162461bcd60e51b815260040161033290610a14565b610640838383610444565b6001600160a01b038316600090815260208190526040902054818110156106795760405162461bcd60e51b815260040161033290610adb565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106b0908490610d0a565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106fa9190610cf3565b60405180910390a361070d848484610444565b50505050565b6001600160a01b0382166107395760405162461bcd60e51b815260040161033290610bad565b61074582600083610444565b6001600160a01b0382166000908152602081905260409020548181101561077e5760405162461bcd60e51b815260040161033290610a57565b6001600160a01b03831660009081526020819052604081208383039055600280548492906107ad908490610d22565b90915550506040516000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906107f0908690610cf3565b60405180910390a361044483600084610444565b6001600160a01b03821661082a5760405162461bcd60e51b815260040161033290610cbc565b61083660008383610444565b80600260008282546108489190610d0a565b90915550506001600160a01b03821660009081526020819052604081208054839290610875908490610d0a565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906108b8908590610cf3565b60405180910390a36108cc60008383610444565b5050565b80356001600160a01b03811681146103f157600080fd5b6000602082840312156108f8578081fd5b610901826108d0565b9392505050565b6000806040838503121561091a578081fd5b610923836108d0565b9150610931602084016108d0565b90509250929050565b60008060006060848603121561094e578081fd5b610957846108d0565b9250610965602085016108d0565b9150604084013590509250925092565b60008060408385031215610987578182fd5b610990836108d0565b946020939093013593505050565b6000602082840312156109af578081fd5b5035919050565b901515815260200190565b6000602080835283518082850152825b818110156109ed578581018301518582016040015282016109d1565b818111156109fe5783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526022908201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604082015261636560f01b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b60208082526028908201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616040820152676c6c6f77616e636560c01b606082015260800190565b60208082526024908201527f45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77604082015263616e636560e01b606082015260800190565b60208082526021908201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736040820152607360f81b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604082015264207a65726f60d81b606082015260800190565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b60ff91909116815260200190565b60008219821115610d1d57610d1d610d74565b500190565b600082821015610d3457610d34610d74565b500390565b600281046001821680610d4d57607f821691505b60208210811415610d6e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220e1324e8496a17cfdb5264c6f7cc3caa5e9dbb3e06697130d232c976a41661da064736f6c63430008000033a26469706673582212208f2cc2af1003fad0d1bfd2192ad3e58ecadf26ade40c31717814f840251338f764736f6c63430008000033",
  "deployedSourceMap": "1863:6509:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2150:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1980:37;;;:::i;2107:36::-;;;:::i;8144:107::-;;;:::i;7151:317::-;;;:::i;5435:653::-;;;:::i;:::-;;1605:92:0;;;:::i;6920:179:8:-;;;:::i;973:85:0:-;;;:::i;:::-;;;;;;;:::i;2711:347:8:-;;;;;;:::i;:::-;;:::i;4847:582::-;;;;;;:::i;:::-;;:::i;2210:32::-;;;:::i;3666:614::-;;;;;;:::i;:::-;;:::i;8257:111::-;;;:::i;4286:555::-;;;;;;:::i;:::-;;:::i;2045:34::-;;;:::i;1939:35::-;;;:::i;6725:157::-;;;:::i;1846:189:0:-;;;;;;:::i;:::-;;:::i;2271:31:8:-;;;:::i;3064:596::-;;;;;;:::i;:::-;;:::i;2352:37::-;;;:::i;:::-;;;;;;;:::i;2150:30::-;;;;:::o;1980:37::-;;;;:::o;2107:36::-;;;;:::o;8144:107::-;8217:5;;:27;;-1:-1:-1;;;8217:27:8;;8191:7;;-1:-1:-1;;;;;8217:5:8;;:15;;:27;;8233:10;;8217:27;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8210:34;;8144:107;:::o;7151:317::-;7270:17;;7320:27;;;-1:-1:-1;;;7320:27:8;;;;7195:7;;-1:-1:-1;;;;;7270:17:8;;7195:7;;7270:17;;7320:25;;:27;;;;;;;;;;;;;;7270:17;7320:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;7298:49:8;;-1:-1:-1;;;;;;7151:317:8;:::o;5435:653::-;5488:16;5507:13;:11;:13::i;:::-;5488:32;;5553:1;5535:15;;:19;5534:48;;;;;5580:1;5560:17;;:21;5534:48;5530:519;;;5598:23;5624:28;5643:8;5624:18;:28::i;:::-;5598:54;;5690:1;5670:17;5678:8;5670:7;:17::i;:::-;:21;5666:372;;;5729:15;;:36;;5749:15;5729:19;:36::i;:::-;5711:15;:54;5803:17;;:38;;5825:15;5803:21;:38::i;:::-;5783:17;:58;5666:372;;;5911:15;;:36;;5931:15;5911:19;:36::i;:::-;5893:15;:54;5985:17;;:38;;6007:15;5985:21;:38::i;:::-;5965:17;:58;5666:372;5530:519;;6058:12;:23;5435:653::o;1605:92:0:-;1196:12;:10;:12::i;:::-;-1:-1:-1;;;;;1185:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:0;;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;;;;;;;;;1669:21:::1;1687:1;1669:9;:21::i;:::-;1605:92::o:0;6920:179:8:-;6968:7;7006:13;;7023:1;7006:18;:86;;7043:49;7078:13;;7043:30;7065:7;7043:17;;:21;;:30;;;;:::i;:::-;:34;;:49::i;:::-;7006:86;;;-1:-1:-1;7028:12:8;;;6920:179::o;973:85:0:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;973:85;:::o;2711:347:8:-;1196:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1185:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:0;;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;2791:17:8::1;::::0;::::1;;2790:18;2782:64;;;;-1:-1:-1::0;;;2782:64:8::1;;;;;;;:::i;:::-;2856:17;:24:::0;;-1:-1:-1;;2856:24:8::1;2876:4;2856:24;::::0;;2899::::1;::::0;2917:4:::1;::::0;2899:24:::1;::::0;::::1;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;2891:5:8::1;:32:::0;;-1:-1:-1;;;;;;2891:32:8::1;-1:-1:-1::0;;;;;2891:32:8;;;::::1;::::0;;;::::1;::::0;;2943:26:::1;::::0;2963:4:::1;::::0;2943:26:::1;::::0;::::1;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;2933:7:8::1;:36:::0;;-1:-1:-1;;;;;;2933:36:8::1;-1:-1:-1::0;;;;;2933:36:8;;;::::1;::::0;;;::::1;::::0;;2980:29:::1;2991:17;:10:::0;3006:1:::1;2991:14;:17::i;2980:29::-;3019:31;3032:17;:10:::0;3047:1:::1;3032:14;:17::i;3019:31::-;2711:347:::0;:::o;4847:582::-;4926:17;;;;4918:59;;;;-1:-1:-1;;;4918:59:8;;;;;;;:::i;:::-;4987:26;:24;:26::i;:::-;5023:7;;:35;;-1:-1:-1;;;5023:35:8;;-1:-1:-1;;;;;5023:7:8;;;;:12;;:35;;5036:21;;5023:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5084:17;:15;:17::i;:::-;5069:12;:32;;;5111:18;;5132:52;;5176:7;;5132:39;;:21;;:25;:39::i;:52::-;5219:13;;5111:73;;-1:-1:-1;5219:40:8;;5237:21;5219:17;:40::i;:::-;5203:13;:56;5289:17;;:33;;5311:10;5289:21;:33::i;:::-;5269:17;:53;;;5354:11;;5383:38;;-1:-1:-1;;;5383:38:8;;5354:11;;;;-1:-1:-1;;;;;5354:11:8;;;;5383:13;;:38;;5397:10;;5410;;5383:38;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5376:46;;-1:-1:-1;;;5376:46:8;;;;;;;;;4847:582;;;:::o;2210:32::-;;;;:::o;3666:614::-;3733:17;;;;3725:59;;;;-1:-1:-1;;;3725:59:8;;;;;;;:::i;:::-;3794:26;:24;:26::i;:::-;3854:17;:15;:17::i;:::-;3839:12;:32;;;3881:29;;3913:41;;:23;:10;3928:7;3913:14;:23::i;:41::-;3965:7;;:35;;-1:-1:-1;;;3965:35:8;;3881:73;;-1:-1:-1;;;;;;3965:7:8;;:12;;:35;;3881:73;;3965:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4026:13:8;;:40;;-1:-1:-1;4026:13:8;-1:-1:-1;4044:21:8;4026:17;:40::i;:::-;4010:13;:56;4096:17;;:33;;4118:10;4096:21;:33::i;:::-;4076:17;:53;;;4161:11;;4191:56;;-1:-1:-1;;;4191:56:8;;4161:11;;;;-1:-1:-1;;;;;4161:11:8;;;;4191:17;;:56;;4209:10;;4229:4;;4236:10;;4191:56;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4183:90;;;;-1:-1:-1;;;4183:90:8;;;;;;;:::i;8257:111::-;8332:7;;:29;;-1:-1:-1;;;8332:29:8;;8306:7;;-1:-1:-1;;;;;8332:7:8;;:17;;:29;;8350:10;;8332:29;;;:::i;4286:555::-;4363:17;;;;4355:59;;;;-1:-1:-1;;;4355:59:8;;;;;;;:::i;:::-;4424:26;:24;:26::i;:::-;4460:5;;:33;;-1:-1:-1;;;4460:33:8;;-1:-1:-1;;;;;4460:5:8;;;;:10;;:33;;4471:21;;4460:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4517:15;:13;:15::i;:::-;4504:10;:28;;;4542:18;;4563:50;;4605:7;;4563:37;;:21;;:25;:37::i;:50::-;4638:11;;4542:71;;-1:-1:-1;4638:38:8;;4654:21;4638:15;:38::i;:::-;4624:11;:52;4704:15;;:31;;4724:10;4704:19;:31::i;:::-;4686:15;:49;4767:11;;4796:37;;-1:-1:-1;;;4796:37:8;;4767:11;;;;-1:-1:-1;;;;;4767:11:8;;;;4796:13;;:37;;4810:10;;4822;;4796:37;;;:::i;2045:34::-;;;;:::o;1939:35::-;;;;:::o;6725:157::-;6771:7;6797:11;;6812:1;6797:16;:78;;6830:45;6863:11;;6830:28;6850:7;6830:15;;:19;;:28;;;;:::i;6797:78::-;-1:-1:-1;6817:10:8;;;6725:157::o;1846:189:0:-;1196:12;:10;:12::i;:::-;-1:-1:-1;;;;;1185:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:0;;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;1934:22:0;::::1;1926:73;;;;-1:-1:-1::0;;;1926:73:0::1;;;;;;;:::i;:::-;2009:19;2019:8;2009:9;:19::i;2271:31:8:-:0;;;;:::o;3064:596::-;3129:17;;;;3121:59;;;;-1:-1:-1;;;3121:59:8;;;;;;;:::i;:::-;3190:26;:24;:26::i;:::-;3248:15;:13;:15::i;:::-;3235:10;:28;;;3273:29;;3305:39;;:23;:10;3320:7;3305:14;:23::i;:39::-;3355:5;;:33;;-1:-1:-1;;;3355:33:8;;3273:71;;-1:-1:-1;;;;;;3355:5:8;;:10;;:33;;3273:71;;3355:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3412:11:8;;:38;;-1:-1:-1;3412:11:8;-1:-1:-1;3428:21:8;3412:15;:38::i;:::-;3398:11;:52;3478:15;;:31;;3498:10;3478:19;:31::i;:::-;3460:15;:49;3541:11;;3571:56;;-1:-1:-1;;;3571:56:8;;3541:11;;;;-1:-1:-1;;;;;3541:11:8;;;;3571:17;;:56;;3589:10;;3609:4;;3616:10;;3571:56;;;:::i;2352:37::-;;;;;;:::o;6464:225::-;6533:7;6552:17;6572:22;6585:8;6572:12;:22::i;:::-;6552:42;;6612:70;6674:7;6612:57;6656:12;6658:9;6656:1;:12::i;:::-;6612:39;6616:15;;6633:17;;6612:3;:39::i;:::-;:43;;:57::i;:70::-;6605:77;;;6464:225;;;;:::o;6265:192::-;6323:6;6356:12;;6345:8;:23;6341:110;;;-1:-1:-1;6391:1:8;6384:8;;6341:110;-1:-1:-1;;;6431:9:8;;2672:96:6;2730:7;2756:5;2760:1;2756;:5;:::i;:::-;2749:12;2672:96;-1:-1:-1;;;2672:96:6:o;3039:::-;3097:7;3123:5;3127:1;3123;:5;:::i;586:96:5:-;665:10;586:96;:::o;2041:169:0:-;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2041:169;;:::o;3382:96:6:-;3440:7;3466:5;3470:1;3466;:5;:::i;3767:96::-;3825:7;3851:5;3855:1;3851;:5;:::i;7820:318:8:-;7883:7;7934:12;;7923:8;:23;7919:212;;;7969:52;8013:7;7969:39;7995:12;;7969:21;7982:7;7969:8;:12;;:21;;;;:::i;:39::-;:43;;:52::i;:::-;7962:59;;;;7919:212;8068:52;8112:7;8068:39;8098:8;8068:25;8085:7;8068:12;;:16;;:25;;;;:::i;7589:225::-;7634:7;;7721:5;7725:1;7721;:5;:::i;:::-;7709:7;7700:6;7705:1;7700;:6;:::i;:::-;:16;;;;:::i;:::-;7695:22;;:1;:22;:::i;:::-;:31;;;;:::i;:::-;:41;;7729:7;7695:41;:::i;:::-;7679:57;-1:-1:-1;7760:8:8;7796:11;7679:57;7760:8;7796:11;:::i;:::-;7786:21;;:7;:21;:::i;:::-;7779:28;7589:225;-1:-1:-1;;;;7589:225:8:o;7478:105::-;7536:7;7567:1;7562;:6;;:14;;7575:1;7562:14;;;-1:-1:-1;7571:1:8;;7478:105;-1:-1:-1;7478:105:8:o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;14:181:9:-;94:13;;147:22;136:34;;126:45;;116:2;;185:1;182;175:12;200:306;;312:2;300:9;291:7;287:23;283:32;280:2;;;333:6;325;318:22;280:2;364:23;;-1:-1:-1;;;;;416:31:9;;406:42;;396:2;;467:6;459;452:22;511:297;;631:2;619:9;610:7;606:23;602:32;599:2;;;652:6;644;637:22;599:2;689:9;683:16;742:5;735:13;728:21;721:5;718:32;708:2;;769:6;761;754:22;813:190;;925:2;913:9;904:7;900:23;896:32;893:2;;;946:6;938;931:22;893:2;-1:-1:-1;974:23:9;;883:120;-1:-1:-1;883:120:9:o;1008:194::-;;1131:2;1119:9;1110:7;1106:23;1102:32;1099:2;;;1152:6;1144;1137:22;1099:2;-1:-1:-1;1180:16:9;;1089:113;-1:-1:-1;1089:113:9:o;1207:487::-;;;;;;1395:3;1383:9;1374:7;1370:23;1366:33;1363:2;;;1417:6;1409;1402:22;1363:2;1445:41;1476:9;1445:41;:::i;:::-;1435:51;;1526:2;1515:9;1511:18;1505:25;1495:35;;1570:2;1559:9;1555:18;1549:25;1539:35;;1614:2;1603:9;1599:18;1593:25;1583:35;;1637:51;1683:3;1672:9;1668:19;1637:51;:::i;:::-;1627:61;;1353:341;;;;;;;;:::o;1699:203::-;-1:-1:-1;;;;;1863:32:9;;;;1845:51;;1833:2;1818:18;;1800:102::o;1907:375::-;-1:-1:-1;;;;;2165:15:9;;;2147:34;;2217:15;;;;2212:2;2197:18;;2190:43;2264:2;2249:18;;2242:34;;;;2097:2;2082:18;;2064:218::o;2287:274::-;-1:-1:-1;;;;;2479:32:9;;;;2461:51;;2543:2;2528:18;;2521:34;2449:2;2434:18;;2416:145::o;2566:187::-;2731:14;;2724:22;2706:41;;2694:2;2679:18;;2661:92::o;2758:402::-;2960:2;2942:21;;;2999:2;2979:18;;;2972:30;3038:34;3033:2;3018:18;;3011:62;-1:-1:-1;;;3104:2:9;3089:18;;3082:36;3150:3;3135:19;;2932:228::o;3165:345::-;3367:2;3349:21;;;3406:2;3386:18;;;3379:30;-1:-1:-1;;;3440:2:9;3425:18;;3418:51;3501:2;3486:18;;3339:171::o;3515:353::-;3717:2;3699:21;;;3756:2;3736:18;;;3729:30;3795:31;3790:2;3775:18;;3768:59;3859:2;3844:18;;3689:179::o;3873:356::-;4075:2;4057:21;;;4094:18;;;4087:30;4153:34;4148:2;4133:18;;4126:62;4220:2;4205:18;;4047:182::o;4234:397::-;4436:2;4418:21;;;4475:2;4455:18;;;4448:30;4514:34;4509:2;4494:18;;4487:62;-1:-1:-1;;;4580:2:9;4565:18;;4558:31;4621:3;4606:19;;4408:223::o;4636:177::-;4782:25;;;4770:2;4755:18;;4737:76::o;4818:128::-;;4889:1;4885:6;4882:1;4879:13;4876:2;;;4895:18;;:::i;:::-;-1:-1:-1;4931:9:9;;4866:80::o;4951:217::-;;5017:1;5007:2;;-1:-1:-1;;;5042:31:9;;5096:4;5093:1;5086:15;5124:4;5049:1;5114:15;5007:2;-1:-1:-1;5153:9:9;;4997:171::o;5173:453::-;5269:6;5292:5;5306:314;5355:1;5392:2;5382:8;5379:16;5369:2;;5399:5;;;5369:2;5440:4;5435:3;5431:14;5425:4;5422:24;5419:2;;;5449:18;;:::i;:::-;5499:2;5489:8;5485:17;5482:2;;;5514:16;;;;5482:2;5593:17;;;;;5553:15;;5306:314;;;5250:376;;;;;;;:::o;5631:148::-;;5718:55;-1:-1:-1;;5759:4:9;5745:19;;5739:4;5784:922;5868:8;5858:2;;-1:-1:-1;5909:1:9;5923:5;;5858:2;5957:4;5947:2;;-1:-1:-1;5994:1:9;6008:5;;5947:2;6039:4;6057:1;6052:59;;;;6125:1;6120:183;;;;6032:271;;6052:59;6082:1;6073:10;;6096:5;;;6120:183;6157:3;6147:8;6144:17;6141:2;;;6164:18;;:::i;:::-;6220:1;6210:8;6206:16;6197:25;;6248:3;6241:5;6238:14;6235:2;;;6255:18;;:::i;:::-;6288:5;;;6032:271;;6387:2;6377:8;6374:16;6368:3;6362:4;6359:13;6355:36;6349:2;6339:8;6336:16;6331:2;6325:4;6322:12;6318:35;6315:77;6312:2;;;-1:-1:-1;6424:19:9;;;6459:14;;;6456:2;;;6476:18;;:::i;:::-;6509:5;;6312:2;6556:42;6594:3;6584:8;6578:4;6575:1;6556:42;:::i;:::-;6631:6;6626:3;6622:16;6613:7;6610:29;6607:2;;;6642:18;;:::i;:::-;6680:20;;5848:858;-1:-1:-1;;;;5848:858:9:o;6711:168::-;;6817:1;6813;6809:6;6805:14;6802:1;6799:21;6794:1;6787:9;6780:17;6776:45;6773:2;;;6824:18;;:::i;:::-;-1:-1:-1;6864:9:9;;6763:116::o;6884:125::-;;6952:1;6949;6946:8;6943:2;;;6957:18;;:::i;:::-;-1:-1:-1;6994:9:9;;6933:76::o;7014:127::-;7075:10;7070:3;7066:20;7063:1;7056:31;7106:4;7103:1;7096:15;7130:4;7127:1;7120:15",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    1863,
    8372
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH3 0x15F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB75CBE0B GT PUSH3 0xC9 JUMPI DUP1 PUSH4 0xF0156E8A GT PUSH3 0x87 JUMPI DUP1 PUSH4 0xF0156E8A EQ PUSH3 0x261 JUMPI DUP1 PUSH4 0xF06847D6 EQ PUSH3 0x26B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH3 0x275 JUMPI DUP1 PUSH4 0xF4352C57 EQ PUSH3 0x28C JUMPI DUP1 PUSH4 0xF530C04A EQ PUSH3 0x296 JUMPI DUP1 PUSH4 0xFEAE67B0 EQ PUSH3 0x2AD JUMPI PUSH3 0x15F JUMP JUMPDEST DUP1 PUSH4 0xB75CBE0B EQ PUSH3 0x215 JUMPI DUP1 PUSH4 0xC46D4F09 EQ PUSH3 0x21F JUMPI DUP1 PUSH4 0xC7E3B124 EQ PUSH3 0x236 JUMPI DUP1 PUSH4 0xD1EE539D EQ PUSH3 0x240 JUMPI DUP1 PUSH4 0xDDE7BE2C EQ PUSH3 0x257 JUMPI PUSH3 0x15F JUMP JUMPDEST DUP1 PUSH4 0x6E5D6615 GT PUSH3 0x123 JUMPI DUP1 PUSH4 0x6E5D6615 EQ PUSH3 0x1AE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH3 0x1BA JUMPI DUP1 PUSH4 0x81C2B29B EQ PUSH3 0x1C4 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH3 0x1CE JUMPI DUP1 PUSH4 0x98881BC9 EQ PUSH3 0x1E7 JUMPI DUP1 PUSH4 0xA14274E8 EQ PUSH3 0x1FE JUMPI PUSH3 0x15F JUMP JUMPDEST DUP1 PUSH3 0x34B9CC EQ PUSH3 0x164 JUMPI DUP1 PUSH4 0xC3E5343 EQ PUSH3 0x186 JUMPI DUP1 PUSH4 0x14D7C6D2 EQ PUSH3 0x190 JUMPI DUP1 PUSH4 0x157D0129 EQ PUSH3 0x19A JUMPI DUP1 PUSH4 0x3A3610BC EQ PUSH3 0x1A4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x16E PUSH3 0x2C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x17D SWAP2 SWAP1 PUSH3 0x1180 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x16E PUSH3 0x2CC JUMP JUMPDEST PUSH3 0x16E PUSH3 0x2D2 JUMP JUMPDEST PUSH3 0x16E PUSH3 0x2D8 JUMP JUMPDEST PUSH3 0x16E PUSH3 0x364 JUMP JUMPDEST PUSH3 0x1B8 PUSH3 0x3F5 JUMP JUMPDEST STOP JUMPDEST PUSH3 0x1B8 PUSH3 0x497 JUMP JUMPDEST PUSH3 0x16E PUSH3 0x4F4 JUMP JUMPDEST PUSH3 0x1D8 PUSH3 0x536 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x17D SWAP2 SWAP1 PUSH3 0x1002 JUMP JUMPDEST PUSH3 0x1B8 PUSH3 0x1F8 CALLDATASIZE PUSH1 0x4 PUSH3 0xF7C JUMP JUMPDEST PUSH3 0x545 JUMP JUMPDEST PUSH3 0x1B8 PUSH3 0x20F CALLDATASIZE PUSH1 0x4 PUSH3 0xF7C JUMP JUMPDEST PUSH3 0x697 JUMP JUMPDEST PUSH3 0x16E PUSH3 0x82C JUMP JUMPDEST PUSH3 0x1B8 PUSH3 0x230 CALLDATASIZE PUSH1 0x4 PUSH3 0xF7C JUMP JUMPDEST PUSH3 0x832 JUMP JUMPDEST PUSH3 0x16E PUSH3 0x9C4 JUMP JUMPDEST PUSH3 0x1B8 PUSH3 0x251 CALLDATASIZE PUSH1 0x4 PUSH3 0xF7C JUMP JUMPDEST PUSH3 0x9F7 JUMP JUMPDEST PUSH3 0x16E PUSH3 0xB16 JUMP JUMPDEST PUSH3 0x16E PUSH3 0xB1C JUMP JUMPDEST PUSH3 0x16E PUSH3 0xB22 JUMP JUMPDEST PUSH3 0x1B8 PUSH3 0x286 CALLDATASIZE PUSH1 0x4 PUSH3 0xF31 JUMP JUMPDEST PUSH3 0xB57 JUMP JUMPDEST PUSH3 0x16E PUSH3 0xBD1 JUMP JUMPDEST PUSH3 0x1B8 PUSH3 0x2A7 CALLDATASIZE PUSH1 0x4 PUSH3 0xF7C JUMP JUMPDEST PUSH3 0xBD7 JUMP JUMPDEST PUSH3 0x2B7 PUSH3 0xCF4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x17D SWAP2 SWAP1 PUSH3 0x1053 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH3 0x30B SWAP1 CALLER SWAP1 PUSH1 0x4 ADD PUSH3 0x1002 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x324 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x339 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x35F SWAP2 SWAP1 PUSH3 0xF95 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x3FABE5A3 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP4 SWAP2 DUP4 SWAP2 PUSH4 0xFEAF968C SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0xA0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x3AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x3C3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x3E9 SWAP2 SWAP1 PUSH3 0xFAE JUMP JUMPDEST POP SWAP2 SWAP6 POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x401 PUSH3 0x364 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x3 SLOAD GT DUP1 ISZERO PUSH3 0x418 JUMPI POP PUSH1 0x0 PUSH1 0x4 SLOAD GT JUMPDEST ISZERO PUSH3 0x492 JUMPI PUSH1 0x0 PUSH3 0x42B DUP3 PUSH3 0xCFD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x43A DUP4 PUSH3 0xD44 JUMP JUMPDEST SGT ISZERO PUSH3 0x46B JUMPI PUSH1 0x3 SLOAD PUSH3 0x450 SWAP1 DUP3 PUSH3 0xD64 JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x4 SLOAD PUSH3 0x462 SWAP1 DUP3 PUSH3 0xD79 JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH3 0x490 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH3 0x47A SWAP1 DUP3 PUSH3 0xD79 JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x4 SLOAD PUSH3 0x48C SWAP1 DUP3 PUSH3 0xD64 JUMP JUMPDEST PUSH1 0x4 SSTORE JUMPDEST POP JUMPDEST PUSH1 0x7 SSTORE JUMP JUMPDEST PUSH3 0x4A1 PUSH3 0xD87 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x4B4 PUSH3 0x536 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH3 0x4E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x4DD SWAP1 PUSH3 0x110A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x4F2 PUSH1 0x0 PUSH3 0xD8B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD PUSH1 0x0 EQ PUSH3 0x52F JUMPI PUSH3 0x529 PUSH1 0x6 SLOAD PUSH3 0x522 PUSH3 0xF4240 PUSH1 0x4 SLOAD PUSH3 0xDDB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH3 0xDE9 JUMP JUMPDEST PUSH3 0x35F JUMP JUMPDEST POP PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH3 0x54F PUSH3 0xD87 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x562 PUSH3 0x536 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH3 0x58B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x4DD SWAP1 PUSH3 0x110A JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND ISZERO PUSH3 0x5B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x4DD SWAP1 PUSH3 0x113F JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x40 MLOAD ADDRESS SWAP1 PUSH3 0x5CE SWAP1 PUSH3 0xEFA JUMP JUMPDEST PUSH3 0x5DA SWAP2 SWAP1 PUSH3 0x1002 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH3 0x5F7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 MLOAD ADDRESS SWAP1 PUSH3 0x628 SWAP1 PUSH3 0xF08 JUMP JUMPDEST PUSH3 0x634 SWAP2 SWAP1 PUSH3 0x1002 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH3 0x651 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH3 0x683 PUSH3 0x2A7 DUP3 PUSH1 0x2 PUSH3 0xDE9 JUMP JUMPDEST PUSH3 0x694 PUSH3 0x230 DUP3 PUSH1 0x2 PUSH3 0xDE9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND PUSH3 0x6BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x4DD SWAP1 PUSH3 0x10D3 JUMP JUMPDEST PUSH3 0x6C6 PUSH3 0x3F5 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x852CD8D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x42966C68 SWAP1 PUSH3 0x6F8 SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH3 0x1180 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x713 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x728 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH3 0x736 PUSH3 0x4F4 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE PUSH1 0x0 SWAP1 PUSH3 0x755 SWAP1 PUSH3 0xF4240 SWAP1 PUSH3 0x522 SWAP1 DUP6 SWAP1 PUSH3 0xDDB JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH3 0x767 SWAP1 DUP4 PUSH3 0xD79 JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH1 0x4 SLOAD PUSH3 0x779 SWAP1 DUP3 PUSH3 0xD79 JUMP JUMPDEST PUSH1 0x4 SWAP1 DUP2 SSTORE PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH2 0x100 SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH3 0x7B6 SWAP2 CALLER SWAP2 DUP8 SWAP2 ADD PUSH3 0x103A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x7D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x7E6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x80C SWAP2 SWAP1 PUSH3 0xF5A JUMP JUMPDEST PUSH3 0x827 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND PUSH3 0x857 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x4DD SWAP1 PUSH3 0x10D3 JUMP JUMPDEST PUSH3 0x861 PUSH3 0x3F5 JUMP JUMPDEST PUSH3 0x86B PUSH3 0x4F4 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE PUSH1 0x0 SWAP1 PUSH3 0x887 SWAP1 PUSH3 0x522 DUP5 PUSH3 0xF4240 PUSH3 0xDDB JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x140E25AD PUSH1 0xE3 SHL DUP2 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA0712D68 SWAP1 PUSH3 0x8BA SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH3 0x1180 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x8D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x8EA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x6 SLOAD PUSH3 0x8FE SWAP3 POP SWAP1 POP DUP3 PUSH3 0xD64 JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH1 0x4 SLOAD PUSH3 0x910 SWAP1 DUP4 PUSH3 0xD64 JUMP JUMPDEST PUSH1 0x4 SWAP1 DUP2 SSTORE PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH2 0x100 SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 SWAP2 PUSH4 0x23B872DD SWAP2 PUSH3 0x94F SWAP2 CALLER SWAP2 ADDRESS SWAP2 DUP10 SWAP2 ADD PUSH3 0x1016 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x96A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x97F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x9A5 SWAP2 SWAP1 PUSH3 0xF5A JUMP JUMPDEST PUSH3 0x827 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x4DD SWAP1 PUSH3 0x10A4 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH3 0x30B SWAP1 CALLER SWAP1 PUSH1 0x4 ADD PUSH3 0x1002 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND PUSH3 0xA1C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x4DD SWAP1 PUSH3 0x10D3 JUMP JUMPDEST PUSH3 0xA26 PUSH3 0x3F5 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0x852CD8D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x42966C68 SWAP1 PUSH3 0xA58 SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH3 0x1180 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0xA73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0xA88 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH3 0xA96 PUSH3 0xB22 JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE PUSH1 0x0 SWAP1 PUSH3 0xAB5 SWAP1 PUSH3 0xF4240 SWAP1 PUSH3 0x522 SWAP1 DUP6 SWAP1 PUSH3 0xDDB JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP1 SWAP2 POP PUSH3 0xAC7 SWAP1 DUP4 PUSH3 0xD79 JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH1 0x3 SLOAD PUSH3 0xAD9 SWAP1 DUP3 PUSH3 0xD79 JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH2 0x100 SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH3 0x7B6 SWAP1 CALLER SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH3 0x103A JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 SLOAD PUSH1 0x0 EQ PUSH3 0xB50 JUMPI PUSH3 0x529 PUSH1 0x5 SLOAD PUSH3 0x522 PUSH3 0xF4240 PUSH1 0x3 SLOAD PUSH3 0xDDB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST PUSH3 0xB61 PUSH3 0xD87 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0xB74 PUSH3 0x536 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH3 0xB9D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x4DD SWAP1 PUSH3 0x110A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0xBC6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x4DD SWAP1 PUSH3 0x105E JUMP JUMPDEST PUSH3 0x694 DUP2 PUSH3 0xD8B JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND PUSH3 0xBFC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x4DD SWAP1 PUSH3 0x10D3 JUMP JUMPDEST PUSH3 0xC06 PUSH3 0x3F5 JUMP JUMPDEST PUSH3 0xC10 PUSH3 0xB22 JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE PUSH1 0x0 SWAP1 PUSH3 0xC2C SWAP1 PUSH3 0x522 DUP5 PUSH3 0xF4240 PUSH3 0xDDB JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0x140E25AD PUSH1 0xE3 SHL DUP2 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA0712D68 SWAP1 PUSH3 0xC5F SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH3 0x1180 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0xC7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0xC8F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x5 SLOAD PUSH3 0xCA3 SWAP3 POP SWAP1 POP DUP3 PUSH3 0xD64 JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH1 0x3 SLOAD PUSH3 0xCB5 SWAP1 DUP4 PUSH3 0xD64 JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH2 0x100 SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 SWAP1 PUSH4 0x23B872DD SWAP1 PUSH3 0x94F SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH3 0x1016 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH3 0xD0B DUP4 PUSH3 0xDF7 JUMP JUMPDEST SWAP1 POP PUSH3 0xD3B PUSH3 0xF4240 PUSH3 0x522 PUSH3 0xD24 DUP5 PUSH3 0xE61 JUMP JUMPDEST PUSH3 0xD34 PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH3 0xEE1 JUMP JUMPDEST SWAP1 PUSH3 0xDDB JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD DUP3 GT ISZERO PUSH3 0xD5A JUMPI POP PUSH1 0x1 PUSH3 0xD3F JUMP JUMPDEST POP PUSH1 0x0 NOT PUSH3 0xD3F JUMP JUMPDEST PUSH1 0x0 PUSH3 0xD72 DUP3 DUP5 PUSH3 0x1189 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xD72 DUP3 DUP5 PUSH3 0x131F JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xD72 DUP3 DUP5 PUSH3 0x12FD JUMP JUMPDEST PUSH1 0x0 PUSH3 0xD72 DUP3 DUP5 PUSH3 0x11A4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD DUP3 GT ISZERO PUSH3 0xE3A JUMPI PUSH3 0xE32 PUSH3 0xF4240 PUSH3 0xE2B PUSH1 0x7 SLOAD PUSH3 0x522 PUSH3 0xF4240 DUP8 PUSH3 0xDDB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH3 0xD79 JUMP JUMPDEST SWAP1 POP PUSH3 0xD3F JUMP JUMPDEST PUSH3 0xE32 PUSH3 0xF4240 PUSH3 0xE2B DUP5 PUSH3 0x522 PUSH3 0xF4240 PUSH1 0x7 SLOAD PUSH3 0xDDB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH3 0xE71 DUP4 PUSH1 0x3 PUSH3 0x12FD JUMP JUMPDEST PUSH3 0xF4240 PUSH3 0xE82 PUSH1 0x2 DUP7 PUSH3 0x1212 JUMP JUMPDEST PUSH3 0xE8E SWAP2 SWAP1 PUSH3 0x11A4 JUMP JUMPDEST PUSH3 0xE9B SWAP1 PUSH1 0x9 PUSH3 0x12FD JUMP JUMPDEST PUSH3 0xEA7 SWAP2 SWAP1 PUSH3 0x1189 JUMP JUMPDEST PUSH3 0xEB6 SWAP1 PUSH3 0xF4240 PUSH3 0x1189 JUMP JUMPDEST SWAP1 POP PUSH5 0xE8D4A51000 PUSH3 0xECA DUP3 DUP3 PUSH3 0x11A4 JUMP JUMPDEST PUSH3 0xED9 SWAP1 PUSH3 0xF4240 PUSH3 0x131F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 GT ISZERO PUSH3 0xEF3 JUMPI DUP2 PUSH3 0xD72 JUMP JUMPDEST POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFA6 DUP1 PUSH3 0x1350 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH2 0xFAA DUP1 PUSH3 0x22F6 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH3 0xD3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0xF43 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0xD72 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0xF6C JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH3 0xD72 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0xF8E JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0xFA7 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH3 0xFC6 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH3 0xFD1 DUP7 PUSH3 0xF16 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH3 0xFF6 PUSH1 0x80 DUP8 ADD PUSH3 0xF16 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x2AA9A221903A3930B739B332B9103330B4B632B217 PUSH1 0x59 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x54686520706F6F6C20776173206E6F7420696E697469616C697A65642E000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x54686520706F6F6C2077617320616C726561647920696E697469616C697A6564 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0xF9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH3 0x119F JUMPI PUSH3 0x119F PUSH3 0x1339 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0x11C0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 JUMPDEST PUSH1 0x1 DUP1 DUP7 GT PUSH3 0x11D9 JUMPI POP PUSH3 0x1209 JUMP JUMPDEST DUP2 DUP8 DIV DUP3 GT ISZERO PUSH3 0x11EE JUMPI PUSH3 0x11EE PUSH3 0x1339 JUMP JUMPDEST DUP1 DUP7 AND ISZERO PUSH3 0x11FC JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP5 SWAP1 SWAP5 SHR SWAP4 DUP1 MUL PUSH3 0x11C8 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xD72 PUSH1 0x0 NOT PUSH1 0xFF DUP6 AND DUP5 PUSH1 0x0 DUP3 PUSH3 0x1231 JUMPI POP PUSH1 0x1 PUSH3 0xD72 JUMP JUMPDEST DUP2 PUSH3 0x1240 JUMPI POP PUSH1 0x0 PUSH3 0xD72 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0x1259 JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x1264 JUMPI PUSH3 0x1298 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0xD72 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0x1278 JUMPI PUSH3 0x1278 PUSH3 0x1339 JUMP JUMPDEST PUSH1 0x1 DUP5 SHL SWAP2 POP DUP5 DUP3 GT ISZERO PUSH3 0x1291 JUMPI PUSH3 0x1291 PUSH3 0x1339 JUMP JUMPDEST POP PUSH3 0xD72 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0x12D0 JUMPI POP DUP2 DUP2 EXP DUP4 DUP2 GT ISZERO PUSH3 0x12CA JUMPI PUSH3 0x12CA PUSH3 0x1339 JUMP JUMPDEST PUSH3 0xD72 JUMP JUMPDEST PUSH3 0x12DF DUP5 DUP5 DUP5 PUSH1 0x1 PUSH3 0x11C5 JUMP JUMPDEST DUP1 DUP7 DIV DUP3 GT ISZERO PUSH3 0x12F4 JUMPI PUSH3 0x12F4 PUSH3 0x1339 JUMP JUMPDEST MUL SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH3 0x131A JUMPI PUSH3 0x131A PUSH3 0x1339 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH3 0x1334 JUMPI PUSH3 0x1334 PUSH3 0x1339 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xFA6 CODESIZE SUB DUP1 PUSH3 0xFA6 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x169 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0xA DUP2 MSTORE PUSH10 0x426974636F696E20557 PUSH1 0xB4 SHL PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE DUP4 MLOAD DUP1 DUP6 ADD SWAP1 SWAP5 MSTORE PUSH1 0x5 DUP5 MSTORE PUSH5 0x425443555 PUSH1 0xDC SHL SWAP1 DUP5 ADD MSTORE DUP2 MLOAD SWAP2 SWAP3 SWAP2 PUSH3 0x83 SWAP2 PUSH1 0x3 SWAP2 PUSH3 0xC3 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x99 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0xC3 JUMP JUMPDEST POP POP PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE POP PUSH3 0x1D6 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0xD1 SWAP1 PUSH3 0x199 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xF5 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x140 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x110 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x140 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x140 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x140 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x123 JUMP JUMPDEST POP PUSH3 0x14E SWAP3 SWAP2 POP PUSH3 0x152 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x14E JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x153 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x17B JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x192 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x1AE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x1D0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDC0 DUP1 PUSH3 0x1E6 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA0712D68 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1F9 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1B8 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x17D JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x12D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF7 PUSH2 0x20C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x9C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x120 PUSH2 0x11B CALLDATASIZE PUSH1 0x4 PUSH2 0x975 JUMP JUMPDEST PUSH2 0x29E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x9B6 JUMP JUMPDEST PUSH2 0x135 PUSH2 0x2BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0xCF3 JUMP JUMPDEST PUSH2 0x120 PUSH2 0x150 CALLDATASIZE PUSH1 0x4 PUSH2 0x93A JUMP JUMPDEST PUSH2 0x2C1 JUMP JUMPDEST PUSH2 0x15D PUSH2 0x35A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0xCFC JUMP JUMPDEST PUSH2 0x120 PUSH2 0x178 CALLDATASIZE PUSH1 0x4 PUSH2 0x975 JUMP JUMPDEST PUSH2 0x35F JUMP JUMPDEST PUSH2 0x190 PUSH2 0x18B CALLDATASIZE PUSH1 0x4 PUSH2 0x99E JUMP JUMPDEST PUSH2 0x3B3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x135 PUSH2 0x1A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x8E7 JUMP JUMPDEST PUSH2 0x3D7 JUMP JUMPDEST PUSH2 0x190 PUSH2 0x1B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x975 JUMP JUMPDEST PUSH2 0x3F6 JUMP JUMPDEST PUSH2 0xF7 PUSH2 0x449 JUMP JUMPDEST PUSH2 0x190 PUSH2 0x1CE CALLDATASIZE PUSH1 0x4 PUSH2 0x99E JUMP JUMPDEST PUSH2 0x458 JUMP JUMPDEST PUSH2 0x120 PUSH2 0x1E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x975 JUMP JUMPDEST PUSH2 0x479 JUMP JUMPDEST PUSH2 0x120 PUSH2 0x1F4 CALLDATASIZE PUSH1 0x4 PUSH2 0x975 JUMP JUMPDEST PUSH2 0x4F2 JUMP JUMPDEST PUSH2 0x135 PUSH2 0x207 CALLDATASIZE PUSH1 0x4 PUSH2 0x908 JUMP JUMPDEST PUSH2 0x506 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x21B SWAP1 PUSH2 0xD39 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x247 SWAP1 PUSH2 0xD39 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x294 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x269 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x294 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x277 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B2 PUSH2 0x2AB PUSH2 0x531 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x535 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CE DUP5 DUP5 DUP5 PUSH2 0x5E9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 PUSH2 0x2EF PUSH2 0x531 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x33B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x34F DUP6 PUSH2 0x347 PUSH2 0x531 JUMP JUMPDEST DUP6 DUP5 SUB PUSH2 0x535 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B2 PUSH2 0x36C PUSH2 0x531 JUMP JUMPDEST DUP5 DUP5 PUSH1 0x1 PUSH1 0x0 PUSH2 0x37A PUSH2 0x531 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP12 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x3AE SWAP2 SWAP1 PUSH2 0xD0A JUMP JUMPDEST PUSH2 0x535 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3D4 ORIGIN DUP3 PUSH2 0x3F6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x404 DUP4 PUSH2 0x207 PUSH2 0x531 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x426 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0xB69 JUMP JUMPDEST PUSH2 0x43A DUP4 PUSH2 0x432 PUSH2 0x531 JUMP JUMPDEST DUP5 DUP5 SUB PUSH2 0x535 JUMP JUMPDEST PUSH2 0x444 DUP4 DUP4 PUSH2 0x713 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x21B SWAP1 PUSH2 0xD39 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x46F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3D4 ORIGIN DUP3 PUSH2 0x804 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x488 PUSH2 0x531 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP9 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x4D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0xC77 JUMP JUMPDEST PUSH2 0x4E8 PUSH2 0x4DF PUSH2 0x531 JUMP JUMPDEST DUP6 DUP6 DUP5 SUB PUSH2 0x535 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B2 PUSH2 0x4FF PUSH2 0x531 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x5E9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0xC33 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x581 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0xA99 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x5DC SWAP1 DUP6 SWAP1 PUSH2 0xCF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x60F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0xBEE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x635 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0xA14 JUMP JUMPDEST PUSH2 0x640 DUP4 DUP4 DUP4 PUSH2 0x444 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x679 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0xADB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6B0 SWAP1 DUP5 SWAP1 PUSH2 0xD0A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6FA SWAP2 SWAP1 PUSH2 0xCF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x70D DUP5 DUP5 DUP5 PUSH2 0x444 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x739 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0xBAD JUMP JUMPDEST PUSH2 0x745 DUP3 PUSH1 0x0 DUP4 PUSH2 0x444 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x77E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0xA57 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 DUP4 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x7AD SWAP1 DUP5 SWAP1 PUSH2 0xD22 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x7F0 SWAP1 DUP7 SWAP1 PUSH2 0xCF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x444 DUP4 PUSH1 0x0 DUP5 PUSH2 0x444 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x82A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0xCBC JUMP JUMPDEST PUSH2 0x836 PUSH1 0x0 DUP4 DUP4 PUSH2 0x444 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x848 SWAP2 SWAP1 PUSH2 0xD0A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x875 SWAP1 DUP5 SWAP1 PUSH2 0xD0A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x8B8 SWAP1 DUP6 SWAP1 PUSH2 0xCF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x8CC PUSH1 0x0 DUP4 DUP4 PUSH2 0x444 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8F8 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x901 DUP3 PUSH2 0x8D0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x91A JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x923 DUP4 PUSH2 0x8D0 JUMP JUMPDEST SWAP2 POP PUSH2 0x931 PUSH1 0x20 DUP5 ADD PUSH2 0x8D0 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x94E JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x957 DUP5 PUSH2 0x8D0 JUMP JUMPDEST SWAP3 POP PUSH2 0x965 PUSH1 0x20 DUP6 ADD PUSH2 0x8D0 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x987 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x990 DUP4 PUSH2 0x8D0 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9AF JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x9ED JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x9D1 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x9FE JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E74206578636565647320616C6C6F77 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x616E6365 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xD1D JUMPI PUSH2 0xD1D PUSH2 0xD74 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xD34 JUMPI PUSH2 0xD34 PUSH2 0xD74 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xD4D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xD6E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP8 0x23 0xAF 0x2E 0xAE 0xE6 EXTCODEHASH SHR CALLDATACOPY SLOAD 0xEC 0xB6 0xED DUP6 0x5C RETURNDATACOPY PUSH24 0x1D9FE634EEBF416CE1355866911C6D64736F6C6343000800 STOP CALLER PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xFAA CODESIZE SUB DUP1 PUSH3 0xFAA DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x16D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0xC DUP2 MSTORE PUSH12 0x2134BA31B7B4B7102237BBB7 PUSH1 0xA1 SHL PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE DUP4 MLOAD DUP1 DUP6 ADD SWAP1 SWAP5 MSTORE PUSH1 0x7 DUP5 MSTORE PUSH7 0x212A21A227ABA7 PUSH1 0xC9 SHL SWAP1 DUP5 ADD MSTORE DUP2 MLOAD SWAP2 SWAP3 SWAP2 PUSH3 0x87 SWAP2 PUSH1 0x3 SWAP2 PUSH3 0xC7 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x9D SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0xC7 JUMP JUMPDEST POP POP PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE POP PUSH3 0x1DA JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0xD5 SWAP1 PUSH3 0x19D JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xF9 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x144 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x114 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x144 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x144 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x144 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x127 JUMP JUMPDEST POP PUSH3 0x152 SWAP3 SWAP2 POP PUSH3 0x156 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x152 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x157 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x17F JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x196 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x1B2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x1D4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDC0 DUP1 PUSH3 0x1EA PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA0712D68 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1F9 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1B8 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x17D JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x12D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF7 PUSH2 0x20C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x9C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x120 PUSH2 0x11B CALLDATASIZE PUSH1 0x4 PUSH2 0x975 JUMP JUMPDEST PUSH2 0x29E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x9B6 JUMP JUMPDEST PUSH2 0x135 PUSH2 0x2BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0xCF3 JUMP JUMPDEST PUSH2 0x120 PUSH2 0x150 CALLDATASIZE PUSH1 0x4 PUSH2 0x93A JUMP JUMPDEST PUSH2 0x2C1 JUMP JUMPDEST PUSH2 0x15D PUSH2 0x35A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0xCFC JUMP JUMPDEST PUSH2 0x120 PUSH2 0x178 CALLDATASIZE PUSH1 0x4 PUSH2 0x975 JUMP JUMPDEST PUSH2 0x35F JUMP JUMPDEST PUSH2 0x190 PUSH2 0x18B CALLDATASIZE PUSH1 0x4 PUSH2 0x99E JUMP JUMPDEST PUSH2 0x3B3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x135 PUSH2 0x1A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x8E7 JUMP JUMPDEST PUSH2 0x3D7 JUMP JUMPDEST PUSH2 0x190 PUSH2 0x1B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x975 JUMP JUMPDEST PUSH2 0x3F6 JUMP JUMPDEST PUSH2 0xF7 PUSH2 0x449 JUMP JUMPDEST PUSH2 0x190 PUSH2 0x1CE CALLDATASIZE PUSH1 0x4 PUSH2 0x99E JUMP JUMPDEST PUSH2 0x458 JUMP JUMPDEST PUSH2 0x120 PUSH2 0x1E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x975 JUMP JUMPDEST PUSH2 0x479 JUMP JUMPDEST PUSH2 0x120 PUSH2 0x1F4 CALLDATASIZE PUSH1 0x4 PUSH2 0x975 JUMP JUMPDEST PUSH2 0x4F2 JUMP JUMPDEST PUSH2 0x135 PUSH2 0x207 CALLDATASIZE PUSH1 0x4 PUSH2 0x908 JUMP JUMPDEST PUSH2 0x506 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x21B SWAP1 PUSH2 0xD39 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x247 SWAP1 PUSH2 0xD39 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x294 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x269 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x294 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x277 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B2 PUSH2 0x2AB PUSH2 0x531 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x535 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CE DUP5 DUP5 DUP5 PUSH2 0x5E9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 PUSH2 0x2EF PUSH2 0x531 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x33B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x34F DUP6 PUSH2 0x347 PUSH2 0x531 JUMP JUMPDEST DUP6 DUP5 SUB PUSH2 0x535 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B2 PUSH2 0x36C PUSH2 0x531 JUMP JUMPDEST DUP5 DUP5 PUSH1 0x1 PUSH1 0x0 PUSH2 0x37A PUSH2 0x531 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP12 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x3AE SWAP2 SWAP1 PUSH2 0xD0A JUMP JUMPDEST PUSH2 0x535 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3D4 ORIGIN DUP3 PUSH2 0x3F6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x404 DUP4 PUSH2 0x207 PUSH2 0x531 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x426 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0xB69 JUMP JUMPDEST PUSH2 0x43A DUP4 PUSH2 0x432 PUSH2 0x531 JUMP JUMPDEST DUP5 DUP5 SUB PUSH2 0x535 JUMP JUMPDEST PUSH2 0x444 DUP4 DUP4 PUSH2 0x713 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x21B SWAP1 PUSH2 0xD39 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x46F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3D4 ORIGIN DUP3 PUSH2 0x804 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x488 PUSH2 0x531 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP9 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x4D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0xC77 JUMP JUMPDEST PUSH2 0x4E8 PUSH2 0x4DF PUSH2 0x531 JUMP JUMPDEST DUP6 DUP6 DUP5 SUB PUSH2 0x535 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B2 PUSH2 0x4FF PUSH2 0x531 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x5E9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0xC33 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x581 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0xA99 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x5DC SWAP1 DUP6 SWAP1 PUSH2 0xCF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x60F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0xBEE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x635 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0xA14 JUMP JUMPDEST PUSH2 0x640 DUP4 DUP4 DUP4 PUSH2 0x444 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x679 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0xADB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6B0 SWAP1 DUP5 SWAP1 PUSH2 0xD0A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6FA SWAP2 SWAP1 PUSH2 0xCF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x70D DUP5 DUP5 DUP5 PUSH2 0x444 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x739 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0xBAD JUMP JUMPDEST PUSH2 0x745 DUP3 PUSH1 0x0 DUP4 PUSH2 0x444 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x77E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0xA57 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 DUP4 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x7AD SWAP1 DUP5 SWAP1 PUSH2 0xD22 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x7F0 SWAP1 DUP7 SWAP1 PUSH2 0xCF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x444 DUP4 PUSH1 0x0 DUP5 PUSH2 0x444 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x82A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0xCBC JUMP JUMPDEST PUSH2 0x836 PUSH1 0x0 DUP4 DUP4 PUSH2 0x444 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x848 SWAP2 SWAP1 PUSH2 0xD0A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x875 SWAP1 DUP5 SWAP1 PUSH2 0xD0A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x8B8 SWAP1 DUP6 SWAP1 PUSH2 0xCF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x8CC PUSH1 0x0 DUP4 DUP4 PUSH2 0x444 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8F8 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x901 DUP3 PUSH2 0x8D0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x91A JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x923 DUP4 PUSH2 0x8D0 JUMP JUMPDEST SWAP2 POP PUSH2 0x931 PUSH1 0x20 DUP5 ADD PUSH2 0x8D0 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x94E JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x957 DUP5 PUSH2 0x8D0 JUMP JUMPDEST SWAP3 POP PUSH2 0x965 PUSH1 0x20 DUP6 ADD PUSH2 0x8D0 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x987 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x990 DUP4 PUSH2 0x8D0 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9AF JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x9ED JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x9D1 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x9FE JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E74206578636565647320616C6C6F77 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x616E6365 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xD1D JUMPI PUSH2 0xD1D PUSH2 0xD74 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xD34 JUMPI PUSH2 0xD34 PUSH2 0xD74 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xD4D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xD6E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 ORIGIN 0x4E DUP5 SWAP7 LOG1 PUSH29 0xFDB5264C6F7CC3CAA5E9DBB3E06697130D232C976A41661DA064736F6C PUSH4 0x43000800 STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 0x2C 0xC2 0xAF LT SUB STATICCALL 0xD0 0xD1 0xBF 0xD2 NOT 0x2A 0xD3 0xE5 DUP15 0xCA 0xDF 0x26 0xAD 0xE4 0xC BALANCE PUSH18 0x7814F840251338F764736F6C634300080000 CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        1863,
        8372
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "6": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "DUP1",
      "path": "8"
    },
    "7": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "8": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x11"
    },
    "12": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "13": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "DUP1",
      "path": "8"
    },
    "16": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "REVERT",
      "path": "8"
    },
    "17": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "18": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "POP",
      "path": "8"
    },
    "19": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "21": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "22": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "LT",
      "path": "8"
    },
    "23": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x15F"
    },
    "27": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "28": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "30": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "CALLDATALOAD",
      "path": "8"
    },
    "31": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xE0"
    },
    "33": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "SHR",
      "path": "8"
    },
    "34": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "DUP1",
      "path": "8"
    },
    "35": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xB75CBE0B"
    },
    "40": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "GT",
      "path": "8"
    },
    "41": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xC9"
    },
    "45": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "46": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "DUP1",
      "path": "8"
    },
    "47": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xF0156E8A"
    },
    "52": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "GT",
      "path": "8"
    },
    "53": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x87"
    },
    "57": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "58": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "DUP1",
      "path": "8"
    },
    "59": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xF0156E8A"
    },
    "64": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "EQ",
      "path": "8"
    },
    "65": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x261"
    },
    "69": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "70": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "DUP1",
      "path": "8"
    },
    "71": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xF06847D6"
    },
    "76": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "EQ",
      "path": "8"
    },
    "77": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x26B"
    },
    "81": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "82": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "DUP1",
      "path": "8"
    },
    "83": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xF2FDE38B"
    },
    "88": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "EQ",
      "path": "8"
    },
    "89": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x275"
    },
    "93": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "94": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "DUP1",
      "path": "8"
    },
    "95": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xF4352C57"
    },
    "100": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "EQ",
      "path": "8"
    },
    "101": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x28C"
    },
    "105": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "106": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "DUP1",
      "path": "8"
    },
    "107": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xF530C04A"
    },
    "112": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "EQ",
      "path": "8"
    },
    "113": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x296"
    },
    "117": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "118": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "DUP1",
      "path": "8"
    },
    "119": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xFEAE67B0"
    },
    "124": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "EQ",
      "path": "8"
    },
    "125": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x2AD"
    },
    "129": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "130": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x15F"
    },
    "134": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "JUMP",
      "path": "8"
    },
    "135": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "136": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "DUP1",
      "path": "8"
    },
    "137": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xB75CBE0B"
    },
    "142": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "EQ",
      "path": "8"
    },
    "143": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x215"
    },
    "147": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "148": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "DUP1",
      "path": "8"
    },
    "149": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xC46D4F09"
    },
    "154": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "EQ",
      "path": "8"
    },
    "155": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x21F"
    },
    "159": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "160": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "DUP1",
      "path": "8"
    },
    "161": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xC7E3B124"
    },
    "166": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "EQ",
      "path": "8"
    },
    "167": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x236"
    },
    "171": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "172": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "DUP1",
      "path": "8"
    },
    "173": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xD1EE539D"
    },
    "178": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "EQ",
      "path": "8"
    },
    "179": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x240"
    },
    "183": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "184": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "DUP1",
      "path": "8"
    },
    "185": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xDDE7BE2C"
    },
    "190": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "EQ",
      "path": "8"
    },
    "191": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x257"
    },
    "195": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "196": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x15F"
    },
    "200": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "JUMP",
      "path": "8"
    },
    "201": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "202": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "DUP1",
      "path": "8"
    },
    "203": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x6E5D6615"
    },
    "208": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "GT",
      "path": "8"
    },
    "209": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x123"
    },
    "213": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "214": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "DUP1",
      "path": "8"
    },
    "215": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x6E5D6615"
    },
    "220": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "EQ",
      "path": "8"
    },
    "221": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x1AE"
    },
    "225": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "226": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "DUP1",
      "path": "8"
    },
    "227": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x715018A6"
    },
    "232": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "EQ",
      "path": "8"
    },
    "233": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x1BA"
    },
    "237": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "238": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "DUP1",
      "path": "8"
    },
    "239": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x81C2B29B"
    },
    "244": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "EQ",
      "path": "8"
    },
    "245": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x1C4"
    },
    "249": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "250": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "DUP1",
      "path": "8"
    },
    "251": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x8DA5CB5B"
    },
    "256": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "EQ",
      "path": "8"
    },
    "257": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x1CE"
    },
    "261": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "262": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "DUP1",
      "path": "8"
    },
    "263": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x98881BC9"
    },
    "268": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "EQ",
      "path": "8"
    },
    "269": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x1E7"
    },
    "273": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "274": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "DUP1",
      "path": "8"
    },
    "275": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xA14274E8"
    },
    "280": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "EQ",
      "path": "8"
    },
    "281": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x1FE"
    },
    "285": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "286": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x15F"
    },
    "290": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "JUMP",
      "path": "8"
    },
    "291": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "292": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "DUP1",
      "path": "8"
    },
    "293": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x34B9CC"
    },
    "297": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "EQ",
      "path": "8"
    },
    "298": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x164"
    },
    "302": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "303": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "DUP1",
      "path": "8"
    },
    "304": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xC3E5343"
    },
    "309": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "EQ",
      "path": "8"
    },
    "310": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x186"
    },
    "314": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "315": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "DUP1",
      "path": "8"
    },
    "316": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x14D7C6D2"
    },
    "321": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "EQ",
      "path": "8"
    },
    "322": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x190"
    },
    "326": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "327": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "DUP1",
      "path": "8"
    },
    "328": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x157D0129"
    },
    "333": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "EQ",
      "path": "8"
    },
    "334": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x19A"
    },
    "338": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "339": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "DUP1",
      "path": "8"
    },
    "340": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x3A3610BC"
    },
    "345": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "EQ",
      "path": "8"
    },
    "346": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x1A4"
    },
    "350": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "351": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "352": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "354": {
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "DUP1",
      "path": "8"
    },
    "355": {
      "first_revert": true,
      "fn": null,
      "offset": [
        1863,
        8372
      ],
      "op": "REVERT",
      "path": "8"
    },
    "356": {
      "offset": [
        2150,
        2180
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "357": {
      "fn": null,
      "offset": [
        2150,
        2180
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x16E"
    },
    "361": {
      "fn": null,
      "offset": [
        2150,
        2180
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x2C6"
    },
    "365": {
      "fn": null,
      "jump": "i",
      "offset": [
        2150,
        2180
      ],
      "op": "JUMP",
      "path": "8"
    },
    "366": {
      "fn": null,
      "offset": [
        2150,
        2180
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "367": {
      "fn": null,
      "offset": [
        2150,
        2180
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "369": {
      "fn": null,
      "offset": [
        2150,
        2180
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "370": {
      "fn": null,
      "offset": [
        2150,
        2180
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x17D"
    },
    "374": {
      "fn": null,
      "offset": [
        2150,
        2180
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "375": {
      "fn": null,
      "offset": [
        2150,
        2180
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "376": {
      "fn": null,
      "offset": [
        2150,
        2180
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x1180"
    },
    "380": {
      "fn": null,
      "jump": "i",
      "offset": [
        2150,
        2180
      ],
      "op": "JUMP",
      "path": "8"
    },
    "381": {
      "fn": null,
      "offset": [
        2150,
        2180
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "382": {
      "fn": null,
      "offset": [
        2150,
        2180
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "384": {
      "fn": null,
      "offset": [
        2150,
        2180
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "385": {
      "fn": null,
      "offset": [
        2150,
        2180
      ],
      "op": "DUP1",
      "path": "8"
    },
    "386": {
      "fn": null,
      "offset": [
        2150,
        2180
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "387": {
      "fn": null,
      "offset": [
        2150,
        2180
      ],
      "op": "SUB",
      "path": "8"
    },
    "388": {
      "fn": null,
      "offset": [
        2150,
        2180
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "389": {
      "fn": null,
      "offset": [
        2150,
        2180
      ],
      "op": "RETURN",
      "path": "8"
    },
    "390": {
      "offset": [
        1980,
        2017
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "391": {
      "fn": null,
      "offset": [
        1980,
        2017
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x16E"
    },
    "395": {
      "fn": null,
      "offset": [
        1980,
        2017
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x2CC"
    },
    "399": {
      "fn": null,
      "jump": "i",
      "offset": [
        1980,
        2017
      ],
      "op": "JUMP",
      "path": "8"
    },
    "400": {
      "offset": [
        2107,
        2143
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "401": {
      "fn": null,
      "offset": [
        2107,
        2143
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x16E"
    },
    "405": {
      "fn": null,
      "offset": [
        2107,
        2143
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x2D2"
    },
    "409": {
      "fn": null,
      "jump": "i",
      "offset": [
        2107,
        2143
      ],
      "op": "JUMP",
      "path": "8"
    },
    "410": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8144,
        8251
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "411": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8144,
        8251
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x16E"
    },
    "415": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8144,
        8251
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x2D8"
    },
    "419": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "jump": "i",
      "offset": [
        8144,
        8251
      ],
      "op": "JUMP",
      "path": "8"
    },
    "420": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7151,
        7468
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "421": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7151,
        7468
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x16E"
    },
    "425": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7151,
        7468
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x364"
    },
    "429": {
      "fn": "LeveragedTrading.getBtcPrice",
      "jump": "i",
      "offset": [
        7151,
        7468
      ],
      "op": "JUMP",
      "path": "8"
    },
    "430": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5435,
        6088
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "431": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5435,
        6088
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x1B8"
    },
    "435": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5435,
        6088
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x3F5"
    },
    "439": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "jump": "i",
      "offset": [
        5435,
        6088
      ],
      "op": "JUMP",
      "path": "8"
    },
    "440": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5435,
        6088
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "441": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5435,
        6088
      ],
      "op": "STOP",
      "path": "8"
    },
    "442": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "443": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x1B8"
    },
    "447": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x497"
    },
    "451": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMP",
      "path": "0"
    },
    "452": {
      "fn": "LeveragedTrading.getBtcDownPrice",
      "offset": [
        6920,
        7099
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "453": {
      "fn": "LeveragedTrading.getBtcDownPrice",
      "offset": [
        6920,
        7099
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x16E"
    },
    "457": {
      "fn": "LeveragedTrading.getBtcDownPrice",
      "offset": [
        6920,
        7099
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x4F4"
    },
    "461": {
      "fn": "LeveragedTrading.getBtcDownPrice",
      "jump": "i",
      "offset": [
        6920,
        7099
      ],
      "op": "JUMP",
      "path": "8"
    },
    "462": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "463": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x1D8"
    },
    "467": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x536"
    },
    "471": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        973,
        1058
      ],
      "op": "JUMP",
      "path": "0"
    },
    "472": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "473": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "475": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "476": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x17D"
    },
    "480": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "481": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "482": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x1002"
    },
    "486": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        973,
        1058
      ],
      "op": "JUMP",
      "path": "0"
    },
    "487": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2711,
        3058
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "488": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2711,
        3058
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x1B8"
    },
    "492": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2711,
        3058
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x1F8"
    },
    "496": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2711,
        3058
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "497": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2711,
        3058
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "499": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2711,
        3058
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xF7C"
    },
    "503": {
      "fn": "LeveragedTrading.initializePool",
      "jump": "i",
      "offset": [
        2711,
        3058
      ],
      "op": "JUMP",
      "path": "8"
    },
    "504": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2711,
        3058
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "505": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2711,
        3058
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x545"
    },
    "509": {
      "fn": "LeveragedTrading.initializePool",
      "jump": "i",
      "offset": [
        2711,
        3058
      ],
      "op": "JUMP",
      "path": "8"
    },
    "510": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4847,
        5429
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "511": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4847,
        5429
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x1B8"
    },
    "515": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4847,
        5429
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x20F"
    },
    "519": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4847,
        5429
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "520": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4847,
        5429
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "522": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4847,
        5429
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xF7C"
    },
    "526": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "jump": "i",
      "offset": [
        4847,
        5429
      ],
      "op": "JUMP",
      "path": "8"
    },
    "527": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4847,
        5429
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "528": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4847,
        5429
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x697"
    },
    "532": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "jump": "i",
      "offset": [
        4847,
        5429
      ],
      "op": "JUMP",
      "path": "8"
    },
    "533": {
      "offset": [
        2210,
        2242
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "534": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        2210,
        2242
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x16E"
    },
    "538": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        2210,
        2242
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x82C"
    },
    "542": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "jump": "i",
      "offset": [
        2210,
        2242
      ],
      "op": "JUMP",
      "path": "8"
    },
    "543": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3666,
        4280
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "544": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3666,
        4280
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x1B8"
    },
    "548": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3666,
        4280
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x230"
    },
    "552": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3666,
        4280
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "553": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3666,
        4280
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "555": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3666,
        4280
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xF7C"
    },
    "559": {
      "fn": "LeveragedTrading.issueBtcDown",
      "jump": "i",
      "offset": [
        3666,
        4280
      ],
      "op": "JUMP",
      "path": "8"
    },
    "560": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3666,
        4280
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "561": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3666,
        4280
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x832"
    },
    "565": {
      "fn": "LeveragedTrading.issueBtcDown",
      "jump": "i",
      "offset": [
        3666,
        4280
      ],
      "op": "JUMP",
      "path": "8"
    },
    "566": {
      "fn": "LeveragedTrading.getBtcdownBalance",
      "offset": [
        8257,
        8368
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "567": {
      "fn": "LeveragedTrading.getBtcdownBalance",
      "offset": [
        8257,
        8368
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x16E"
    },
    "571": {
      "fn": "LeveragedTrading.getBtcdownBalance",
      "offset": [
        8257,
        8368
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x9C4"
    },
    "575": {
      "fn": "LeveragedTrading.getBtcdownBalance",
      "jump": "i",
      "offset": [
        8257,
        8368
      ],
      "op": "JUMP",
      "path": "8"
    },
    "576": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4286,
        4841
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "577": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4286,
        4841
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x1B8"
    },
    "581": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4286,
        4841
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x251"
    },
    "585": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4286,
        4841
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "586": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4286,
        4841
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "588": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4286,
        4841
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xF7C"
    },
    "592": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "jump": "i",
      "offset": [
        4286,
        4841
      ],
      "op": "JUMP",
      "path": "8"
    },
    "593": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4286,
        4841
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "594": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4286,
        4841
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x9F7"
    },
    "598": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "jump": "i",
      "offset": [
        4286,
        4841
      ],
      "op": "JUMP",
      "path": "8"
    },
    "599": {
      "offset": [
        2045,
        2079
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "600": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        2045,
        2079
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x16E"
    },
    "604": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        2045,
        2079
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xB16"
    },
    "608": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "jump": "i",
      "offset": [
        2045,
        2079
      ],
      "op": "JUMP",
      "path": "8"
    },
    "609": {
      "offset": [
        1939,
        1974
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "610": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        1939,
        1974
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x16E"
    },
    "614": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        1939,
        1974
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xB1C"
    },
    "618": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "jump": "i",
      "offset": [
        1939,
        1974
      ],
      "op": "JUMP",
      "path": "8"
    },
    "619": {
      "fn": "LeveragedTrading.getBtcUpPrice",
      "offset": [
        6725,
        6882
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "620": {
      "fn": "LeveragedTrading.getBtcUpPrice",
      "offset": [
        6725,
        6882
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x16E"
    },
    "624": {
      "fn": "LeveragedTrading.getBtcUpPrice",
      "offset": [
        6725,
        6882
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xB22"
    },
    "628": {
      "fn": "LeveragedTrading.getBtcUpPrice",
      "jump": "i",
      "offset": [
        6725,
        6882
      ],
      "op": "JUMP",
      "path": "8"
    },
    "629": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "630": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x1B8"
    },
    "634": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x286"
    },
    "638": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "639": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "641": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xF31"
    },
    "645": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "646": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "647": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xB57"
    },
    "651": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "652": {
      "offset": [
        2271,
        2302
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "653": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2271,
        2302
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x16E"
    },
    "657": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2271,
        2302
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xBD1"
    },
    "661": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2271,
        2302
      ],
      "op": "JUMP",
      "path": "8"
    },
    "662": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3064,
        3660
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "663": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3064,
        3660
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x1B8"
    },
    "667": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3064,
        3660
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x2A7"
    },
    "671": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3064,
        3660
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "672": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3064,
        3660
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "674": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3064,
        3660
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xF7C"
    },
    "678": {
      "fn": "LeveragedTrading.issueBtcUp",
      "jump": "i",
      "offset": [
        3064,
        3660
      ],
      "op": "JUMP",
      "path": "8"
    },
    "679": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3064,
        3660
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "680": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3064,
        3660
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xBD7"
    },
    "684": {
      "fn": "LeveragedTrading.issueBtcUp",
      "jump": "i",
      "offset": [
        3064,
        3660
      ],
      "op": "JUMP",
      "path": "8"
    },
    "685": {
      "offset": [
        2352,
        2389
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "686": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        2352,
        2389
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x2B7"
    },
    "690": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        2352,
        2389
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xCF4"
    },
    "694": {
      "fn": "LeveragedTrading.issueBtcUp",
      "jump": "i",
      "offset": [
        2352,
        2389
      ],
      "op": "JUMP",
      "path": "8"
    },
    "695": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        2352,
        2389
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "696": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        2352,
        2389
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "698": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        2352,
        2389
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "699": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        2352,
        2389
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x17D"
    },
    "703": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        2352,
        2389
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "704": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        2352,
        2389
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "705": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        2352,
        2389
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x1053"
    },
    "709": {
      "fn": "LeveragedTrading.issueBtcUp",
      "jump": "i",
      "offset": [
        2352,
        2389
      ],
      "op": "JUMP",
      "path": "8"
    },
    "710": {
      "offset": [
        2150,
        2180
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "711": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        2150,
        2180
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x5"
    },
    "713": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        2150,
        2180
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "714": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        2150,
        2180
      ],
      "op": "DUP2",
      "path": "8"
    },
    "715": {
      "fn": "LeveragedTrading.issueBtcUp",
      "jump": "o",
      "offset": [
        2150,
        2180
      ],
      "op": "JUMP",
      "path": "8"
    },
    "716": {
      "offset": [
        1980,
        2017
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "717": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        1980,
        2017
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "719": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        1980,
        2017
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "720": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        1980,
        2017
      ],
      "op": "DUP2",
      "path": "8"
    },
    "721": {
      "fn": "LeveragedTrading.issueBtcUp",
      "jump": "o",
      "offset": [
        1980,
        2017
      ],
      "op": "JUMP",
      "path": "8"
    },
    "722": {
      "offset": [
        2107,
        2143
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "723": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        2107,
        2143
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "725": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        2107,
        2143
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "726": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        2107,
        2143
      ],
      "op": "DUP2",
      "path": "8"
    },
    "727": {
      "fn": "LeveragedTrading.issueBtcUp",
      "jump": "o",
      "offset": [
        2107,
        2143
      ],
      "op": "JUMP",
      "path": "8"
    },
    "728": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8144,
        8251
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "729": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8217,
        8222
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 0,
      "value": "0xA"
    },
    "731": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8217,
        8222
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "732": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8217,
        8244
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "734": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8217,
        8244
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "735": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "740": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "742": {
      "op": "SHL"
    },
    "743": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8217,
        8244
      ],
      "op": "DUP2",
      "path": "8"
    },
    "744": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8217,
        8244
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "745": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8191,
        8198
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "747": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8191,
        8198
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "748": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "750": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "752": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "754": {
      "op": "SHL"
    },
    "755": {
      "op": "SUB"
    },
    "756": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8217,
        8222
      ],
      "op": "AND",
      "path": "8"
    },
    "757": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8217,
        8222
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "758": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8217,
        8232
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x70A08231"
    },
    "763": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8217,
        8232
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "764": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8217,
        8244
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x30B"
    },
    "768": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8217,
        8244
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "769": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8233,
        8243
      ],
      "op": "CALLER",
      "path": "8"
    },
    "770": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8233,
        8243
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "771": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8217,
        8244
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "773": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8217,
        8244
      ],
      "op": "ADD",
      "path": "8"
    },
    "774": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8217,
        8244
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x1002"
    },
    "778": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "jump": "i",
      "offset": [
        8217,
        8244
      ],
      "op": "JUMP",
      "path": "8"
    },
    "779": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8217,
        8244
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "780": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8217,
        8244
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "782": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8217,
        8244
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "784": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8217,
        8244
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "785": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8217,
        8244
      ],
      "op": "DUP1",
      "path": "8"
    },
    "786": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8217,
        8244
      ],
      "op": "DUP4",
      "path": "8"
    },
    "787": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8217,
        8244
      ],
      "op": "SUB",
      "path": "8"
    },
    "788": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8217,
        8244
      ],
      "op": "DUP2",
      "path": "8"
    },
    "789": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8217,
        8244
      ],
      "op": "DUP7",
      "path": "8"
    },
    "790": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8217,
        8244
      ],
      "op": "DUP1",
      "path": "8"
    },
    "791": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8217,
        8244
      ],
      "op": "EXTCODESIZE",
      "path": "8"
    },
    "792": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8217,
        8244
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "793": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8217,
        8244
      ],
      "op": "DUP1",
      "path": "8"
    },
    "794": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8217,
        8244
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "795": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8217,
        8244
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x324"
    },
    "799": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8217,
        8244
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "800": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8217,
        8244
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "802": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8217,
        8244
      ],
      "op": "DUP1",
      "path": "8"
    },
    "803": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8217,
        8244
      ],
      "op": "REVERT",
      "path": "8"
    },
    "804": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8217,
        8244
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "805": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8217,
        8244
      ],
      "op": "POP",
      "path": "8"
    },
    "806": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8217,
        8244
      ],
      "op": "GAS",
      "path": "8"
    },
    "807": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8217,
        8244
      ],
      "op": "STATICCALL",
      "path": "8"
    },
    "808": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8217,
        8244
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "809": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8217,
        8244
      ],
      "op": "DUP1",
      "path": "8"
    },
    "810": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8217,
        8244
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "811": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8217,
        8244
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x339"
    },
    "815": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8217,
        8244
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "816": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8217,
        8244
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "817": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8217,
        8244
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "819": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8217,
        8244
      ],
      "op": "DUP1",
      "path": "8"
    },
    "820": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8217,
        8244
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "821": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8217,
        8244
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "822": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8217,
        8244
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "824": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8217,
        8244
      ],
      "op": "REVERT",
      "path": "8"
    },
    "825": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8217,
        8244
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "826": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8217,
        8244
      ],
      "op": "POP",
      "path": "8"
    },
    "827": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8217,
        8244
      ],
      "op": "POP",
      "path": "8"
    },
    "828": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8217,
        8244
      ],
      "op": "POP",
      "path": "8"
    },
    "829": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8217,
        8244
      ],
      "op": "POP",
      "path": "8"
    },
    "830": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8217,
        8244
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "832": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8217,
        8244
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "833": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8217,
        8244
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "834": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8217,
        8244
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "836": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8217,
        8244
      ],
      "op": "NOT",
      "path": "8"
    },
    "837": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8217,
        8244
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "839": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8217,
        8244
      ],
      "op": "DUP3",
      "path": "8"
    },
    "840": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8217,
        8244
      ],
      "op": "ADD",
      "path": "8"
    },
    "841": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8217,
        8244
      ],
      "op": "AND",
      "path": "8"
    },
    "842": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8217,
        8244
      ],
      "op": "DUP3",
      "path": "8"
    },
    "843": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8217,
        8244
      ],
      "op": "ADD",
      "path": "8"
    },
    "844": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8217,
        8244
      ],
      "op": "DUP1",
      "path": "8"
    },
    "845": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8217,
        8244
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "847": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8217,
        8244
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "848": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8217,
        8244
      ],
      "op": "POP",
      "path": "8"
    },
    "849": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8217,
        8244
      ],
      "op": "DUP2",
      "path": "8"
    },
    "850": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8217,
        8244
      ],
      "op": "ADD",
      "path": "8"
    },
    "851": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8217,
        8244
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "852": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8217,
        8244
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x35F"
    },
    "856": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8217,
        8244
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "857": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8217,
        8244
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "858": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8217,
        8244
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xF95"
    },
    "862": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "jump": "i",
      "offset": [
        8217,
        8244
      ],
      "op": "JUMP",
      "path": "8"
    },
    "863": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8217,
        8244
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "864": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8210,
        8244
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "865": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8210,
        8244
      ],
      "op": "POP",
      "path": "8"
    },
    "866": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "offset": [
        8144,
        8251
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "867": {
      "fn": "LeveragedTrading.getBtcupBalance",
      "jump": "o",
      "offset": [
        8144,
        8251
      ],
      "op": "JUMP",
      "path": "8"
    },
    "868": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7151,
        7468
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "869": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7270,
        7287
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x9"
    },
    "871": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7270,
        7287
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "872": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7320,
        7347
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "874": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7320,
        7347
      ],
      "op": "DUP1",
      "path": "8"
    },
    "875": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7320,
        7347
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "876": {
      "op": "PUSH4",
      "value": "0x3FABE5A3"
    },
    "881": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "883": {
      "op": "SHL"
    },
    "884": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7320,
        7347
      ],
      "op": "DUP2",
      "path": "8"
    },
    "885": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7320,
        7347
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "886": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7320,
        7347
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "887": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7320,
        7347
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "888": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7195,
        7202
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "890": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7195,
        7202
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "891": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "893": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "895": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "897": {
      "op": "SHL"
    },
    "898": {
      "op": "SUB"
    },
    "899": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7270,
        7287
      ],
      "op": "AND",
      "path": "8"
    },
    "900": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7270,
        7287
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "901": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7195,
        7202
      ],
      "op": "DUP4",
      "path": "8"
    },
    "902": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7195,
        7202
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "903": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7270,
        7287
      ],
      "op": "DUP4",
      "path": "8"
    },
    "904": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7270,
        7287
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "905": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7320,
        7345
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xFEAF968C"
    },
    "910": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7320,
        7345
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "911": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7320,
        7347
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "913": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7320,
        7347
      ],
      "op": "DUP1",
      "path": "8"
    },
    "914": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7320,
        7347
      ],
      "op": "DUP4",
      "path": "8"
    },
    "915": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7320,
        7347
      ],
      "op": "ADD",
      "path": "8"
    },
    "916": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7320,
        7347
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "917": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7320,
        7347
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xA0"
    },
    "919": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7320,
        7347
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "920": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7320,
        7347
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "921": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7320,
        7347
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "922": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7320,
        7347
      ],
      "op": "DUP3",
      "path": "8"
    },
    "923": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7320,
        7347
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "924": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7320,
        7347
      ],
      "op": "SUB",
      "path": "8"
    },
    "925": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7320,
        7347
      ],
      "op": "ADD",
      "path": "8"
    },
    "926": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7320,
        7347
      ],
      "op": "DUP2",
      "path": "8"
    },
    "927": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7270,
        7287
      ],
      "op": "DUP7",
      "path": "8"
    },
    "928": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7320,
        7347
      ],
      "op": "DUP1",
      "path": "8"
    },
    "929": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7320,
        7347
      ],
      "op": "EXTCODESIZE",
      "path": "8"
    },
    "930": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7320,
        7347
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "931": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7320,
        7347
      ],
      "op": "DUP1",
      "path": "8"
    },
    "932": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7320,
        7347
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "933": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7320,
        7347
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x3AE"
    },
    "937": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7320,
        7347
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "938": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7320,
        7347
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "940": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7320,
        7347
      ],
      "op": "DUP1",
      "path": "8"
    },
    "941": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7320,
        7347
      ],
      "op": "REVERT",
      "path": "8"
    },
    "942": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7320,
        7347
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "943": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7320,
        7347
      ],
      "op": "POP",
      "path": "8"
    },
    "944": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7320,
        7347
      ],
      "op": "GAS",
      "path": "8"
    },
    "945": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7320,
        7347
      ],
      "op": "STATICCALL",
      "path": "8"
    },
    "946": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7320,
        7347
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "947": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7320,
        7347
      ],
      "op": "DUP1",
      "path": "8"
    },
    "948": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7320,
        7347
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "949": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7320,
        7347
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x3C3"
    },
    "953": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7320,
        7347
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "954": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7320,
        7347
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "955": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7320,
        7347
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "957": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7320,
        7347
      ],
      "op": "DUP1",
      "path": "8"
    },
    "958": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7320,
        7347
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "959": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7320,
        7347
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "960": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7320,
        7347
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "962": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7320,
        7347
      ],
      "op": "REVERT",
      "path": "8"
    },
    "963": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7320,
        7347
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "964": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7320,
        7347
      ],
      "op": "POP",
      "path": "8"
    },
    "965": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7320,
        7347
      ],
      "op": "POP",
      "path": "8"
    },
    "966": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7320,
        7347
      ],
      "op": "POP",
      "path": "8"
    },
    "967": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7320,
        7347
      ],
      "op": "POP",
      "path": "8"
    },
    "968": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7320,
        7347
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "970": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7320,
        7347
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "971": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7320,
        7347
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "972": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7320,
        7347
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "974": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7320,
        7347
      ],
      "op": "NOT",
      "path": "8"
    },
    "975": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7320,
        7347
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "977": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7320,
        7347
      ],
      "op": "DUP3",
      "path": "8"
    },
    "978": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7320,
        7347
      ],
      "op": "ADD",
      "path": "8"
    },
    "979": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7320,
        7347
      ],
      "op": "AND",
      "path": "8"
    },
    "980": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7320,
        7347
      ],
      "op": "DUP3",
      "path": "8"
    },
    "981": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7320,
        7347
      ],
      "op": "ADD",
      "path": "8"
    },
    "982": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7320,
        7347
      ],
      "op": "DUP1",
      "path": "8"
    },
    "983": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7320,
        7347
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "985": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7320,
        7347
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "986": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7320,
        7347
      ],
      "op": "POP",
      "path": "8"
    },
    "987": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7320,
        7347
      ],
      "op": "DUP2",
      "path": "8"
    },
    "988": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7320,
        7347
      ],
      "op": "ADD",
      "path": "8"
    },
    "989": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7320,
        7347
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "990": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7320,
        7347
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x3E9"
    },
    "994": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7320,
        7347
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "995": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7320,
        7347
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "996": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7320,
        7347
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xFAE"
    },
    "1000": {
      "fn": "LeveragedTrading.getBtcPrice",
      "jump": "i",
      "offset": [
        7320,
        7347
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1001": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7320,
        7347
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1002": {
      "op": "POP"
    },
    "1003": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7298,
        7347
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1004": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7298,
        7347
      ],
      "op": "SWAP6",
      "path": "8"
    },
    "1005": {
      "op": "POP"
    },
    "1006": {
      "op": "POP"
    },
    "1007": {
      "op": "POP"
    },
    "1008": {
      "op": "POP"
    },
    "1009": {
      "op": "POP"
    },
    "1010": {
      "op": "POP"
    },
    "1011": {
      "fn": "LeveragedTrading.getBtcPrice",
      "offset": [
        7151,
        7468
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1012": {
      "fn": "LeveragedTrading.getBtcPrice",
      "jump": "o",
      "offset": [
        7151,
        7468
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1013": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5435,
        6088
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1014": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5488,
        5504
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1016": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5507,
        5520
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x401"
    },
    "1020": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5507,
        5518
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x364"
    },
    "1024": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "jump": "i",
      "offset": [
        5507,
        5520
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1025": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5507,
        5520
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1026": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5488,
        5520
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1027": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5488,
        5520
      ],
      "op": "POP",
      "path": "8"
    },
    "1028": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5553,
        5554
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1030": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5535,
        5550
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "1032": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5535,
        5550
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1033": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5535,
        5554
      ],
      "op": "GT",
      "path": "8"
    },
    "1034": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5534,
        5582
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1035": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5534,
        5582
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1036": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5534,
        5582
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x418"
    },
    "1040": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5534,
        5582
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1041": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5534,
        5582
      ],
      "op": "POP",
      "path": "8"
    },
    "1042": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5580,
        5581
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1044": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5560,
        5577
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1046": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5560,
        5577
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1047": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5560,
        5581
      ],
      "op": "GT",
      "path": "8"
    },
    "1048": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5534,
        5582
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1049": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5530,
        6049
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1050": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5530,
        6049
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x492"
    },
    "1054": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5530,
        6049
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1055": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5598,
        5621
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1057": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5624,
        5652
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x42B"
    },
    "1061": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5643,
        5651
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1062": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5624,
        5642
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xCFD"
    },
    "1066": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "jump": "i",
      "offset": [
        5624,
        5652
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1067": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5624,
        5652
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1068": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5598,
        5652
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1069": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5598,
        5652
      ],
      "op": "POP",
      "path": "8"
    },
    "1070": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5690,
        5691
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1072": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5670,
        5687
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x43A"
    },
    "1076": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5678,
        5686
      ],
      "op": "DUP4",
      "path": "8"
    },
    "1077": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5670,
        5677
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xD44"
    },
    "1081": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "jump": "i",
      "offset": [
        5670,
        5687
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1082": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5670,
        5687
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1083": {
      "branch": 61,
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5670,
        5691
      ],
      "op": "SGT",
      "path": "8"
    },
    "1084": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5666,
        6038
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1085": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5666,
        6038
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x46B"
    },
    "1089": {
      "branch": 61,
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5666,
        6038
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1090": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5729,
        5744
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 1,
      "value": "0x3"
    },
    "1092": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5729,
        5744
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1093": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5729,
        5765
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x450"
    },
    "1097": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5729,
        5765
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1098": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5749,
        5764
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1099": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5729,
        5748
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xD64"
    },
    "1103": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "jump": "i",
      "offset": [
        5729,
        5765
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1104": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5729,
        5765
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1105": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5711,
        5726
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "1107": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5711,
        5765
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "1108": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5803,
        5820
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 2,
      "value": "0x4"
    },
    "1110": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5803,
        5820
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1111": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5803,
        5841
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x462"
    },
    "1115": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5803,
        5841
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1116": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5825,
        5840
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1117": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5803,
        5824
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xD79"
    },
    "1121": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "jump": "i",
      "offset": [
        5803,
        5841
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1122": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5803,
        5841
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1123": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5783,
        5800
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1125": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5783,
        5841
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "1126": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5666,
        6038
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x490"
    },
    "1130": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5666,
        6038
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1131": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5666,
        6038
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1132": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5911,
        5926
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 3,
      "value": "0x3"
    },
    "1134": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5911,
        5926
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1135": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5911,
        5947
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x47A"
    },
    "1139": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5911,
        5947
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1140": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5931,
        5946
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1141": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5911,
        5930
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xD79"
    },
    "1145": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "jump": "i",
      "offset": [
        5911,
        5947
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1146": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5911,
        5947
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1147": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5893,
        5908
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "1149": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5893,
        5947
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "1150": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5985,
        6002
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 4,
      "value": "0x4"
    },
    "1152": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5985,
        6002
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1153": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5985,
        6023
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x48C"
    },
    "1157": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5985,
        6023
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1158": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        6007,
        6022
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1159": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5985,
        6006
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xD64"
    },
    "1163": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "jump": "i",
      "offset": [
        5985,
        6023
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1164": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5985,
        6023
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1165": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5965,
        5982
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1167": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5965,
        6023
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "1168": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5666,
        6038
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1169": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5530,
        6049
      ],
      "op": "POP",
      "path": "8"
    },
    "1170": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        5530,
        6049
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1171": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        6058,
        6070
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 5,
      "value": "0x7"
    },
    "1173": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "offset": [
        6058,
        6081
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "1174": {
      "fn": "LeveragedTrading.rebalanceLeveragedTokens",
      "jump": "o",
      "offset": [
        5435,
        6088
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1175": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1176": {
      "offset": [
        1196,
        1208
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x4A1"
    },
    "1180": {
      "offset": [
        1196,
        1206
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xD87"
    },
    "1184": {
      "jump": "i",
      "offset": [
        1196,
        1208
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1185": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1196,
        1208
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1186": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1188": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1190": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1192": {
      "op": "SHL"
    },
    "1193": {
      "op": "SUB"
    },
    "1194": {
      "offset": [
        1185,
        1208
      ],
      "op": "AND",
      "path": "0"
    },
    "1195": {
      "offset": [
        1185,
        1192
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x4B4"
    },
    "1199": {
      "offset": [
        1185,
        1190
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x536"
    },
    "1203": {
      "jump": "i",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1204": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1205": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1207": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1209": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1211": {
      "op": "SHL"
    },
    "1212": {
      "op": "SUB"
    },
    "1213": {
      "offset": [
        1185,
        1208
      ],
      "op": "AND",
      "path": "0"
    },
    "1214": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "1215": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x4E6"
    },
    "1219": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1220": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1222": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1223": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1227": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1229": {
      "op": "SHL"
    },
    "1230": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1231": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1232": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1234": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "1235": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x4DD"
    },
    "1239": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1240": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x110A"
    },
    "1244": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1245": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1246": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1248": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1249": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1250": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1251": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "SUB",
      "path": "0"
    },
    "1252": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1253": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "1254": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1255": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1690
      ],
      "op": "PUSH3",
      "path": "0",
      "statement": 6,
      "value": "0x4F2"
    },
    "1259": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1687,
        1688
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1261": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1678
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xD8B"
    },
    "1265": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1669,
        1690
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1266": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1690
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1267": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1268": {
      "fn": "LeveragedTrading.getBtcDownPrice",
      "offset": [
        6920,
        7099
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1269": {
      "fn": "LeveragedTrading.getBtcDownPrice",
      "offset": [
        6968,
        6975
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1271": {
      "fn": "LeveragedTrading.getBtcDownPrice",
      "offset": [
        7006,
        7019
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 7,
      "value": "0x6"
    },
    "1273": {
      "fn": "LeveragedTrading.getBtcDownPrice",
      "offset": [
        7006,
        7019
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1274": {
      "fn": "LeveragedTrading.getBtcDownPrice",
      "offset": [
        7023,
        7024
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1276": {
      "branch": 62,
      "fn": "LeveragedTrading.getBtcDownPrice",
      "offset": [
        7006,
        7024
      ],
      "op": "EQ",
      "path": "8"
    },
    "1277": {
      "fn": "LeveragedTrading.getBtcDownPrice",
      "offset": [
        7006,
        7092
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x52F"
    },
    "1281": {
      "branch": 62,
      "fn": "LeveragedTrading.getBtcDownPrice",
      "offset": [
        7006,
        7092
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1282": {
      "fn": "LeveragedTrading.getBtcDownPrice",
      "offset": [
        7043,
        7092
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x529"
    },
    "1286": {
      "fn": "LeveragedTrading.getBtcDownPrice",
      "offset": [
        7078,
        7091
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x6"
    },
    "1288": {
      "fn": "LeveragedTrading.getBtcDownPrice",
      "offset": [
        7078,
        7091
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1289": {
      "fn": "LeveragedTrading.getBtcDownPrice",
      "offset": [
        7043,
        7073
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x522"
    },
    "1293": {
      "fn": "LeveragedTrading.getBtcDownPrice",
      "offset": [
        7065,
        7072
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xF4240"
    },
    "1297": {
      "fn": "LeveragedTrading.getBtcDownPrice",
      "offset": [
        7043,
        7060
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1299": {
      "fn": "LeveragedTrading.getBtcDownPrice",
      "offset": [
        7043,
        7060
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1300": {
      "fn": "LeveragedTrading.getBtcDownPrice",
      "offset": [
        7043,
        7064
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xDDB"
    },
    "1304": {
      "fn": "LeveragedTrading.getBtcDownPrice",
      "offset": [
        7043,
        7064
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1305": {
      "fn": "LeveragedTrading.getBtcDownPrice",
      "offset": [
        7043,
        7073
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1306": {
      "fn": "LeveragedTrading.getBtcDownPrice",
      "offset": [
        7043,
        7073
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1307": {
      "fn": "LeveragedTrading.getBtcDownPrice",
      "offset": [
        7043,
        7073
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xFFFFFFFF"
    },
    "1312": {
      "fn": "LeveragedTrading.getBtcDownPrice",
      "offset": [
        7043,
        7073
      ],
      "op": "AND",
      "path": "8"
    },
    "1313": {
      "fn": "LeveragedTrading.getBtcDownPrice",
      "jump": "i",
      "offset": [
        7043,
        7073
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1314": {
      "fn": "LeveragedTrading.getBtcDownPrice",
      "offset": [
        7043,
        7073
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1315": {
      "fn": "LeveragedTrading.getBtcDownPrice",
      "offset": [
        7043,
        7077
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1316": {
      "fn": "LeveragedTrading.getBtcDownPrice",
      "offset": [
        7043,
        7077
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xDE9"
    },
    "1320": {
      "fn": "LeveragedTrading.getBtcDownPrice",
      "jump": "i",
      "offset": [
        7043,
        7092
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1321": {
      "fn": "LeveragedTrading.getBtcDownPrice",
      "offset": [
        7043,
        7092
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1322": {
      "fn": "LeveragedTrading.getBtcDownPrice",
      "offset": [
        7006,
        7092
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x35F"
    },
    "1326": {
      "fn": "LeveragedTrading.getBtcDownPrice",
      "offset": [
        7006,
        7092
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1327": {
      "fn": "LeveragedTrading.getBtcDownPrice",
      "offset": [
        7006,
        7092
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1328": {
      "op": "POP"
    },
    "1329": {
      "fn": "LeveragedTrading.getBtcDownPrice",
      "offset": [
        7028,
        7040
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "1331": {
      "fn": "LeveragedTrading.getBtcDownPrice",
      "offset": [
        7028,
        7040
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1332": {
      "fn": "LeveragedTrading.getBtcDownPrice",
      "offset": [
        7028,
        7040
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1333": {
      "fn": "LeveragedTrading.getBtcDownPrice",
      "jump": "o",
      "offset": [
        6920,
        7099
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1334": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1335": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1337": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 8
    },
    "1338": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1340": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1342": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1344": {
      "op": "SHL"
    },
    "1345": {
      "op": "SUB"
    },
    "1346": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "1347": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1348": {
      "fn": "Ownable.owner",
      "jump": "o",
      "offset": [
        973,
        1058
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1349": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2711,
        3058
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1350": {
      "offset": [
        1196,
        1208
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x54F"
    },
    "1354": {
      "offset": [
        1196,
        1206
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xD87"
    },
    "1358": {
      "jump": "i",
      "offset": [
        1196,
        1208
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1359": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        1196,
        1208
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1360": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1362": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1364": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1366": {
      "op": "SHL"
    },
    "1367": {
      "op": "SUB"
    },
    "1368": {
      "offset": [
        1185,
        1208
      ],
      "op": "AND",
      "path": "0"
    },
    "1369": {
      "offset": [
        1185,
        1192
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x562"
    },
    "1373": {
      "offset": [
        1185,
        1190
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x536"
    },
    "1377": {
      "jump": "i",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1378": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1379": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1381": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1383": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1385": {
      "op": "SHL"
    },
    "1386": {
      "op": "SUB"
    },
    "1387": {
      "offset": [
        1185,
        1208
      ],
      "op": "AND",
      "path": "0"
    },
    "1388": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "1389": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x58B"
    },
    "1393": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1394": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1396": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1397": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1401": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1403": {
      "op": "SHL"
    },
    "1404": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1405": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1406": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1408": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "1409": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x4DD"
    },
    "1413": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1414": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x110A"
    },
    "1418": {
      "fn": "LeveragedTrading.initializePool",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1419": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1420": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2791,
        2808
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 9,
      "value": "0x8"
    },
    "1422": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2791,
        2808
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1423": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2791,
        2808
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xFF"
    },
    "1425": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2791,
        2808
      ],
      "op": "AND",
      "path": "8"
    },
    "1426": {
      "branch": 63,
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2790,
        2808
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1427": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2782,
        2846
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x5B1"
    },
    "1431": {
      "branch": 63,
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2782,
        2846
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1432": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2782,
        2846
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1434": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2782,
        2846
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1435": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1439": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1441": {
      "op": "SHL"
    },
    "1442": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2782,
        2846
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1443": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2782,
        2846
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1444": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2782,
        2846
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1446": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2782,
        2846
      ],
      "op": "ADD",
      "path": "8"
    },
    "1447": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2782,
        2846
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x4DD"
    },
    "1451": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2782,
        2846
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1452": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2782,
        2846
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x113F"
    },
    "1456": {
      "fn": "LeveragedTrading.initializePool",
      "jump": "i",
      "offset": [
        2782,
        2846
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1457": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2782,
        2846
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1458": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2856,
        2873
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 10,
      "value": "0x8"
    },
    "1460": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2856,
        2880
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1461": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2856,
        2880
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1462": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1464": {
      "op": "NOT"
    },
    "1465": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2856,
        2880
      ],
      "op": "AND",
      "path": "8"
    },
    "1466": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2876,
        2880
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "1468": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2856,
        2880
      ],
      "op": "OR",
      "path": "8"
    },
    "1469": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2856,
        2880
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1470": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2856,
        2880
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "1471": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2899,
        2923
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 11,
      "value": "0x40"
    },
    "1473": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2899,
        2923
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1474": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2917,
        2921
      ],
      "op": "ADDRESS",
      "path": "8"
    },
    "1475": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2917,
        2921
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1476": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2899,
        2923
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x5CE"
    },
    "1480": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2899,
        2923
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1481": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2899,
        2923
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xEFA"
    },
    "1485": {
      "fn": "LeveragedTrading.initializePool",
      "jump": "i",
      "offset": [
        2899,
        2923
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1486": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2899,
        2923
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1487": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2899,
        2923
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x5DA"
    },
    "1491": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2899,
        2923
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1492": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2899,
        2923
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1493": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2899,
        2923
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x1002"
    },
    "1497": {
      "fn": "LeveragedTrading.initializePool",
      "jump": "i",
      "offset": [
        2899,
        2923
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1498": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2899,
        2923
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1499": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2899,
        2923
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1501": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2899,
        2923
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1502": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2899,
        2923
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1503": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2899,
        2923
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1504": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2899,
        2923
      ],
      "op": "SUB",
      "path": "8"
    },
    "1505": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2899,
        2923
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1506": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2899,
        2923
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1508": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2899,
        2923
      ],
      "op": "CREATE",
      "path": "8"
    },
    "1509": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2899,
        2923
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1510": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2899,
        2923
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1511": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2899,
        2923
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1512": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2899,
        2923
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1513": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2899,
        2923
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x5F7"
    },
    "1517": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2899,
        2923
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1518": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2899,
        2923
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "1519": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2899,
        2923
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1521": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2899,
        2923
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1522": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2899,
        2923
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "1523": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2899,
        2923
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "1524": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2899,
        2923
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1526": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2899,
        2923
      ],
      "op": "REVERT",
      "path": "8"
    },
    "1527": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2899,
        2923
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1528": {
      "op": "POP"
    },
    "1529": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2891,
        2896
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xA"
    },
    "1531": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2891,
        2923
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1532": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2891,
        2923
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1533": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1535": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1537": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1539": {
      "op": "SHL"
    },
    "1540": {
      "op": "SUB"
    },
    "1541": {
      "op": "NOT"
    },
    "1542": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2891,
        2923
      ],
      "op": "AND",
      "path": "8"
    },
    "1543": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1545": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1547": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1549": {
      "op": "SHL"
    },
    "1550": {
      "op": "SUB"
    },
    "1551": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2891,
        2923
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "1552": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2891,
        2923
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1553": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2891,
        2923
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "1554": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2891,
        2923
      ],
      "op": "AND",
      "path": "8"
    },
    "1555": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2891,
        2923
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1556": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2891,
        2923
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1557": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2891,
        2923
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1558": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2891,
        2923
      ],
      "op": "OR",
      "path": "8"
    },
    "1559": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2891,
        2923
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1560": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2891,
        2923
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "1561": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2943,
        2969
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 12,
      "value": "0x40"
    },
    "1563": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2943,
        2969
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1564": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2963,
        2967
      ],
      "op": "ADDRESS",
      "path": "8"
    },
    "1565": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2963,
        2967
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1566": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2943,
        2969
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x628"
    },
    "1570": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2943,
        2969
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1571": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2943,
        2969
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xF08"
    },
    "1575": {
      "fn": "LeveragedTrading.initializePool",
      "jump": "i",
      "offset": [
        2943,
        2969
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1576": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2943,
        2969
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1577": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2943,
        2969
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x634"
    },
    "1581": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2943,
        2969
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1582": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2943,
        2969
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1583": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2943,
        2969
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x1002"
    },
    "1587": {
      "fn": "LeveragedTrading.initializePool",
      "jump": "i",
      "offset": [
        2943,
        2969
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1588": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2943,
        2969
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1589": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2943,
        2969
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1591": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2943,
        2969
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1592": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2943,
        2969
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1593": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2943,
        2969
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1594": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2943,
        2969
      ],
      "op": "SUB",
      "path": "8"
    },
    "1595": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2943,
        2969
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1596": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2943,
        2969
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1598": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2943,
        2969
      ],
      "op": "CREATE",
      "path": "8"
    },
    "1599": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2943,
        2969
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1600": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2943,
        2969
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1601": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2943,
        2969
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1602": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2943,
        2969
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1603": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2943,
        2969
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x651"
    },
    "1607": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2943,
        2969
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1608": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2943,
        2969
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "1609": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2943,
        2969
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1611": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2943,
        2969
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1612": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2943,
        2969
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "1613": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2943,
        2969
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "1614": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2943,
        2969
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1616": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2943,
        2969
      ],
      "op": "REVERT",
      "path": "8"
    },
    "1617": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2943,
        2969
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1618": {
      "op": "POP"
    },
    "1619": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2933,
        2940
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xB"
    },
    "1621": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2933,
        2969
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1622": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2933,
        2969
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1623": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1625": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1627": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1629": {
      "op": "SHL"
    },
    "1630": {
      "op": "SUB"
    },
    "1631": {
      "op": "NOT"
    },
    "1632": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2933,
        2969
      ],
      "op": "AND",
      "path": "8"
    },
    "1633": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1635": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1637": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1639": {
      "op": "SHL"
    },
    "1640": {
      "op": "SUB"
    },
    "1641": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2933,
        2969
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "1642": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2933,
        2969
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1643": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2933,
        2969
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "1644": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2933,
        2969
      ],
      "op": "AND",
      "path": "8"
    },
    "1645": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2933,
        2969
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1646": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2933,
        2969
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1647": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2933,
        2969
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1648": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2933,
        2969
      ],
      "op": "OR",
      "path": "8"
    },
    "1649": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2933,
        2969
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1650": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2933,
        2969
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "1651": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2980,
        3009
      ],
      "op": "PUSH3",
      "path": "8",
      "statement": 13,
      "value": "0x683"
    },
    "1655": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2991,
        3008
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x2A7"
    },
    "1659": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2991,
        3001
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1660": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        3006,
        3007
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "1662": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2991,
        3005
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xDE9"
    },
    "1666": {
      "fn": "LeveragedTrading.initializePool",
      "jump": "i",
      "offset": [
        2991,
        3008
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1667": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2980,
        3009
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1668": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        3019,
        3050
      ],
      "op": "PUSH3",
      "path": "8",
      "statement": 14,
      "value": "0x694"
    },
    "1672": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        3032,
        3049
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x230"
    },
    "1676": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        3032,
        3042
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1677": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        3047,
        3048
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "1679": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        3032,
        3046
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xDE9"
    },
    "1683": {
      "fn": "LeveragedTrading.initializePool",
      "jump": "i",
      "offset": [
        3032,
        3049
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1684": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        3019,
        3050
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1685": {
      "fn": "LeveragedTrading.initializePool",
      "offset": [
        2711,
        3058
      ],
      "op": "POP",
      "path": "8"
    },
    "1686": {
      "fn": "LeveragedTrading.initializePool",
      "jump": "o",
      "offset": [
        2711,
        3058
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1687": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4847,
        5429
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1688": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4926,
        4943
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 15,
      "value": "0x8"
    },
    "1690": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4926,
        4943
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1691": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4926,
        4943
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xFF"
    },
    "1693": {
      "branch": 64,
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4926,
        4943
      ],
      "op": "AND",
      "path": "8"
    },
    "1694": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4918,
        4977
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x6BC"
    },
    "1698": {
      "branch": 64,
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4918,
        4977
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1699": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4918,
        4977
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1701": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4918,
        4977
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1702": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1706": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1708": {
      "op": "SHL"
    },
    "1709": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4918,
        4977
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1710": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4918,
        4977
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1711": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4918,
        4977
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1713": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4918,
        4977
      ],
      "op": "ADD",
      "path": "8"
    },
    "1714": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4918,
        4977
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x4DD"
    },
    "1718": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4918,
        4977
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1719": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4918,
        4977
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x10D3"
    },
    "1723": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "jump": "i",
      "offset": [
        4918,
        4977
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1724": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4918,
        4977
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1725": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4987,
        5013
      ],
      "op": "PUSH3",
      "path": "8",
      "statement": 16,
      "value": "0x6C6"
    },
    "1729": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4987,
        5011
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x3F5"
    },
    "1733": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "jump": "i",
      "offset": [
        4987,
        5013
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1734": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4987,
        5013
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1735": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5023,
        5030
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 17,
      "value": "0xB"
    },
    "1737": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5023,
        5030
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1738": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5023,
        5058
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1740": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5023,
        5058
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1741": {
      "op": "PUSH4",
      "value": "0x852CD8D"
    },
    "1746": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "1748": {
      "op": "SHL"
    },
    "1749": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5023,
        5058
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1750": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5023,
        5058
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1751": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1753": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1755": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1757": {
      "op": "SHL"
    },
    "1758": {
      "op": "SUB"
    },
    "1759": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5023,
        5030
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1760": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5023,
        5030
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1761": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5023,
        5030
      ],
      "op": "AND",
      "path": "8"
    },
    "1762": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5023,
        5030
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1763": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5023,
        5035
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x42966C68"
    },
    "1768": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5023,
        5035
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1769": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5023,
        5058
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x6F8"
    },
    "1773": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5023,
        5058
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1774": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5036,
        5057
      ],
      "op": "DUP5",
      "path": "8"
    },
    "1775": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5036,
        5057
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1776": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5023,
        5058
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1778": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5023,
        5058
      ],
      "op": "ADD",
      "path": "8"
    },
    "1779": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5023,
        5058
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x1180"
    },
    "1783": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "jump": "i",
      "offset": [
        5023,
        5058
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1784": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5023,
        5058
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1785": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5023,
        5058
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1787": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5023,
        5058
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1789": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5023,
        5058
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1790": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5023,
        5058
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1791": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5023,
        5058
      ],
      "op": "DUP4",
      "path": "8"
    },
    "1792": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5023,
        5058
      ],
      "op": "SUB",
      "path": "8"
    },
    "1793": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5023,
        5058
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1794": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5023,
        5058
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1796": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5023,
        5058
      ],
      "op": "DUP8",
      "path": "8"
    },
    "1797": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5023,
        5058
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1798": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5023,
        5058
      ],
      "op": "EXTCODESIZE",
      "path": "8"
    },
    "1799": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5023,
        5058
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1800": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5023,
        5058
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1801": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5023,
        5058
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1802": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5023,
        5058
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x713"
    },
    "1806": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5023,
        5058
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1807": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5023,
        5058
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1809": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5023,
        5058
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1810": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5023,
        5058
      ],
      "op": "REVERT",
      "path": "8"
    },
    "1811": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5023,
        5058
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1812": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5023,
        5058
      ],
      "op": "POP",
      "path": "8"
    },
    "1813": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5023,
        5058
      ],
      "op": "GAS",
      "path": "8"
    },
    "1814": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5023,
        5058
      ],
      "op": "CALL",
      "path": "8"
    },
    "1815": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5023,
        5058
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1816": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5023,
        5058
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1817": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5023,
        5058
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1818": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5023,
        5058
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x728"
    },
    "1822": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5023,
        5058
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1823": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5023,
        5058
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "1824": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5023,
        5058
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1826": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5023,
        5058
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1827": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5023,
        5058
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "1828": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5023,
        5058
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "1829": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5023,
        5058
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1831": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5023,
        5058
      ],
      "op": "REVERT",
      "path": "8"
    },
    "1832": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5023,
        5058
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1833": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5023,
        5058
      ],
      "op": "POP",
      "path": "8"
    },
    "1834": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5023,
        5058
      ],
      "op": "POP",
      "path": "8"
    },
    "1835": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5023,
        5058
      ],
      "op": "POP",
      "path": "8"
    },
    "1836": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5023,
        5058
      ],
      "op": "POP",
      "path": "8"
    },
    "1837": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5084,
        5101
      ],
      "op": "PUSH3",
      "path": "8",
      "statement": 18,
      "value": "0x736"
    },
    "1841": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5084,
        5099
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x4F4"
    },
    "1845": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "jump": "i",
      "offset": [
        5084,
        5101
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1846": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5084,
        5101
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1847": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5069,
        5081
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "1849": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5069,
        5101
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1850": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5069,
        5101
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1851": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5069,
        5101
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "1852": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5111,
        5129
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1854": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5111,
        5129
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1855": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5132,
        5184
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x755"
    },
    "1859": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5132,
        5184
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1860": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5176,
        5183
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xF4240"
    },
    "1864": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5176,
        5183
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1865": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5132,
        5171
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x522"
    },
    "1869": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5132,
        5171
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1870": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5132,
        5153
      ],
      "op": "DUP6",
      "path": "8"
    },
    "1871": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5132,
        5153
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1872": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5132,
        5157
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xDDB"
    },
    "1876": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "jump": "i",
      "offset": [
        5132,
        5171
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1877": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5132,
        5184
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1878": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5219,
        5232
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 19,
      "value": "0x6"
    },
    "1880": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5219,
        5232
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1881": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5111,
        5184
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1882": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5111,
        5184
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1883": {
      "op": "POP"
    },
    "1884": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5219,
        5259
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x767"
    },
    "1888": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5219,
        5259
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1889": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5237,
        5258
      ],
      "op": "DUP4",
      "path": "8"
    },
    "1890": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5219,
        5236
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xD79"
    },
    "1894": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "jump": "i",
      "offset": [
        5219,
        5259
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1895": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5219,
        5259
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1896": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5203,
        5216
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x6"
    },
    "1898": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5203,
        5259
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "1899": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5289,
        5306
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 20,
      "value": "0x4"
    },
    "1901": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5289,
        5306
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1902": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5289,
        5322
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x779"
    },
    "1906": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5289,
        5322
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1907": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5311,
        5321
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1908": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5289,
        5310
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xD79"
    },
    "1912": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "jump": "i",
      "offset": [
        5289,
        5322
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1913": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5289,
        5322
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1914": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5269,
        5286
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1916": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5269,
        5322
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1917": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5269,
        5322
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1918": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5269,
        5322
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "1919": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5354,
        5365
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x8"
    },
    "1921": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5354,
        5365
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1922": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5383,
        5421
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 21,
      "value": "0x40"
    },
    "1924": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5383,
        5421
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1925": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "1930": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1932": {
      "op": "SHL"
    },
    "1933": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5383,
        5421
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1934": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5383,
        5421
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1935": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5354,
        5365
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x100"
    },
    "1938": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5354,
        5365
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1939": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5354,
        5365
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1940": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5354,
        5365
      ],
      "op": "DIV",
      "path": "8"
    },
    "1941": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1943": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1945": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1947": {
      "op": "SHL"
    },
    "1948": {
      "op": "SUB"
    },
    "1949": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5354,
        5365
      ],
      "op": "AND",
      "path": "8"
    },
    "1950": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5354,
        5365
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1951": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5354,
        5365
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1952": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5354,
        5365
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1953": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5383,
        5396
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xA9059CBB"
    },
    "1958": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5383,
        5396
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1959": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5383,
        5421
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x7B6"
    },
    "1963": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5383,
        5421
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1964": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5397,
        5407
      ],
      "op": "CALLER",
      "path": "8"
    },
    "1965": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5397,
        5407
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1966": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5410,
        5420
      ],
      "op": "DUP8",
      "path": "8"
    },
    "1967": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5410,
        5420
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1968": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5383,
        5421
      ],
      "op": "ADD",
      "path": "8"
    },
    "1969": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5383,
        5421
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x103A"
    },
    "1973": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "jump": "i",
      "offset": [
        5383,
        5421
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1974": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5383,
        5421
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1975": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5383,
        5421
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1977": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5383,
        5421
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1979": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5383,
        5421
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1980": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5383,
        5421
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1981": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5383,
        5421
      ],
      "op": "DUP4",
      "path": "8"
    },
    "1982": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5383,
        5421
      ],
      "op": "SUB",
      "path": "8"
    },
    "1983": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5383,
        5421
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1984": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5383,
        5421
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1986": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5383,
        5421
      ],
      "op": "DUP8",
      "path": "8"
    },
    "1987": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5383,
        5421
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1988": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5383,
        5421
      ],
      "op": "EXTCODESIZE",
      "path": "8"
    },
    "1989": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5383,
        5421
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1990": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5383,
        5421
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1991": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5383,
        5421
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1992": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5383,
        5421
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x7D1"
    },
    "1996": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5383,
        5421
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1997": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5383,
        5421
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1999": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5383,
        5421
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2000": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5383,
        5421
      ],
      "op": "REVERT",
      "path": "8"
    },
    "2001": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5383,
        5421
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2002": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5383,
        5421
      ],
      "op": "POP",
      "path": "8"
    },
    "2003": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5383,
        5421
      ],
      "op": "GAS",
      "path": "8"
    },
    "2004": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5383,
        5421
      ],
      "op": "CALL",
      "path": "8"
    },
    "2005": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5383,
        5421
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2006": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5383,
        5421
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2007": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5383,
        5421
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2008": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5383,
        5421
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x7E6"
    },
    "2012": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5383,
        5421
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2013": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5383,
        5421
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "2014": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5383,
        5421
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2016": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5383,
        5421
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2017": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5383,
        5421
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "2018": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5383,
        5421
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "2019": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5383,
        5421
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2021": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5383,
        5421
      ],
      "op": "REVERT",
      "path": "8"
    },
    "2022": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5383,
        5421
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2023": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5383,
        5421
      ],
      "op": "POP",
      "path": "8"
    },
    "2024": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5383,
        5421
      ],
      "op": "POP",
      "path": "8"
    },
    "2025": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5383,
        5421
      ],
      "op": "POP",
      "path": "8"
    },
    "2026": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5383,
        5421
      ],
      "op": "POP",
      "path": "8"
    },
    "2027": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5383,
        5421
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2029": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5383,
        5421
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2030": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5383,
        5421
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "2031": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5383,
        5421
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "2033": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5383,
        5421
      ],
      "op": "NOT",
      "path": "8"
    },
    "2034": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5383,
        5421
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "2036": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5383,
        5421
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2037": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5383,
        5421
      ],
      "op": "ADD",
      "path": "8"
    },
    "2038": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5383,
        5421
      ],
      "op": "AND",
      "path": "8"
    },
    "2039": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5383,
        5421
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2040": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5383,
        5421
      ],
      "op": "ADD",
      "path": "8"
    },
    "2041": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5383,
        5421
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2042": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5383,
        5421
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2044": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5383,
        5421
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2045": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5383,
        5421
      ],
      "op": "POP",
      "path": "8"
    },
    "2046": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5383,
        5421
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2047": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5383,
        5421
      ],
      "op": "ADD",
      "path": "8"
    },
    "2048": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5383,
        5421
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2049": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5383,
        5421
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x80C"
    },
    "2053": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5383,
        5421
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2054": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5383,
        5421
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2055": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5383,
        5421
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xF5A"
    },
    "2059": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "jump": "i",
      "offset": [
        5383,
        5421
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2060": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5383,
        5421
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2061": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5376,
        5422
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x827"
    },
    "2065": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5376,
        5422
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2066": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2071": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2073": {
      "op": "SHL"
    },
    "2074": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5376,
        5422
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2076": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5376,
        5422
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2077": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5376,
        5422
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "2079": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5376,
        5422
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "2081": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5376,
        5422
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2082": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5376,
        5422
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x24"
    },
    "2084": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5376,
        5422
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2086": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5376,
        5422
      ],
      "op": "REVERT",
      "path": "8"
    },
    "2087": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        5376,
        5422
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2088": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4847,
        5429
      ],
      "op": "POP",
      "path": "8"
    },
    "2089": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4847,
        5429
      ],
      "op": "POP",
      "path": "8"
    },
    "2090": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        4847,
        5429
      ],
      "op": "POP",
      "path": "8"
    },
    "2091": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "jump": "o",
      "offset": [
        4847,
        5429
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2092": {
      "offset": [
        2210,
        2242
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2093": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        2210,
        2242
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x6"
    },
    "2095": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        2210,
        2242
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2096": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "offset": [
        2210,
        2242
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2097": {
      "fn": "LeveragedTrading.redeemBtcDown",
      "jump": "o",
      "offset": [
        2210,
        2242
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2098": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3666,
        4280
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2099": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3733,
        3750
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 22,
      "value": "0x8"
    },
    "2101": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3733,
        3750
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2102": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3733,
        3750
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xFF"
    },
    "2104": {
      "branch": 65,
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3733,
        3750
      ],
      "op": "AND",
      "path": "8"
    },
    "2105": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3725,
        3784
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x857"
    },
    "2109": {
      "branch": 65,
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3725,
        3784
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2110": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3725,
        3784
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2112": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3725,
        3784
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2113": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2117": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2119": {
      "op": "SHL"
    },
    "2120": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3725,
        3784
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2121": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3725,
        3784
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2122": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3725,
        3784
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "2124": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3725,
        3784
      ],
      "op": "ADD",
      "path": "8"
    },
    "2125": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3725,
        3784
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x4DD"
    },
    "2129": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3725,
        3784
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2130": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3725,
        3784
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x10D3"
    },
    "2134": {
      "fn": "LeveragedTrading.issueBtcDown",
      "jump": "i",
      "offset": [
        3725,
        3784
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2135": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3725,
        3784
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2136": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3794,
        3820
      ],
      "op": "PUSH3",
      "path": "8",
      "statement": 23,
      "value": "0x861"
    },
    "2140": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3794,
        3818
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x3F5"
    },
    "2144": {
      "fn": "LeveragedTrading.issueBtcDown",
      "jump": "i",
      "offset": [
        3794,
        3820
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2145": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3794,
        3820
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2146": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3854,
        3871
      ],
      "op": "PUSH3",
      "path": "8",
      "statement": 24,
      "value": "0x86B"
    },
    "2150": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3854,
        3869
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x4F4"
    },
    "2154": {
      "fn": "LeveragedTrading.issueBtcDown",
      "jump": "i",
      "offset": [
        3854,
        3871
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2155": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3854,
        3871
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2156": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3839,
        3851
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "2158": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3839,
        3871
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2159": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3839,
        3871
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2160": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3839,
        3871
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "2161": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3881,
        3910
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2163": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3881,
        3910
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2164": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3913,
        3954
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x887"
    },
    "2168": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3913,
        3954
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2169": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3913,
        3936
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x522"
    },
    "2173": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3913,
        3923
      ],
      "op": "DUP5",
      "path": "8"
    },
    "2174": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3928,
        3935
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xF4240"
    },
    "2178": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3913,
        3927
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xDDB"
    },
    "2182": {
      "fn": "LeveragedTrading.issueBtcDown",
      "jump": "i",
      "offset": [
        3913,
        3936
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2183": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3913,
        3954
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2184": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3965,
        3972
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 25,
      "value": "0xB"
    },
    "2186": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3965,
        3972
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2187": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3965,
        4000
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2189": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3965,
        4000
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2190": {
      "op": "PUSH4",
      "value": "0x140E25AD"
    },
    "2195": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "2197": {
      "op": "SHL"
    },
    "2198": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3965,
        4000
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2199": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3965,
        4000
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2200": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3881,
        3954
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2201": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3881,
        3954
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "2202": {
      "op": "POP"
    },
    "2203": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2205": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2207": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2209": {
      "op": "SHL"
    },
    "2210": {
      "op": "SUB"
    },
    "2211": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3965,
        3972
      ],
      "op": "AND",
      "path": "8"
    },
    "2212": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3965,
        3972
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2213": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3965,
        3977
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xA0712D68"
    },
    "2218": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3965,
        3977
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2219": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3965,
        4000
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x8BA"
    },
    "2223": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3965,
        4000
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2224": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3881,
        3954
      ],
      "op": "DUP5",
      "path": "8"
    },
    "2225": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3881,
        3954
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2226": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3965,
        4000
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "2228": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3965,
        4000
      ],
      "op": "ADD",
      "path": "8"
    },
    "2229": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3965,
        4000
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x1180"
    },
    "2233": {
      "fn": "LeveragedTrading.issueBtcDown",
      "jump": "i",
      "offset": [
        3965,
        4000
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2234": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3965,
        4000
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2235": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3965,
        4000
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2237": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3965,
        4000
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2239": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3965,
        4000
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2240": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3965,
        4000
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2241": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3965,
        4000
      ],
      "op": "DUP4",
      "path": "8"
    },
    "2242": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3965,
        4000
      ],
      "op": "SUB",
      "path": "8"
    },
    "2243": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3965,
        4000
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2244": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3965,
        4000
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2246": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3965,
        4000
      ],
      "op": "DUP8",
      "path": "8"
    },
    "2247": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3965,
        4000
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2248": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3965,
        4000
      ],
      "op": "EXTCODESIZE",
      "path": "8"
    },
    "2249": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3965,
        4000
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2250": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3965,
        4000
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2251": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3965,
        4000
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2252": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3965,
        4000
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x8D5"
    },
    "2256": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3965,
        4000
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2257": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3965,
        4000
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2259": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3965,
        4000
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2260": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3965,
        4000
      ],
      "op": "REVERT",
      "path": "8"
    },
    "2261": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3965,
        4000
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2262": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3965,
        4000
      ],
      "op": "POP",
      "path": "8"
    },
    "2263": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3965,
        4000
      ],
      "op": "GAS",
      "path": "8"
    },
    "2264": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3965,
        4000
      ],
      "op": "CALL",
      "path": "8"
    },
    "2265": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3965,
        4000
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2266": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3965,
        4000
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2267": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3965,
        4000
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2268": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3965,
        4000
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x8EA"
    },
    "2272": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3965,
        4000
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2273": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3965,
        4000
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "2274": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3965,
        4000
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2276": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3965,
        4000
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2277": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3965,
        4000
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "2278": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3965,
        4000
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "2279": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3965,
        4000
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2281": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3965,
        4000
      ],
      "op": "REVERT",
      "path": "8"
    },
    "2282": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        3965,
        4000
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2283": {
      "op": "POP"
    },
    "2284": {
      "op": "POP"
    },
    "2285": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4026,
        4039
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 26,
      "value": "0x6"
    },
    "2287": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4026,
        4039
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2288": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4026,
        4066
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x8FE"
    },
    "2292": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4026,
        4066
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "2293": {
      "op": "POP"
    },
    "2294": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4026,
        4039
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2295": {
      "op": "POP"
    },
    "2296": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4044,
        4065
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2297": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4026,
        4043
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xD64"
    },
    "2301": {
      "fn": "LeveragedTrading.issueBtcDown",
      "jump": "i",
      "offset": [
        4026,
        4066
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2302": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4026,
        4066
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2303": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4010,
        4023
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x6"
    },
    "2305": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4010,
        4066
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "2306": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4096,
        4113
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 27,
      "value": "0x4"
    },
    "2308": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4096,
        4113
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2309": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4096,
        4129
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x910"
    },
    "2313": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4096,
        4129
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2314": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4118,
        4128
      ],
      "op": "DUP4",
      "path": "8"
    },
    "2315": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4096,
        4117
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xD64"
    },
    "2319": {
      "fn": "LeveragedTrading.issueBtcDown",
      "jump": "i",
      "offset": [
        4096,
        4129
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2320": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4096,
        4129
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2321": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4076,
        4093
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "2323": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4076,
        4129
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2324": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4076,
        4129
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2325": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4076,
        4129
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "2326": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4161,
        4172
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x8"
    },
    "2328": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4161,
        4172
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2329": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4191,
        4247
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 28,
      "value": "0x40"
    },
    "2331": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4191,
        4247
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2332": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "2337": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2339": {
      "op": "SHL"
    },
    "2340": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4191,
        4247
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2341": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4191,
        4247
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2342": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4161,
        4172
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x100"
    },
    "2345": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4161,
        4172
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2346": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4161,
        4172
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2347": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4161,
        4172
      ],
      "op": "DIV",
      "path": "8"
    },
    "2348": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2350": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2352": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2354": {
      "op": "SHL"
    },
    "2355": {
      "op": "SUB"
    },
    "2356": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4161,
        4172
      ],
      "op": "AND",
      "path": "8"
    },
    "2357": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4161,
        4172
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2358": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4161,
        4172
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2359": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4161,
        4172
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2360": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4191,
        4208
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x23B872DD"
    },
    "2365": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4191,
        4208
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2366": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4191,
        4247
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x94F"
    },
    "2370": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4191,
        4247
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2371": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4209,
        4219
      ],
      "op": "CALLER",
      "path": "8"
    },
    "2372": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4209,
        4219
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2373": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4229,
        4233
      ],
      "op": "ADDRESS",
      "path": "8"
    },
    "2374": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4229,
        4233
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2375": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4236,
        4246
      ],
      "op": "DUP10",
      "path": "8"
    },
    "2376": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4236,
        4246
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2377": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4191,
        4247
      ],
      "op": "ADD",
      "path": "8"
    },
    "2378": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4191,
        4247
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x1016"
    },
    "2382": {
      "fn": "LeveragedTrading.issueBtcDown",
      "jump": "i",
      "offset": [
        4191,
        4247
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2383": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4191,
        4247
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2384": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4191,
        4247
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "2386": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4191,
        4247
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2388": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4191,
        4247
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2389": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4191,
        4247
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2390": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4191,
        4247
      ],
      "op": "DUP4",
      "path": "8"
    },
    "2391": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4191,
        4247
      ],
      "op": "SUB",
      "path": "8"
    },
    "2392": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4191,
        4247
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2393": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4191,
        4247
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2395": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4191,
        4247
      ],
      "op": "DUP8",
      "path": "8"
    },
    "2396": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4191,
        4247
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2397": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4191,
        4247
      ],
      "op": "EXTCODESIZE",
      "path": "8"
    },
    "2398": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4191,
        4247
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2399": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4191,
        4247
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2400": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4191,
        4247
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2401": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4191,
        4247
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x96A"
    },
    "2405": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4191,
        4247
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2406": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4191,
        4247
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2408": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4191,
        4247
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2409": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4191,
        4247
      ],
      "op": "REVERT",
      "path": "8"
    },
    "2410": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4191,
        4247
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2411": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4191,
        4247
      ],
      "op": "POP",
      "path": "8"
    },
    "2412": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4191,
        4247
      ],
      "op": "GAS",
      "path": "8"
    },
    "2413": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4191,
        4247
      ],
      "op": "CALL",
      "path": "8"
    },
    "2414": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4191,
        4247
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2415": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4191,
        4247
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2416": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4191,
        4247
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2417": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4191,
        4247
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x97F"
    },
    "2421": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4191,
        4247
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2422": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4191,
        4247
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "2423": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4191,
        4247
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2425": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4191,
        4247
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2426": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4191,
        4247
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "2427": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4191,
        4247
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "2428": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4191,
        4247
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2430": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4191,
        4247
      ],
      "op": "REVERT",
      "path": "8"
    },
    "2431": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4191,
        4247
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2432": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4191,
        4247
      ],
      "op": "POP",
      "path": "8"
    },
    "2433": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4191,
        4247
      ],
      "op": "POP",
      "path": "8"
    },
    "2434": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4191,
        4247
      ],
      "op": "POP",
      "path": "8"
    },
    "2435": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4191,
        4247
      ],
      "op": "POP",
      "path": "8"
    },
    "2436": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4191,
        4247
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2438": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4191,
        4247
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2439": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4191,
        4247
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "2440": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4191,
        4247
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "2442": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4191,
        4247
      ],
      "op": "NOT",
      "path": "8"
    },
    "2443": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4191,
        4247
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "2445": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4191,
        4247
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2446": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4191,
        4247
      ],
      "op": "ADD",
      "path": "8"
    },
    "2447": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4191,
        4247
      ],
      "op": "AND",
      "path": "8"
    },
    "2448": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4191,
        4247
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2449": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4191,
        4247
      ],
      "op": "ADD",
      "path": "8"
    },
    "2450": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4191,
        4247
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2451": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4191,
        4247
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2453": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4191,
        4247
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2454": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4191,
        4247
      ],
      "op": "POP",
      "path": "8"
    },
    "2455": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4191,
        4247
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2456": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4191,
        4247
      ],
      "op": "ADD",
      "path": "8"
    },
    "2457": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4191,
        4247
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2458": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4191,
        4247
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x9A5"
    },
    "2462": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4191,
        4247
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2463": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4191,
        4247
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2464": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4191,
        4247
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xF5A"
    },
    "2468": {
      "fn": "LeveragedTrading.issueBtcDown",
      "jump": "i",
      "offset": [
        4191,
        4247
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2469": {
      "branch": 66,
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4191,
        4247
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2470": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4183,
        4273
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x827"
    },
    "2474": {
      "branch": 66,
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4183,
        4273
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2475": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4183,
        4273
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2477": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4183,
        4273
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2478": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2482": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2484": {
      "op": "SHL"
    },
    "2485": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4183,
        4273
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2486": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4183,
        4273
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2487": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4183,
        4273
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "2489": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4183,
        4273
      ],
      "op": "ADD",
      "path": "8"
    },
    "2490": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4183,
        4273
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x4DD"
    },
    "2494": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4183,
        4273
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2495": {
      "fn": "LeveragedTrading.issueBtcDown",
      "offset": [
        4183,
        4273
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x10A4"
    },
    "2499": {
      "fn": "LeveragedTrading.issueBtcDown",
      "jump": "i",
      "offset": [
        4183,
        4273
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2500": {
      "fn": "LeveragedTrading.getBtcdownBalance",
      "offset": [
        8257,
        8368
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2501": {
      "fn": "LeveragedTrading.getBtcdownBalance",
      "offset": [
        8332,
        8339
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 29,
      "value": "0xB"
    },
    "2503": {
      "fn": "LeveragedTrading.getBtcdownBalance",
      "offset": [
        8332,
        8339
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2504": {
      "fn": "LeveragedTrading.getBtcdownBalance",
      "offset": [
        8332,
        8361
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2506": {
      "fn": "LeveragedTrading.getBtcdownBalance",
      "offset": [
        8332,
        8361
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2507": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2512": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2514": {
      "op": "SHL"
    },
    "2515": {
      "fn": "LeveragedTrading.getBtcdownBalance",
      "offset": [
        8332,
        8361
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2516": {
      "fn": "LeveragedTrading.getBtcdownBalance",
      "offset": [
        8332,
        8361
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2517": {
      "fn": "LeveragedTrading.getBtcdownBalance",
      "offset": [
        8306,
        8313
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2519": {
      "fn": "LeveragedTrading.getBtcdownBalance",
      "offset": [
        8306,
        8313
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2520": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2522": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2524": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2526": {
      "op": "SHL"
    },
    "2527": {
      "op": "SUB"
    },
    "2528": {
      "fn": "LeveragedTrading.getBtcdownBalance",
      "offset": [
        8332,
        8339
      ],
      "op": "AND",
      "path": "8"
    },
    "2529": {
      "fn": "LeveragedTrading.getBtcdownBalance",
      "offset": [
        8332,
        8339
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2530": {
      "fn": "LeveragedTrading.getBtcdownBalance",
      "offset": [
        8332,
        8349
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x70A08231"
    },
    "2535": {
      "fn": "LeveragedTrading.getBtcdownBalance",
      "offset": [
        8332,
        8349
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2536": {
      "fn": "LeveragedTrading.getBtcdownBalance",
      "offset": [
        8332,
        8361
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x30B"
    },
    "2540": {
      "fn": "LeveragedTrading.getBtcdownBalance",
      "offset": [
        8332,
        8361
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2541": {
      "fn": "LeveragedTrading.getBtcdownBalance",
      "offset": [
        8350,
        8360
      ],
      "op": "CALLER",
      "path": "8"
    },
    "2542": {
      "fn": "LeveragedTrading.getBtcdownBalance",
      "offset": [
        8350,
        8360
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2543": {
      "fn": "LeveragedTrading.getBtcdownBalance",
      "offset": [
        8332,
        8361
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "2545": {
      "fn": "LeveragedTrading.getBtcdownBalance",
      "offset": [
        8332,
        8361
      ],
      "op": "ADD",
      "path": "8"
    },
    "2546": {
      "fn": "LeveragedTrading.getBtcdownBalance",
      "offset": [
        8332,
        8361
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x1002"
    },
    "2550": {
      "fn": "LeveragedTrading.getBtcdownBalance",
      "jump": "i",
      "offset": [
        8332,
        8361
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2551": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4286,
        4841
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2552": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4363,
        4380
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 30,
      "value": "0x8"
    },
    "2554": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4363,
        4380
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2555": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4363,
        4380
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xFF"
    },
    "2557": {
      "branch": 67,
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4363,
        4380
      ],
      "op": "AND",
      "path": "8"
    },
    "2558": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4355,
        4414
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xA1C"
    },
    "2562": {
      "branch": 67,
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4355,
        4414
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2563": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4355,
        4414
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2565": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4355,
        4414
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2566": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2570": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2572": {
      "op": "SHL"
    },
    "2573": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4355,
        4414
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2574": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4355,
        4414
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2575": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4355,
        4414
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "2577": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4355,
        4414
      ],
      "op": "ADD",
      "path": "8"
    },
    "2578": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4355,
        4414
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x4DD"
    },
    "2582": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4355,
        4414
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2583": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4355,
        4414
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x10D3"
    },
    "2587": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "jump": "i",
      "offset": [
        4355,
        4414
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2588": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4355,
        4414
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2589": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4424,
        4450
      ],
      "op": "PUSH3",
      "path": "8",
      "statement": 31,
      "value": "0xA26"
    },
    "2593": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4424,
        4448
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x3F5"
    },
    "2597": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "jump": "i",
      "offset": [
        4424,
        4450
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2598": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4424,
        4450
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2599": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4460,
        4465
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 32,
      "value": "0xA"
    },
    "2601": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4460,
        4465
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2602": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4460,
        4493
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2604": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4460,
        4493
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2605": {
      "op": "PUSH4",
      "value": "0x852CD8D"
    },
    "2610": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "2612": {
      "op": "SHL"
    },
    "2613": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4460,
        4493
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2614": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4460,
        4493
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2615": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2617": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2619": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2621": {
      "op": "SHL"
    },
    "2622": {
      "op": "SUB"
    },
    "2623": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4460,
        4465
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2624": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4460,
        4465
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2625": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4460,
        4465
      ],
      "op": "AND",
      "path": "8"
    },
    "2626": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4460,
        4465
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2627": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4460,
        4470
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x42966C68"
    },
    "2632": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4460,
        4470
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2633": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4460,
        4493
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xA58"
    },
    "2637": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4460,
        4493
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2638": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4471,
        4492
      ],
      "op": "DUP5",
      "path": "8"
    },
    "2639": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4471,
        4492
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2640": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4460,
        4493
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "2642": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4460,
        4493
      ],
      "op": "ADD",
      "path": "8"
    },
    "2643": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4460,
        4493
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x1180"
    },
    "2647": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "jump": "i",
      "offset": [
        4460,
        4493
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2648": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4460,
        4493
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2649": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4460,
        4493
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2651": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4460,
        4493
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2653": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4460,
        4493
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2654": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4460,
        4493
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2655": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4460,
        4493
      ],
      "op": "DUP4",
      "path": "8"
    },
    "2656": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4460,
        4493
      ],
      "op": "SUB",
      "path": "8"
    },
    "2657": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4460,
        4493
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2658": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4460,
        4493
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2660": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4460,
        4493
      ],
      "op": "DUP8",
      "path": "8"
    },
    "2661": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4460,
        4493
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2662": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4460,
        4493
      ],
      "op": "EXTCODESIZE",
      "path": "8"
    },
    "2663": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4460,
        4493
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2664": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4460,
        4493
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2665": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4460,
        4493
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2666": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4460,
        4493
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xA73"
    },
    "2670": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4460,
        4493
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2671": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4460,
        4493
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2673": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4460,
        4493
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2674": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4460,
        4493
      ],
      "op": "REVERT",
      "path": "8"
    },
    "2675": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4460,
        4493
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2676": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4460,
        4493
      ],
      "op": "POP",
      "path": "8"
    },
    "2677": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4460,
        4493
      ],
      "op": "GAS",
      "path": "8"
    },
    "2678": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4460,
        4493
      ],
      "op": "CALL",
      "path": "8"
    },
    "2679": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4460,
        4493
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2680": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4460,
        4493
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2681": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4460,
        4493
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2682": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4460,
        4493
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xA88"
    },
    "2686": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4460,
        4493
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2687": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4460,
        4493
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "2688": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4460,
        4493
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2690": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4460,
        4493
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2691": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4460,
        4493
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "2692": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4460,
        4493
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "2693": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4460,
        4493
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2695": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4460,
        4493
      ],
      "op": "REVERT",
      "path": "8"
    },
    "2696": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4460,
        4493
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2697": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4460,
        4493
      ],
      "op": "POP",
      "path": "8"
    },
    "2698": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4460,
        4493
      ],
      "op": "POP",
      "path": "8"
    },
    "2699": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4460,
        4493
      ],
      "op": "POP",
      "path": "8"
    },
    "2700": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4460,
        4493
      ],
      "op": "POP",
      "path": "8"
    },
    "2701": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4517,
        4532
      ],
      "op": "PUSH3",
      "path": "8",
      "statement": 33,
      "value": "0xA96"
    },
    "2705": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4517,
        4530
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xB22"
    },
    "2709": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "jump": "i",
      "offset": [
        4517,
        4532
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2710": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4517,
        4532
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2711": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4504,
        4514
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "2713": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4504,
        4532
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2714": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4504,
        4532
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2715": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4504,
        4532
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "2716": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4542,
        4560
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2718": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4542,
        4560
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2719": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4563,
        4613
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xAB5"
    },
    "2723": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4563,
        4613
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2724": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4605,
        4612
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xF4240"
    },
    "2728": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4605,
        4612
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2729": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4563,
        4600
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x522"
    },
    "2733": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4563,
        4600
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2734": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4563,
        4584
      ],
      "op": "DUP6",
      "path": "8"
    },
    "2735": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4563,
        4584
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2736": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4563,
        4588
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xDDB"
    },
    "2740": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "jump": "i",
      "offset": [
        4563,
        4600
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2741": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4563,
        4613
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2742": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4638,
        4649
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 34,
      "value": "0x5"
    },
    "2744": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4638,
        4649
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2745": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4542,
        4613
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2746": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4542,
        4613
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2747": {
      "op": "POP"
    },
    "2748": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4638,
        4676
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xAC7"
    },
    "2752": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4638,
        4676
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2753": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4654,
        4675
      ],
      "op": "DUP4",
      "path": "8"
    },
    "2754": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4638,
        4653
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xD79"
    },
    "2758": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "jump": "i",
      "offset": [
        4638,
        4676
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2759": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4638,
        4676
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2760": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4624,
        4635
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x5"
    },
    "2762": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4624,
        4676
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "2763": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4704,
        4719
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 35,
      "value": "0x3"
    },
    "2765": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4704,
        4719
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2766": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4704,
        4735
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xAD9"
    },
    "2770": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4704,
        4735
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2771": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4724,
        4734
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2772": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4704,
        4723
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xD79"
    },
    "2776": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "jump": "i",
      "offset": [
        4704,
        4735
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2777": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4704,
        4735
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2778": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4686,
        4701
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "2780": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4686,
        4735
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "2781": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4767,
        4778
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x8"
    },
    "2783": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4767,
        4778
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2784": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4796,
        4833
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 36,
      "value": "0x40"
    },
    "2786": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4796,
        4833
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2787": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "2792": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2794": {
      "op": "SHL"
    },
    "2795": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4796,
        4833
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2796": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4796,
        4833
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2797": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4767,
        4778
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x100"
    },
    "2800": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4767,
        4778
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2801": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4767,
        4778
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2802": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4767,
        4778
      ],
      "op": "DIV",
      "path": "8"
    },
    "2803": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2805": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2807": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2809": {
      "op": "SHL"
    },
    "2810": {
      "op": "SUB"
    },
    "2811": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4767,
        4778
      ],
      "op": "AND",
      "path": "8"
    },
    "2812": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4767,
        4778
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2813": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4767,
        4778
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2814": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4767,
        4778
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2815": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4796,
        4809
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xA9059CBB"
    },
    "2820": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4796,
        4809
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2821": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4796,
        4833
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x7B6"
    },
    "2825": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4796,
        4833
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2826": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4810,
        4820
      ],
      "op": "CALLER",
      "path": "8"
    },
    "2827": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4810,
        4820
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2828": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4822,
        4832
      ],
      "op": "DUP7",
      "path": "8"
    },
    "2829": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4822,
        4832
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2830": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4796,
        4833
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "2832": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4796,
        4833
      ],
      "op": "ADD",
      "path": "8"
    },
    "2833": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        4796,
        4833
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x103A"
    },
    "2837": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "jump": "i",
      "offset": [
        4796,
        4833
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2838": {
      "offset": [
        2045,
        2079
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2839": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        2045,
        2079
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "2841": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        2045,
        2079
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2842": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        2045,
        2079
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2843": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "jump": "o",
      "offset": [
        2045,
        2079
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2844": {
      "offset": [
        1939,
        1974
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2845": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        1939,
        1974
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "2847": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        1939,
        1974
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2848": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "offset": [
        1939,
        1974
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2849": {
      "fn": "LeveragedTrading.redeemBtcUp",
      "jump": "o",
      "offset": [
        1939,
        1974
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2850": {
      "fn": "LeveragedTrading.getBtcUpPrice",
      "offset": [
        6725,
        6882
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2851": {
      "fn": "LeveragedTrading.getBtcUpPrice",
      "offset": [
        6771,
        6778
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2853": {
      "fn": "LeveragedTrading.getBtcUpPrice",
      "offset": [
        6797,
        6808
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 37,
      "value": "0x5"
    },
    "2855": {
      "fn": "LeveragedTrading.getBtcUpPrice",
      "offset": [
        6797,
        6808
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2856": {
      "fn": "LeveragedTrading.getBtcUpPrice",
      "offset": [
        6812,
        6813
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2858": {
      "branch": 68,
      "fn": "LeveragedTrading.getBtcUpPrice",
      "offset": [
        6797,
        6813
      ],
      "op": "EQ",
      "path": "8"
    },
    "2859": {
      "fn": "LeveragedTrading.getBtcUpPrice",
      "offset": [
        6797,
        6875
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xB50"
    },
    "2863": {
      "branch": 68,
      "fn": "LeveragedTrading.getBtcUpPrice",
      "offset": [
        6797,
        6875
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2864": {
      "fn": "LeveragedTrading.getBtcUpPrice",
      "offset": [
        6830,
        6875
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x529"
    },
    "2868": {
      "fn": "LeveragedTrading.getBtcUpPrice",
      "offset": [
        6863,
        6874
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x5"
    },
    "2870": {
      "fn": "LeveragedTrading.getBtcUpPrice",
      "offset": [
        6863,
        6874
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2871": {
      "fn": "LeveragedTrading.getBtcUpPrice",
      "offset": [
        6830,
        6858
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x522"
    },
    "2875": {
      "fn": "LeveragedTrading.getBtcUpPrice",
      "offset": [
        6850,
        6857
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xF4240"
    },
    "2879": {
      "fn": "LeveragedTrading.getBtcUpPrice",
      "offset": [
        6830,
        6845
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "2881": {
      "fn": "LeveragedTrading.getBtcUpPrice",
      "offset": [
        6830,
        6845
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2882": {
      "fn": "LeveragedTrading.getBtcUpPrice",
      "offset": [
        6830,
        6849
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xDDB"
    },
    "2886": {
      "fn": "LeveragedTrading.getBtcUpPrice",
      "offset": [
        6830,
        6849
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2887": {
      "fn": "LeveragedTrading.getBtcUpPrice",
      "offset": [
        6830,
        6858
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2888": {
      "fn": "LeveragedTrading.getBtcUpPrice",
      "offset": [
        6830,
        6858
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2889": {
      "fn": "LeveragedTrading.getBtcUpPrice",
      "offset": [
        6830,
        6858
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xFFFFFFFF"
    },
    "2894": {
      "fn": "LeveragedTrading.getBtcUpPrice",
      "offset": [
        6830,
        6858
      ],
      "op": "AND",
      "path": "8"
    },
    "2895": {
      "fn": "LeveragedTrading.getBtcUpPrice",
      "jump": "i",
      "offset": [
        6830,
        6858
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2896": {
      "fn": "LeveragedTrading.getBtcUpPrice",
      "offset": [
        6797,
        6875
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2897": {
      "op": "POP"
    },
    "2898": {
      "fn": "LeveragedTrading.getBtcUpPrice",
      "offset": [
        6817,
        6827
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "2900": {
      "fn": "LeveragedTrading.getBtcUpPrice",
      "offset": [
        6817,
        6827
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2901": {
      "fn": "LeveragedTrading.getBtcUpPrice",
      "offset": [
        6817,
        6827
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2902": {
      "fn": "LeveragedTrading.getBtcUpPrice",
      "jump": "o",
      "offset": [
        6725,
        6882
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2903": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2904": {
      "offset": [
        1196,
        1208
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xB61"
    },
    "2908": {
      "offset": [
        1196,
        1206
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xD87"
    },
    "2912": {
      "jump": "i",
      "offset": [
        1196,
        1208
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2913": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1196,
        1208
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2914": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2916": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2918": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2920": {
      "op": "SHL"
    },
    "2921": {
      "op": "SUB"
    },
    "2922": {
      "offset": [
        1185,
        1208
      ],
      "op": "AND",
      "path": "0"
    },
    "2923": {
      "offset": [
        1185,
        1192
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xB74"
    },
    "2927": {
      "offset": [
        1185,
        1190
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x536"
    },
    "2931": {
      "jump": "i",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2932": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2933": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2935": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2937": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2939": {
      "op": "SHL"
    },
    "2940": {
      "op": "SUB"
    },
    "2941": {
      "offset": [
        1185,
        1208
      ],
      "op": "AND",
      "path": "0"
    },
    "2942": {
      "branch": 74,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "2943": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xB9D"
    },
    "2947": {
      "branch": 74,
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2948": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2950": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2951": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2955": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2957": {
      "op": "SHL"
    },
    "2958": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2959": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2960": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2962": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "2963": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x4DD"
    },
    "2967": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2968": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x110A"
    },
    "2972": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2973": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2974": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2976": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2978": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2980": {
      "op": "SHL"
    },
    "2981": {
      "op": "SUB"
    },
    "2982": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1934,
        1956
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 38
    },
    "2983": {
      "branch": 75,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1934,
        1956
      ],
      "op": "AND",
      "path": "0"
    },
    "2984": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xBC6"
    },
    "2988": {
      "branch": 75,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2989": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2991": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2992": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2996": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2998": {
      "op": "SHL"
    },
    "2999": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3000": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3001": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3003": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "ADD",
      "path": "0"
    },
    "3004": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x4DD"
    },
    "3008": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3009": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x105E"
    },
    "3013": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1926,
        1999
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3014": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3015": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2028
      ],
      "op": "PUSH3",
      "path": "0",
      "statement": 39,
      "value": "0x694"
    },
    "3019": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2019,
        2027
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3020": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2018
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xD8B"
    },
    "3024": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2009,
        2028
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3025": {
      "offset": [
        2271,
        2302
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3026": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2271,
        2302
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x7"
    },
    "3028": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2271,
        2302
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3029": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2271,
        2302
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3030": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        2271,
        2302
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3031": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3064,
        3660
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3032": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3129,
        3146
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 40,
      "value": "0x8"
    },
    "3034": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3129,
        3146
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3035": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3129,
        3146
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xFF"
    },
    "3037": {
      "branch": 69,
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3129,
        3146
      ],
      "op": "AND",
      "path": "8"
    },
    "3038": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3121,
        3180
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xBFC"
    },
    "3042": {
      "branch": 69,
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3121,
        3180
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3043": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3121,
        3180
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3045": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3121,
        3180
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3046": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3050": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3052": {
      "op": "SHL"
    },
    "3053": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3121,
        3180
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3054": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3121,
        3180
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3055": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3121,
        3180
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "3057": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3121,
        3180
      ],
      "op": "ADD",
      "path": "8"
    },
    "3058": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3121,
        3180
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x4DD"
    },
    "3062": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3121,
        3180
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3063": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3121,
        3180
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x10D3"
    },
    "3067": {
      "fn": "LeveragedTrading.issueBtcUp",
      "jump": "i",
      "offset": [
        3121,
        3180
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3068": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3121,
        3180
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3069": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3190,
        3216
      ],
      "op": "PUSH3",
      "path": "8",
      "statement": 41,
      "value": "0xC06"
    },
    "3073": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3190,
        3214
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x3F5"
    },
    "3077": {
      "fn": "LeveragedTrading.issueBtcUp",
      "jump": "i",
      "offset": [
        3190,
        3216
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3078": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3190,
        3216
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3079": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3248,
        3263
      ],
      "op": "PUSH3",
      "path": "8",
      "statement": 42,
      "value": "0xC10"
    },
    "3083": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3248,
        3261
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xB22"
    },
    "3087": {
      "fn": "LeveragedTrading.issueBtcUp",
      "jump": "i",
      "offset": [
        3248,
        3263
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3088": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3248,
        3263
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3089": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3235,
        3245
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "3091": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3235,
        3263
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3092": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3235,
        3263
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3093": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3235,
        3263
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "3094": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3273,
        3302
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3096": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3273,
        3302
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3097": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3305,
        3344
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xC2C"
    },
    "3101": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3305,
        3344
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3102": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3305,
        3328
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x522"
    },
    "3106": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3305,
        3315
      ],
      "op": "DUP5",
      "path": "8"
    },
    "3107": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3320,
        3327
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xF4240"
    },
    "3111": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3305,
        3319
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xDDB"
    },
    "3115": {
      "fn": "LeveragedTrading.issueBtcUp",
      "jump": "i",
      "offset": [
        3305,
        3328
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3116": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3305,
        3344
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3117": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3355,
        3360
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 43,
      "value": "0xA"
    },
    "3119": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3355,
        3360
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3120": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3355,
        3388
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3122": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3355,
        3388
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3123": {
      "op": "PUSH4",
      "value": "0x140E25AD"
    },
    "3128": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "3130": {
      "op": "SHL"
    },
    "3131": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3355,
        3388
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3132": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3355,
        3388
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3133": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3273,
        3344
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3134": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3273,
        3344
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "3135": {
      "op": "POP"
    },
    "3136": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3138": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3140": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3142": {
      "op": "SHL"
    },
    "3143": {
      "op": "SUB"
    },
    "3144": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3355,
        3360
      ],
      "op": "AND",
      "path": "8"
    },
    "3145": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3355,
        3360
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3146": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3355,
        3365
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xA0712D68"
    },
    "3151": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3355,
        3365
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3152": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3355,
        3388
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xC5F"
    },
    "3156": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3355,
        3388
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3157": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3273,
        3344
      ],
      "op": "DUP5",
      "path": "8"
    },
    "3158": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3273,
        3344
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3159": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3355,
        3388
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "3161": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3355,
        3388
      ],
      "op": "ADD",
      "path": "8"
    },
    "3162": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3355,
        3388
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x1180"
    },
    "3166": {
      "fn": "LeveragedTrading.issueBtcUp",
      "jump": "i",
      "offset": [
        3355,
        3388
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3167": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3355,
        3388
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3168": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3355,
        3388
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3170": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3355,
        3388
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3172": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3355,
        3388
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3173": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3355,
        3388
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3174": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3355,
        3388
      ],
      "op": "DUP4",
      "path": "8"
    },
    "3175": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3355,
        3388
      ],
      "op": "SUB",
      "path": "8"
    },
    "3176": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3355,
        3388
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3177": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3355,
        3388
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3179": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3355,
        3388
      ],
      "op": "DUP8",
      "path": "8"
    },
    "3180": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3355,
        3388
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3181": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3355,
        3388
      ],
      "op": "EXTCODESIZE",
      "path": "8"
    },
    "3182": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3355,
        3388
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "3183": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3355,
        3388
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3184": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3355,
        3388
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "3185": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3355,
        3388
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xC7A"
    },
    "3189": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3355,
        3388
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3190": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3355,
        3388
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3192": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3355,
        3388
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3193": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3355,
        3388
      ],
      "op": "REVERT",
      "path": "8"
    },
    "3194": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3355,
        3388
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3195": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3355,
        3388
      ],
      "op": "POP",
      "path": "8"
    },
    "3196": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3355,
        3388
      ],
      "op": "GAS",
      "path": "8"
    },
    "3197": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3355,
        3388
      ],
      "op": "CALL",
      "path": "8"
    },
    "3198": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3355,
        3388
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "3199": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3355,
        3388
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3200": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3355,
        3388
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "3201": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3355,
        3388
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xC8F"
    },
    "3205": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3355,
        3388
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3206": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3355,
        3388
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "3207": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3355,
        3388
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3209": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3355,
        3388
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3210": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3355,
        3388
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "3211": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3355,
        3388
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "3212": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3355,
        3388
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3214": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3355,
        3388
      ],
      "op": "REVERT",
      "path": "8"
    },
    "3215": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3355,
        3388
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3216": {
      "op": "POP"
    },
    "3217": {
      "op": "POP"
    },
    "3218": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3412,
        3423
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 44,
      "value": "0x5"
    },
    "3220": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3412,
        3423
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3221": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3412,
        3450
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xCA3"
    },
    "3225": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3412,
        3450
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "3226": {
      "op": "POP"
    },
    "3227": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3412,
        3423
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3228": {
      "op": "POP"
    },
    "3229": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3428,
        3449
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3230": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3412,
        3427
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xD64"
    },
    "3234": {
      "fn": "LeveragedTrading.issueBtcUp",
      "jump": "i",
      "offset": [
        3412,
        3450
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3235": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3412,
        3450
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3236": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3398,
        3409
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x5"
    },
    "3238": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3398,
        3450
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "3239": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3478,
        3493
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 45,
      "value": "0x3"
    },
    "3241": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3478,
        3493
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3242": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3478,
        3509
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xCB5"
    },
    "3246": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3478,
        3509
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3247": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3498,
        3508
      ],
      "op": "DUP4",
      "path": "8"
    },
    "3248": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3478,
        3497
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xD64"
    },
    "3252": {
      "fn": "LeveragedTrading.issueBtcUp",
      "jump": "i",
      "offset": [
        3478,
        3509
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3253": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3478,
        3509
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3254": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3460,
        3475
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "3256": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3460,
        3509
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "3257": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3541,
        3552
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x8"
    },
    "3259": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3541,
        3552
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3260": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3571,
        3627
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 46,
      "value": "0x40"
    },
    "3262": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3571,
        3627
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3263": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "3268": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3270": {
      "op": "SHL"
    },
    "3271": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3571,
        3627
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3272": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3571,
        3627
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3273": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3541,
        3552
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x100"
    },
    "3276": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3541,
        3552
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3277": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3541,
        3552
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3278": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3541,
        3552
      ],
      "op": "DIV",
      "path": "8"
    },
    "3279": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3281": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3283": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3285": {
      "op": "SHL"
    },
    "3286": {
      "op": "SUB"
    },
    "3287": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3541,
        3552
      ],
      "op": "AND",
      "path": "8"
    },
    "3288": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3541,
        3552
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3289": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3541,
        3552
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3290": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3541,
        3552
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3291": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3571,
        3588
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x23B872DD"
    },
    "3296": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3571,
        3588
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3297": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3571,
        3627
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x94F"
    },
    "3301": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3571,
        3627
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3302": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3589,
        3599
      ],
      "op": "CALLER",
      "path": "8"
    },
    "3303": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3589,
        3599
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3304": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3609,
        3613
      ],
      "op": "ADDRESS",
      "path": "8"
    },
    "3305": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3609,
        3613
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3306": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3616,
        3626
      ],
      "op": "DUP9",
      "path": "8"
    },
    "3307": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3616,
        3626
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3308": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3571,
        3627
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "3310": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3571,
        3627
      ],
      "op": "ADD",
      "path": "8"
    },
    "3311": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        3571,
        3627
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x1016"
    },
    "3315": {
      "branch": 70,
      "fn": "LeveragedTrading.issueBtcUp",
      "jump": "i",
      "offset": [
        3571,
        3627
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3316": {
      "offset": [
        2352,
        2389
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3317": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        2352,
        2389
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x8"
    },
    "3319": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        2352,
        2389
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3320": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        2352,
        2389
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xFF"
    },
    "3322": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        2352,
        2389
      ],
      "op": "AND",
      "path": "8"
    },
    "3323": {
      "fn": "LeveragedTrading.issueBtcUp",
      "offset": [
        2352,
        2389
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3324": {
      "fn": "LeveragedTrading.issueBtcUp",
      "jump": "o",
      "offset": [
        2352,
        2389
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3325": {
      "fn": "LeveragedTrading.getRebalanceAmount",
      "offset": [
        6464,
        6689
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3326": {
      "fn": "LeveragedTrading.getRebalanceAmount",
      "offset": [
        6533,
        6540
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3328": {
      "fn": "LeveragedTrading.getRebalanceAmount",
      "offset": [
        6552,
        6569
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3329": {
      "fn": "LeveragedTrading.getRebalanceAmount",
      "offset": [
        6572,
        6594
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xD0B"
    },
    "3333": {
      "fn": "LeveragedTrading.getRebalanceAmount",
      "offset": [
        6585,
        6593
      ],
      "op": "DUP4",
      "path": "8"
    },
    "3334": {
      "fn": "LeveragedTrading.getRebalanceAmount",
      "offset": [
        6572,
        6584
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xDF7"
    },
    "3338": {
      "fn": "LeveragedTrading.getRebalanceAmount",
      "jump": "i",
      "offset": [
        6572,
        6594
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3339": {
      "fn": "LeveragedTrading.getRebalanceAmount",
      "offset": [
        6572,
        6594
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3340": {
      "fn": "LeveragedTrading.getRebalanceAmount",
      "offset": [
        6552,
        6594
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3341": {
      "fn": "LeveragedTrading.getRebalanceAmount",
      "offset": [
        6552,
        6594
      ],
      "op": "POP",
      "path": "8"
    },
    "3342": {
      "fn": "LeveragedTrading.getRebalanceAmount",
      "offset": [
        6612,
        6682
      ],
      "op": "PUSH3",
      "path": "8",
      "statement": 47,
      "value": "0xD3B"
    },
    "3346": {
      "fn": "LeveragedTrading.getRebalanceAmount",
      "offset": [
        6674,
        6681
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xF4240"
    },
    "3350": {
      "fn": "LeveragedTrading.getRebalanceAmount",
      "offset": [
        6612,
        6669
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x522"
    },
    "3354": {
      "fn": "LeveragedTrading.getRebalanceAmount",
      "offset": [
        6656,
        6668
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xD24"
    },
    "3358": {
      "fn": "LeveragedTrading.getRebalanceAmount",
      "offset": [
        6658,
        6667
      ],
      "op": "DUP5",
      "path": "8"
    },
    "3359": {
      "fn": "LeveragedTrading.getRebalanceAmount",
      "offset": [
        6656,
        6657
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xE61"
    },
    "3363": {
      "fn": "LeveragedTrading.getRebalanceAmount",
      "jump": "i",
      "offset": [
        6656,
        6668
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3364": {
      "fn": "LeveragedTrading.getRebalanceAmount",
      "offset": [
        6656,
        6668
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3365": {
      "fn": "LeveragedTrading.getRebalanceAmount",
      "offset": [
        6612,
        6651
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xD34"
    },
    "3369": {
      "fn": "LeveragedTrading.getRebalanceAmount",
      "offset": [
        6616,
        6631
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "3371": {
      "fn": "LeveragedTrading.getRebalanceAmount",
      "offset": [
        6616,
        6631
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3372": {
      "fn": "LeveragedTrading.getRebalanceAmount",
      "offset": [
        6633,
        6650
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "3374": {
      "fn": "LeveragedTrading.getRebalanceAmount",
      "offset": [
        6633,
        6650
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3375": {
      "fn": "LeveragedTrading.getRebalanceAmount",
      "offset": [
        6612,
        6615
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xEE1"
    },
    "3379": {
      "fn": "LeveragedTrading.getRebalanceAmount",
      "jump": "i",
      "offset": [
        6612,
        6651
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3380": {
      "fn": "LeveragedTrading.getRebalanceAmount",
      "offset": [
        6612,
        6651
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3381": {
      "fn": "LeveragedTrading.getRebalanceAmount",
      "offset": [
        6612,
        6655
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3382": {
      "fn": "LeveragedTrading.getRebalanceAmount",
      "offset": [
        6612,
        6655
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xDDB"
    },
    "3386": {
      "fn": "LeveragedTrading.getRebalanceAmount",
      "jump": "i",
      "offset": [
        6612,
        6669
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3387": {
      "fn": "LeveragedTrading.getRebalanceAmount",
      "offset": [
        6612,
        6682
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3388": {
      "fn": "LeveragedTrading.getRebalanceAmount",
      "offset": [
        6605,
        6682
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3389": {
      "fn": "LeveragedTrading.getRebalanceAmount",
      "offset": [
        6605,
        6682
      ],
      "op": "POP",
      "path": "8"
    },
    "3390": {
      "fn": "LeveragedTrading.getRebalanceAmount",
      "offset": [
        6605,
        6682
      ],
      "op": "POP",
      "path": "8"
    },
    "3391": {
      "fn": "LeveragedTrading.getRebalanceAmount",
      "offset": [
        6464,
        6689
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3392": {
      "fn": "LeveragedTrading.getRebalanceAmount",
      "offset": [
        6464,
        6689
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3393": {
      "fn": "LeveragedTrading.getRebalanceAmount",
      "offset": [
        6464,
        6689
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3394": {
      "fn": "LeveragedTrading.getRebalanceAmount",
      "offset": [
        6464,
        6689
      ],
      "op": "POP",
      "path": "8"
    },
    "3395": {
      "fn": "LeveragedTrading.getRebalanceAmount",
      "jump": "o",
      "offset": [
        6464,
        6689
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3396": {
      "fn": "LeveragedTrading.getSign",
      "offset": [
        6265,
        6457
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3397": {
      "fn": "LeveragedTrading.getSign",
      "offset": [
        6323,
        6329
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3399": {
      "fn": "LeveragedTrading.getSign",
      "offset": [
        6356,
        6368
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x7"
    },
    "3401": {
      "fn": "LeveragedTrading.getSign",
      "offset": [
        6356,
        6368
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3402": {
      "fn": "LeveragedTrading.getSign",
      "offset": [
        6345,
        6353
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3403": {
      "branch": 71,
      "fn": "LeveragedTrading.getSign",
      "offset": [
        6345,
        6368
      ],
      "op": "GT",
      "path": "8"
    },
    "3404": {
      "fn": "LeveragedTrading.getSign",
      "offset": [
        6341,
        6451
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "3405": {
      "fn": "LeveragedTrading.getSign",
      "offset": [
        6341,
        6451
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xD5A"
    },
    "3409": {
      "branch": 71,
      "fn": "LeveragedTrading.getSign",
      "offset": [
        6341,
        6451
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3410": {
      "op": "POP"
    },
    "3411": {
      "fn": "LeveragedTrading.getSign",
      "offset": [
        6391,
        6392
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 48,
      "value": "0x1"
    },
    "3413": {
      "fn": "LeveragedTrading.getSign",
      "offset": [
        6384,
        6392
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xD3F"
    },
    "3417": {
      "fn": "LeveragedTrading.getSign",
      "offset": [
        6384,
        6392
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3418": {
      "fn": "LeveragedTrading.getSign",
      "offset": [
        6341,
        6451
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3419": {
      "op": "POP"
    },
    "3420": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3422": {
      "op": "NOT"
    },
    "3423": {
      "fn": "LeveragedTrading.getSign",
      "offset": [
        6431,
        6440
      ],
      "op": "PUSH3",
      "path": "8",
      "statement": 49,
      "value": "0xD3F"
    },
    "3427": {
      "fn": "LeveragedTrading.getSign",
      "offset": [
        6431,
        6440
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3428": {
      "fn": "SafeMath.add",
      "offset": [
        2672,
        2768
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3429": {
      "fn": "SafeMath.add",
      "offset": [
        2730,
        2737
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3431": {
      "fn": "SafeMath.add",
      "offset": [
        2756,
        2761
      ],
      "op": "PUSH3",
      "path": "6",
      "statement": 50,
      "value": "0xD72"
    },
    "3435": {
      "fn": "SafeMath.add",
      "offset": [
        2760,
        2761
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3436": {
      "fn": "SafeMath.add",
      "offset": [
        2756,
        2757
      ],
      "op": "DUP5",
      "path": "6"
    },
    "3437": {
      "fn": "SafeMath.add",
      "offset": [
        2756,
        2761
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0x1189"
    },
    "3441": {
      "fn": "SafeMath.add",
      "jump": "i",
      "offset": [
        2756,
        2761
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3442": {
      "fn": "SafeMath.add",
      "offset": [
        2756,
        2761
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3443": {
      "fn": "SafeMath.add",
      "offset": [
        2749,
        2761
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "3444": {
      "fn": "SafeMath.add",
      "offset": [
        2672,
        2768
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "3445": {
      "op": "POP"
    },
    "3446": {
      "op": "POP"
    },
    "3447": {
      "op": "POP"
    },
    "3448": {
      "fn": "SafeMath.add",
      "jump": "o",
      "offset": [
        2672,
        2768
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3449": {
      "fn": "SafeMath.sub",
      "offset": [
        3039,
        3135
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3450": {
      "fn": "SafeMath.sub",
      "offset": [
        3097,
        3104
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3452": {
      "fn": "SafeMath.sub",
      "offset": [
        3123,
        3128
      ],
      "op": "PUSH3",
      "path": "6",
      "statement": 51,
      "value": "0xD72"
    },
    "3456": {
      "fn": "SafeMath.sub",
      "offset": [
        3127,
        3128
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3457": {
      "fn": "SafeMath.sub",
      "offset": [
        3123,
        3124
      ],
      "op": "DUP5",
      "path": "6"
    },
    "3458": {
      "fn": "SafeMath.sub",
      "offset": [
        3123,
        3128
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0x131F"
    },
    "3462": {
      "fn": "SafeMath.sub",
      "jump": "i",
      "offset": [
        3123,
        3128
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3463": {
      "fn": "Context._msgSender",
      "offset": [
        586,
        682
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3464": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "5",
      "statement": 52
    },
    "3465": {
      "fn": "Context._msgSender",
      "offset": [
        586,
        682
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3466": {
      "fn": "Context._msgSender",
      "jump": "o",
      "offset": [
        586,
        682
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3467": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3468": {
      "fn": "Ownable._setOwner",
      "offset": [
        2096,
        2112
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3470": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3471": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3472": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3474": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3476": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3478": {
      "op": "SHL"
    },
    "3479": {
      "op": "SUB"
    },
    "3480": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 53
    },
    "3481": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3482": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "AND",
      "path": "0"
    },
    "3483": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3485": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3487": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3489": {
      "op": "SHL"
    },
    "3490": {
      "op": "SUB"
    },
    "3491": {
      "op": "NOT"
    },
    "3492": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3493": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "AND",
      "path": "0"
    },
    "3494": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3495": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "OR",
      "path": "0"
    },
    "3496": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3497": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3498": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 54,
      "value": "0x40"
    },
    "3500": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3501": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3502": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3503": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3504": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "AND",
      "path": "0"
    },
    "3505": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3506": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3507": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3508": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "3541": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3542": {
      "fn": "Ownable._setOwner",
      "offset": [
        2096,
        2112
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3543": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "LOG3",
      "path": "0"
    },
    "3544": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "POP",
      "path": "0"
    },
    "3545": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "POP",
      "path": "0"
    },
    "3546": {
      "fn": "Ownable._setOwner",
      "jump": "o",
      "offset": [
        2041,
        2210
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3547": {
      "fn": "SafeMath.mul",
      "offset": [
        3382,
        3478
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3548": {
      "fn": "SafeMath.mul",
      "offset": [
        3440,
        3447
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3550": {
      "fn": "SafeMath.mul",
      "offset": [
        3466,
        3471
      ],
      "op": "PUSH3",
      "path": "6",
      "statement": 55,
      "value": "0xD72"
    },
    "3554": {
      "fn": "SafeMath.mul",
      "offset": [
        3470,
        3471
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3555": {
      "fn": "SafeMath.mul",
      "offset": [
        3466,
        3467
      ],
      "op": "DUP5",
      "path": "6"
    },
    "3556": {
      "fn": "SafeMath.mul",
      "offset": [
        3466,
        3471
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0x12FD"
    },
    "3560": {
      "fn": "SafeMath.mul",
      "jump": "i",
      "offset": [
        3466,
        3471
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3561": {
      "fn": "SafeMath.div",
      "offset": [
        3767,
        3863
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3562": {
      "fn": "SafeMath.div",
      "offset": [
        3825,
        3832
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3564": {
      "fn": "SafeMath.div",
      "offset": [
        3851,
        3856
      ],
      "op": "PUSH3",
      "path": "6",
      "statement": 56,
      "value": "0xD72"
    },
    "3568": {
      "fn": "SafeMath.div",
      "offset": [
        3855,
        3856
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3569": {
      "fn": "SafeMath.div",
      "offset": [
        3851,
        3852
      ],
      "op": "DUP5",
      "path": "6"
    },
    "3570": {
      "fn": "SafeMath.div",
      "offset": [
        3851,
        3856
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0x11A4"
    },
    "3574": {
      "fn": "SafeMath.div",
      "jump": "i",
      "offset": [
        3851,
        3856
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3575": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        7820,
        8138
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3576": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        7883,
        7890
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3578": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        7934,
        7946
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x7"
    },
    "3580": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        7934,
        7946
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3581": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        7923,
        7931
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3582": {
      "branch": 72,
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        7923,
        7946
      ],
      "op": "GT",
      "path": "8"
    },
    "3583": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        7919,
        8131
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "3584": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        7919,
        8131
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xE3A"
    },
    "3588": {
      "branch": 72,
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        7919,
        8131
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3589": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        7969,
        8021
      ],
      "op": "PUSH3",
      "path": "8",
      "statement": 57,
      "value": "0xE32"
    },
    "3593": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        8013,
        8020
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xF4240"
    },
    "3597": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        7969,
        8008
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xE2B"
    },
    "3601": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        7995,
        8007
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x7"
    },
    "3603": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        7995,
        8007
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3604": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        7969,
        7990
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x522"
    },
    "3608": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        7982,
        7989
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xF4240"
    },
    "3612": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        7969,
        7977
      ],
      "op": "DUP8",
      "path": "8"
    },
    "3613": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        7969,
        7981
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xDDB"
    },
    "3617": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        7969,
        7981
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3618": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        7969,
        7990
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3619": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        7969,
        7990
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3620": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        7969,
        7990
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xFFFFFFFF"
    },
    "3625": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        7969,
        7990
      ],
      "op": "AND",
      "path": "8"
    },
    "3626": {
      "fn": "LeveragedTrading.getPriceDiff",
      "jump": "i",
      "offset": [
        7969,
        7990
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3627": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        7969,
        8008
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3628": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        7969,
        8012
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3629": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        7969,
        8012
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xD79"
    },
    "3633": {
      "fn": "LeveragedTrading.getPriceDiff",
      "jump": "i",
      "offset": [
        7969,
        8021
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3634": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        7969,
        8021
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3635": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        7962,
        8021
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3636": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        7962,
        8021
      ],
      "op": "POP",
      "path": "8"
    },
    "3637": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        7962,
        8021
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xD3F"
    },
    "3641": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        7962,
        8021
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3642": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        7919,
        8131
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3643": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        8068,
        8120
      ],
      "op": "PUSH3",
      "path": "8",
      "statement": 58,
      "value": "0xE32"
    },
    "3647": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        8112,
        8119
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xF4240"
    },
    "3651": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        8068,
        8107
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xE2B"
    },
    "3655": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        8098,
        8106
      ],
      "op": "DUP5",
      "path": "8"
    },
    "3656": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        8068,
        8093
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x522"
    },
    "3660": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        8085,
        8092
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xF4240"
    },
    "3664": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        8068,
        8080
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x7"
    },
    "3666": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        8068,
        8080
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3667": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        8068,
        8084
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xDDB"
    },
    "3671": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        8068,
        8084
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3672": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        8068,
        8093
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3673": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        8068,
        8093
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3674": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        8068,
        8093
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xFFFFFFFF"
    },
    "3679": {
      "fn": "LeveragedTrading.getPriceDiff",
      "offset": [
        8068,
        8093
      ],
      "op": "AND",
      "path": "8"
    },
    "3680": {
      "fn": "LeveragedTrading.getPriceDiff",
      "jump": "i",
      "offset": [
        8068,
        8093
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3681": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7589,
        7814
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3682": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7634,
        7641
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3684": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7634,
        7641
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3685": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7721,
        7726
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xE71"
    },
    "3689": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7725,
        7726
      ],
      "op": "DUP4",
      "path": "8"
    },
    "3690": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7721,
        7722
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "3692": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7721,
        7726
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x12FD"
    },
    "3696": {
      "fn": "LeveragedTrading.L",
      "jump": "i",
      "offset": [
        7721,
        7726
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3697": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7721,
        7726
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3698": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7709,
        7716
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xF4240"
    },
    "3702": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7700,
        7706
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xE82"
    },
    "3706": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7705,
        7706
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "3708": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7700,
        7701
      ],
      "op": "DUP7",
      "path": "8"
    },
    "3709": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7700,
        7706
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x1212"
    },
    "3713": {
      "fn": "LeveragedTrading.L",
      "jump": "i",
      "offset": [
        7700,
        7706
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3714": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7700,
        7706
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3715": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7700,
        7716
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xE8E"
    },
    "3719": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7700,
        7716
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3720": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7700,
        7716
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3721": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7700,
        7716
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x11A4"
    },
    "3725": {
      "fn": "LeveragedTrading.L",
      "jump": "i",
      "offset": [
        7700,
        7716
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3726": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7700,
        7716
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3727": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7695,
        7717
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xE9B"
    },
    "3731": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7695,
        7717
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3732": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7695,
        7696
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x9"
    },
    "3734": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7695,
        7717
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x12FD"
    },
    "3738": {
      "fn": "LeveragedTrading.L",
      "jump": "i",
      "offset": [
        7695,
        7717
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3739": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7695,
        7717
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3740": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7695,
        7726
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xEA7"
    },
    "3744": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7695,
        7726
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3745": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7695,
        7726
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3746": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7695,
        7726
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x1189"
    },
    "3750": {
      "fn": "LeveragedTrading.L",
      "jump": "i",
      "offset": [
        7695,
        7726
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3751": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7695,
        7726
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3752": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7695,
        7736
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xEB6"
    },
    "3756": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7695,
        7736
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3757": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7729,
        7736
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xF4240"
    },
    "3761": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7695,
        7736
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x1189"
    },
    "3765": {
      "fn": "LeveragedTrading.L",
      "jump": "i",
      "offset": [
        7695,
        7736
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3766": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7695,
        7736
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3767": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7679,
        7736
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3768": {
      "op": "POP"
    },
    "3769": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7760,
        7768
      ],
      "op": "PUSH5",
      "path": "8",
      "value": "0xE8D4A51000"
    },
    "3775": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7796,
        7807
      ],
      "op": "PUSH3",
      "path": "8",
      "statement": 59,
      "value": "0xECA"
    },
    "3779": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7679,
        7736
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3780": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7760,
        7768
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3781": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7796,
        7807
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x11A4"
    },
    "3785": {
      "fn": "LeveragedTrading.L",
      "jump": "i",
      "offset": [
        7796,
        7807
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3786": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7796,
        7807
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3787": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7786,
        7807
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xED9"
    },
    "3791": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7786,
        7807
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3792": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7786,
        7793
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xF4240"
    },
    "3796": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7786,
        7807
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x131F"
    },
    "3800": {
      "fn": "LeveragedTrading.L",
      "jump": "i",
      "offset": [
        7786,
        7807
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3801": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7786,
        7807
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3802": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7779,
        7807
      ],
      "op": "SWAP5",
      "path": "8"
    },
    "3803": {
      "fn": "LeveragedTrading.L",
      "offset": [
        7589,
        7814
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "3804": {
      "op": "POP"
    },
    "3805": {
      "op": "POP"
    },
    "3806": {
      "op": "POP"
    },
    "3807": {
      "op": "POP"
    },
    "3808": {
      "fn": "LeveragedTrading.L",
      "jump": "o",
      "offset": [
        7589,
        7814
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3809": {
      "fn": "LeveragedTrading.min",
      "offset": [
        7478,
        7583
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3810": {
      "fn": "LeveragedTrading.min",
      "offset": [
        7536,
        7543
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3812": {
      "fn": "LeveragedTrading.min",
      "offset": [
        7567,
        7568
      ],
      "op": "DUP2",
      "path": "8",
      "statement": 60
    },
    "3813": {
      "fn": "LeveragedTrading.min",
      "offset": [
        7562,
        7563
      ],
      "op": "DUP4",
      "path": "8"
    },
    "3814": {
      "fn": "LeveragedTrading.min",
      "offset": [
        7562,
        7568
      ],
      "op": "GT",
      "path": "8"
    },
    "3815": {
      "branch": 73,
      "fn": "LeveragedTrading.min",
      "offset": [
        7562,
        7568
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "3816": {
      "fn": "LeveragedTrading.min",
      "offset": [
        7562,
        7576
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xEF3"
    },
    "3820": {
      "branch": 73,
      "fn": "LeveragedTrading.min",
      "offset": [
        7562,
        7576
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3821": {
      "fn": "LeveragedTrading.min",
      "offset": [
        7575,
        7576
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3822": {
      "fn": "LeveragedTrading.min",
      "offset": [
        7562,
        7576
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xD72"
    },
    "3826": {
      "fn": "LeveragedTrading.min",
      "offset": [
        7562,
        7576
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3827": {
      "fn": "LeveragedTrading.min",
      "offset": [
        7562,
        7576
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3828": {
      "op": "POP"
    },
    "3829": {
      "fn": "LeveragedTrading.min",
      "offset": [
        7571,
        7572
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3830": {
      "fn": "LeveragedTrading.min",
      "offset": [
        7571,
        7572
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3831": {
      "fn": "LeveragedTrading.min",
      "offset": [
        7478,
        7583
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3832": {
      "op": "POP"
    },
    "3833": {
      "fn": "LeveragedTrading.min",
      "jump": "o",
      "offset": [
        7478,
        7583
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3834": {
      "op": "JUMPDEST"
    },
    "3835": {
      "op": "PUSH2",
      "value": "0xFA6"
    },
    "3838": {
      "op": "DUP1"
    },
    "3839": {
      "op": "PUSH3",
      "value": "0x1350"
    },
    "3843": {
      "op": "DUP4"
    },
    "3844": {
      "op": "CODECOPY"
    },
    "3845": {
      "op": "ADD"
    },
    "3846": {
      "op": "SWAP1"
    },
    "3847": {
      "jump": "o",
      "op": "JUMP"
    },
    "3848": {
      "op": "JUMPDEST"
    },
    "3849": {
      "op": "PUSH2",
      "value": "0xFAA"
    },
    "3852": {
      "op": "DUP1"
    },
    "3853": {
      "op": "PUSH3",
      "value": "0x22F6"
    },
    "3857": {
      "op": "DUP4"
    },
    "3858": {
      "op": "CODECOPY"
    },
    "3859": {
      "op": "ADD"
    },
    "3860": {
      "op": "SWAP1"
    },
    "3861": {
      "jump": "o",
      "op": "JUMP"
    },
    "3862": {
      "op": "JUMPDEST"
    },
    "3863": {
      "op": "DUP1"
    },
    "3864": {
      "op": "MLOAD"
    },
    "3865": {
      "op": "PUSH10",
      "value": "0xFFFFFFFFFFFFFFFFFFFF"
    },
    "3876": {
      "op": "DUP2"
    },
    "3877": {
      "op": "AND"
    },
    "3878": {
      "op": "DUP2"
    },
    "3879": {
      "op": "EQ"
    },
    "3880": {
      "op": "PUSH3",
      "value": "0xD3F"
    },
    "3884": {
      "op": "JUMPI"
    },
    "3885": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3887": {
      "op": "DUP1"
    },
    "3888": {
      "op": "REVERT"
    },
    "3889": {
      "op": "JUMPDEST"
    },
    "3890": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3892": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3894": {
      "op": "DUP3"
    },
    "3895": {
      "op": "DUP5"
    },
    "3896": {
      "op": "SUB"
    },
    "3897": {
      "op": "SLT"
    },
    "3898": {
      "op": "ISZERO"
    },
    "3899": {
      "op": "PUSH3",
      "value": "0xF43"
    },
    "3903": {
      "op": "JUMPI"
    },
    "3904": {
      "op": "DUP1"
    },
    "3905": {
      "op": "DUP2"
    },
    "3906": {
      "op": "REVERT"
    },
    "3907": {
      "op": "JUMPDEST"
    },
    "3908": {
      "op": "DUP2"
    },
    "3909": {
      "op": "CALLDATALOAD"
    },
    "3910": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3912": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3914": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3916": {
      "op": "SHL"
    },
    "3917": {
      "op": "SUB"
    },
    "3918": {
      "op": "DUP2"
    },
    "3919": {
      "op": "AND"
    },
    "3920": {
      "op": "DUP2"
    },
    "3921": {
      "op": "EQ"
    },
    "3922": {
      "op": "PUSH3",
      "value": "0xD72"
    },
    "3926": {
      "op": "JUMPI"
    },
    "3927": {
      "op": "DUP2"
    },
    "3928": {
      "op": "DUP3"
    },
    "3929": {
      "op": "REVERT"
    },
    "3930": {
      "op": "JUMPDEST"
    },
    "3931": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3933": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3935": {
      "op": "DUP3"
    },
    "3936": {
      "op": "DUP5"
    },
    "3937": {
      "op": "SUB"
    },
    "3938": {
      "op": "SLT"
    },
    "3939": {
      "op": "ISZERO"
    },
    "3940": {
      "op": "PUSH3",
      "value": "0xF6C"
    },
    "3944": {
      "op": "JUMPI"
    },
    "3945": {
      "op": "DUP1"
    },
    "3946": {
      "op": "DUP2"
    },
    "3947": {
      "op": "REVERT"
    },
    "3948": {
      "op": "JUMPDEST"
    },
    "3949": {
      "op": "DUP2"
    },
    "3950": {
      "op": "MLOAD"
    },
    "3951": {
      "op": "DUP1"
    },
    "3952": {
      "op": "ISZERO"
    },
    "3953": {
      "op": "ISZERO"
    },
    "3954": {
      "op": "DUP2"
    },
    "3955": {
      "op": "EQ"
    },
    "3956": {
      "op": "PUSH3",
      "value": "0xD72"
    },
    "3960": {
      "op": "JUMPI"
    },
    "3961": {
      "op": "DUP2"
    },
    "3962": {
      "op": "DUP3"
    },
    "3963": {
      "op": "REVERT"
    },
    "3964": {
      "op": "JUMPDEST"
    },
    "3965": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3967": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3969": {
      "op": "DUP3"
    },
    "3970": {
      "op": "DUP5"
    },
    "3971": {
      "op": "SUB"
    },
    "3972": {
      "op": "SLT"
    },
    "3973": {
      "op": "ISZERO"
    },
    "3974": {
      "op": "PUSH3",
      "value": "0xF8E"
    },
    "3978": {
      "op": "JUMPI"
    },
    "3979": {
      "op": "DUP1"
    },
    "3980": {
      "op": "DUP2"
    },
    "3981": {
      "op": "REVERT"
    },
    "3982": {
      "op": "JUMPDEST"
    },
    "3983": {
      "op": "POP"
    },
    "3984": {
      "op": "CALLDATALOAD"
    },
    "3985": {
      "op": "SWAP2"
    },
    "3986": {
      "op": "SWAP1"
    },
    "3987": {
      "op": "POP"
    },
    "3988": {
      "jump": "o",
      "op": "JUMP"
    },
    "3989": {
      "op": "JUMPDEST"
    },
    "3990": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3992": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3994": {
      "op": "DUP3"
    },
    "3995": {
      "op": "DUP5"
    },
    "3996": {
      "op": "SUB"
    },
    "3997": {
      "op": "SLT"
    },
    "3998": {
      "op": "ISZERO"
    },
    "3999": {
      "op": "PUSH3",
      "value": "0xFA7"
    },
    "4003": {
      "op": "JUMPI"
    },
    "4004": {
      "op": "DUP1"
    },
    "4005": {
      "op": "DUP2"
    },
    "4006": {
      "op": "REVERT"
    },
    "4007": {
      "op": "JUMPDEST"
    },
    "4008": {
      "op": "POP"
    },
    "4009": {
      "op": "MLOAD"
    },
    "4010": {
      "op": "SWAP2"
    },
    "4011": {
      "op": "SWAP1"
    },
    "4012": {
      "op": "POP"
    },
    "4013": {
      "jump": "o",
      "op": "JUMP"
    },
    "4014": {
      "op": "JUMPDEST"
    },
    "4015": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4017": {
      "op": "DUP1"
    },
    "4018": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4020": {
      "op": "DUP1"
    },
    "4021": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4023": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4025": {
      "op": "DUP7"
    },
    "4026": {
      "op": "DUP9"
    },
    "4027": {
      "op": "SUB"
    },
    "4028": {
      "op": "SLT"
    },
    "4029": {
      "op": "ISZERO"
    },
    "4030": {
      "op": "PUSH3",
      "value": "0xFC6"
    },
    "4034": {
      "op": "JUMPI"
    },
    "4035": {
      "op": "DUP1"
    },
    "4036": {
      "op": "DUP2"
    },
    "4037": {
      "op": "REVERT"
    },
    "4038": {
      "op": "JUMPDEST"
    },
    "4039": {
      "op": "PUSH3",
      "value": "0xFD1"
    },
    "4043": {
      "op": "DUP7"
    },
    "4044": {
      "op": "PUSH3",
      "value": "0xF16"
    },
    "4048": {
      "jump": "i",
      "op": "JUMP"
    },
    "4049": {
      "op": "JUMPDEST"
    },
    "4050": {
      "op": "SWAP5"
    },
    "4051": {
      "op": "POP"
    },
    "4052": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4054": {
      "op": "DUP7"
    },
    "4055": {
      "op": "ADD"
    },
    "4056": {
      "op": "MLOAD"
    },
    "4057": {
      "op": "SWAP4"
    },
    "4058": {
      "op": "POP"
    },
    "4059": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4061": {
      "op": "DUP7"
    },
    "4062": {
      "op": "ADD"
    },
    "4063": {
      "op": "MLOAD"
    },
    "4064": {
      "op": "SWAP3"
    },
    "4065": {
      "op": "POP"
    },
    "4066": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4068": {
      "op": "DUP7"
    },
    "4069": {
      "op": "ADD"
    },
    "4070": {
      "op": "MLOAD"
    },
    "4071": {
      "op": "SWAP2"
    },
    "4072": {
      "op": "POP"
    },
    "4073": {
      "op": "PUSH3",
      "value": "0xFF6"
    },
    "4077": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4079": {
      "op": "DUP8"
    },
    "4080": {
      "op": "ADD"
    },
    "4081": {
      "op": "PUSH3",
      "value": "0xF16"
    },
    "4085": {
      "jump": "i",
      "op": "JUMP"
    },
    "4086": {
      "op": "JUMPDEST"
    },
    "4087": {
      "op": "SWAP1"
    },
    "4088": {
      "op": "POP"
    },
    "4089": {
      "op": "SWAP3"
    },
    "4090": {
      "op": "SWAP6"
    },
    "4091": {
      "op": "POP"
    },
    "4092": {
      "op": "SWAP3"
    },
    "4093": {
      "op": "SWAP6"
    },
    "4094": {
      "op": "SWAP1"
    },
    "4095": {
      "op": "SWAP4"
    },
    "4096": {
      "op": "POP"
    },
    "4097": {
      "jump": "o",
      "op": "JUMP"
    },
    "4098": {
      "op": "JUMPDEST"
    },
    "4099": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4101": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4103": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4105": {
      "op": "SHL"
    },
    "4106": {
      "op": "SUB"
    },
    "4107": {
      "op": "SWAP2"
    },
    "4108": {
      "op": "SWAP1"
    },
    "4109": {
      "op": "SWAP2"
    },
    "4110": {
      "op": "AND"
    },
    "4111": {
      "op": "DUP2"
    },
    "4112": {
      "op": "MSTORE"
    },
    "4113": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4115": {
      "op": "ADD"
    },
    "4116": {
      "op": "SWAP1"
    },
    "4117": {
      "jump": "o",
      "op": "JUMP"
    },
    "4118": {
      "op": "JUMPDEST"
    },
    "4119": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4121": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4123": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4125": {
      "op": "SHL"
    },
    "4126": {
      "op": "SUB"
    },
    "4127": {
      "op": "SWAP4"
    },
    "4128": {
      "op": "DUP5"
    },
    "4129": {
      "op": "AND"
    },
    "4130": {
      "op": "DUP2"
    },
    "4131": {
      "op": "MSTORE"
    },
    "4132": {
      "op": "SWAP2"
    },
    "4133": {
      "op": "SWAP1"
    },
    "4134": {
      "op": "SWAP3"
    },
    "4135": {
      "op": "AND"
    },
    "4136": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4138": {
      "op": "DUP3"
    },
    "4139": {
      "op": "ADD"
    },
    "4140": {
      "op": "MSTORE"
    },
    "4141": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4143": {
      "op": "DUP2"
    },
    "4144": {
      "op": "ADD"
    },
    "4145": {
      "op": "SWAP2"
    },
    "4146": {
      "op": "SWAP1"
    },
    "4147": {
      "op": "SWAP2"
    },
    "4148": {
      "op": "MSTORE"
    },
    "4149": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4151": {
      "op": "ADD"
    },
    "4152": {
      "op": "SWAP1"
    },
    "4153": {
      "jump": "o",
      "op": "JUMP"
    },
    "4154": {
      "op": "JUMPDEST"
    },
    "4155": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4157": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4159": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4161": {
      "op": "SHL"
    },
    "4162": {
      "op": "SUB"
    },
    "4163": {
      "op": "SWAP3"
    },
    "4164": {
      "op": "SWAP1"
    },
    "4165": {
      "op": "SWAP3"
    },
    "4166": {
      "op": "AND"
    },
    "4167": {
      "op": "DUP3"
    },
    "4168": {
      "op": "MSTORE"
    },
    "4169": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4171": {
      "op": "DUP3"
    },
    "4172": {
      "op": "ADD"
    },
    "4173": {
      "op": "MSTORE"
    },
    "4174": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4176": {
      "op": "ADD"
    },
    "4177": {
      "op": "SWAP1"
    },
    "4178": {
      "jump": "o",
      "op": "JUMP"
    },
    "4179": {
      "op": "JUMPDEST"
    },
    "4180": {
      "op": "SWAP1"
    },
    "4181": {
      "op": "ISZERO"
    },
    "4182": {
      "op": "ISZERO"
    },
    "4183": {
      "op": "DUP2"
    },
    "4184": {
      "op": "MSTORE"
    },
    "4185": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4187": {
      "op": "ADD"
    },
    "4188": {
      "op": "SWAP1"
    },
    "4189": {
      "jump": "o",
      "op": "JUMP"
    },
    "4190": {
      "op": "JUMPDEST"
    },
    "4191": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4193": {
      "op": "DUP1"
    },
    "4194": {
      "op": "DUP3"
    },
    "4195": {
      "op": "MSTORE"
    },
    "4196": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "4198": {
      "op": "SWAP1"
    },
    "4199": {
      "op": "DUP3"
    },
    "4200": {
      "op": "ADD"
    },
    "4201": {
      "op": "MSTORE"
    },
    "4202": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "4235": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4237": {
      "op": "DUP3"
    },
    "4238": {
      "op": "ADD"
    },
    "4239": {
      "op": "MSTORE"
    },
    "4240": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "4247": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "4249": {
      "op": "SHL"
    },
    "4250": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4252": {
      "op": "DUP3"
    },
    "4253": {
      "op": "ADD"
    },
    "4254": {
      "op": "MSTORE"
    },
    "4255": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4257": {
      "op": "ADD"
    },
    "4258": {
      "op": "SWAP1"
    },
    "4259": {
      "jump": "o",
      "op": "JUMP"
    },
    "4260": {
      "op": "JUMPDEST"
    },
    "4261": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4263": {
      "op": "DUP1"
    },
    "4264": {
      "op": "DUP3"
    },
    "4265": {
      "op": "MSTORE"
    },
    "4266": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "4268": {
      "op": "SWAP1"
    },
    "4269": {
      "op": "DUP3"
    },
    "4270": {
      "op": "ADD"
    },
    "4271": {
      "op": "MSTORE"
    },
    "4272": {
      "op": "PUSH21",
      "value": "0x2AA9A221903A3930B739B332B9103330B4B632B217"
    },
    "4294": {
      "op": "PUSH1",
      "value": "0x59"
    },
    "4296": {
      "op": "SHL"
    },
    "4297": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4299": {
      "op": "DUP3"
    },
    "4300": {
      "op": "ADD"
    },
    "4301": {
      "op": "MSTORE"
    },
    "4302": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4304": {
      "op": "ADD"
    },
    "4305": {
      "op": "SWAP1"
    },
    "4306": {
      "jump": "o",
      "op": "JUMP"
    },
    "4307": {
      "op": "JUMPDEST"
    },
    "4308": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4310": {
      "op": "DUP1"
    },
    "4311": {
      "op": "DUP3"
    },
    "4312": {
      "op": "MSTORE"
    },
    "4313": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "4315": {
      "op": "SWAP1"
    },
    "4316": {
      "op": "DUP3"
    },
    "4317": {
      "op": "ADD"
    },
    "4318": {
      "op": "MSTORE"
    },
    "4319": {
      "op": "PUSH32",
      "value": "0x54686520706F6F6C20776173206E6F7420696E697469616C697A65642E000000"
    },
    "4352": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4354": {
      "op": "DUP3"
    },
    "4355": {
      "op": "ADD"
    },
    "4356": {
      "op": "MSTORE"
    },
    "4357": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4359": {
      "op": "ADD"
    },
    "4360": {
      "op": "SWAP1"
    },
    "4361": {
      "jump": "o",
      "op": "JUMP"
    },
    "4362": {
      "op": "JUMPDEST"
    },
    "4363": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4365": {
      "op": "DUP1"
    },
    "4366": {
      "op": "DUP3"
    },
    "4367": {
      "op": "MSTORE"
    },
    "4368": {
      "op": "DUP2"
    },
    "4369": {
      "op": "DUP2"
    },
    "4370": {
      "op": "ADD"
    },
    "4371": {
      "op": "MSTORE"
    },
    "4372": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "4405": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4407": {
      "op": "DUP3"
    },
    "4408": {
      "op": "ADD"
    },
    "4409": {
      "op": "MSTORE"
    },
    "4410": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4412": {
      "op": "ADD"
    },
    "4413": {
      "op": "SWAP1"
    },
    "4414": {
      "jump": "o",
      "op": "JUMP"
    },
    "4415": {
      "op": "JUMPDEST"
    },
    "4416": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4418": {
      "op": "DUP1"
    },
    "4419": {
      "op": "DUP3"
    },
    "4420": {
      "op": "MSTORE"
    },
    "4421": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "4423": {
      "op": "SWAP1"
    },
    "4424": {
      "op": "DUP3"
    },
    "4425": {
      "op": "ADD"
    },
    "4426": {
      "op": "MSTORE"
    },
    "4427": {
      "op": "PUSH32",
      "value": "0x54686520706F6F6C2077617320616C726561647920696E697469616C697A6564"
    },
    "4460": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4462": {
      "op": "DUP3"
    },
    "4463": {
      "op": "ADD"
    },
    "4464": {
      "op": "MSTORE"
    },
    "4465": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "4467": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "4469": {
      "op": "SHL"
    },
    "4470": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4472": {
      "op": "DUP3"
    },
    "4473": {
      "op": "ADD"
    },
    "4474": {
      "op": "MSTORE"
    },
    "4475": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4477": {
      "op": "ADD"
    },
    "4478": {
      "op": "SWAP1"
    },
    "4479": {
      "jump": "o",
      "op": "JUMP"
    },
    "4480": {
      "op": "JUMPDEST"
    },
    "4481": {
      "op": "SWAP1"
    },
    "4482": {
      "op": "DUP2"
    },
    "4483": {
      "op": "MSTORE"
    },
    "4484": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4486": {
      "op": "ADD"
    },
    "4487": {
      "op": "SWAP1"
    },
    "4488": {
      "jump": "o",
      "op": "JUMP"
    },
    "4489": {
      "op": "JUMPDEST"
    },
    "4490": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4492": {
      "op": "DUP3"
    },
    "4493": {
      "op": "NOT"
    },
    "4494": {
      "op": "DUP3"
    },
    "4495": {
      "op": "GT"
    },
    "4496": {
      "op": "ISZERO"
    },
    "4497": {
      "op": "PUSH3",
      "value": "0x119F"
    },
    "4501": {
      "op": "JUMPI"
    },
    "4502": {
      "op": "PUSH3",
      "value": "0x119F"
    },
    "4506": {
      "op": "PUSH3",
      "value": "0x1339"
    },
    "4510": {
      "jump": "i",
      "op": "JUMP"
    },
    "4511": {
      "op": "JUMPDEST"
    },
    "4512": {
      "op": "POP"
    },
    "4513": {
      "op": "ADD"
    },
    "4514": {
      "op": "SWAP1"
    },
    "4515": {
      "jump": "o",
      "op": "JUMP"
    },
    "4516": {
      "op": "JUMPDEST"
    },
    "4517": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4519": {
      "op": "DUP3"
    },
    "4520": {
      "op": "PUSH3",
      "value": "0x11C0"
    },
    "4524": {
      "op": "JUMPI"
    },
    "4525": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4530": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4532": {
      "op": "SHL"
    },
    "4533": {
      "op": "DUP2"
    },
    "4534": {
      "op": "MSTORE"
    },
    "4535": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "4537": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4539": {
      "op": "MSTORE"
    },
    "4540": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4542": {
      "op": "DUP2"
    },
    "4543": {
      "op": "REVERT"
    },
    "4544": {
      "op": "JUMPDEST"
    },
    "4545": {
      "op": "POP"
    },
    "4546": {
      "op": "DIV"
    },
    "4547": {
      "op": "SWAP1"
    },
    "4548": {
      "jump": "o",
      "op": "JUMP"
    },
    "4549": {
      "op": "JUMPDEST"
    },
    "4550": {
      "op": "DUP1"
    },
    "4551": {
      "op": "DUP3"
    },
    "4552": {
      "op": "JUMPDEST"
    },
    "4553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4555": {
      "op": "DUP1"
    },
    "4556": {
      "op": "DUP7"
    },
    "4557": {
      "op": "GT"
    },
    "4558": {
      "op": "PUSH3",
      "value": "0x11D9"
    },
    "4562": {
      "op": "JUMPI"
    },
    "4563": {
      "op": "POP"
    },
    "4564": {
      "op": "PUSH3",
      "value": "0x1209"
    },
    "4568": {
      "op": "JUMP"
    },
    "4569": {
      "op": "JUMPDEST"
    },
    "4570": {
      "op": "DUP2"
    },
    "4571": {
      "op": "DUP8"
    },
    "4572": {
      "op": "DIV"
    },
    "4573": {
      "op": "DUP3"
    },
    "4574": {
      "op": "GT"
    },
    "4575": {
      "op": "ISZERO"
    },
    "4576": {
      "op": "PUSH3",
      "value": "0x11EE"
    },
    "4580": {
      "op": "JUMPI"
    },
    "4581": {
      "op": "PUSH3",
      "value": "0x11EE"
    },
    "4585": {
      "op": "PUSH3",
      "value": "0x1339"
    },
    "4589": {
      "jump": "i",
      "op": "JUMP"
    },
    "4590": {
      "op": "JUMPDEST"
    },
    "4591": {
      "op": "DUP1"
    },
    "4592": {
      "op": "DUP7"
    },
    "4593": {
      "op": "AND"
    },
    "4594": {
      "op": "ISZERO"
    },
    "4595": {
      "op": "PUSH3",
      "value": "0x11FC"
    },
    "4599": {
      "op": "JUMPI"
    },
    "4600": {
      "op": "SWAP2"
    },
    "4601": {
      "op": "DUP2"
    },
    "4602": {
      "op": "MUL"
    },
    "4603": {
      "op": "SWAP2"
    },
    "4604": {
      "op": "JUMPDEST"
    },
    "4605": {
      "op": "SWAP5"
    },
    "4606": {
      "op": "SWAP1"
    },
    "4607": {
      "op": "SWAP5"
    },
    "4608": {
      "op": "SHR"
    },
    "4609": {
      "op": "SWAP4"
    },
    "4610": {
      "op": "DUP1"
    },
    "4611": {
      "op": "MUL"
    },
    "4612": {
      "op": "PUSH3",
      "value": "0x11C8"
    },
    "4616": {
      "op": "JUMP"
    },
    "4617": {
      "op": "JUMPDEST"
    },
    "4618": {
      "op": "SWAP5"
    },
    "4619": {
      "op": "POP"
    },
    "4620": {
      "op": "SWAP5"
    },
    "4621": {
      "op": "SWAP3"
    },
    "4622": {
      "op": "POP"
    },
    "4623": {
      "op": "POP"
    },
    "4624": {
      "op": "POP"
    },
    "4625": {
      "jump": "o",
      "op": "JUMP"
    },
    "4626": {
      "op": "JUMPDEST"
    },
    "4627": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4629": {
      "op": "PUSH3",
      "value": "0xD72"
    },
    "4633": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4635": {
      "op": "NOT"
    },
    "4636": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4638": {
      "op": "DUP6"
    },
    "4639": {
      "op": "AND"
    },
    "4640": {
      "op": "DUP5"
    },
    "4641": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4643": {
      "op": "DUP3"
    },
    "4644": {
      "op": "PUSH3",
      "value": "0x1231"
    },
    "4648": {
      "op": "JUMPI"
    },
    "4649": {
      "op": "POP"
    },
    "4650": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4652": {
      "op": "PUSH3",
      "value": "0xD72"
    },
    "4656": {
      "op": "JUMP"
    },
    "4657": {
      "op": "JUMPDEST"
    },
    "4658": {
      "op": "DUP2"
    },
    "4659": {
      "op": "PUSH3",
      "value": "0x1240"
    },
    "4663": {
      "op": "JUMPI"
    },
    "4664": {
      "op": "POP"
    },
    "4665": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4667": {
      "op": "PUSH3",
      "value": "0xD72"
    },
    "4671": {
      "op": "JUMP"
    },
    "4672": {
      "op": "JUMPDEST"
    },
    "4673": {
      "op": "DUP2"
    },
    "4674": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4676": {
      "op": "DUP2"
    },
    "4677": {
      "op": "EQ"
    },
    "4678": {
      "op": "PUSH3",
      "value": "0x1259"
    },
    "4682": {
      "op": "JUMPI"
    },
    "4683": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "4685": {
      "op": "DUP2"
    },
    "4686": {
      "op": "EQ"
    },
    "4687": {
      "op": "PUSH3",
      "value": "0x1264"
    },
    "4691": {
      "op": "JUMPI"
    },
    "4692": {
      "op": "PUSH3",
      "value": "0x1298"
    },
    "4696": {
      "op": "JUMP"
    },
    "4697": {
      "op": "JUMPDEST"
    },
    "4698": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4700": {
      "op": "SWAP2"
    },
    "4701": {
      "op": "POP"
    },
    "4702": {
      "op": "POP"
    },
    "4703": {
      "op": "PUSH3",
      "value": "0xD72"
    },
    "4707": {
      "op": "JUMP"
    },
    "4708": {
      "op": "JUMPDEST"
    },
    "4709": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4711": {
      "op": "DUP5"
    },
    "4712": {
      "op": "GT"
    },
    "4713": {
      "op": "ISZERO"
    },
    "4714": {
      "op": "PUSH3",
      "value": "0x1278"
    },
    "4718": {
      "op": "JUMPI"
    },
    "4719": {
      "op": "PUSH3",
      "value": "0x1278"
    },
    "4723": {
      "op": "PUSH3",
      "value": "0x1339"
    },
    "4727": {
      "jump": "i",
      "op": "JUMP"
    },
    "4728": {
      "op": "JUMPDEST"
    },
    "4729": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4731": {
      "op": "DUP5"
    },
    "4732": {
      "op": "SHL"
    },
    "4733": {
      "op": "SWAP2"
    },
    "4734": {
      "op": "POP"
    },
    "4735": {
      "op": "DUP5"
    },
    "4736": {
      "op": "DUP3"
    },
    "4737": {
      "op": "GT"
    },
    "4738": {
      "op": "ISZERO"
    },
    "4739": {
      "op": "PUSH3",
      "value": "0x1291"
    },
    "4743": {
      "op": "JUMPI"
    },
    "4744": {
      "op": "PUSH3",
      "value": "0x1291"
    },
    "4748": {
      "op": "PUSH3",
      "value": "0x1339"
    },
    "4752": {
      "jump": "i",
      "op": "JUMP"
    },
    "4753": {
      "op": "JUMPDEST"
    },
    "4754": {
      "op": "POP"
    },
    "4755": {
      "op": "PUSH3",
      "value": "0xD72"
    },
    "4759": {
      "op": "JUMP"
    },
    "4760": {
      "op": "JUMPDEST"
    },
    "4761": {
      "op": "POP"
    },
    "4762": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4764": {
      "op": "DUP4"
    },
    "4765": {
      "op": "LT"
    },
    "4766": {
      "op": "PUSH2",
      "value": "0x133"
    },
    "4769": {
      "op": "DUP4"
    },
    "4770": {
      "op": "LT"
    },
    "4771": {
      "op": "AND"
    },
    "4772": {
      "op": "PUSH1",
      "value": "0x4E"
    },
    "4774": {
      "op": "DUP5"
    },
    "4775": {
      "op": "LT"
    },
    "4776": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "4778": {
      "op": "DUP5"
    },
    "4779": {
      "op": "LT"
    },
    "4780": {
      "op": "AND"
    },
    "4781": {
      "op": "OR"
    },
    "4782": {
      "op": "ISZERO"
    },
    "4783": {
      "op": "PUSH3",
      "value": "0x12D0"
    },
    "4787": {
      "op": "JUMPI"
    },
    "4788": {
      "op": "POP"
    },
    "4789": {
      "op": "DUP2"
    },
    "4790": {
      "op": "DUP2"
    },
    "4791": {
      "op": "EXP"
    },
    "4792": {
      "op": "DUP4"
    },
    "4793": {
      "op": "DUP2"
    },
    "4794": {
      "op": "GT"
    },
    "4795": {
      "op": "ISZERO"
    },
    "4796": {
      "op": "PUSH3",
      "value": "0x12CA"
    },
    "4800": {
      "op": "JUMPI"
    },
    "4801": {
      "op": "PUSH3",
      "value": "0x12CA"
    },
    "4805": {
      "op": "PUSH3",
      "value": "0x1339"
    },
    "4809": {
      "jump": "i",
      "op": "JUMP"
    },
    "4810": {
      "op": "JUMPDEST"
    },
    "4811": {
      "op": "PUSH3",
      "value": "0xD72"
    },
    "4815": {
      "op": "JUMP"
    },
    "4816": {
      "op": "JUMPDEST"
    },
    "4817": {
      "op": "PUSH3",
      "value": "0x12DF"
    },
    "4821": {
      "op": "DUP5"
    },
    "4822": {
      "op": "DUP5"
    },
    "4823": {
      "op": "DUP5"
    },
    "4824": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4826": {
      "op": "PUSH3",
      "value": "0x11C5"
    },
    "4830": {
      "jump": "i",
      "op": "JUMP"
    },
    "4831": {
      "op": "JUMPDEST"
    },
    "4832": {
      "op": "DUP1"
    },
    "4833": {
      "op": "DUP7"
    },
    "4834": {
      "op": "DIV"
    },
    "4835": {
      "op": "DUP3"
    },
    "4836": {
      "op": "GT"
    },
    "4837": {
      "op": "ISZERO"
    },
    "4838": {
      "op": "PUSH3",
      "value": "0x12F4"
    },
    "4842": {
      "op": "JUMPI"
    },
    "4843": {
      "op": "PUSH3",
      "value": "0x12F4"
    },
    "4847": {
      "op": "PUSH3",
      "value": "0x1339"
    },
    "4851": {
      "jump": "i",
      "op": "JUMP"
    },
    "4852": {
      "op": "JUMPDEST"
    },
    "4853": {
      "op": "MUL"
    },
    "4854": {
      "op": "SWAP5"
    },
    "4855": {
      "op": "SWAP4"
    },
    "4856": {
      "op": "POP"
    },
    "4857": {
      "op": "POP"
    },
    "4858": {
      "op": "POP"
    },
    "4859": {
      "op": "POP"
    },
    "4860": {
      "jump": "o",
      "op": "JUMP"
    },
    "4861": {
      "op": "JUMPDEST"
    },
    "4862": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4864": {
      "op": "DUP2"
    },
    "4865": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4867": {
      "op": "NOT"
    },
    "4868": {
      "op": "DIV"
    },
    "4869": {
      "op": "DUP4"
    },
    "4870": {
      "op": "GT"
    },
    "4871": {
      "op": "DUP3"
    },
    "4872": {
      "op": "ISZERO"
    },
    "4873": {
      "op": "ISZERO"
    },
    "4874": {
      "op": "AND"
    },
    "4875": {
      "op": "ISZERO"
    },
    "4876": {
      "op": "PUSH3",
      "value": "0x131A"
    },
    "4880": {
      "op": "JUMPI"
    },
    "4881": {
      "op": "PUSH3",
      "value": "0x131A"
    },
    "4885": {
      "op": "PUSH3",
      "value": "0x1339"
    },
    "4889": {
      "jump": "i",
      "op": "JUMP"
    },
    "4890": {
      "op": "JUMPDEST"
    },
    "4891": {
      "op": "POP"
    },
    "4892": {
      "op": "MUL"
    },
    "4893": {
      "op": "SWAP1"
    },
    "4894": {
      "jump": "o",
      "op": "JUMP"
    },
    "4895": {
      "op": "JUMPDEST"
    },
    "4896": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4898": {
      "op": "DUP3"
    },
    "4899": {
      "op": "DUP3"
    },
    "4900": {
      "op": "LT"
    },
    "4901": {
      "op": "ISZERO"
    },
    "4902": {
      "op": "PUSH3",
      "value": "0x1334"
    },
    "4906": {
      "op": "JUMPI"
    },
    "4907": {
      "op": "PUSH3",
      "value": "0x1334"
    },
    "4911": {
      "op": "PUSH3",
      "value": "0x1339"
    },
    "4915": {
      "jump": "i",
      "op": "JUMP"
    },
    "4916": {
      "op": "JUMPDEST"
    },
    "4917": {
      "op": "POP"
    },
    "4918": {
      "op": "SUB"
    },
    "4919": {
      "op": "SWAP1"
    },
    "4920": {
      "jump": "o",
      "op": "JUMP"
    },
    "4921": {
      "op": "JUMPDEST"
    },
    "4922": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4927": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4929": {
      "op": "SHL"
    },
    "4930": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4932": {
      "op": "MSTORE"
    },
    "4933": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "4935": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4937": {
      "op": "MSTORE"
    },
    "4938": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4940": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4942": {
      "op": "REVERT"
    }
  },
  "sha1": "25fe98ca1409b927ebe2bcf1826a5834c583aaa7",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport  {ERC20} from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport  {ERC20Burnable} from \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n\ninterface IERC20 {\n    function transfer(address recipient, uint256 amount) external returns (bool);\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n    function approve(address spender, uint256 amount) external returns (bool);\n}\n\n\ncontract BTCUP is  ERC20, ERC20Burnable {\n    address parentAddress;\n\n    constructor(address _parentAddress) ERC20(\"Bitcoin Up\", \"BTCUP\") {\n        parentAddress = _parentAddress;\n    }\n\n    function mint(uint256 quantity) public onlyParent {\n        _mint(tx.origin, quantity);\n    }\n\n    function burn(uint256 quantity) public override onlyParent {\n        burnFrom(tx.origin, quantity);\n    }\n\n    function decimals() public view override returns (uint8) {\n        return 6;\n    }\n\n    modifier onlyParent {\n        require(msg.sender == parentAddress);\n        _;\n    }\n}\n\n\ncontract BTCDOWN is ERC20, ERC20Burnable {\n    address parentAddress;\n\n    constructor(address _parentAddress) ERC20(\"Bitcoin Down\", \"BTCDOWN\") {\n        parentAddress = _parentAddress;\n    }\n\n    function mint(uint256 quantity) public onlyParent {\n        _mint(tx.origin, quantity);\n    }\n\n    function burn(uint256 quantity) public override onlyParent {\n        burnFrom(tx.origin, quantity);\n    }\n\n    function decimals() public view override returns (uint8) {\n        return 6;\n    }\n\n    modifier onlyParent {\n        require(msg.sender == parentAddress);\n        _;\n    }\n}\n\n\ncontract LeveragedTrading is Ownable {\n    using SafeMath for uint256;\n\n    uint256 public priceBtcUp = 10 ** 6;\n    uint256 public priceBtcDown = 10 ** 6;        // 6 decimals\n\n    uint256 public collateralBtcUp = 0;          //6 decimals\n    uint256 public collateralBtcDown = 0;\n\n    uint256 public amountBtcUp = 0;           // 6 decimals\n    uint256 public amountBtcDown = 0;         // 6 decimals\n\n    uint256 public lastBtcPrice = 0;       // 8 decimals, chainlink conventions\n\n    bool public poolIsInitialized = false;\n\n    address addressUsdc = 0xb7a4F3E9097C08dA09517b5aB877F7a917224ede;  // <- Kovan  //0xeb8f08a975Ab53E34D8a0330E0D34de942C95926;\n    address addressBtcUSDFeed =  0x6135b13325bfC4B00278B4abC5e20bbce2D6580e; // <- Kovan          // 0xECe365B379E1dD183B20fc5f022230C044d51404;\n\n    BTCUP btcUp;\n    BTCDOWN btcDown;\n\n    function initializePool(uint256 amountUsdc) public onlyOwner {\n        require(!poolIsInitialized, \"The pool was already initialized.\");\n        poolIsInitialized = true;\n\n        btcUp = new BTCUP(address(this));\n        btcDown = new BTCDOWN(address(this));\n\n        issueBtcUp(amountUsdc.div(2));\n        issueBtcDown(amountUsdc.div(2));\n\n    }\n\n    function issueBtcUp(uint256 amountUsdc) public {\n        require(poolIsInitialized, \"The pool was not initialized.\");\n        rebalanceLeveragedTokens();\n        \n        priceBtcUp = getBtcUpPrice();\n        uint256 amountLeveragedTokens = amountUsdc.mul(10 ** 6).div(priceBtcUp);\n\n        btcUp.mint(amountLeveragedTokens);\n        amountBtcUp = amountBtcUp.add(amountLeveragedTokens);\n        collateralBtcUp = collateralBtcUp.add(amountUsdc);\n\n        IERC20 usdc = IERC20(addressUsdc);\n        require(usdc.transferFrom(msg.sender, address(this), amountUsdc), \"USDC transfer failed.\");\n    }\n\n    function issueBtcDown(uint256 amountUsdc) public {\n        require(poolIsInitialized, \"The pool was not initialized.\");\n        rebalanceLeveragedTokens();\n        \n        priceBtcDown = getBtcDownPrice();\n        uint256 amountLeveragedTokens = amountUsdc.mul(10 ** 6).div(priceBtcDown);\n\n        btcDown.mint(amountLeveragedTokens);\n        amountBtcDown = amountBtcDown.add(amountLeveragedTokens);\n        collateralBtcDown = collateralBtcDown.add(amountUsdc);\n\n        IERC20 usdc = IERC20(addressUsdc);\n        require(usdc.transferFrom(msg.sender, address(this), amountUsdc), \"USDC transfer failed.\");\n    }\n\n    function redeemBtcUp(uint256 amountLeveragedTokens) public {\n        require(poolIsInitialized, \"The pool was not initialized.\");\n        rebalanceLeveragedTokens();\n        btcUp.burn(amountLeveragedTokens);\n\n        priceBtcUp = getBtcUpPrice();\n        uint256 amountUsdc = amountLeveragedTokens.mul(priceBtcUp).div(10 ** 6);\n\n        amountBtcUp = amountBtcUp.sub(amountLeveragedTokens);\n        collateralBtcUp = collateralBtcUp.sub(amountUsdc);\n\n        IERC20 usdc = IERC20(addressUsdc);\n        assert(usdc.transfer(msg.sender, amountUsdc));\n    }\n\n    function redeemBtcDown(uint256 amountLeveragedTokens) public {\n        require(poolIsInitialized, \"The pool was not initialized.\");\n        rebalanceLeveragedTokens();\n        btcDown.burn(amountLeveragedTokens);\n\n        priceBtcDown = getBtcDownPrice();\n        uint256 amountUsdc = amountLeveragedTokens.mul(priceBtcDown).div(10 ** 6);\n        \n        amountBtcDown = amountBtcDown.sub(amountLeveragedTokens);\n        collateralBtcDown = collateralBtcDown.sub(amountUsdc);\n\n        IERC20 usdc = IERC20(addressUsdc);\n        assert(usdc.transfer(msg.sender,  amountUsdc));\n    }\n\n    function rebalanceLeveragedTokens() public {\n        uint256 btcPrice = getBtcPrice();\n        if ((collateralBtcUp > 0) && (collateralBtcDown > 0)) {\n            uint256 rebalanceAmount = getRebalanceAmount(btcPrice);\n            if (getSign(btcPrice) > 0) {\n                collateralBtcUp = collateralBtcUp.add(rebalanceAmount);\n                collateralBtcDown = collateralBtcDown.sub(rebalanceAmount);\n            }\n\n            else {\n                collateralBtcUp = collateralBtcUp.sub(rebalanceAmount);\n                collateralBtcDown = collateralBtcDown.add(rebalanceAmount);\n            }\n\n        }\n        lastBtcPrice = btcPrice;\n    }\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    function getSign(uint256 btcPrice) internal view returns (int256) {\n        if (btcPrice > lastBtcPrice) {\n            return 1;\n        }\n        else {\n            return -1;\n        }\n    }\n \n    function getRebalanceAmount(uint256 priceBtc) internal view returns (uint256) {\n        uint256 priceDiff = getPriceDiff(priceBtc);\n\n        return min(collateralBtcUp, collateralBtcDown).mul(L(priceDiff)).div(10 ** 6);\n    }\n\n// getBtcUpPrice() 6 decimals\n    function getBtcUpPrice() public view returns (uint256) {\n        return amountBtcUp == 0 ?  priceBtcUp : collateralBtcUp.mul(10 ** 6).div(amountBtcUp);\n    }\n\n// getBtcDownPrice() 6 decimals\n    function getBtcDownPrice() public view returns (uint256) {//6 decimals\n        return amountBtcDown == 0 ?  priceBtcDown : collateralBtcDown.mul(10 ** 6).div(amountBtcDown);\n    }\n\n// get the price of our asset with 8 decimals\n    function getBtcPrice() public view returns (uint256) {\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(addressBtcUSDFeed);\n        (,int256 answer,,,) = priceFeed.latestRoundData();\n\n         return uint256(answer);             // we call chainlink oracle to get the price of the asset\n         \n    }\n    \n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a <= b ? a : b;\n    }\n\n    function L(uint256 x) internal pure returns (uint256) {            //6  decimals\n\n        uint256 denom = 9 * (x ** 2 / 10 ** 6)  + 3 * x + 10 ** 6;\n        uint256 num = 10 ** 12;\n\n        return 10 ** 6 - num / denom;\n    }\n\n    function getPriceDiff(uint256 btcPrice) internal view returns (uint256) {     //6 decimals\n        if (btcPrice > lastBtcPrice) {\n            return btcPrice.mul(10 ** 6).div(lastBtcPrice).sub(10 ** 6);\n        }\n\n        else {\n            return lastBtcPrice.mul(10 ** 6).div(btcPrice).sub(10 ** 6);\n        }\n\n    }\n\n    function getBtcupBalance() public view returns(uint256) {\n        return btcUp.balanceOf(msg.sender);\n    }\n\n    function getBtcdownBalance() public view returns(uint256) {\n        return btcDown.balanceOf(msg.sender);\n    }\n\n\n}",
  "sourceMap": "1863:6509:8:-:0;;;1967:7;1939:35;;;;1980:37;;-1:-1:-1;2045:34:8;;;;2107:36;;;;2150:30;;;;2210:32;;;;2271:31;;2352:37;;;2396:64;-1:-1:-1;;;;;;2396:64:8;;;;;;2526:71;;;-1:-1:-1;;;;;;2526:71:8;2555:42;2526:71;;;1863:6509;;;;;;;;;-1:-1:-1;867:23:0;877:12;:10;:12::i;:::-;867:9;:23::i;:::-;1863:6509:8;;586:96:5;665:10;586:96;:::o;2041:169:0:-;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2041:169;;:::o;1863:6509:8:-;;;;;;;",
  "sourcePath": "contracts/LeveragedTrading.sol",
  "type": "contract"
}