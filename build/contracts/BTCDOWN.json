{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "quantity",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "quantity",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/home/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/ERC20.sol",
    "1": "/home/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/IERC20.sol",
    "2": "/home/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/extensions/IERC20Metadata.sol",
    "3": "/home/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/Context.sol",
    "6": "contracts/LeveragedTrading.sol"
  },
  "ast": {
    "absolutePath": "contracts/LeveragedTrading.sol",
    "exportedSymbols": {
      "AggregatorV3Interface": [
        1671
      ],
      "BTCDOWN": [
        123
      ],
      "BTCUP": [
        79
      ],
      "ERC20": [
        1313
      ],
      "IERC20": [
        35
      ],
      "LeveragedTrading": [
        767
      ],
      "SafeMath": [
        1625
      ]
    },
    "id": 768,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:6"
      },
      {
        "absolutePath": "/home/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 768,
        "sourceUnit": 1314,
        "src": "57:70:6",
        "symbolAliases": [
          {
            "foreign": {
              "id": 2,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "66:5:6",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/alex/.brownie/packages/smartcontractkit/chainlink@1.3.0/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 768,
        "sourceUnit": 1672,
        "src": "128:76:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 768,
        "sourceUnit": 1626,
        "src": "205:57:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 35,
        "linearizedBaseContracts": [
          35
        ],
        "name": "IERC20",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "a9059cbb",
            "id": 14,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 14,
                  "src": "306:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "306:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 14,
                  "src": "325:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "325:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "305:35:6"
            },
            "returnParameters": {
              "id": 13,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 14,
                  "src": "359:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 11,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "359:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "358:6:6"
            },
            "scope": 35,
            "src": "288:77:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "23b872dd",
            "id": 25,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 21,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 25,
                  "src": "392:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "392:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 25,
                  "src": "408:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "408:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 25,
                  "src": "427:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "427:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "391:51:6"
            },
            "returnParameters": {
              "id": 24,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 25,
                  "src": "461:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 22,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "461:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "460:6:6"
            },
            "scope": 35,
            "src": "370:97:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "095ea7b3",
            "id": 34,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 30,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 34,
                  "src": "489:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "489:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 34,
                  "src": "506:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "506:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "488:33:6"
            },
            "returnParameters": {
              "id": 33,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 34,
                  "src": "540:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 31,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "540:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "539:6:6"
            },
            "scope": 35,
            "src": "472:74:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 768,
        "src": "265:283:6"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 36,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1313,
              "src": "568:5:6"
            },
            "id": 37,
            "nodeType": "InheritanceSpecifier",
            "src": "568:5:6"
          }
        ],
        "contractDependencies": [
          1313,
          1749,
          1774,
          1795
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 79,
        "linearizedBaseContracts": [
          79,
          1313,
          1774,
          1749,
          1795
        ],
        "name": "BTCUP",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 44,
              "nodeType": "Block",
              "src": "623:14:6",
              "statements": []
            },
            "id": 45,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "426974636f696e205570",
                    "id": 40,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "600:12:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_9cbc1d0721872492c3eae100dd6a7dad3b4b199dc4e72a46010b2b1c98a11964",
                      "typeString": "literal_string \"Bitcoin Up\""
                    },
                    "value": "Bitcoin Up"
                  },
                  {
                    "hexValue": "4254435550",
                    "id": 41,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "614:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_f92903022a172a42cae03bdc1621474c2ab6bc2b8980d8251e05283c61f8c975",
                      "typeString": "literal_string \"BTCUP\""
                    },
                    "value": "BTCUP"
                  }
                ],
                "id": 42,
                "modifierName": {
                  "id": 39,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1313,
                  "src": "594:5:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "594:28:6"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 38,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "591:2:6"
            },
            "returnParameters": {
              "id": 43,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "623:0:6"
            },
            "scope": 79,
            "src": "580:57:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 56,
              "nodeType": "Block",
              "src": "682:43:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 51,
                          "name": "tx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -26,
                          "src": "698:2:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_transaction",
                            "typeString": "tx"
                          }
                        },
                        "id": 52,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "origin",
                        "nodeType": "MemberAccess",
                        "src": "698:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 53,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47,
                        "src": "709:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 50,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1173,
                      "src": "692:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 54,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "692:26:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55,
                  "nodeType": "ExpressionStatement",
                  "src": "692:26:6"
                }
              ]
            },
            "functionSelector": "a0712d68",
            "id": 57,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 48,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nodeType": "VariableDeclaration",
                  "scope": 57,
                  "src": "657:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "657:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "656:18:6"
            },
            "returnParameters": {
              "id": 49,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "682:0:6"
            },
            "scope": 79,
            "src": "643:82:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 68,
              "nodeType": "Block",
              "src": "770:43:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 63,
                          "name": "tx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -26,
                          "src": "786:2:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_transaction",
                            "typeString": "tx"
                          }
                        },
                        "id": 64,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "origin",
                        "nodeType": "MemberAccess",
                        "src": "786:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 65,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59,
                        "src": "797:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 62,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1245,
                      "src": "780:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 66,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "780:26:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67,
                  "nodeType": "ExpressionStatement",
                  "src": "780:26:6"
                }
              ]
            },
            "functionSelector": "42966c68",
            "id": 69,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 60,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nodeType": "VariableDeclaration",
                  "scope": 69,
                  "src": "745:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 58,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "745:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "744:18:6"
            },
            "returnParameters": {
              "id": 61,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "770:0:6"
            },
            "scope": 79,
            "src": "731:82:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              842
            ],
            "body": {
              "id": 77,
              "nodeType": "Block",
              "src": "876:25:6",
              "statements": [
                {
                  "expression": {
                    "hexValue": "36",
                    "id": 75,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "893:1:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_6_by_1",
                      "typeString": "int_const 6"
                    },
                    "value": "6"
                  },
                  "functionReturnParameters": 74,
                  "id": 76,
                  "nodeType": "Return",
                  "src": "886:8:6"
                }
              ]
            },
            "functionSelector": "313ce567",
            "id": 78,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 71,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "851:8:6"
            },
            "parameters": {
              "id": 70,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "836:2:6"
            },
            "returnParameters": {
              "id": 74,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 78,
                  "src": "869:5:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 72,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "869:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "868:7:6"
            },
            "scope": 79,
            "src": "819:82:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 768,
        "src": "550:353:6"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 80,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1313,
              "src": "926:5:6"
            },
            "id": 81,
            "nodeType": "InheritanceSpecifier",
            "src": "926:5:6"
          }
        ],
        "contractDependencies": [
          1313,
          1749,
          1774,
          1795
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 123,
        "linearizedBaseContracts": [
          123,
          1313,
          1774,
          1749,
          1795
        ],
        "name": "BTCDOWN",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 88,
              "nodeType": "Block",
              "src": "985:7:6",
              "statements": []
            },
            "id": 89,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "426974636f696e20446f776e",
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "958:14:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_165fe89d7acd7320260d3007f731660e2a452d2e9dbef2c2e44ee15c6b8bc1ec",
                      "typeString": "literal_string \"Bitcoin Down\""
                    },
                    "value": "Bitcoin Down"
                  },
                  {
                    "hexValue": "425443444f574e",
                    "id": 85,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "974:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_72f3d7098f717fcc170dbb6c7dad0b9049f1ed825e03177180edf7a0240d28f2",
                      "typeString": "literal_string \"BTCDOWN\""
                    },
                    "value": "BTCDOWN"
                  }
                ],
                "id": 86,
                "modifierName": {
                  "id": 83,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1313,
                  "src": "952:5:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "952:32:6"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 82,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "949:2:6"
            },
            "returnParameters": {
              "id": 87,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "985:0:6"
            },
            "scope": 123,
            "src": "938:54:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 100,
              "nodeType": "Block",
              "src": "1037:43:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 95,
                          "name": "tx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -26,
                          "src": "1053:2:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_transaction",
                            "typeString": "tx"
                          }
                        },
                        "id": 96,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "origin",
                        "nodeType": "MemberAccess",
                        "src": "1053:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 97,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91,
                        "src": "1064:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 94,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1173,
                      "src": "1047:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 98,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1047:26:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99,
                  "nodeType": "ExpressionStatement",
                  "src": "1047:26:6"
                }
              ]
            },
            "functionSelector": "a0712d68",
            "id": 101,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 92,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nodeType": "VariableDeclaration",
                  "scope": 101,
                  "src": "1012:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 90,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1012:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1011:18:6"
            },
            "returnParameters": {
              "id": 93,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1037:0:6"
            },
            "scope": 123,
            "src": "998:82:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 112,
              "nodeType": "Block",
              "src": "1125:43:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 107,
                          "name": "tx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -26,
                          "src": "1141:2:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_transaction",
                            "typeString": "tx"
                          }
                        },
                        "id": 108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "origin",
                        "nodeType": "MemberAccess",
                        "src": "1141:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 109,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 103,
                        "src": "1152:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 106,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1245,
                      "src": "1135:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1135:26:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 111,
                  "nodeType": "ExpressionStatement",
                  "src": "1135:26:6"
                }
              ]
            },
            "functionSelector": "42966c68",
            "id": 113,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 104,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 103,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nodeType": "VariableDeclaration",
                  "scope": 113,
                  "src": "1100:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 102,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1100:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1099:18:6"
            },
            "returnParameters": {
              "id": 105,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1125:0:6"
            },
            "scope": 123,
            "src": "1086:82:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              842
            ],
            "body": {
              "id": 121,
              "nodeType": "Block",
              "src": "1231:25:6",
              "statements": [
                {
                  "expression": {
                    "hexValue": "36",
                    "id": 119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1248:1:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_6_by_1",
                      "typeString": "int_const 6"
                    },
                    "value": "6"
                  },
                  "functionReturnParameters": 118,
                  "id": 120,
                  "nodeType": "Return",
                  "src": "1241:8:6"
                }
              ]
            },
            "functionSelector": "313ce567",
            "id": 122,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 115,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1206:8:6"
            },
            "parameters": {
              "id": 114,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1191:2:6"
            },
            "returnParameters": {
              "id": 118,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 117,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 122,
                  "src": "1224:5:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 116,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1224:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1223:7:6"
            },
            "scope": 123,
            "src": "1174:82:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 768,
        "src": "906:352:6"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          79,
          123
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 767,
        "linearizedBaseContracts": [
          767
        ],
        "name": "LeveragedTrading",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 126,
            "libraryName": {
              "id": 124,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1625,
              "src": "1298:8:6"
            },
            "nodeType": "UsingForDirective",
            "src": "1292:27:6",
            "typeName": {
              "id": 125,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1311:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "3074fff7",
            "id": 129,
            "mutability": "mutable",
            "name": "poolIsInitiated",
            "nodeType": "VariableDeclaration",
            "scope": 767,
            "src": "1325:35:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 127,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1325:4:6",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 128,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1355:5:6",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f0156e8a",
            "id": 134,
            "mutability": "mutable",
            "name": "priceBtcUp",
            "nodeType": "VariableDeclaration",
            "scope": 767,
            "src": "1367:35:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 130,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1367:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_1000000_by_1",
                "typeString": "int_const 1000000"
              },
              "id": 133,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "3130",
                "id": 131,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1395:2:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10_by_1",
                  "typeString": "int_const 10"
                },
                "value": "10"
              },
              "nodeType": "BinaryOperation",
              "operator": "**",
              "rightExpression": {
                "hexValue": "36",
                "id": 132,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1401:1:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_6_by_1",
                  "typeString": "int_const 6"
                },
                "value": "6"
              },
              "src": "1395:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000_by_1",
                "typeString": "int_const 1000000"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0c3e5343",
            "id": 139,
            "mutability": "mutable",
            "name": "priceBtcDown",
            "nodeType": "VariableDeclaration",
            "scope": 767,
            "src": "1408:37:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 135,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1408:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_1000000_by_1",
                "typeString": "int_const 1000000"
              },
              "id": 138,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "3130",
                "id": 136,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1438:2:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10_by_1",
                  "typeString": "int_const 10"
                },
                "value": "10"
              },
              "nodeType": "BinaryOperation",
              "operator": "**",
              "rightExpression": {
                "hexValue": "36",
                "id": 137,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1444:1:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_6_by_1",
                  "typeString": "int_const 6"
                },
                "value": "6"
              },
              "src": "1438:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000_by_1",
                "typeString": "int_const 1000000"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "dde7be2c",
            "id": 142,
            "mutability": "mutable",
            "name": "collateralBtcUp",
            "nodeType": "VariableDeclaration",
            "scope": 767,
            "src": "1473:34:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 140,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1473:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 141,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1506:1:6",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "14d7c6d2",
            "id": 145,
            "mutability": "mutable",
            "name": "collateralBtcDown",
            "nodeType": "VariableDeclaration",
            "scope": 767,
            "src": "1535:36:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 143,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1535:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 144,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1570:1:6",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0034b9cc",
            "id": 148,
            "mutability": "mutable",
            "name": "amountBtcUp",
            "nodeType": "VariableDeclaration",
            "scope": 767,
            "src": "1578:30:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 146,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1578:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 147,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1607:1:6",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b75cbe0b",
            "id": 151,
            "mutability": "mutable",
            "name": "amountBtcDown",
            "nodeType": "VariableDeclaration",
            "scope": 767,
            "src": "1638:32:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 149,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1638:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 150,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1669:1:6",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f4352c57",
            "id": 154,
            "mutability": "mutable",
            "name": "lastBtcPrice",
            "nodeType": "VariableDeclaration",
            "scope": 767,
            "src": "1699:31:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 152,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1699:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 153,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1729:1:6",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 157,
            "mutability": "mutable",
            "name": "addressUsdc",
            "nodeType": "VariableDeclaration",
            "scope": 767,
            "src": "1780:64:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 155,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1780:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307862376134463345393039374330386441303935313762356142383737463761393137323234656465",
              "id": 156,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1802:42:6",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xb7a4F3E9097C08dA09517b5aB877F7a917224ede"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 160,
            "mutability": "mutable",
            "name": "addressBtcUSDFeed",
            "nodeType": "VariableDeclaration",
            "scope": 767,
            "src": "1910:71:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 158,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1910:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307836313335623133333235626643344230303237384234616243356532306262636532443635383065",
              "id": 159,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1939:42:6",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x6135b13325bfC4B00278B4abC5e20bbce2D6580e"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 167,
            "mutability": "mutable",
            "name": "btcUp",
            "nodeType": "VariableDeclaration",
            "scope": 767,
            "src": "2057:25:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_BTCUP_$79",
              "typeString": "contract BTCUP"
            },
            "typeName": {
              "id": 162,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 161,
                "name": "BTCUP",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 79,
                "src": "2057:5:6"
              },
              "referencedDeclaration": 79,
              "src": "2057:5:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BTCUP_$79",
                "typeString": "contract BTCUP"
              }
            },
            "value": {
              "arguments": [],
              "expression": {
                "argumentTypes": [],
                "id": 165,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "nodeType": "NewExpression",
                "src": "2071:9:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_BTCUP_$79_$",
                  "typeString": "function () returns (contract BTCUP)"
                },
                "typeName": {
                  "id": 164,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 163,
                    "name": "BTCUP",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 79,
                    "src": "2075:5:6"
                  },
                  "referencedDeclaration": 79,
                  "src": "2075:5:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_BTCUP_$79",
                    "typeString": "contract BTCUP"
                  }
                }
              },
              "id": 166,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2071:11:6",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BTCUP_$79",
                "typeString": "contract BTCUP"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 174,
            "mutability": "mutable",
            "name": "btcDown",
            "nodeType": "VariableDeclaration",
            "scope": 767,
            "src": "2088:31:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_BTCDOWN_$123",
              "typeString": "contract BTCDOWN"
            },
            "typeName": {
              "id": 169,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 168,
                "name": "BTCDOWN",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 123,
                "src": "2088:7:6"
              },
              "referencedDeclaration": 123,
              "src": "2088:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BTCDOWN_$123",
                "typeString": "contract BTCDOWN"
              }
            },
            "value": {
              "arguments": [],
              "expression": {
                "argumentTypes": [],
                "id": 172,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "nodeType": "NewExpression",
                "src": "2106:11:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_BTCDOWN_$123_$",
                  "typeString": "function () returns (contract BTCDOWN)"
                },
                "typeName": {
                  "id": 171,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 170,
                    "name": "BTCDOWN",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 123,
                    "src": "2110:7:6"
                  },
                  "referencedDeclaration": 123,
                  "src": "2110:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_BTCDOWN_$123",
                    "typeString": "contract BTCDOWN"
                  }
                }
              },
              "id": 173,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2106:13:6",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BTCDOWN_$123",
                "typeString": "contract BTCDOWN"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 197,
              "nodeType": "Block",
              "src": "2187:199:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2205:16:6",
                        "subExpression": {
                          "id": 180,
                          "name": "poolIsInitiated",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 129,
                          "src": "2206:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520706f6f6c2077617320616c726561647920696e697469617465642e",
                        "id": 182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2223:33:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_580e872a0bf3ae438081ad6284342a647742aae71fdfc53b8a10245734a22e81",
                          "typeString": "literal_string \"The pool was already initiated.\""
                        },
                        "value": "The pool was already initiated."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_580e872a0bf3ae438081ad6284342a647742aae71fdfc53b8a10245734a22e81",
                          "typeString": "literal_string \"The pool was already initiated.\""
                        }
                      ],
                      "id": 179,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2197:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2197:60:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 184,
                  "nodeType": "ExpressionStatement",
                  "src": "2197:60:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 186,
                        "name": "amountLeveragedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 176,
                        "src": "2279:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 185,
                      "name": "issueBtcUp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 265,
                      "src": "2268:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2268:33:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 188,
                  "nodeType": "ExpressionStatement",
                  "src": "2268:33:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 190,
                        "name": "amountLeveragedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 176,
                        "src": "2324:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 189,
                      "name": "issueBtcDown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 332,
                      "src": "2311:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2311:35:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 192,
                  "nodeType": "ExpressionStatement",
                  "src": "2311:35:6"
                },
                {
                  "expression": {
                    "id": 195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 193,
                      "name": "poolIsInitiated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 129,
                      "src": "2357:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 194,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2375:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2357:22:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 196,
                  "nodeType": "ExpressionStatement",
                  "src": "2357:22:6"
                }
              ]
            },
            "functionSelector": "9b3075a1",
            "id": 198,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initiatePool",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 177,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 176,
                  "mutability": "mutable",
                  "name": "amountLeveragedTokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 198,
                  "src": "2149:29:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 175,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2149:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2148:31:6"
            },
            "returnParameters": {
              "id": 178,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2187:0:6"
            },
            "scope": 767,
            "src": "2127:259:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 264,
              "nodeType": "Block",
              "src": "2452:478:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 203,
                      "name": "rebalanceLeveragedTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 524,
                      "src": "2462:24:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2462:26:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 205,
                  "nodeType": "ExpressionStatement",
                  "src": "2462:26:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 209,
                        "name": "amountLeveragedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 200,
                        "src": "2509:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 206,
                        "name": "btcUp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 167,
                        "src": "2498:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BTCUP_$79",
                          "typeString": "contract BTCUP"
                        }
                      },
                      "id": 208,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 57,
                      "src": "2498:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2498:33:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 211,
                  "nodeType": "ExpressionStatement",
                  "src": "2498:33:6"
                },
                {
                  "assignments": [
                    214
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 214,
                      "mutability": "mutable",
                      "name": "usdc",
                      "nodeType": "VariableDeclaration",
                      "scope": 264,
                      "src": "2542:11:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$35",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 213,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 212,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 35,
                          "src": "2542:6:6"
                        },
                        "referencedDeclaration": 35,
                        "src": "2542:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$35",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 218,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 216,
                        "name": "addressUsdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 157,
                        "src": "2563:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 215,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "2556:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$35_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2556:19:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$35",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2542:33:6"
                },
                {
                  "expression": {
                    "id": 222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 219,
                      "name": "priceBtcUp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 134,
                      "src": "2585:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 220,
                        "name": "getBtcUpPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 593,
                        "src": "2598:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 221,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2598:15:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2585:28:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 223,
                  "nodeType": "ExpressionStatement",
                  "src": "2585:28:6"
                },
                {
                  "assignments": [
                    225
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 225,
                      "mutability": "mutable",
                      "name": "amountUsdc",
                      "nodeType": "VariableDeclaration",
                      "scope": 264,
                      "src": "2624:18:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 224,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2624:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 235,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        },
                        "id": 233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3130",
                          "id": 231,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2687:2:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "hexValue": "36",
                          "id": 232,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2693:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_6_by_1",
                            "typeString": "int_const 6"
                          },
                          "value": "6"
                        },
                        "src": "2687:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 228,
                            "name": "priceBtcUp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 134,
                            "src": "2671:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 226,
                            "name": "amountLeveragedTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 200,
                            "src": "2645:21:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1519,
                          "src": "2645:25:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2645:37:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 230,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1534,
                      "src": "2645:41:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2645:50:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2624:71:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 239,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2732:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 240,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2732:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 243,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "2752:4:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LeveragedTrading_$767",
                                  "typeString": "contract LeveragedTrading"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LeveragedTrading_$767",
                                  "typeString": "contract LeveragedTrading"
                                }
                              ],
                              "id": 242,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2744:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 241,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2744:7:6",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 244,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2744:13:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 245,
                            "name": "amountUsdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 225,
                            "src": "2759:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 237,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 214,
                            "src": "2714:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$35",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25,
                          "src": "2714:17:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2714:56:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520646f6e2774206861766520656e6f7567682055534443",
                        "id": 247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2772:28:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_215257ea0e4feb9c4e88226d908b42335464d28cc634dcc0965acffaf089fb88",
                          "typeString": "literal_string \"You don't have enough USDC\""
                        },
                        "value": "You don't have enough USDC"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_215257ea0e4feb9c4e88226d908b42335464d28cc634dcc0965acffaf089fb88",
                          "typeString": "literal_string \"You don't have enough USDC\""
                        }
                      ],
                      "id": 236,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2706:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2706:95:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 249,
                  "nodeType": "ExpressionStatement",
                  "src": "2706:95:6"
                },
                {
                  "expression": {
                    "id": 255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 250,
                      "name": "amountBtcUp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 148,
                      "src": "2812:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 253,
                          "name": "amountLeveragedTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 200,
                          "src": "2842:21:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 251,
                          "name": "amountBtcUp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 148,
                          "src": "2826:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1489,
                        "src": "2826:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 254,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2826:38:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2812:52:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 256,
                  "nodeType": "ExpressionStatement",
                  "src": "2812:52:6"
                },
                {
                  "expression": {
                    "id": 262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 257,
                      "name": "collateralBtcUp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 142,
                      "src": "2874:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 260,
                          "name": "amountUsdc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 225,
                          "src": "2912:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 258,
                          "name": "collateralBtcUp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 142,
                          "src": "2892:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1489,
                        "src": "2892:19:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 261,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2892:31:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2874:49:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 263,
                  "nodeType": "ExpressionStatement",
                  "src": "2874:49:6"
                }
              ]
            },
            "functionSelector": "f530c04a",
            "id": 265,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "issueBtcUp",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 201,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 200,
                  "mutability": "mutable",
                  "name": "amountLeveragedTokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 265,
                  "src": "2414:29:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 199,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2414:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2413:31:6"
            },
            "returnParameters": {
              "id": 202,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2452:0:6"
            },
            "scope": 767,
            "src": "2394:536:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 331,
              "nodeType": "Block",
              "src": "2998:493:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 270,
                      "name": "rebalanceLeveragedTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 524,
                      "src": "3008:24:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3008:26:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 272,
                  "nodeType": "ExpressionStatement",
                  "src": "3008:26:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 276,
                        "name": "amountLeveragedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 267,
                        "src": "3057:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 273,
                        "name": "btcDown",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 174,
                        "src": "3044:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BTCDOWN_$123",
                          "typeString": "contract BTCDOWN"
                        }
                      },
                      "id": 275,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 101,
                      "src": "3044:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3044:35:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 278,
                  "nodeType": "ExpressionStatement",
                  "src": "3044:35:6"
                },
                {
                  "assignments": [
                    281
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 281,
                      "mutability": "mutable",
                      "name": "usdc",
                      "nodeType": "VariableDeclaration",
                      "scope": 331,
                      "src": "3090:11:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$35",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 280,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 279,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 35,
                          "src": "3090:6:6"
                        },
                        "referencedDeclaration": 35,
                        "src": "3090:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$35",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 285,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 283,
                        "name": "addressUsdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 157,
                        "src": "3111:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 282,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "3104:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$35_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3104:19:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$35",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3090:33:6"
                },
                {
                  "expression": {
                    "id": 289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 286,
                      "name": "priceBtcDown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 139,
                      "src": "3133:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 287,
                        "name": "getBtcDownPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 614,
                        "src": "3148:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 288,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3148:17:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3133:32:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 290,
                  "nodeType": "ExpressionStatement",
                  "src": "3133:32:6"
                },
                {
                  "assignments": [
                    292
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 292,
                      "mutability": "mutable",
                      "name": "amountUsdc",
                      "nodeType": "VariableDeclaration",
                      "scope": 331,
                      "src": "3175:18:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 291,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3175:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 302,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        },
                        "id": 300,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3130",
                          "id": 298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3240:2:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "hexValue": "36",
                          "id": 299,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3246:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_6_by_1",
                            "typeString": "int_const 6"
                          },
                          "value": "6"
                        },
                        "src": "3240:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 295,
                            "name": "priceBtcDown",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 139,
                            "src": "3222:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 293,
                            "name": "amountLeveragedTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 267,
                            "src": "3196:21:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 294,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1519,
                          "src": "3196:25:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3196:39:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 297,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1534,
                      "src": "3196:43:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3196:52:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3175:73:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 306,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3285:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 307,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3285:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 310,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "3305:4:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LeveragedTrading_$767",
                                  "typeString": "contract LeveragedTrading"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LeveragedTrading_$767",
                                  "typeString": "contract LeveragedTrading"
                                }
                              ],
                              "id": 309,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3297:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 308,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3297:7:6",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 311,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3297:13:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 312,
                            "name": "amountUsdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 292,
                            "src": "3312:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 304,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 281,
                            "src": "3267:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$35",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25,
                          "src": "3267:17:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3267:56:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520646f6e2774206861766520656e6f7567682055534443",
                        "id": 314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3325:28:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_215257ea0e4feb9c4e88226d908b42335464d28cc634dcc0965acffaf089fb88",
                          "typeString": "literal_string \"You don't have enough USDC\""
                        },
                        "value": "You don't have enough USDC"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_215257ea0e4feb9c4e88226d908b42335464d28cc634dcc0965acffaf089fb88",
                          "typeString": "literal_string \"You don't have enough USDC\""
                        }
                      ],
                      "id": 303,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3259:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3259:95:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 316,
                  "nodeType": "ExpressionStatement",
                  "src": "3259:95:6"
                },
                {
                  "expression": {
                    "id": 322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 317,
                      "name": "amountBtcDown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 151,
                      "src": "3365:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 320,
                          "name": "amountLeveragedTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 267,
                          "src": "3399:21:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 318,
                          "name": "amountBtcDown",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 151,
                          "src": "3381:13:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 319,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1489,
                        "src": "3381:17:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 321,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3381:40:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3365:56:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 323,
                  "nodeType": "ExpressionStatement",
                  "src": "3365:56:6"
                },
                {
                  "expression": {
                    "id": 329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 324,
                      "name": "collateralBtcDown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 145,
                      "src": "3431:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 327,
                          "name": "amountUsdc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 292,
                          "src": "3473:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 325,
                          "name": "collateralBtcDown",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 145,
                          "src": "3451:17:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1489,
                        "src": "3451:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 328,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3451:33:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3431:53:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 330,
                  "nodeType": "ExpressionStatement",
                  "src": "3431:53:6"
                }
              ]
            },
            "functionSelector": "c46d4f09",
            "id": 332,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "issueBtcDown",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 268,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 267,
                  "mutability": "mutable",
                  "name": "amountLeveragedTokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 332,
                  "src": "2960:29:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 266,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2960:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2959:31:6"
            },
            "returnParameters": {
              "id": 269,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2998:0:6"
            },
            "scope": 767,
            "src": "2938:553:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 394,
              "nodeType": "Block",
              "src": "3558:457:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 337,
                      "name": "rebalanceLeveragedTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 524,
                      "src": "3568:24:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3568:26:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 339,
                  "nodeType": "ExpressionStatement",
                  "src": "3568:26:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 343,
                        "name": "amountLeveragedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 334,
                        "src": "3615:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 340,
                        "name": "btcUp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 167,
                        "src": "3604:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BTCUP_$79",
                          "typeString": "contract BTCUP"
                        }
                      },
                      "id": 342,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 69,
                      "src": "3604:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3604:33:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 345,
                  "nodeType": "ExpressionStatement",
                  "src": "3604:33:6"
                },
                {
                  "assignments": [
                    348
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 348,
                      "mutability": "mutable",
                      "name": "usdc",
                      "nodeType": "VariableDeclaration",
                      "scope": 394,
                      "src": "3648:11:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$35",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 347,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 346,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 35,
                          "src": "3648:6:6"
                        },
                        "referencedDeclaration": 35,
                        "src": "3648:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$35",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 352,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 350,
                        "name": "addressUsdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 157,
                        "src": "3669:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 349,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "3662:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$35_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3662:19:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$35",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3648:33:6"
                },
                {
                  "expression": {
                    "id": 356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 353,
                      "name": "priceBtcUp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 134,
                      "src": "3691:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 354,
                        "name": "getBtcUpPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 593,
                        "src": "3704:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 355,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3704:15:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3691:28:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 357,
                  "nodeType": "ExpressionStatement",
                  "src": "3691:28:6"
                },
                {
                  "assignments": [
                    359
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 359,
                      "mutability": "mutable",
                      "name": "amountUsdc",
                      "nodeType": "VariableDeclaration",
                      "scope": 394,
                      "src": "3730:18:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 358,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3730:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 369,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        },
                        "id": 367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3130",
                          "id": 365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3793:2:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "hexValue": "36",
                          "id": 366,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3799:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_6_by_1",
                            "typeString": "int_const 6"
                          },
                          "value": "6"
                        },
                        "src": "3793:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 362,
                            "name": "priceBtcUp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 134,
                            "src": "3777:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 360,
                            "name": "amountLeveragedTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 334,
                            "src": "3751:21:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 361,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1519,
                          "src": "3751:25:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3751:37:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 364,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1534,
                      "src": "3751:41:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3751:50:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3730:71:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 373,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3833:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 374,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3833:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 375,
                            "name": "amountUsdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 359,
                            "src": "3845:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 371,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 348,
                            "src": "3819:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$35",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 372,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14,
                          "src": "3819:13:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3819:37:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f756768207573646320617661696c61626c65",
                        "id": 377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3858:27:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_11e0d42ca67e4d2b1a22b36c1afaf70b8acf7fd68b23b01ee92fff5e749db362",
                          "typeString": "literal_string \"Not enough usdc available\""
                        },
                        "value": "Not enough usdc available"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_11e0d42ca67e4d2b1a22b36c1afaf70b8acf7fd68b23b01ee92fff5e749db362",
                          "typeString": "literal_string \"Not enough usdc available\""
                        }
                      ],
                      "id": 370,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3811:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3811:75:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 379,
                  "nodeType": "ExpressionStatement",
                  "src": "3811:75:6"
                },
                {
                  "expression": {
                    "id": 385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 380,
                      "name": "amountBtcUp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 148,
                      "src": "3897:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 383,
                          "name": "amountLeveragedTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 334,
                          "src": "3927:21:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 381,
                          "name": "amountBtcUp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 148,
                          "src": "3911:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1504,
                        "src": "3911:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 384,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3911:38:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3897:52:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 386,
                  "nodeType": "ExpressionStatement",
                  "src": "3897:52:6"
                },
                {
                  "expression": {
                    "id": 392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 387,
                      "name": "collateralBtcUp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 142,
                      "src": "3959:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 390,
                          "name": "amountUsdc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 359,
                          "src": "3997:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 388,
                          "name": "collateralBtcUp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 142,
                          "src": "3977:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1504,
                        "src": "3977:19:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 391,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3977:31:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3959:49:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 393,
                  "nodeType": "ExpressionStatement",
                  "src": "3959:49:6"
                }
              ]
            },
            "functionSelector": "d1ee539d",
            "id": 395,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redeemBtcUp",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 335,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 334,
                  "mutability": "mutable",
                  "name": "amountLeveragedTokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 395,
                  "src": "3520:29:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 333,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3520:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3519:31:6"
            },
            "returnParameters": {
              "id": 336,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3558:0:6"
            },
            "scope": 767,
            "src": "3499:516:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 457,
              "nodeType": "Block",
              "src": "4084:479:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 400,
                      "name": "rebalanceLeveragedTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 524,
                      "src": "4094:24:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4094:26:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 402,
                  "nodeType": "ExpressionStatement",
                  "src": "4094:26:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 406,
                        "name": "amountLeveragedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 397,
                        "src": "4143:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 403,
                        "name": "btcDown",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 174,
                        "src": "4130:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BTCDOWN_$123",
                          "typeString": "contract BTCDOWN"
                        }
                      },
                      "id": 405,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 113,
                      "src": "4130:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4130:35:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 408,
                  "nodeType": "ExpressionStatement",
                  "src": "4130:35:6"
                },
                {
                  "assignments": [
                    411
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 411,
                      "mutability": "mutable",
                      "name": "usdc",
                      "nodeType": "VariableDeclaration",
                      "scope": 457,
                      "src": "4176:11:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$35",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 410,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 409,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 35,
                          "src": "4176:6:6"
                        },
                        "referencedDeclaration": 35,
                        "src": "4176:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$35",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 415,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 413,
                        "name": "addressUsdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 157,
                        "src": "4197:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 412,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "4190:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$35_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4190:19:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$35",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4176:33:6"
                },
                {
                  "expression": {
                    "id": 419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 416,
                      "name": "priceBtcDown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 139,
                      "src": "4219:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 417,
                        "name": "getBtcDownPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 614,
                        "src": "4234:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 418,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4234:17:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4219:32:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 420,
                  "nodeType": "ExpressionStatement",
                  "src": "4219:32:6"
                },
                {
                  "assignments": [
                    422
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 422,
                      "mutability": "mutable",
                      "name": "amountUsdc",
                      "nodeType": "VariableDeclaration",
                      "scope": 457,
                      "src": "4266:18:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 421,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4266:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 432,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        },
                        "id": 430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3130",
                          "id": 428,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4331:2:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "hexValue": "36",
                          "id": 429,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4337:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_6_by_1",
                            "typeString": "int_const 6"
                          },
                          "value": "6"
                        },
                        "src": "4331:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 425,
                            "name": "priceBtcDown",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 139,
                            "src": "4313:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 423,
                            "name": "amountLeveragedTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 397,
                            "src": "4287:21:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 424,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1519,
                          "src": "4287:25:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 426,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4287:39:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 427,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1534,
                      "src": "4287:43:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4287:52:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4266:73:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 436,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4371:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 437,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4371:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 438,
                            "name": "amountUsdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 422,
                            "src": "4384:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 434,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 411,
                            "src": "4357:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$35",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 435,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14,
                          "src": "4357:13:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4357:38:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f756768207573646320617661696c61626c65",
                        "id": 440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4397:27:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_11e0d42ca67e4d2b1a22b36c1afaf70b8acf7fd68b23b01ee92fff5e749db362",
                          "typeString": "literal_string \"Not enough usdc available\""
                        },
                        "value": "Not enough usdc available"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_11e0d42ca67e4d2b1a22b36c1afaf70b8acf7fd68b23b01ee92fff5e749db362",
                          "typeString": "literal_string \"Not enough usdc available\""
                        }
                      ],
                      "id": 433,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4349:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4349:76:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 442,
                  "nodeType": "ExpressionStatement",
                  "src": "4349:76:6"
                },
                {
                  "expression": {
                    "id": 448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 443,
                      "name": "amountBtcDown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 151,
                      "src": "4436:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 446,
                          "name": "amountLeveragedTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 397,
                          "src": "4470:21:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 444,
                          "name": "amountBtcDown",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 151,
                          "src": "4452:13:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 445,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1504,
                        "src": "4452:17:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 447,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4452:40:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4436:56:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 449,
                  "nodeType": "ExpressionStatement",
                  "src": "4436:56:6"
                },
                {
                  "expression": {
                    "id": 455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 450,
                      "name": "collateralBtcDown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 145,
                      "src": "4502:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 453,
                          "name": "amountUsdc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 422,
                          "src": "4544:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 451,
                          "name": "collateralBtcDown",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 145,
                          "src": "4522:17:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1504,
                        "src": "4522:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 454,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4522:33:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4502:53:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 456,
                  "nodeType": "ExpressionStatement",
                  "src": "4502:53:6"
                }
              ]
            },
            "functionSelector": "a14274e8",
            "id": 458,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redeemBtcDown",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 398,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 397,
                  "mutability": "mutable",
                  "name": "amountLeveragedTokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 458,
                  "src": "4046:29:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 396,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4046:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4045:31:6"
            },
            "returnParameters": {
              "id": 399,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4084:0:6"
            },
            "scope": 767,
            "src": "4023:540:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 523,
              "nodeType": "Block",
              "src": "4614:611:6",
              "statements": [
                {
                  "assignments": [
                    462
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 462,
                      "mutability": "mutable",
                      "name": "btcPrice",
                      "nodeType": "VariableDeclaration",
                      "scope": 523,
                      "src": "4624:16:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 461,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4624:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 465,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 463,
                      "name": "getBtcPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 638,
                      "src": "4643:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4643:13:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4624:32:6"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 468,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 466,
                            "name": "collateralBtcUp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 142,
                            "src": "4671:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 467,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4689:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4671:19:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 469,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4670:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 472,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 470,
                            "name": "collateralBtcDown",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 145,
                            "src": "4696:17:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 471,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4716:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4696:21:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 473,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4695:23:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4670:48:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 518,
                  "nodeType": "IfStatement",
                  "src": "4666:519:6",
                  "trueBody": {
                    "id": 517,
                    "nodeType": "Block",
                    "src": "4720:465:6",
                    "statements": [
                      {
                        "assignments": [
                          476
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 476,
                            "mutability": "mutable",
                            "name": "rebalanceAmount",
                            "nodeType": "VariableDeclaration",
                            "scope": 517,
                            "src": "4734:23:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 475,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4734:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 480,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 478,
                              "name": "btcPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 462,
                              "src": "4779:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 477,
                            "name": "getRebalanceAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 572,
                            "src": "4760:18:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view returns (uint256)"
                            }
                          },
                          "id": 479,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4760:28:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4734:54:6"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          },
                          "id": 485,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 482,
                                "name": "btcPrice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 462,
                                "src": "4814:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 481,
                              "name": "getSign",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 543,
                              "src": "4806:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_int256_$",
                                "typeString": "function (uint256) view returns (int256)"
                              }
                            },
                            "id": 483,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4806:17:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 484,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4826:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4806:21:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 515,
                          "nodeType": "Block",
                          "src": "5011:163:6",
                          "statements": [
                            {
                              "expression": {
                                "id": 506,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 501,
                                  "name": "collateralBtcUp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 142,
                                  "src": "5029:15:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 504,
                                      "name": "rebalanceAmount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 476,
                                      "src": "5067:15:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 502,
                                      "name": "collateralBtcUp",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 142,
                                      "src": "5047:15:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 503,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sub",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1504,
                                    "src": "5047:19:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 505,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5047:36:6",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5029:54:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 507,
                              "nodeType": "ExpressionStatement",
                              "src": "5029:54:6"
                            },
                            {
                              "expression": {
                                "id": 513,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 508,
                                  "name": "collateralBtcDown",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 145,
                                  "src": "5101:17:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 511,
                                      "name": "rebalanceAmount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 476,
                                      "src": "5143:15:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 509,
                                      "name": "collateralBtcDown",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 145,
                                      "src": "5121:17:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 510,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "add",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1489,
                                    "src": "5121:21:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 512,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5121:38:6",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5101:58:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 514,
                              "nodeType": "ExpressionStatement",
                              "src": "5101:58:6"
                            }
                          ]
                        },
                        "id": 516,
                        "nodeType": "IfStatement",
                        "src": "4802:372:6",
                        "trueBody": {
                          "id": 500,
                          "nodeType": "Block",
                          "src": "4829:163:6",
                          "statements": [
                            {
                              "expression": {
                                "id": 491,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 486,
                                  "name": "collateralBtcUp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 142,
                                  "src": "4847:15:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 489,
                                      "name": "rebalanceAmount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 476,
                                      "src": "4885:15:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 487,
                                      "name": "collateralBtcUp",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 142,
                                      "src": "4865:15:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 488,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "add",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1489,
                                    "src": "4865:19:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 490,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4865:36:6",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4847:54:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 492,
                              "nodeType": "ExpressionStatement",
                              "src": "4847:54:6"
                            },
                            {
                              "expression": {
                                "id": 498,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 493,
                                  "name": "collateralBtcDown",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 145,
                                  "src": "4919:17:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 496,
                                      "name": "rebalanceAmount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 476,
                                      "src": "4961:15:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 494,
                                      "name": "collateralBtcDown",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 145,
                                      "src": "4939:17:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 495,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sub",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1504,
                                    "src": "4939:21:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 497,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4939:38:6",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4919:58:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 499,
                              "nodeType": "ExpressionStatement",
                              "src": "4919:58:6"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 521,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 519,
                      "name": "lastBtcPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 154,
                      "src": "5195:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 520,
                      "name": "btcPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 462,
                      "src": "5210:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5195:23:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 522,
                  "nodeType": "ExpressionStatement",
                  "src": "5195:23:6"
                }
              ]
            },
            "functionSelector": "6e5d6615",
            "id": 524,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "rebalanceLeveragedTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 459,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4604:2:6"
            },
            "returnParameters": {
              "id": 460,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4614:0:6"
            },
            "scope": 767,
            "src": "4571:654:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 542,
              "nodeType": "Block",
              "src": "5467:126:6",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 531,
                      "name": "btcPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 526,
                      "src": "5481:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 532,
                      "name": "lastBtcPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 154,
                      "src": "5492:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5481:23:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 540,
                    "nodeType": "Block",
                    "src": "5553:34:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 538,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "-",
                          "prefix": true,
                          "src": "5574:2:6",
                          "subExpression": {
                            "hexValue": "31",
                            "id": 537,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5575:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_minus_1_by_1",
                            "typeString": "int_const -1"
                          }
                        },
                        "functionReturnParameters": 530,
                        "id": 539,
                        "nodeType": "Return",
                        "src": "5567:9:6"
                      }
                    ]
                  },
                  "id": 541,
                  "nodeType": "IfStatement",
                  "src": "5477:110:6",
                  "trueBody": {
                    "id": 536,
                    "nodeType": "Block",
                    "src": "5506:33:6",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "31",
                          "id": 534,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5527:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "functionReturnParameters": 530,
                        "id": 535,
                        "nodeType": "Return",
                        "src": "5520:8:6"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 543,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSign",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 527,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 526,
                  "mutability": "mutable",
                  "name": "btcPrice",
                  "nodeType": "VariableDeclaration",
                  "scope": 543,
                  "src": "5419:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 525,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5419:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5418:18:6"
            },
            "returnParameters": {
              "id": 530,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 529,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 543,
                  "src": "5460:6:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 528,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5460:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5459:8:6"
            },
            "scope": 767,
            "src": "5402:191:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 571,
              "nodeType": "Block",
              "src": "5678:147:6",
              "statements": [
                {
                  "assignments": [
                    551
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 551,
                      "mutability": "mutable",
                      "name": "priceDiff",
                      "nodeType": "VariableDeclaration",
                      "scope": 571,
                      "src": "5688:17:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 550,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5688:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 555,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 553,
                        "name": "priceBtc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 545,
                        "src": "5721:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 552,
                      "name": "getPriceDiff",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 742,
                      "src": "5708:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5708:22:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5688:42:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        },
                        "id": 568,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3130",
                          "id": 566,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5810:2:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "hexValue": "36",
                          "id": 567,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5816:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_6_by_1",
                            "typeString": "int_const 6"
                          },
                          "value": "6"
                        },
                        "src": "5810:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 562,
                                "name": "priceDiff",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 551,
                                "src": "5794:9:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 561,
                              "name": "L",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 698,
                              "src": "5792:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256) pure returns (uint256)"
                              }
                            },
                            "id": 563,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5792:12:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 557,
                                "name": "collateralBtcUp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 142,
                                "src": "5752:15:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 558,
                                "name": "collateralBtcDown",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 145,
                                "src": "5769:17:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 556,
                              "name": "min",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 655,
                              "src": "5748:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 559,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5748:39:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 560,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1519,
                          "src": "5748:43:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 564,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5748:57:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 565,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1534,
                      "src": "5748:61:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5748:70:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 549,
                  "id": 570,
                  "nodeType": "Return",
                  "src": "5741:77:6"
                }
              ]
            },
            "id": 572,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRebalanceAmount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 546,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 545,
                  "mutability": "mutable",
                  "name": "priceBtc",
                  "nodeType": "VariableDeclaration",
                  "scope": 572,
                  "src": "5629:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 544,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5629:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5628:18:6"
            },
            "returnParameters": {
              "id": 549,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 548,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 572,
                  "src": "5670:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 547,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5670:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5669:9:6"
            },
            "scope": 767,
            "src": "5601:224:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 592,
              "nodeType": "Block",
              "src": "5917:102:6",
              "statements": [
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 579,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 577,
                        "name": "amountBtcUp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 148,
                        "src": "5934:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 578,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5949:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "5934:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "arguments": [
                        {
                          "id": 588,
                          "name": "amountBtcUp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 148,
                          "src": "6000:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              },
                              "id": 585,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 583,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5987:2:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "36",
                                "id": 584,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5993:1:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_6_by_1",
                                  "typeString": "int_const 6"
                                },
                                "value": "6"
                              },
                              "src": "5987:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              }
                            ],
                            "expression": {
                              "id": 581,
                              "name": "collateralBtcUp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 142,
                              "src": "5967:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 582,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1519,
                            "src": "5967:19:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 586,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5967:28:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 587,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1534,
                        "src": "5967:32:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 589,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5967:45:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "5934:78:6",
                    "trueExpression": {
                      "id": 580,
                      "name": "priceBtcUp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 134,
                      "src": "5954:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 576,
                  "id": 591,
                  "nodeType": "Return",
                  "src": "5927:85:6"
                }
              ]
            },
            "functionSelector": "f06847d6",
            "id": 593,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBtcUpPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 573,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5884:2:6"
            },
            "returnParameters": {
              "id": 576,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 575,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 593,
                  "src": "5908:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 574,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5908:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5907:9:6"
            },
            "scope": 767,
            "src": "5862:157:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 613,
              "nodeType": "Block",
              "src": "6115:122:6",
              "statements": [
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 600,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 598,
                        "name": "amountBtcDown",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 151,
                        "src": "6144:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 599,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6161:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "6144:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "arguments": [
                        {
                          "id": 609,
                          "name": "amountBtcDown",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 151,
                          "src": "6216:13:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              },
                              "id": 606,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 604,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6203:2:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "36",
                                "id": 605,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6209:1:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_6_by_1",
                                  "typeString": "int_const 6"
                                },
                                "value": "6"
                              },
                              "src": "6203:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              }
                            ],
                            "expression": {
                              "id": 602,
                              "name": "collateralBtcDown",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 145,
                              "src": "6181:17:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 603,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1519,
                            "src": "6181:21:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 607,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6181:30:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 608,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1534,
                        "src": "6181:34:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 610,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6181:49:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 611,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "6144:86:6",
                    "trueExpression": {
                      "id": 601,
                      "name": "priceBtcDown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 139,
                      "src": "6166:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 597,
                  "id": 612,
                  "nodeType": "Return",
                  "src": "6137:93:6"
                }
              ]
            },
            "functionSelector": "81c2b29b",
            "id": 614,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBtcDownPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 594,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6082:2:6"
            },
            "returnParameters": {
              "id": 597,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 596,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 614,
                  "src": "6106:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 595,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6106:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6105:9:6"
            },
            "scope": 767,
            "src": "6058:179:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 637,
              "nodeType": "Block",
              "src": "6343:264:6",
              "statements": [
                {
                  "assignments": [
                    621
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 621,
                      "mutability": "mutable",
                      "name": "priceFeed",
                      "nodeType": "VariableDeclaration",
                      "scope": 637,
                      "src": "6353:31:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$1671",
                        "typeString": "contract AggregatorV3Interface"
                      },
                      "typeName": {
                        "id": 620,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 619,
                          "name": "AggregatorV3Interface",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1671,
                          "src": "6353:21:6"
                        },
                        "referencedDeclaration": 1671,
                        "src": "6353:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$1671",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 625,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 623,
                        "name": "addressBtcUSDFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 160,
                        "src": "6409:17:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 622,
                      "name": "AggregatorV3Interface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1671,
                      "src": "6387:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$1671_$",
                        "typeString": "type(contract AggregatorV3Interface)"
                      }
                    },
                    "id": 624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6387:40:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$1671",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6353:74:6"
                },
                {
                  "assignments": [
                    null,
                    627,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 627,
                      "mutability": "mutable",
                      "name": "answer",
                      "nodeType": "VariableDeclaration",
                      "scope": 637,
                      "src": "6439:13:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 626,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6439:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null
                  ],
                  "id": 631,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 628,
                        "name": "priceFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 621,
                        "src": "6459:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$1671",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 629,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1670,
                      "src": "6459:25:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6459:27:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6437:49:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 634,
                        "name": "answer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 627,
                        "src": "6513:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 633,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "6505:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 632,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6505:7:6",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6505:15:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 618,
                  "id": 636,
                  "nodeType": "Return",
                  "src": "6498:22:6"
                }
              ]
            },
            "functionSelector": "3a3610bc",
            "id": 638,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBtcPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 615,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6310:2:6"
            },
            "returnParameters": {
              "id": 618,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 617,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 638,
                  "src": "6334:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 616,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6334:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6333:9:6"
            },
            "scope": 767,
            "src": "6290:317:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 654,
              "nodeType": "Block",
              "src": "6685:38:6",
              "statements": [
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 649,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 647,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 640,
                        "src": "6702:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<=",
                      "rightExpression": {
                        "id": 648,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 642,
                        "src": "6707:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6702:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 651,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 642,
                      "src": "6715:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "6702:14:6",
                    "trueExpression": {
                      "id": 650,
                      "name": "a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 640,
                      "src": "6711:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 646,
                  "id": 653,
                  "nodeType": "Return",
                  "src": "6695:21:6"
                }
              ]
            },
            "id": 655,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "min",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 643,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 640,
                  "mutability": "mutable",
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 655,
                  "src": "6631:9:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 639,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6631:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 642,
                  "mutability": "mutable",
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 655,
                  "src": "6642:9:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 641,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6642:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6630:22:6"
            },
            "returnParameters": {
              "id": 646,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 645,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 655,
                  "src": "6676:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 644,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6676:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6675:9:6"
            },
            "scope": 767,
            "src": "6618:105:6",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 697,
              "nodeType": "Block",
              "src": "6784:171:6",
              "statements": [
                {
                  "assignments": [
                    663
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 663,
                      "mutability": "mutable",
                      "name": "denom",
                      "nodeType": "VariableDeclaration",
                      "scope": 697,
                      "src": "6820:13:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 662,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6820:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 682,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 677,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 673,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "39",
                          "id": 664,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6836:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_9_by_1",
                            "typeString": "int_const 9"
                          },
                          "value": "9"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 671,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 667,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 665,
                                  "name": "x",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 657,
                                  "src": "6841:1:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "hexValue": "32",
                                  "id": 666,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6846:1:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "src": "6841:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_rational_1000000_by_1",
                                  "typeString": "int_const 1000000"
                                },
                                "id": 670,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "3130",
                                  "id": 668,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6850:2:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10_by_1",
                                    "typeString": "int_const 10"
                                  },
                                  "value": "10"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "hexValue": "36",
                                  "id": 669,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6856:1:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_6_by_1",
                                    "typeString": "int_const 6"
                                  },
                                  "value": "6"
                                },
                                "src": "6850:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000_by_1",
                                  "typeString": "int_const 1000000"
                                }
                              },
                              "src": "6841:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 672,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "6840:18:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6836:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 676,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "33",
                          "id": 674,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6862:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "id": 675,
                          "name": "x",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 657,
                          "src": "6866:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6862:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6836:31:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_rational_1000000_by_1",
                        "typeString": "int_const 1000000"
                      },
                      "id": 680,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3130",
                        "id": 678,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6870:2:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "hexValue": "36",
                        "id": 679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6876:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        },
                        "value": "6"
                      },
                      "src": "6870:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000_by_1",
                        "typeString": "int_const 1000000"
                      }
                    },
                    "src": "6836:41:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6820:57:6"
                },
                {
                  "assignments": [
                    684
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 684,
                      "mutability": "mutable",
                      "name": "num",
                      "nodeType": "VariableDeclaration",
                      "scope": 697,
                      "src": "6887:11:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 683,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6887:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 688,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_rational_1000000000000_by_1",
                      "typeString": "int_const 1000000000000"
                    },
                    "id": 687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3130",
                      "id": 685,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6901:2:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "hexValue": "3132",
                      "id": 686,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6907:2:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_12_by_1",
                        "typeString": "int_const 12"
                      },
                      "value": "12"
                    },
                    "src": "6901:8:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000000_by_1",
                      "typeString": "int_const 1000000000000"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6887:22:6"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_rational_1000000_by_1",
                        "typeString": "int_const 1000000"
                      },
                      "id": 691,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3130",
                        "id": 689,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6927:2:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "hexValue": "36",
                        "id": 690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6933:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        },
                        "value": "6"
                      },
                      "src": "6927:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000_by_1",
                        "typeString": "int_const 1000000"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 694,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 692,
                        "name": "num",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 684,
                        "src": "6937:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "id": 693,
                        "name": "denom",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 663,
                        "src": "6943:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6937:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6927:21:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 661,
                  "id": 696,
                  "nodeType": "Return",
                  "src": "6920:28:6"
                }
              ]
            },
            "id": 698,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "L",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 658,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 657,
                  "mutability": "mutable",
                  "name": "x",
                  "nodeType": "VariableDeclaration",
                  "scope": 698,
                  "src": "6741:9:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 656,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6741:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6740:11:6"
            },
            "returnParameters": {
              "id": 661,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 660,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 698,
                  "src": "6775:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 659,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6775:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6774:9:6"
            },
            "scope": 767,
            "src": "6730:225:6",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 741,
              "nodeType": "Block",
              "src": "7035:246:6",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 705,
                      "name": "btcPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 700,
                      "src": "7066:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 706,
                      "name": "lastBtcPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 154,
                      "src": "7077:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7066:23:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 739,
                    "nodeType": "Block",
                    "src": "7190:84:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              },
                              "id": 736,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 734,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7255:2:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "36",
                                "id": 735,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7261:1:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_6_by_1",
                                  "typeString": "int_const 6"
                                },
                                "value": "6"
                              },
                              "src": "7255:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 731,
                                  "name": "btcPrice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 700,
                                  "src": "7241:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_rational_1000000_by_1",
                                        "typeString": "int_const 1000000"
                                      },
                                      "id": 728,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "hexValue": "3130",
                                        "id": 726,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7228:2:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_10_by_1",
                                          "typeString": "int_const 10"
                                        },
                                        "value": "10"
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "**",
                                      "rightExpression": {
                                        "hexValue": "36",
                                        "id": 727,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7234:1:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_6_by_1",
                                          "typeString": "int_const 6"
                                        },
                                        "value": "6"
                                      },
                                      "src": "7228:7:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1000000_by_1",
                                        "typeString": "int_const 1000000"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_1000000_by_1",
                                        "typeString": "int_const 1000000"
                                      }
                                    ],
                                    "expression": {
                                      "id": 724,
                                      "name": "lastBtcPrice",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 154,
                                      "src": "7211:12:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 725,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1519,
                                    "src": "7211:16:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 729,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7211:25:6",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 730,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1534,
                                "src": "7211:29:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 732,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7211:39:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 733,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1504,
                            "src": "7211:43:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 737,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7211:52:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 704,
                        "id": 738,
                        "nodeType": "Return",
                        "src": "7204:59:6"
                      }
                    ]
                  },
                  "id": 740,
                  "nodeType": "IfStatement",
                  "src": "7062:212:6",
                  "trueBody": {
                    "id": 723,
                    "nodeType": "Block",
                    "src": "7091:84:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              },
                              "id": 720,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 718,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7156:2:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "36",
                                "id": 719,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7162:1:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_6_by_1",
                                  "typeString": "int_const 6"
                                },
                                "value": "6"
                              },
                              "src": "7156:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 715,
                                  "name": "lastBtcPrice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 154,
                                  "src": "7138:12:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_rational_1000000_by_1",
                                        "typeString": "int_const 1000000"
                                      },
                                      "id": 712,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "hexValue": "3130",
                                        "id": 710,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7125:2:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_10_by_1",
                                          "typeString": "int_const 10"
                                        },
                                        "value": "10"
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "**",
                                      "rightExpression": {
                                        "hexValue": "36",
                                        "id": 711,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7131:1:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_6_by_1",
                                          "typeString": "int_const 6"
                                        },
                                        "value": "6"
                                      },
                                      "src": "7125:7:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1000000_by_1",
                                        "typeString": "int_const 1000000"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_1000000_by_1",
                                        "typeString": "int_const 1000000"
                                      }
                                    ],
                                    "expression": {
                                      "id": 708,
                                      "name": "btcPrice",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 700,
                                      "src": "7112:8:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 709,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1519,
                                    "src": "7112:12:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 713,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7112:21:6",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 714,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1534,
                                "src": "7112:25:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 716,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7112:39:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 717,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1504,
                            "src": "7112:43:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 721,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7112:52:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 704,
                        "id": 722,
                        "nodeType": "Return",
                        "src": "7105:59:6"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 742,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPriceDiff",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 701,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 700,
                  "mutability": "mutable",
                  "name": "btcPrice",
                  "nodeType": "VariableDeclaration",
                  "scope": 742,
                  "src": "6985:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 699,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6985:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6984:18:6"
            },
            "returnParameters": {
              "id": 704,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 703,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 742,
                  "src": "7026:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 702,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7026:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7025:9:6"
            },
            "scope": 767,
            "src": "6963:318:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 753,
              "nodeType": "Block",
              "src": "7344:51:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 749,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7377:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 750,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7377:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 747,
                        "name": "btcUp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 167,
                        "src": "7361:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BTCUP_$79",
                          "typeString": "contract BTCUP"
                        }
                      },
                      "id": 748,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 866,
                      "src": "7361:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 751,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7361:27:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 746,
                  "id": 752,
                  "nodeType": "Return",
                  "src": "7354:34:6"
                }
              ]
            },
            "functionSelector": "157d0129",
            "id": 754,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBtcupBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 743,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7312:2:6"
            },
            "returnParameters": {
              "id": 746,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 745,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 754,
                  "src": "7335:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 744,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7335:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7334:9:6"
            },
            "scope": 767,
            "src": "7288:107:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 765,
              "nodeType": "Block",
              "src": "7460:53:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 761,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7495:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 762,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7495:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 759,
                        "name": "btcDown",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 174,
                        "src": "7477:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BTCDOWN_$123",
                          "typeString": "contract BTCDOWN"
                        }
                      },
                      "id": 760,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 866,
                      "src": "7477:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7477:29:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 758,
                  "id": 764,
                  "nodeType": "Return",
                  "src": "7470:36:6"
                }
              ]
            },
            "functionSelector": "c7e3b124",
            "id": 766,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBtcdownBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 755,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7428:2:6"
            },
            "returnParameters": {
              "id": 758,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 757,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 766,
                  "src": "7451:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 756,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7451:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7450:9:6"
            },
            "scope": 767,
            "src": "7402:111:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 768,
        "src": "1261:6256:6"
      }
    ],
    "src": "32:7485:6"
  },
  "bytecode": "60806040523480156200001157600080fd5b50604080518082018252600c81526b2134ba31b7b4b7102237bbb760a11b602080830191825283518085019094526007845266212a21a227aba760c91b908401528151919291620000659160039162000084565b5080516200007b90600490602084019062000084565b50505062000167565b82805462000092906200012a565b90600052602060002090601f016020900481019282620000b6576000855562000101565b82601f10620000d157805160ff191683800117855562000101565b8280016001018555821562000101579182015b8281111562000101578251825591602001919060010190620000e4565b506200010f92915062000113565b5090565b5b808211156200010f576000815560010162000114565b6002810460018216806200013f57607f821691505b602082108114156200016157634e487b7160e01b600052602260045260246000fd5b50919050565b610cce80620001776000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806342966c681161008c578063a0712d6811610066578063a0712d6814610192578063a457c2d7146101a5578063a9059cbb146101b8578063dd62ed3e146101cb576100cf565b806342966c681461016257806370a082311461017757806395d89b411461018a576100cf565b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461011257806323b872dd14610127578063313ce5671461013a578063395093511461014f575b600080fd5b6100dc6101de565b6040516100e99190610913565b60405180910390f35b6101056101003660046108c7565b610270565b6040516100e99190610908565b61011a61028d565b6040516100e99190610c01565b61010561013536600461088c565b610293565b61014261032c565b6040516100e99190610c0a565b61010561015d3660046108c7565b610331565b6101756101703660046108f0565b610385565b005b61011a610185366004610839565b610392565b6100dc6103b1565b6101756101a03660046108f0565b6103c0565b6101056101b33660046108c7565b6103ca565b6101056101c63660046108c7565b610443565b61011a6101d936600461085a565b610457565b6060600380546101ed90610c47565b80601f016020809104026020016040519081016040528092919081815260200182805461021990610c47565b80156102665780601f1061023b57610100808354040283529160200191610266565b820191906000526020600020905b81548152906001019060200180831161024957829003601f168201915b5050505050905090565b600061028461027d610482565b8484610486565b50600192915050565b60025490565b60006102a084848461053a565b6001600160a01b0384166000908152600160205260408120816102c1610482565b6001600160a01b03166001600160a01b031681526020019081526020016000205490508281101561030d5760405162461bcd60e51b815260040161030490610a73565b60405180910390fd5b61032185610319610482565b858403610486565b506001949350505050565b600690565b600061028461033e610482565b84846001600061034c610482565b6001600160a01b03908116825260208083019390935260409182016000908120918b16815292529020546103809190610c18565b610486565b61038f3282610664565b50565b6001600160a01b0381166000908152602081905260409020545b919050565b6060600480546101ed90610c47565b61038f3282610756565b600080600160006103d9610482565b6001600160a01b03908116825260208083019390935260409182016000908120918816815292529020549050828110156104255760405162461bcd60e51b815260040161030490610b85565b610439610430610482565b85858403610486565b5060019392505050565b6000610284610450610482565b848461053a565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166104ac5760405162461bcd60e51b815260040161030490610b41565b6001600160a01b0382166104d25760405162461bcd60e51b8152600401610304906109eb565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061052d908590610c01565b60405180910390a3505050565b6001600160a01b0383166105605760405162461bcd60e51b815260040161030490610afc565b6001600160a01b0382166105865760405162461bcd60e51b815260040161030490610966565b610591838383610751565b6001600160a01b038316600090815260208190526040902054818110156105ca5760405162461bcd60e51b815260040161030490610a2d565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610601908490610c18565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161064b9190610c01565b60405180910390a361065e848484610751565b50505050565b6001600160a01b03821661068a5760405162461bcd60e51b815260040161030490610abb565b61069682600083610751565b6001600160a01b038216600090815260208190526040902054818110156106cf5760405162461bcd60e51b8152600401610304906109a9565b6001600160a01b03831660009081526020819052604081208383039055600280548492906106fe908490610c30565b90915550506040516000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610741908690610c01565b60405180910390a3610751836000845b505050565b6001600160a01b03821661077c5760405162461bcd60e51b815260040161030490610bca565b61078860008383610751565b806002600082825461079a9190610c18565b90915550506001600160a01b038216600090815260208190526040812080548392906107c7908490610c18565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061080a908590610c01565b60405180910390a361081e60008383610751565b5050565b80356001600160a01b03811681146103ac57600080fd5b60006020828403121561084a578081fd5b61085382610822565b9392505050565b6000806040838503121561086c578081fd5b61087583610822565b915061088360208401610822565b90509250929050565b6000806000606084860312156108a0578081fd5b6108a984610822565b92506108b760208501610822565b9150604084013590509250925092565b600080604083850312156108d9578182fd5b6108e283610822565b946020939093013593505050565b600060208284031215610901578081fd5b5035919050565b901515815260200190565b6000602080835283518082850152825b8181101561093f57858101830151858201604001528201610923565b818111156109505783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526022908201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604082015261636560f01b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b60208082526028908201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616040820152676c6c6f77616e636560c01b606082015260800190565b60208082526021908201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736040820152607360f81b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604082015264207a65726f60d81b606082015260800190565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b60ff91909116815260200190565b60008219821115610c2b57610c2b610c82565b500190565b600082821015610c4257610c42610c82565b500390565b600281046001821680610c5b57607f821691505b60208210811415610c7c57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea26469706673582212205ea4bb5a8dc6adc8e5152e236f91b777e5a60ecfd6e826d43d2128382e4097e564736f6c63430008000033",
  "bytecodeSha1": "08f51ad49160d4abaa5b3c324d03f5f2670dcaa6",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.0+commit.c7dfd78e"
  },
  "contractName": "BTCDOWN",
  "coverageMap": {
    "branches": {
      "0": {
        "ERC20._approve": {
          "47": [
            10083,
            10102,
            true
          ],
          "48": [
            10161,
            10182,
            true
          ]
        },
        "ERC20._burn": {
          "52": [
            9036,
            9057,
            true
          ],
          "53": [
            9227,
            9251,
            true
          ]
        },
        "ERC20._mint": {
          "54": [
            8327,
            8348,
            true
          ]
        },
        "ERC20._transfer": {
          "49": [
            7390,
            7410,
            true
          ],
          "50": [
            7470,
            7493,
            true
          ],
          "51": [
            7661,
            7684,
            true
          ]
        },
        "ERC20.decreaseAllowance": {
          "46": [
            6564,
            6599,
            true
          ]
        },
        "ERC20.transferFrom": {
          "45": [
            5081,
            5107,
            true
          ]
        }
      },
      "1": {},
      "2": {},
      "3": {},
      "6": {}
    },
    "statements": {
      "0": {
        "ERC20._approve": {
          "20": [
            10075,
            10143
          ],
          "21": [
            10153,
            10221
          ],
          "22": [
            10232,
            10268
          ],
          "23": [
            10278,
            10315
          ]
        },
        "ERC20._burn": {
          "32": [
            9028,
            9095
          ],
          "33": [
            9106,
            9155
          ],
          "34": [
            9219,
            9290
          ],
          "35": [
            9324,
            9368
          ],
          "36": [
            9388,
            9410
          ],
          "37": [
            9421,
            9463
          ],
          "38": [
            9474,
            9522
          ]
        },
        "ERC20._mint": {
          "39": [
            8319,
            8384
          ],
          "40": [
            8395,
            8444
          ],
          "41": [
            8455,
            8477
          ],
          "42": [
            8487,
            8515
          ],
          "43": [
            8525,
            8567
          ],
          "44": [
            8578,
            8626
          ]
        },
        "ERC20._transfer": {
          "24": [
            7382,
            7452
          ],
          "25": [
            7462,
            7533
          ],
          "26": [
            7544,
            7591
          ],
          "27": [
            7653,
            7727
          ],
          "28": [
            7761,
            7803
          ],
          "29": [
            7823,
            7853
          ],
          "30": [
            7864,
            7904
          ],
          "31": [
            7915,
            7961
          ]
        },
        "ERC20.allowance": {
          "18": [
            3992,
            4026
          ]
        },
        "ERC20.approve": {
          "1": [
            4270,
            4309
          ],
          "2": [
            4319,
            4330
          ]
        },
        "ERC20.balanceOf": {
          "11": [
            3419,
            3444
          ]
        },
        "ERC20.decreaseAllowance": {
          "14": [
            6556,
            6641
          ],
          "15": [
            6675,
            6742
          ],
          "16": [
            6763,
            6774
          ]
        },
        "ERC20.increaseAllowance": {
          "9": [
            5781,
            5861
          ]
        },
        "ERC20.name": {
          "0": [
            2153,
            2165
          ]
        },
        "ERC20.symbol": {
          "12": [
            2366,
            2380
          ]
        },
        "ERC20.totalSupply": {
          "3": [
            3242,
            3261
          ]
        },
        "ERC20.transfer": {
          "17": [
            3756,
            3798
          ]
        },
        "ERC20.transferFrom": {
          "4": [
            4956,
            4992
          ],
          "5": [
            5073,
            5152
          ],
          "6": [
            5186,
            5243
          ],
          "7": [
            5264,
            5275
          ]
        }
      },
      "1": {},
      "2": {},
      "3": {
        "Context._msgSender": {
          "19": [
            658,
            675
          ]
        }
      },
      "6": {
        "BTCDOWN.burn": {
          "10": [
            1135,
            1161
          ]
        },
        "BTCDOWN.decimals": {
          "8": [
            1241,
            1249
          ]
        },
        "BTCDOWN.mint": {
          "13": [
            1047,
            1073
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.2.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/ERC20",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/IERC20Metadata"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c806342966c681161008c578063a0712d6811610066578063a0712d6814610192578063a457c2d7146101a5578063a9059cbb146101b8578063dd62ed3e146101cb576100cf565b806342966c681461016257806370a082311461017757806395d89b411461018a576100cf565b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461011257806323b872dd14610127578063313ce5671461013a578063395093511461014f575b600080fd5b6100dc6101de565b6040516100e99190610913565b60405180910390f35b6101056101003660046108c7565b610270565b6040516100e99190610908565b61011a61028d565b6040516100e99190610c01565b61010561013536600461088c565b610293565b61014261032c565b6040516100e99190610c0a565b61010561015d3660046108c7565b610331565b6101756101703660046108f0565b610385565b005b61011a610185366004610839565b610392565b6100dc6103b1565b6101756101a03660046108f0565b6103c0565b6101056101b33660046108c7565b6103ca565b6101056101c63660046108c7565b610443565b61011a6101d936600461085a565b610457565b6060600380546101ed90610c47565b80601f016020809104026020016040519081016040528092919081815260200182805461021990610c47565b80156102665780601f1061023b57610100808354040283529160200191610266565b820191906000526020600020905b81548152906001019060200180831161024957829003601f168201915b5050505050905090565b600061028461027d610482565b8484610486565b50600192915050565b60025490565b60006102a084848461053a565b6001600160a01b0384166000908152600160205260408120816102c1610482565b6001600160a01b03166001600160a01b031681526020019081526020016000205490508281101561030d5760405162461bcd60e51b815260040161030490610a73565b60405180910390fd5b61032185610319610482565b858403610486565b506001949350505050565b600690565b600061028461033e610482565b84846001600061034c610482565b6001600160a01b03908116825260208083019390935260409182016000908120918b16815292529020546103809190610c18565b610486565b61038f3282610664565b50565b6001600160a01b0381166000908152602081905260409020545b919050565b6060600480546101ed90610c47565b61038f3282610756565b600080600160006103d9610482565b6001600160a01b03908116825260208083019390935260409182016000908120918816815292529020549050828110156104255760405162461bcd60e51b815260040161030490610b85565b610439610430610482565b85858403610486565b5060019392505050565b6000610284610450610482565b848461053a565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166104ac5760405162461bcd60e51b815260040161030490610b41565b6001600160a01b0382166104d25760405162461bcd60e51b8152600401610304906109eb565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061052d908590610c01565b60405180910390a3505050565b6001600160a01b0383166105605760405162461bcd60e51b815260040161030490610afc565b6001600160a01b0382166105865760405162461bcd60e51b815260040161030490610966565b610591838383610751565b6001600160a01b038316600090815260208190526040902054818110156105ca5760405162461bcd60e51b815260040161030490610a2d565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610601908490610c18565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161064b9190610c01565b60405180910390a361065e848484610751565b50505050565b6001600160a01b03821661068a5760405162461bcd60e51b815260040161030490610abb565b61069682600083610751565b6001600160a01b038216600090815260208190526040902054818110156106cf5760405162461bcd60e51b8152600401610304906109a9565b6001600160a01b03831660009081526020819052604081208383039055600280548492906106fe908490610c30565b90915550506040516000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610741908690610c01565b60405180910390a3610751836000845b505050565b6001600160a01b03821661077c5760405162461bcd60e51b815260040161030490610bca565b61078860008383610751565b806002600082825461079a9190610c18565b90915550506001600160a01b038216600090815260208190526040812080548392906107c7908490610c18565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061080a908590610c01565b60405180910390a361081e60008383610751565b5050565b80356001600160a01b03811681146103ac57600080fd5b60006020828403121561084a578081fd5b61085382610822565b9392505050565b6000806040838503121561086c578081fd5b61087583610822565b915061088360208401610822565b90509250929050565b6000806000606084860312156108a0578081fd5b6108a984610822565b92506108b760208501610822565b9150604084013590509250925092565b600080604083850312156108d9578182fd5b6108e283610822565b946020939093013593505050565b600060208284031215610901578081fd5b5035919050565b901515815260200190565b6000602080835283518082850152825b8181101561093f57858101830151858201604001528201610923565b818111156109505783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526022908201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604082015261636560f01b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b60208082526028908201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616040820152676c6c6f77616e636560c01b606082015260800190565b60208082526021908201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736040820152607360f81b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604082015264207a65726f60d81b606082015260800190565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b60ff91909116815260200190565b60008219821115610c2b57610c2b610c82565b500190565b600082821015610c4257610c42610c82565b500390565b600281046001821680610c5b57607f821691505b60208210811415610c7c57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea26469706673582212205ea4bb5a8dc6adc8e5152e236f91b777e5a60ecfd6e826d43d2128382e4097e564736f6c63430008000033",
  "deployedSourceMap": "906:352:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:98:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4171:166;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3162:106::-;;;:::i;:::-;;;;;;;:::i;4804:478::-;;;;;;:::i;:::-;;:::i;1174:82:6:-;;;:::i;:::-;;;;;;;:::i;5677:212:0:-;;;;;;:::i;:::-;;:::i;1086:82:6:-;;;;;;:::i;:::-;;:::i;:::-;;3326:125:0;;;;;;:::i;:::-;;:::i;2285:102::-;;;:::i;998:82:6:-;;;;;;:::i;:::-;;:::i;6376:405:0:-;;;;;;:::i;:::-;;:::i;3654:172::-;;;;;;:::i;:::-;;:::i;3884:149::-;;;;;;:::i;:::-;;:::i;2074:98::-;2128:13;2160:5;2153:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:98;:::o;4171:166::-;4254:4;4270:39;4279:12;:10;:12::i;:::-;4293:7;4302:6;4270:8;:39::i;:::-;-1:-1:-1;4326:4:0;4171:166;;;;:::o;3162:106::-;3249:12;;3162:106;:::o;4804:478::-;4940:4;4956:36;4966:6;4974:9;4985:6;4956:9;:36::i;:::-;-1:-1:-1;;;;;5030:19:0;;5003:24;5030:19;;;-1:-1:-1;5030:19:0;;;;;5003:24;5050:12;:10;:12::i;:::-;-1:-1:-1;;;;;5030:33:0;;;;;;;;;;;;-1:-1:-1;5030:33:0;;;-1:-1:-1;5081:26:0;;;;5073:79;;;;-1:-1:-1;;;5073:79:0;;;;;;;:::i;:::-;;;;;;;;;5186:57;5195:6;5203:12;:10;:12::i;:::-;5236:6;5217:16;:25;5186:8;:57::i;:::-;-1:-1:-1;5271:4:0;;4804:478;-1:-1:-1;;;;4804:478:0:o;1174:82:6:-;1248:1;1174:82;:::o;5677:212:0:-;5765:4;5781:80;5790:12;:10;:12::i;:::-;5804:7;5850:10;5813:11;:25;5825:12;:10;:12::i;:::-;-1:-1:-1;;;;;5813:25:0;;;;;;;;;;;;;;;;;-1:-1:-1;5813:25:0;;;:34;;;;;;;;;;:47;;;;:::i;:::-;5781:8;:80::i;1086:82:6:-;1135:26;1141:9;1152:8;1135:5;:26::i;:::-;1086:82;:::o;3326:125:0:-;-1:-1:-1;;;;;3426:18:0;;3400:7;3426:18;;;;;;;;;;;3326:125;;;;:::o;2285:102::-;2341:13;2373:7;2366:14;;;;;:::i;998:82:6:-;1047:26;1053:9;1064:8;1047:5;:26::i;6376:405:0:-;6469:4;6485:24;6512:11;:25;6524:12;:10;:12::i;:::-;-1:-1:-1;;;;;6512:25:0;;;;;;;;;;;;;;;;;-1:-1:-1;6512:25:0;;;:34;;;;;;;;;;;-1:-1:-1;6564:35:0;;;;6556:85;;;;-1:-1:-1;;;6556:85:0;;;;;;;:::i;:::-;6675:67;6684:12;:10;:12::i;:::-;6698:7;6726:15;6707:16;:34;6675:8;:67::i;:::-;-1:-1:-1;6770:4:0;;6376:405;-1:-1:-1;;;6376:405:0:o;3654:172::-;3740:4;3756:42;3766:12;:10;:12::i;:::-;3780:9;3791:6;3756:9;:42::i;3884:149::-;-1:-1:-1;;;;;3999:18:0;;;3973:7;3999:18;;;-1:-1:-1;3999:18:0;;;;;;;;:27;;;;;;;;;;;;;3884:149::o;586:96:3:-;665:10;586:96;:::o;9952:370:0:-;-1:-1:-1;;;;;10083:19:0;;10075:68;;;;-1:-1:-1;;;10075:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;10161:21:0;;10153:68;;;;-1:-1:-1;;;10153:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;10232:18:0;;;;;;;-1:-1:-1;10232:18:0;;;;;;;;:27;;;;;;;;;;;;;;:36;;;10283:32;;;;;10232:36;;10283:32;:::i;:::-;;;;;;;;9952:370;;;:::o;7255:713::-;-1:-1:-1;;;;;7390:20:0;;7382:70;;;;-1:-1:-1;;;7382:70:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;7470:23:0;;7462:71;;;;-1:-1:-1;;;7462:71:0;;;;;;;:::i;:::-;7544:47;7565:6;7573:9;7584:6;7544:20;:47::i;:::-;-1:-1:-1;;;;;7626:17:0;;7602:21;7626:17;;;;;;;;;;;7661:23;;;;7653:74;;;;-1:-1:-1;;;7653:74:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;7761:17:0;;;:9;:17;;;;;;;;;;;7781:22;;;7761:42;;7823:20;;;;;;;;:30;;7781:22;;7761:9;7823:30;;7781:22;;7823:30;:::i;:::-;;;;-1:-1:-1;;7869:35:0;;-1:-1:-1;;;;;7869:35:0;;;;;;;;;;;;7897:6;;7869:35;:::i;:::-;;;;;;;;7915:46;7935:6;7943:9;7954:6;7915:19;:46::i;:::-;7255:713;;;;:::o;8953:576::-;-1:-1:-1;;;;;9036:21:0;;9028:67;;;;-1:-1:-1;;;9028:67:0;;;;;;;:::i;:::-;9106:49;9127:7;9144:1;9148:6;9106:20;:49::i;:::-;-1:-1:-1;;;;;9191:18:0;;9166:22;9191:18;;;;;;;;;;;9227:24;;;;9219:71;;;;-1:-1:-1;;;9219:71:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;9324:18:0;;:9;:18;;;;;;;;;;9345:23;;;9324:44;;9388:12;:22;;9345:23;;9324:9;9388:22;;9345:23;;9388:22;:::i;:::-;;;;-1:-1:-1;;9426:37:0;;9452:1;;-1:-1:-1;;;;;9426:37:0;;;;;;;9456:6;;9426:37;:::i;:::-;;;;;;;;9474:48;9494:7;9511:1;9515:6;9474:48;8953:576;;;:::o;8244:389::-;-1:-1:-1;;;;;8327:21:0;;8319:65;;;;-1:-1:-1;;;8319:65:0;;;;;;;:::i;:::-;8395:49;8424:1;8428:7;8437:6;8395:20;:49::i;:::-;8471:6;8455:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8487:18:0;;:9;:18;;;;;;;;;;:28;;8509:6;;8487:9;:28;;8509:6;;8487:28;:::i;:::-;;;;-1:-1:-1;;8530:37:0;;-1:-1:-1;;;;;8530:37:0;;;8547:1;;8530:37;;;;8560:6;;8530:37;:::i;:::-;;;;;;;;8578:48;8606:1;8610:7;8619:6;8578:19;:48::i;:::-;8244:389;;:::o;14:175:7:-;84:20;;-1:-1:-1;;;;;133:31:7;;123:42;;113:2;;179:1;176;169:12;194:198;;306:2;294:9;285:7;281:23;277:32;274:2;;;327:6;319;312:22;274:2;355:31;376:9;355:31;:::i;:::-;345:41;264:128;-1:-1:-1;;;264:128:7:o;397:274::-;;;526:2;514:9;505:7;501:23;497:32;494:2;;;547:6;539;532:22;494:2;575:31;596:9;575:31;:::i;:::-;565:41;;625:40;661:2;650:9;646:18;625:40;:::i;:::-;615:50;;484:187;;;;;:::o;676:342::-;;;;822:2;810:9;801:7;797:23;793:32;790:2;;;843:6;835;828:22;790:2;871:31;892:9;871:31;:::i;:::-;861:41;;921:40;957:2;946:9;942:18;921:40;:::i;:::-;911:50;;1008:2;997:9;993:18;980:32;970:42;;780:238;;;;;:::o;1023:266::-;;;1152:2;1140:9;1131:7;1127:23;1123:32;1120:2;;;1173:6;1165;1158:22;1120:2;1201:31;1222:9;1201:31;:::i;:::-;1191:41;1279:2;1264:18;;;;1251:32;;-1:-1:-1;;;1110:179:7:o;1294:190::-;;1406:2;1394:9;1385:7;1381:23;1377:32;1374:2;;;1427:6;1419;1412:22;1374:2;-1:-1:-1;1455:23:7;;1364:120;-1:-1:-1;1364:120:7:o;1489:187::-;1654:14;;1647:22;1629:41;;1617:2;1602:18;;1584:92::o;1681:603::-;;1822:2;1851;1840:9;1833:21;1883:6;1877:13;1926:6;1921:2;1910:9;1906:18;1899:34;1951:4;1964:140;1978:6;1975:1;1972:13;1964:140;;;2073:14;;;2069:23;;2063:30;2039:17;;;2058:2;2035:26;2028:66;1993:10;;1964:140;;;2122:6;2119:1;2116:13;2113:2;;;2192:4;2187:2;2178:6;2167:9;2163:22;2159:31;2152:45;2113:2;-1:-1:-1;2268:2:7;2247:15;-1:-1:-1;;2243:29:7;2228:45;;;;2275:2;2224:54;;1802:482;-1:-1:-1;;;1802:482:7:o;2289:399::-;2491:2;2473:21;;;2530:2;2510:18;;;2503:30;2569:34;2564:2;2549:18;;2542:62;-1:-1:-1;;;2635:2:7;2620:18;;2613:33;2678:3;2663:19;;2463:225::o;2693:398::-;2895:2;2877:21;;;2934:2;2914:18;;;2907:30;2973:34;2968:2;2953:18;;2946:62;-1:-1:-1;;;3039:2:7;3024:18;;3017:32;3081:3;3066:19;;2867:224::o;3096:398::-;3298:2;3280:21;;;3337:2;3317:18;;;3310:30;3376:34;3371:2;3356:18;;3349:62;-1:-1:-1;;;3442:2:7;3427:18;;3420:32;3484:3;3469:19;;3270:224::o;3499:402::-;3701:2;3683:21;;;3740:2;3720:18;;;3713:30;3779:34;3774:2;3759:18;;3752:62;-1:-1:-1;;;3845:2:7;3830:18;;3823:36;3891:3;3876:19;;3673:228::o;3906:404::-;4108:2;4090:21;;;4147:2;4127:18;;;4120:30;4186:34;4181:2;4166:18;;4159:62;-1:-1:-1;;;4252:2:7;4237:18;;4230:38;4300:3;4285:19;;4080:230::o;4315:397::-;4517:2;4499:21;;;4556:2;4536:18;;;4529:30;4595:34;4590:2;4575:18;;4568:62;-1:-1:-1;;;4661:2:7;4646:18;;4639:31;4702:3;4687:19;;4489:223::o;4717:401::-;4919:2;4901:21;;;4958:2;4938:18;;;4931:30;4997:34;4992:2;4977:18;;4970:62;-1:-1:-1;;;5063:2:7;5048:18;;5041:35;5108:3;5093:19;;4891:227::o;5123:400::-;5325:2;5307:21;;;5364:2;5344:18;;;5337:30;5403:34;5398:2;5383:18;;5376:62;-1:-1:-1;;;5469:2:7;5454:18;;5447:34;5513:3;5498:19;;5297:226::o;5528:401::-;5730:2;5712:21;;;5769:2;5749:18;;;5742:30;5808:34;5803:2;5788:18;;5781:62;-1:-1:-1;;;5874:2:7;5859:18;;5852:35;5919:3;5904:19;;5702:227::o;5934:355::-;6136:2;6118:21;;;6175:2;6155:18;;;6148:30;6214:33;6209:2;6194:18;;6187:61;6280:2;6265:18;;6108:181::o;6294:177::-;6440:25;;;6428:2;6413:18;;6395:76::o;6476:184::-;6648:4;6636:17;;;;6618:36;;6606:2;6591:18;;6573:87::o;6665:128::-;;6736:1;6732:6;6729:1;6726:13;6723:2;;;6742:18;;:::i;:::-;-1:-1:-1;6778:9:7;;6713:80::o;6798:125::-;;6866:1;6863;6860:8;6857:2;;;6871:18;;:::i;:::-;-1:-1:-1;6908:9:7;;6847:76::o;6928:380::-;7013:1;7003:12;;7060:1;7050:12;;;7071:2;;7125:4;7117:6;7113:17;7103:27;;7071:2;7178;7170:6;7167:14;7147:18;7144:38;7141:2;;;7224:10;7219:3;7215:20;7212:1;7205:31;7259:4;7256:1;7249:15;7287:4;7284:1;7277:15;7141:2;;6983:325;;;:::o;7313:127::-;7374:10;7369:3;7365:20;7362:1;7355:31;7405:4;7402:1;7395:15;7429:4;7426:1;7419:15",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "offset": [
    906,
    1258
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x42966C68 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA0712D68 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1B8 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1CB JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x42966C68 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x18A JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x112 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x13A JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x14F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH2 0x1DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x913 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x105 PUSH2 0x100 CALLDATASIZE PUSH1 0x4 PUSH2 0x8C7 JUMP JUMPDEST PUSH2 0x270 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x908 JUMP JUMPDEST PUSH2 0x11A PUSH2 0x28D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0xC01 JUMP JUMPDEST PUSH2 0x105 PUSH2 0x135 CALLDATASIZE PUSH1 0x4 PUSH2 0x88C JUMP JUMPDEST PUSH2 0x293 JUMP JUMPDEST PUSH2 0x142 PUSH2 0x32C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0xC0A JUMP JUMPDEST PUSH2 0x105 PUSH2 0x15D CALLDATASIZE PUSH1 0x4 PUSH2 0x8C7 JUMP JUMPDEST PUSH2 0x331 JUMP JUMPDEST PUSH2 0x175 PUSH2 0x170 CALLDATASIZE PUSH1 0x4 PUSH2 0x8F0 JUMP JUMPDEST PUSH2 0x385 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11A PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0x839 JUMP JUMPDEST PUSH2 0x392 JUMP JUMPDEST PUSH2 0xDC PUSH2 0x3B1 JUMP JUMPDEST PUSH2 0x175 PUSH2 0x1A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x8F0 JUMP JUMPDEST PUSH2 0x3C0 JUMP JUMPDEST PUSH2 0x105 PUSH2 0x1B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x8C7 JUMP JUMPDEST PUSH2 0x3CA JUMP JUMPDEST PUSH2 0x105 PUSH2 0x1C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x8C7 JUMP JUMPDEST PUSH2 0x443 JUMP JUMPDEST PUSH2 0x11A PUSH2 0x1D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x85A JUMP JUMPDEST PUSH2 0x457 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1ED SWAP1 PUSH2 0xC47 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x219 SWAP1 PUSH2 0xC47 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x266 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x23B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x266 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x249 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x284 PUSH2 0x27D PUSH2 0x482 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x486 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A0 DUP5 DUP5 DUP5 PUSH2 0x53A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 PUSH2 0x2C1 PUSH2 0x482 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x30D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x304 SWAP1 PUSH2 0xA73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x321 DUP6 PUSH2 0x319 PUSH2 0x482 JUMP JUMPDEST DUP6 DUP5 SUB PUSH2 0x486 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x284 PUSH2 0x33E PUSH2 0x482 JUMP JUMPDEST DUP5 DUP5 PUSH1 0x1 PUSH1 0x0 PUSH2 0x34C PUSH2 0x482 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP12 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x380 SWAP2 SWAP1 PUSH2 0xC18 JUMP JUMPDEST PUSH2 0x486 JUMP JUMPDEST PUSH2 0x38F ORIGIN DUP3 PUSH2 0x664 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1ED SWAP1 PUSH2 0xC47 JUMP JUMPDEST PUSH2 0x38F ORIGIN DUP3 PUSH2 0x756 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x3D9 PUSH2 0x482 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP9 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x425 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x304 SWAP1 PUSH2 0xB85 JUMP JUMPDEST PUSH2 0x439 PUSH2 0x430 PUSH2 0x482 JUMP JUMPDEST DUP6 DUP6 DUP5 SUB PUSH2 0x486 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x284 PUSH2 0x450 PUSH2 0x482 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x53A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x4AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x304 SWAP1 PUSH2 0xB41 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x304 SWAP1 PUSH2 0x9EB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x52D SWAP1 DUP6 SWAP1 PUSH2 0xC01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x560 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x304 SWAP1 PUSH2 0xAFC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x586 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x304 SWAP1 PUSH2 0x966 JUMP JUMPDEST PUSH2 0x591 DUP4 DUP4 DUP4 PUSH2 0x751 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x5CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x304 SWAP1 PUSH2 0xA2D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x601 SWAP1 DUP5 SWAP1 PUSH2 0xC18 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x64B SWAP2 SWAP1 PUSH2 0xC01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x65E DUP5 DUP5 DUP5 PUSH2 0x751 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x68A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x304 SWAP1 PUSH2 0xABB JUMP JUMPDEST PUSH2 0x696 DUP3 PUSH1 0x0 DUP4 PUSH2 0x751 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x6CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x304 SWAP1 PUSH2 0x9A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 DUP4 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6FE SWAP1 DUP5 SWAP1 PUSH2 0xC30 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x741 SWAP1 DUP7 SWAP1 PUSH2 0xC01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x751 DUP4 PUSH1 0x0 DUP5 JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x77C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x304 SWAP1 PUSH2 0xBCA JUMP JUMPDEST PUSH2 0x788 PUSH1 0x0 DUP4 DUP4 PUSH2 0x751 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x79A SWAP2 SWAP1 PUSH2 0xC18 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x7C7 SWAP1 DUP5 SWAP1 PUSH2 0xC18 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x80A SWAP1 DUP6 SWAP1 PUSH2 0xC01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x81E PUSH1 0x0 DUP4 DUP4 PUSH2 0x751 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x84A JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x853 DUP3 PUSH2 0x822 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x86C JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x875 DUP4 PUSH2 0x822 JUMP JUMPDEST SWAP2 POP PUSH2 0x883 PUSH1 0x20 DUP5 ADD PUSH2 0x822 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x8A0 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x8A9 DUP5 PUSH2 0x822 JUMP JUMPDEST SWAP3 POP PUSH2 0x8B7 PUSH1 0x20 DUP6 ADD PUSH2 0x822 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8D9 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x8E2 DUP4 PUSH2 0x822 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x901 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x93F JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x923 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x950 JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xC2B JUMPI PUSH2 0xC2B PUSH2 0xC82 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xC42 JUMPI PUSH2 0xC42 PUSH2 0xC82 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xC5B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xC7C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5E LOG4 0xBB GAS DUP14 0xC6 0xAD 0xC8 0xE5 ISZERO 0x2E 0x23 PUSH16 0x91B777E5A60ECFD6E826D43D2128382E BLOCKHASH SWAP8 0xE5 PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        906,
        1258
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "6": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "8": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "12": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "DUP1",
      "path": "6"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "REVERT",
      "path": "6"
    },
    "16": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "17": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "POP",
      "path": "6"
    },
    "18": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "21": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "LT",
      "path": "6"
    },
    "22": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xCF"
    },
    "25": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "26": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "29": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "SHR",
      "path": "6"
    },
    "32": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "DUP1",
      "path": "6"
    },
    "33": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x42966C68"
    },
    "38": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "GT",
      "path": "6"
    },
    "39": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8C"
    },
    "42": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "43": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "DUP1",
      "path": "6"
    },
    "44": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xA0712D68"
    },
    "49": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "GT",
      "path": "6"
    },
    "50": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x66"
    },
    "53": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "54": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "DUP1",
      "path": "6"
    },
    "55": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xA0712D68"
    },
    "60": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "EQ",
      "path": "6"
    },
    "61": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x192"
    },
    "64": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "65": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "DUP1",
      "path": "6"
    },
    "66": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xA457C2D7"
    },
    "71": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "EQ",
      "path": "6"
    },
    "72": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1A5"
    },
    "75": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "76": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "DUP1",
      "path": "6"
    },
    "77": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xA9059CBB"
    },
    "82": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "EQ",
      "path": "6"
    },
    "83": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1B8"
    },
    "86": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "87": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "DUP1",
      "path": "6"
    },
    "88": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xDD62ED3E"
    },
    "93": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "EQ",
      "path": "6"
    },
    "94": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1CB"
    },
    "97": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "98": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xCF"
    },
    "101": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "JUMP",
      "path": "6"
    },
    "102": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "103": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "DUP1",
      "path": "6"
    },
    "104": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x42966C68"
    },
    "109": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "EQ",
      "path": "6"
    },
    "110": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x162"
    },
    "113": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "114": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "DUP1",
      "path": "6"
    },
    "115": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x70A08231"
    },
    "120": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "EQ",
      "path": "6"
    },
    "121": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x177"
    },
    "124": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "125": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "DUP1",
      "path": "6"
    },
    "126": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x95D89B41"
    },
    "131": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "EQ",
      "path": "6"
    },
    "132": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x18A"
    },
    "135": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "136": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xCF"
    },
    "139": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "JUMP",
      "path": "6"
    },
    "140": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "141": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "DUP1",
      "path": "6"
    },
    "142": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x6FDDE03"
    },
    "147": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "EQ",
      "path": "6"
    },
    "148": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD4"
    },
    "151": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "152": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "DUP1",
      "path": "6"
    },
    "153": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x95EA7B3"
    },
    "158": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "EQ",
      "path": "6"
    },
    "159": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF2"
    },
    "162": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "163": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "DUP1",
      "path": "6"
    },
    "164": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x18160DDD"
    },
    "169": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "EQ",
      "path": "6"
    },
    "170": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x112"
    },
    "173": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "174": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "DUP1",
      "path": "6"
    },
    "175": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x23B872DD"
    },
    "180": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "EQ",
      "path": "6"
    },
    "181": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x127"
    },
    "184": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "185": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "DUP1",
      "path": "6"
    },
    "186": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x313CE567"
    },
    "191": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "EQ",
      "path": "6"
    },
    "192": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x13A"
    },
    "195": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "196": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "DUP1",
      "path": "6"
    },
    "197": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x39509351"
    },
    "202": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "EQ",
      "path": "6"
    },
    "203": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x14F"
    },
    "206": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "207": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "208": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "210": {
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "DUP1",
      "path": "6"
    },
    "211": {
      "first_revert": true,
      "fn": null,
      "offset": [
        906,
        1258
      ],
      "op": "REVERT",
      "path": "6"
    },
    "212": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "213": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDC"
    },
    "216": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DE"
    },
    "219": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2074,
        2172
      ],
      "op": "JUMP",
      "path": "0"
    },
    "220": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "221": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "223": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "224": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE9"
    },
    "227": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "228": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "229": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x913"
    },
    "232": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2074,
        2172
      ],
      "op": "JUMP",
      "path": "0"
    },
    "233": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "234": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "236": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "237": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "DUP1",
      "path": "0"
    },
    "238": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "239": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "SUB",
      "path": "0"
    },
    "240": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "241": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "RETURN",
      "path": "0"
    },
    "242": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "243": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x105"
    },
    "246": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "249": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "250": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "252": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8C7"
    },
    "255": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4171,
        4337
      ],
      "op": "JUMP",
      "path": "0"
    },
    "256": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "257": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x270"
    },
    "260": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4171,
        4337
      ],
      "op": "JUMP",
      "path": "0"
    },
    "261": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "262": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "264": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "265": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE9"
    },
    "268": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "269": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "270": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x908"
    },
    "273": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4171,
        4337
      ],
      "op": "JUMP",
      "path": "0"
    },
    "274": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3162,
        3268
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "275": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3162,
        3268
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11A"
    },
    "278": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3162,
        3268
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x28D"
    },
    "281": {
      "fn": "ERC20.totalSupply",
      "jump": "i",
      "offset": [
        3162,
        3268
      ],
      "op": "JUMP",
      "path": "0"
    },
    "282": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3162,
        3268
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "283": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3162,
        3268
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "285": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3162,
        3268
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "286": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3162,
        3268
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE9"
    },
    "289": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3162,
        3268
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "290": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3162,
        3268
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "291": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3162,
        3268
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC01"
    },
    "294": {
      "fn": "ERC20.totalSupply",
      "jump": "i",
      "offset": [
        3162,
        3268
      ],
      "op": "JUMP",
      "path": "0"
    },
    "295": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4804,
        5282
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "296": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4804,
        5282
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x105"
    },
    "299": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4804,
        5282
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x135"
    },
    "302": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4804,
        5282
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "303": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4804,
        5282
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "305": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4804,
        5282
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x88C"
    },
    "308": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        4804,
        5282
      ],
      "op": "JUMP",
      "path": "0"
    },
    "309": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4804,
        5282
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "310": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4804,
        5282
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x293"
    },
    "313": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        4804,
        5282
      ],
      "op": "JUMP",
      "path": "0"
    },
    "314": {
      "fn": "BTCDOWN.decimals",
      "offset": [
        1174,
        1256
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "315": {
      "fn": "BTCDOWN.decimals",
      "offset": [
        1174,
        1256
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x142"
    },
    "318": {
      "fn": "BTCDOWN.decimals",
      "offset": [
        1174,
        1256
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x32C"
    },
    "321": {
      "fn": "BTCDOWN.decimals",
      "jump": "i",
      "offset": [
        1174,
        1256
      ],
      "op": "JUMP",
      "path": "6"
    },
    "322": {
      "fn": "BTCDOWN.decimals",
      "offset": [
        1174,
        1256
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "323": {
      "fn": "BTCDOWN.decimals",
      "offset": [
        1174,
        1256
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "325": {
      "fn": "BTCDOWN.decimals",
      "offset": [
        1174,
        1256
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "326": {
      "fn": "BTCDOWN.decimals",
      "offset": [
        1174,
        1256
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xE9"
    },
    "329": {
      "fn": "BTCDOWN.decimals",
      "offset": [
        1174,
        1256
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "330": {
      "fn": "BTCDOWN.decimals",
      "offset": [
        1174,
        1256
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "331": {
      "fn": "BTCDOWN.decimals",
      "offset": [
        1174,
        1256
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC0A"
    },
    "334": {
      "fn": "BTCDOWN.decimals",
      "jump": "i",
      "offset": [
        1174,
        1256
      ],
      "op": "JUMP",
      "path": "6"
    },
    "335": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5677,
        5889
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "336": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5677,
        5889
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x105"
    },
    "339": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5677,
        5889
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15D"
    },
    "342": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5677,
        5889
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "343": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5677,
        5889
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "345": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5677,
        5889
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8C7"
    },
    "348": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5677,
        5889
      ],
      "op": "JUMP",
      "path": "0"
    },
    "349": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5677,
        5889
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "350": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5677,
        5889
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x331"
    },
    "353": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5677,
        5889
      ],
      "op": "JUMP",
      "path": "0"
    },
    "354": {
      "fn": "BTCDOWN.burn",
      "offset": [
        1086,
        1168
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "355": {
      "fn": "BTCDOWN.burn",
      "offset": [
        1086,
        1168
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x175"
    },
    "358": {
      "fn": "BTCDOWN.burn",
      "offset": [
        1086,
        1168
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x170"
    },
    "361": {
      "fn": "BTCDOWN.burn",
      "offset": [
        1086,
        1168
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "362": {
      "fn": "BTCDOWN.burn",
      "offset": [
        1086,
        1168
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "364": {
      "fn": "BTCDOWN.burn",
      "offset": [
        1086,
        1168
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8F0"
    },
    "367": {
      "fn": "BTCDOWN.burn",
      "jump": "i",
      "offset": [
        1086,
        1168
      ],
      "op": "JUMP",
      "path": "6"
    },
    "368": {
      "fn": "BTCDOWN.burn",
      "offset": [
        1086,
        1168
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "369": {
      "fn": "BTCDOWN.burn",
      "offset": [
        1086,
        1168
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x385"
    },
    "372": {
      "fn": "BTCDOWN.burn",
      "jump": "i",
      "offset": [
        1086,
        1168
      ],
      "op": "JUMP",
      "path": "6"
    },
    "373": {
      "fn": "BTCDOWN.burn",
      "offset": [
        1086,
        1168
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "374": {
      "fn": "BTCDOWN.burn",
      "offset": [
        1086,
        1168
      ],
      "op": "STOP",
      "path": "6"
    },
    "375": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3326,
        3451
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "376": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3326,
        3451
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11A"
    },
    "379": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3326,
        3451
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x185"
    },
    "382": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3326,
        3451
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "383": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3326,
        3451
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "385": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3326,
        3451
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x839"
    },
    "388": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        3326,
        3451
      ],
      "op": "JUMP",
      "path": "0"
    },
    "389": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3326,
        3451
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "390": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3326,
        3451
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x392"
    },
    "393": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        3326,
        3451
      ],
      "op": "JUMP",
      "path": "0"
    },
    "394": {
      "fn": "ERC20.symbol",
      "offset": [
        2285,
        2387
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "395": {
      "fn": "ERC20.symbol",
      "offset": [
        2285,
        2387
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDC"
    },
    "398": {
      "fn": "ERC20.symbol",
      "offset": [
        2285,
        2387
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B1"
    },
    "401": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2285,
        2387
      ],
      "op": "JUMP",
      "path": "0"
    },
    "402": {
      "fn": "BTCDOWN.mint",
      "offset": [
        998,
        1080
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "403": {
      "fn": "BTCDOWN.mint",
      "offset": [
        998,
        1080
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x175"
    },
    "406": {
      "fn": "BTCDOWN.mint",
      "offset": [
        998,
        1080
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1A0"
    },
    "409": {
      "fn": "BTCDOWN.mint",
      "offset": [
        998,
        1080
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "410": {
      "fn": "BTCDOWN.mint",
      "offset": [
        998,
        1080
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "412": {
      "fn": "BTCDOWN.mint",
      "offset": [
        998,
        1080
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8F0"
    },
    "415": {
      "fn": "BTCDOWN.mint",
      "jump": "i",
      "offset": [
        998,
        1080
      ],
      "op": "JUMP",
      "path": "6"
    },
    "416": {
      "fn": "BTCDOWN.mint",
      "offset": [
        998,
        1080
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "417": {
      "fn": "BTCDOWN.mint",
      "offset": [
        998,
        1080
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3C0"
    },
    "420": {
      "fn": "BTCDOWN.mint",
      "jump": "i",
      "offset": [
        998,
        1080
      ],
      "op": "JUMP",
      "path": "6"
    },
    "421": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6376,
        6781
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "422": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6376,
        6781
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x105"
    },
    "425": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6376,
        6781
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B3"
    },
    "428": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6376,
        6781
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "429": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6376,
        6781
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "431": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6376,
        6781
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8C7"
    },
    "434": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6376,
        6781
      ],
      "op": "JUMP",
      "path": "0"
    },
    "435": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6376,
        6781
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "436": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6376,
        6781
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3CA"
    },
    "439": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6376,
        6781
      ],
      "op": "JUMP",
      "path": "0"
    },
    "440": {
      "fn": "ERC20.transfer",
      "offset": [
        3654,
        3826
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "441": {
      "fn": "ERC20.transfer",
      "offset": [
        3654,
        3826
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x105"
    },
    "444": {
      "fn": "ERC20.transfer",
      "offset": [
        3654,
        3826
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C6"
    },
    "447": {
      "fn": "ERC20.transfer",
      "offset": [
        3654,
        3826
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "448": {
      "fn": "ERC20.transfer",
      "offset": [
        3654,
        3826
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "450": {
      "fn": "ERC20.transfer",
      "offset": [
        3654,
        3826
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8C7"
    },
    "453": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3654,
        3826
      ],
      "op": "JUMP",
      "path": "0"
    },
    "454": {
      "fn": "ERC20.transfer",
      "offset": [
        3654,
        3826
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "455": {
      "fn": "ERC20.transfer",
      "offset": [
        3654,
        3826
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x443"
    },
    "458": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3654,
        3826
      ],
      "op": "JUMP",
      "path": "0"
    },
    "459": {
      "fn": "ERC20.allowance",
      "offset": [
        3884,
        4033
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "460": {
      "fn": "ERC20.allowance",
      "offset": [
        3884,
        4033
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11A"
    },
    "463": {
      "fn": "ERC20.allowance",
      "offset": [
        3884,
        4033
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D9"
    },
    "466": {
      "fn": "ERC20.allowance",
      "offset": [
        3884,
        4033
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "467": {
      "fn": "ERC20.allowance",
      "offset": [
        3884,
        4033
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "469": {
      "fn": "ERC20.allowance",
      "offset": [
        3884,
        4033
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x85A"
    },
    "472": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        3884,
        4033
      ],
      "op": "JUMP",
      "path": "0"
    },
    "473": {
      "fn": "ERC20.allowance",
      "offset": [
        3884,
        4033
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "474": {
      "fn": "ERC20.allowance",
      "offset": [
        3884,
        4033
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x457"
    },
    "477": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        3884,
        4033
      ],
      "op": "JUMP",
      "path": "0"
    },
    "478": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "479": {
      "fn": "ERC20.name",
      "offset": [
        2128,
        2141
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "481": {
      "fn": "ERC20.name",
      "offset": [
        2160,
        2165
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 0,
      "value": "0x3"
    },
    "483": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP1",
      "path": "0"
    },
    "484": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "485": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1ED"
    },
    "488": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "489": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC47"
    },
    "492": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2153,
        2165
      ],
      "op": "JUMP",
      "path": "0"
    },
    "493": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "494": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP1",
      "path": "0"
    },
    "495": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "497": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "ADD",
      "path": "0"
    },
    "498": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "500": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP1",
      "path": "0"
    },
    "501": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "502": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DIV",
      "path": "0"
    },
    "503": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "MUL",
      "path": "0"
    },
    "504": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "506": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "ADD",
      "path": "0"
    },
    "507": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "509": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "510": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "511": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP2",
      "path": "0"
    },
    "512": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "ADD",
      "path": "0"
    },
    "513": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "515": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "516": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP1",
      "path": "0"
    },
    "517": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "518": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "519": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "520": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP2",
      "path": "0"
    },
    "521": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP2",
      "path": "0"
    },
    "522": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "523": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "525": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "ADD",
      "path": "0"
    },
    "526": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP3",
      "path": "0"
    },
    "527": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP1",
      "path": "0"
    },
    "528": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "529": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x219"
    },
    "532": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "533": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC47"
    },
    "536": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2153,
        2165
      ],
      "op": "JUMP",
      "path": "0"
    },
    "537": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "538": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP1",
      "path": "0"
    },
    "539": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "540": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x266"
    },
    "543": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "544": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP1",
      "path": "0"
    },
    "545": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "547": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "LT",
      "path": "0"
    },
    "548": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x23B"
    },
    "551": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "552": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "555": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP1",
      "path": "0"
    },
    "556": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP4",
      "path": "0"
    },
    "557": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "558": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DIV",
      "path": "0"
    },
    "559": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "MUL",
      "path": "0"
    },
    "560": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP4",
      "path": "0"
    },
    "561": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "562": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "563": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "565": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "ADD",
      "path": "0"
    },
    "566": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "567": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x266"
    },
    "570": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "JUMP",
      "path": "0"
    },
    "571": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "572": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP3",
      "path": "0"
    },
    "573": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "ADD",
      "path": "0"
    },
    "574": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "575": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "576": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "578": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "579": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "581": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "583": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "584": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "585": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "586": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP2",
      "path": "0"
    },
    "587": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "588": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP2",
      "path": "0"
    },
    "589": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "590": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "591": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "593": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "ADD",
      "path": "0"
    },
    "594": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "595": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "597": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "ADD",
      "path": "0"
    },
    "598": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP1",
      "path": "0"
    },
    "599": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP4",
      "path": "0"
    },
    "600": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "GT",
      "path": "0"
    },
    "601": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x249"
    },
    "604": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "605": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP3",
      "path": "0"
    },
    "606": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "607": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SUB",
      "path": "0"
    },
    "608": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "610": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "AND",
      "path": "0"
    },
    "611": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP3",
      "path": "0"
    },
    "612": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "ADD",
      "path": "0"
    },
    "613": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "614": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "615": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "POP",
      "path": "0"
    },
    "616": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "POP",
      "path": "0"
    },
    "617": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "POP",
      "path": "0"
    },
    "618": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "POP",
      "path": "0"
    },
    "619": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "POP",
      "path": "0"
    },
    "620": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "621": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "POP",
      "path": "0"
    },
    "622": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "623": {
      "fn": "ERC20.name",
      "jump": "o",
      "offset": [
        2074,
        2172
      ],
      "op": "JUMP",
      "path": "0"
    },
    "624": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "625": {
      "fn": "ERC20.approve",
      "offset": [
        4254,
        4258
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "627": {
      "fn": "ERC20.approve",
      "offset": [
        4270,
        4309
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 1,
      "value": "0x284"
    },
    "630": {
      "fn": "ERC20.approve",
      "offset": [
        4279,
        4291
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27D"
    },
    "633": {
      "fn": "ERC20.approve",
      "offset": [
        4279,
        4289
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x482"
    },
    "636": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4279,
        4291
      ],
      "op": "JUMP",
      "path": "0"
    },
    "637": {
      "fn": "ERC20.approve",
      "offset": [
        4279,
        4291
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "638": {
      "fn": "ERC20.approve",
      "offset": [
        4293,
        4300
      ],
      "op": "DUP5",
      "path": "0"
    },
    "639": {
      "fn": "ERC20.approve",
      "offset": [
        4302,
        4308
      ],
      "op": "DUP5",
      "path": "0"
    },
    "640": {
      "fn": "ERC20.approve",
      "offset": [
        4270,
        4278
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x486"
    },
    "643": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4270,
        4309
      ],
      "op": "JUMP",
      "path": "0"
    },
    "644": {
      "fn": "ERC20.approve",
      "offset": [
        4270,
        4309
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "645": {
      "op": "POP"
    },
    "646": {
      "fn": "ERC20.approve",
      "offset": [
        4326,
        4330
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 2,
      "value": "0x1"
    },
    "648": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "649": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "650": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "POP",
      "path": "0"
    },
    "651": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "POP",
      "path": "0"
    },
    "652": {
      "fn": "ERC20.approve",
      "jump": "o",
      "offset": [
        4171,
        4337
      ],
      "op": "JUMP",
      "path": "0"
    },
    "653": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3162,
        3268
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "654": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3249,
        3261
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 3,
      "value": "0x2"
    },
    "656": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3249,
        3261
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "657": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3162,
        3268
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "658": {
      "fn": "ERC20.totalSupply",
      "jump": "o",
      "offset": [
        3162,
        3268
      ],
      "op": "JUMP",
      "path": "0"
    },
    "659": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4804,
        5282
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "660": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4940,
        4944
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "662": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4956,
        4992
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 4,
      "value": "0x2A0"
    },
    "665": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4966,
        4972
      ],
      "op": "DUP5",
      "path": "0"
    },
    "666": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4974,
        4983
      ],
      "op": "DUP5",
      "path": "0"
    },
    "667": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4985,
        4991
      ],
      "op": "DUP5",
      "path": "0"
    },
    "668": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4956,
        4965
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x53A"
    },
    "671": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        4956,
        4992
      ],
      "op": "JUMP",
      "path": "0"
    },
    "672": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4956,
        4992
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "673": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "675": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "677": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "679": {
      "op": "SHL"
    },
    "680": {
      "op": "SUB"
    },
    "681": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5049
      ],
      "op": "DUP5",
      "path": "0"
    },
    "682": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5049
      ],
      "op": "AND",
      "path": "0"
    },
    "683": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5003,
        5027
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "685": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5049
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "686": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5049
      ],
      "op": "DUP2",
      "path": "0"
    },
    "687": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5049
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "688": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "690": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5049
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "692": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5049
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "693": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5049
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "695": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5049
      ],
      "op": "DUP2",
      "path": "0"
    },
    "696": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5049
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "697": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5003,
        5027
      ],
      "op": "DUP2",
      "path": "0"
    },
    "698": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5050,
        5062
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C1"
    },
    "701": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5050,
        5060
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x482"
    },
    "704": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5050,
        5062
      ],
      "op": "JUMP",
      "path": "0"
    },
    "705": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5050,
        5062
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "706": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "708": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "710": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "712": {
      "op": "SHL"
    },
    "713": {
      "op": "SUB"
    },
    "714": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5063
      ],
      "op": "AND",
      "path": "0"
    },
    "715": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5063
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "717": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5063
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "719": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5063
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "721": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5063
      ],
      "op": "SHL",
      "path": "0"
    },
    "722": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5063
      ],
      "op": "SUB",
      "path": "0"
    },
    "723": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5063
      ],
      "op": "AND",
      "path": "0"
    },
    "724": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5063
      ],
      "op": "DUP2",
      "path": "0"
    },
    "725": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5063
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "726": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5063
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "728": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5063
      ],
      "op": "ADD",
      "path": "0"
    },
    "729": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5063
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "730": {
      "op": "DUP2"
    },
    "731": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5063
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "732": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5063
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "734": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5063
      ],
      "op": "ADD",
      "path": "0"
    },
    "735": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "737": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5081,
        5107
      ],
      "op": "KECCAK256",
      "path": "0",
      "statement": 5
    },
    "738": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5081,
        5107
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "739": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5081,
        5107
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "740": {
      "branch": 45,
      "fn": "ERC20.transferFrom",
      "offset": [
        5081,
        5107
      ],
      "op": "POP",
      "path": "0"
    },
    "741": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "DUP3",
      "path": "0"
    },
    "742": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "DUP2",
      "path": "0"
    },
    "743": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "LT",
      "path": "0"
    },
    "744": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "745": {
      "op": "PUSH2",
      "value": "0x30D"
    },
    "748": {
      "op": "JUMPI"
    },
    "749": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "751": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "752": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x461BCD"
    },
    "756": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE5"
    },
    "758": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "SHL",
      "path": "0"
    },
    "759": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "DUP2",
      "path": "0"
    },
    "760": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "761": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "763": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5073,
        5152
      ],
      "op": "ADD",
      "path": "0"
    },
    "764": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x304"
    },
    "767": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "768": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA73"
    },
    "771": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "JUMP",
      "path": "0"
    },
    "772": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "773": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "775": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "776": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "DUP1",
      "path": "0"
    },
    "777": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "778": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5186,
        5243
      ],
      "op": "SUB",
      "path": "0",
      "statement": 6
    },
    "779": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5195,
        5201
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "780": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5203,
        5215
      ],
      "op": "REVERT",
      "path": "0"
    },
    "781": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5203,
        5213
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "782": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5203,
        5215
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x321"
    },
    "785": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5203,
        5215
      ],
      "op": "DUP6",
      "path": "0"
    },
    "786": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5236,
        5242
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x319"
    },
    "789": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5217,
        5233
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x482"
    },
    "792": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5217,
        5242
      ],
      "op": "JUMP",
      "path": "0"
    },
    "793": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5186,
        5194
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "794": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5186,
        5243
      ],
      "op": "DUP6",
      "path": "0"
    },
    "795": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5186,
        5243
      ],
      "op": "DUP5",
      "path": "0"
    },
    "796": {
      "op": "SUB"
    },
    "797": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5271,
        5275
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 7,
      "value": "0x486"
    },
    "800": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5271,
        5275
      ],
      "op": "JUMP",
      "path": "0"
    },
    "801": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4804,
        5282
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "802": {
      "op": "POP"
    },
    "803": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "805": {
      "op": "SWAP5"
    },
    "806": {
      "op": "SWAP4"
    },
    "807": {
      "fn": "ERC20.transferFrom",
      "jump": "o",
      "offset": [
        4804,
        5282
      ],
      "op": "POP",
      "path": "0"
    },
    "808": {
      "fn": "BTCDOWN.decimals",
      "offset": [
        1174,
        1256
      ],
      "op": "POP",
      "path": "6"
    },
    "809": {
      "fn": "BTCDOWN.decimals",
      "offset": [
        1248,
        1249
      ],
      "op": "POP",
      "path": "6",
      "statement": 8
    },
    "810": {
      "fn": "BTCDOWN.decimals",
      "offset": [
        1174,
        1256
      ],
      "op": "POP",
      "path": "6"
    },
    "811": {
      "fn": "BTCDOWN.decimals",
      "jump": "o",
      "offset": [
        1174,
        1256
      ],
      "op": "JUMP",
      "path": "6"
    },
    "812": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5677,
        5889
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "813": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5765,
        5769
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "815": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5781,
        5861
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 9
    },
    "816": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5790,
        5802
      ],
      "op": "JUMP",
      "path": "0"
    },
    "817": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5790,
        5800
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "818": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5790,
        5802
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "820": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5790,
        5802
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x284"
    },
    "823": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5804,
        5811
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x33E"
    },
    "826": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5850,
        5860
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x482"
    },
    "829": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5824
      ],
      "op": "JUMP",
      "path": "0"
    },
    "830": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "831": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5825,
        5837
      ],
      "op": "DUP5",
      "path": "0"
    },
    "832": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5825,
        5835
      ],
      "op": "DUP5",
      "path": "0"
    },
    "833": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5825,
        5837
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "835": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5825,
        5837
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "837": {
      "op": "PUSH2",
      "value": "0x34C"
    },
    "840": {
      "op": "PUSH2",
      "value": "0x482"
    },
    "843": {
      "op": "JUMP"
    },
    "844": {
      "op": "JUMPDEST"
    },
    "845": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "847": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "849": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "851": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "SHL",
      "path": "0"
    },
    "852": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "SUB",
      "path": "0"
    },
    "853": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "854": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "DUP2",
      "path": "0"
    },
    "855": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "AND",
      "path": "0"
    },
    "856": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "DUP3",
      "path": "0"
    },
    "857": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "858": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "860": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "DUP1",
      "path": "0"
    },
    "861": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "DUP4",
      "path": "0"
    },
    "862": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "ADD",
      "path": "0"
    },
    "863": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "864": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "865": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "866": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "867": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "869": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "870": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "DUP3",
      "path": "0"
    },
    "871": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "ADD",
      "path": "0"
    },
    "872": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5847
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "874": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5847
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "875": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5847
      ],
      "op": "DUP2",
      "path": "0"
    },
    "876": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5847
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "877": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5847
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "878": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5847
      ],
      "op": "DUP12",
      "path": "0"
    },
    "879": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5847
      ],
      "op": "AND",
      "path": "0"
    },
    "880": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5847
      ],
      "op": "DUP2",
      "path": "0"
    },
    "881": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5847
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "882": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5847
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "883": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5860
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "884": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5860
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "885": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5860
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "886": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5860
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "887": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5813,
        5860
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x380"
    },
    "890": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5860
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "891": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5781,
        5789
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "892": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5781,
        5861
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC18"
    },
    "895": {
      "fn": "BTCDOWN.burn",
      "offset": [
        1086,
        1168
      ],
      "op": "JUMP",
      "path": "6"
    },
    "896": {
      "fn": "BTCDOWN.burn",
      "offset": [
        1135,
        1161
      ],
      "op": "JUMPDEST",
      "path": "6",
      "statement": 10
    },
    "897": {
      "fn": "BTCDOWN.burn",
      "offset": [
        1141,
        1150
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x486"
    },
    "900": {
      "fn": "BTCDOWN.burn",
      "offset": [
        1152,
        1160
      ],
      "op": "JUMP",
      "path": "6"
    },
    "901": {
      "fn": "BTCDOWN.burn",
      "offset": [
        1135,
        1140
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "902": {
      "fn": "BTCDOWN.burn",
      "jump": "i",
      "offset": [
        1135,
        1161
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x38F"
    },
    "905": {
      "fn": "BTCDOWN.burn",
      "offset": [
        1135,
        1161
      ],
      "op": "ORIGIN",
      "path": "6"
    },
    "906": {
      "fn": "BTCDOWN.burn",
      "offset": [
        1086,
        1168
      ],
      "op": "DUP3",
      "path": "6"
    },
    "907": {
      "fn": "BTCDOWN.burn",
      "jump": "o",
      "offset": [
        1086,
        1168
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x664"
    },
    "910": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3326,
        3451
      ],
      "op": "JUMP",
      "path": "0"
    },
    "911": {
      "op": "JUMPDEST"
    },
    "912": {
      "op": "POP"
    },
    "913": {
      "op": "JUMP"
    },
    "914": {
      "op": "JUMPDEST"
    },
    "915": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "917": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 11,
      "value": "0x1"
    },
    "919": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "921": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3400,
        3407
      ],
      "op": "SHL",
      "path": "0"
    },
    "922": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "SUB",
      "path": "0"
    },
    "923": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "DUP2",
      "path": "0"
    },
    "924": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "AND",
      "path": "0"
    },
    "925": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "927": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "928": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "DUP2",
      "path": "0"
    },
    "929": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "930": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "932": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "DUP2",
      "path": "0"
    },
    "933": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "934": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "935": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3326,
        3451
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "937": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3326,
        3451
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "938": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3326,
        3451
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "939": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3326,
        3451
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "940": {
      "fn": "ERC20.balanceOf",
      "jump": "o",
      "offset": [
        3326,
        3451
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "941": {
      "fn": "ERC20.symbol",
      "offset": [
        2285,
        2387
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "942": {
      "fn": "ERC20.symbol",
      "offset": [
        2341,
        2354
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "943": {
      "fn": "ERC20.symbol",
      "offset": [
        2373,
        2380
      ],
      "op": "POP",
      "path": "0",
      "statement": 12
    },
    "944": {
      "fn": "ERC20.symbol",
      "offset": [
        2366,
        2380
      ],
      "op": "JUMP",
      "path": "0"
    },
    "945": {
      "fn": "ERC20.symbol",
      "offset": [
        2366,
        2380
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "946": {
      "fn": "ERC20.symbol",
      "offset": [
        2366,
        2380
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "948": {
      "fn": "ERC20.symbol",
      "offset": [
        2366,
        2380
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "950": {
      "fn": "ERC20.symbol",
      "offset": [
        2366,
        2380
      ],
      "op": "DUP1",
      "path": "0"
    },
    "951": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2366,
        2380
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "952": {
      "fn": "BTCDOWN.mint",
      "offset": [
        998,
        1080
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1ED"
    },
    "955": {
      "fn": "BTCDOWN.mint",
      "offset": [
        1047,
        1073
      ],
      "op": "SWAP1",
      "path": "6",
      "statement": 13
    },
    "956": {
      "fn": "BTCDOWN.mint",
      "offset": [
        1053,
        1062
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC47"
    },
    "959": {
      "fn": "BTCDOWN.mint",
      "offset": [
        1064,
        1072
      ],
      "op": "JUMP",
      "path": "6"
    },
    "960": {
      "fn": "BTCDOWN.mint",
      "offset": [
        1047,
        1052
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "961": {
      "fn": "BTCDOWN.mint",
      "jump": "i",
      "offset": [
        1047,
        1073
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x38F"
    },
    "964": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6376,
        6781
      ],
      "op": "ORIGIN",
      "path": "0"
    },
    "965": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6469,
        6473
      ],
      "op": "DUP3",
      "path": "0"
    },
    "966": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6485,
        6509
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x756"
    },
    "969": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6523
      ],
      "op": "JUMP",
      "path": "0"
    },
    "970": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "971": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6524,
        6536
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "973": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6524,
        6534
      ],
      "op": "DUP1",
      "path": "0"
    },
    "974": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6524,
        6536
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "976": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6524,
        6536
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "978": {
      "op": "PUSH2",
      "value": "0x3D9"
    },
    "981": {
      "op": "PUSH2",
      "value": "0x482"
    },
    "984": {
      "op": "JUMP"
    },
    "985": {
      "op": "JUMPDEST"
    },
    "986": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "988": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "990": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "992": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "SHL",
      "path": "0"
    },
    "993": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "SUB",
      "path": "0"
    },
    "994": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "995": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "DUP2",
      "path": "0"
    },
    "996": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "AND",
      "path": "0"
    },
    "997": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "DUP3",
      "path": "0"
    },
    "998": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "999": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1001": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1002": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1003": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "ADD",
      "path": "0"
    },
    "1004": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1005": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1006": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1007": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1008": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1010": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1011": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1012": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "ADD",
      "path": "0"
    },
    "1013": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6546
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1015": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6546
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1016": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6546
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1017": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6546
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1018": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6546
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1019": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6546
      ],
      "op": "DUP9",
      "path": "0"
    },
    "1020": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6546
      ],
      "op": "AND",
      "path": "0"
    },
    "1021": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6546
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1022": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6546
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1023": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6546
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1024": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6546
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1025": {
      "op": "SWAP1"
    },
    "1026": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6564,
        6599
      ],
      "op": "KECCAK256",
      "path": "0",
      "statement": 14
    },
    "1027": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6564,
        6599
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1028": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6564,
        6599
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1029": {
      "branch": 46,
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6564,
        6599
      ],
      "op": "POP",
      "path": "0"
    },
    "1030": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6556,
        6641
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1031": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6556,
        6641
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1032": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6556,
        6641
      ],
      "op": "LT",
      "path": "0"
    },
    "1033": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6556,
        6641
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1034": {
      "op": "PUSH2",
      "value": "0x425"
    },
    "1037": {
      "op": "JUMPI"
    },
    "1038": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1040": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6556,
        6641
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1041": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6556,
        6641
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x461BCD"
    },
    "1045": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6556,
        6641
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE5"
    },
    "1047": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6556,
        6641
      ],
      "op": "SHL",
      "path": "0"
    },
    "1048": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6556,
        6641
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1049": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6556,
        6641
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1050": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6556,
        6641
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1052": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6556,
        6641
      ],
      "op": "ADD",
      "path": "0"
    },
    "1053": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6556,
        6641
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x304"
    },
    "1056": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6675,
        6742
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 15
    },
    "1057": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6684,
        6696
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB85"
    },
    "1060": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6684,
        6694
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1061": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6684,
        6696
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1062": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6684,
        6696
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x439"
    },
    "1065": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6698,
        6705
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x430"
    },
    "1068": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6726,
        6741
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x482"
    },
    "1071": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6707,
        6723
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1072": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6707,
        6741
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1073": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6675,
        6683
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1074": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6675,
        6742
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1075": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6675,
        6742
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1076": {
      "op": "SUB"
    },
    "1077": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6774
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 16,
      "value": "0x486"
    },
    "1080": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6774
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1081": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6376,
        6781
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1082": {
      "op": "POP"
    },
    "1083": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1085": {
      "op": "SWAP4"
    },
    "1086": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "o",
      "offset": [
        6376,
        6781
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1087": {
      "fn": "ERC20.transfer",
      "offset": [
        3654,
        3826
      ],
      "op": "POP",
      "path": "0"
    },
    "1088": {
      "fn": "ERC20.transfer",
      "offset": [
        3740,
        3744
      ],
      "op": "POP",
      "path": "0"
    },
    "1089": {
      "fn": "ERC20.transfer",
      "offset": [
        3756,
        3798
      ],
      "op": "POP",
      "path": "0",
      "statement": 17
    },
    "1090": {
      "fn": "ERC20.transfer",
      "offset": [
        3766,
        3778
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1091": {
      "fn": "ERC20.transfer",
      "offset": [
        3766,
        3776
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1092": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3766,
        3778
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1094": {
      "fn": "ERC20.transfer",
      "offset": [
        3766,
        3778
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x284"
    },
    "1097": {
      "fn": "ERC20.transfer",
      "offset": [
        3780,
        3789
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x450"
    },
    "1100": {
      "fn": "ERC20.transfer",
      "offset": [
        3791,
        3797
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x482"
    },
    "1103": {
      "fn": "ERC20.transfer",
      "offset": [
        3756,
        3765
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1104": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3756,
        3798
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1105": {
      "fn": "ERC20.allowance",
      "offset": [
        3884,
        4033
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1106": {
      "op": "DUP5"
    },
    "1107": {
      "op": "PUSH2",
      "value": "0x53A"
    },
    "1110": {
      "op": "JUMP"
    },
    "1111": {
      "op": "JUMPDEST"
    },
    "1112": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1114": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4017
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 18,
      "value": "0x1"
    },
    "1116": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4017
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "1118": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4017
      ],
      "op": "SHL",
      "path": "0"
    },
    "1119": {
      "fn": "ERC20.allowance",
      "offset": [
        3973,
        3980
      ],
      "op": "SUB",
      "path": "0"
    },
    "1120": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4017
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1121": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4017
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1122": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4017
      ],
      "op": "AND",
      "path": "0"
    },
    "1123": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1125": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4017
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1126": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4017
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1127": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4017
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1128": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4017
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1130": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4017
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1132": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4017
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1133": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4017
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1134": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4017
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1135": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1137": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4026
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1138": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4026
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1139": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4026
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1140": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4026
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1141": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4026
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1142": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4026
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1143": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4026
      ],
      "op": "AND",
      "path": "0"
    },
    "1144": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4026
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1145": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4026
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1146": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4026
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1147": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4026
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1148": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4026
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1149": {
      "fn": "ERC20.allowance",
      "jump": "o",
      "offset": [
        3884,
        4033
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1150": {
      "fn": "Context._msgSender",
      "offset": [
        586,
        682
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1151": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "SLOAD",
      "path": "3",
      "statement": 19
    },
    "1152": {
      "fn": "Context._msgSender",
      "offset": [
        586,
        682
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1153": {
      "fn": "Context._msgSender",
      "jump": "o",
      "offset": [
        586,
        682
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1154": {
      "fn": "ERC20._approve",
      "offset": [
        9952,
        10322
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1155": {
      "op": "CALLER"
    },
    "1156": {
      "op": "SWAP1"
    },
    "1157": {
      "op": "JUMP"
    },
    "1158": {
      "op": "JUMPDEST"
    },
    "1159": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1161": {
      "fn": "ERC20._approve",
      "offset": [
        10083,
        10102
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 20,
      "value": "0x1"
    },
    "1163": {
      "branch": 47,
      "fn": "ERC20._approve",
      "offset": [
        10083,
        10102
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "1165": {
      "fn": "ERC20._approve",
      "offset": [
        10075,
        10143
      ],
      "op": "SHL",
      "path": "0"
    },
    "1166": {
      "fn": "ERC20._approve",
      "offset": [
        10075,
        10143
      ],
      "op": "SUB",
      "path": "0"
    },
    "1167": {
      "fn": "ERC20._approve",
      "offset": [
        10075,
        10143
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1168": {
      "fn": "ERC20._approve",
      "offset": [
        10075,
        10143
      ],
      "op": "AND",
      "path": "0"
    },
    "1169": {
      "op": "PUSH2",
      "value": "0x4AC"
    },
    "1172": {
      "op": "JUMPI"
    },
    "1173": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1175": {
      "fn": "ERC20._approve",
      "offset": [
        10075,
        10143
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1176": {
      "fn": "ERC20._approve",
      "offset": [
        10075,
        10143
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x461BCD"
    },
    "1180": {
      "fn": "ERC20._approve",
      "offset": [
        10075,
        10143
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE5"
    },
    "1182": {
      "fn": "ERC20._approve",
      "offset": [
        10075,
        10143
      ],
      "op": "SHL",
      "path": "0"
    },
    "1183": {
      "fn": "ERC20._approve",
      "offset": [
        10075,
        10143
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1184": {
      "fn": "ERC20._approve",
      "offset": [
        10075,
        10143
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1185": {
      "fn": "ERC20._approve",
      "offset": [
        10075,
        10143
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1187": {
      "fn": "ERC20._approve",
      "jump": "i",
      "offset": [
        10075,
        10143
      ],
      "op": "ADD",
      "path": "0"
    },
    "1188": {
      "fn": "ERC20._approve",
      "offset": [
        10075,
        10143
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x304"
    },
    "1191": {
      "op": "SWAP1"
    },
    "1192": {
      "op": "PUSH2",
      "value": "0xB41"
    },
    "1195": {
      "op": "JUMP"
    },
    "1196": {
      "op": "JUMPDEST"
    },
    "1197": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1199": {
      "fn": "ERC20._approve",
      "offset": [
        10161,
        10182
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 21,
      "value": "0x1"
    },
    "1201": {
      "branch": 48,
      "fn": "ERC20._approve",
      "offset": [
        10161,
        10182
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "1203": {
      "fn": "ERC20._approve",
      "offset": [
        10153,
        10221
      ],
      "op": "SHL",
      "path": "0"
    },
    "1204": {
      "fn": "ERC20._approve",
      "offset": [
        10153,
        10221
      ],
      "op": "SUB",
      "path": "0"
    },
    "1205": {
      "fn": "ERC20._approve",
      "offset": [
        10153,
        10221
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1206": {
      "fn": "ERC20._approve",
      "offset": [
        10153,
        10221
      ],
      "op": "AND",
      "path": "0"
    },
    "1207": {
      "op": "PUSH2",
      "value": "0x4D2"
    },
    "1210": {
      "op": "JUMPI"
    },
    "1211": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1213": {
      "fn": "ERC20._approve",
      "offset": [
        10153,
        10221
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1214": {
      "fn": "ERC20._approve",
      "offset": [
        10153,
        10221
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x461BCD"
    },
    "1218": {
      "fn": "ERC20._approve",
      "offset": [
        10153,
        10221
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE5"
    },
    "1220": {
      "fn": "ERC20._approve",
      "offset": [
        10153,
        10221
      ],
      "op": "SHL",
      "path": "0"
    },
    "1221": {
      "fn": "ERC20._approve",
      "offset": [
        10153,
        10221
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1222": {
      "fn": "ERC20._approve",
      "offset": [
        10153,
        10221
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1223": {
      "fn": "ERC20._approve",
      "offset": [
        10153,
        10221
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1225": {
      "fn": "ERC20._approve",
      "jump": "i",
      "offset": [
        10153,
        10221
      ],
      "op": "ADD",
      "path": "0"
    },
    "1226": {
      "fn": "ERC20._approve",
      "offset": [
        10153,
        10221
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x304"
    },
    "1229": {
      "op": "SWAP1"
    },
    "1230": {
      "op": "PUSH2",
      "value": "0x9EB"
    },
    "1233": {
      "op": "JUMP"
    },
    "1234": {
      "op": "JUMPDEST"
    },
    "1235": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1237": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 22,
      "value": "0x1"
    },
    "1239": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "1241": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "SHL",
      "path": "0"
    },
    "1242": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "SUB",
      "path": "0"
    },
    "1243": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1244": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1245": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "AND",
      "path": "0"
    },
    "1246": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1248": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1249": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1250": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1251": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1253": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1255": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1256": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1257": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1258": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10259
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1260": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10259
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1261": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10259
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1262": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10259
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1263": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10259
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1264": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10259
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1265": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10259
      ],
      "op": "AND",
      "path": "0"
    },
    "1266": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10259
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1267": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10259
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1268": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10259
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1269": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10259
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1270": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10259
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1271": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10259
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1272": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10259
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1273": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10268
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1274": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10268
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1275": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10268
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1276": {
      "fn": "ERC20._approve",
      "offset": [
        10283,
        10315
      ],
      "op": "KECCAK256",
      "path": "0",
      "statement": 23
    },
    "1277": {
      "fn": "ERC20._approve",
      "offset": [
        10283,
        10315
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1278": {
      "fn": "ERC20._approve",
      "offset": [
        10283,
        10315
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1279": {
      "fn": "ERC20._approve",
      "offset": [
        10283,
        10315
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1280": {
      "fn": "ERC20._approve",
      "offset": [
        10283,
        10315
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1281": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10268
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "1314": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10268
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1315": {
      "fn": "ERC20._approve",
      "offset": [
        10283,
        10315
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x52D"
    },
    "1318": {
      "fn": "ERC20._approve",
      "jump": "i",
      "offset": [
        10283,
        10315
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1319": {
      "fn": "ERC20._approve",
      "offset": [
        10283,
        10315
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1320": {
      "fn": "ERC20._approve",
      "offset": [
        10283,
        10315
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1321": {
      "fn": "ERC20._approve",
      "offset": [
        10283,
        10315
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC01"
    },
    "1324": {
      "fn": "ERC20._approve",
      "offset": [
        10283,
        10315
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1325": {
      "fn": "ERC20._approve",
      "offset": [
        10283,
        10315
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1326": {
      "fn": "ERC20._approve",
      "offset": [
        10283,
        10315
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1328": {
      "fn": "ERC20._approve",
      "offset": [
        10283,
        10315
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1329": {
      "fn": "ERC20._approve",
      "offset": [
        10283,
        10315
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1330": {
      "fn": "ERC20._approve",
      "offset": [
        9952,
        10322
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1331": {
      "fn": "ERC20._approve",
      "offset": [
        9952,
        10322
      ],
      "op": "SUB",
      "path": "0"
    },
    "1332": {
      "fn": "ERC20._approve",
      "offset": [
        9952,
        10322
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1333": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [
        9952,
        10322
      ],
      "op": "LOG3",
      "path": "0"
    },
    "1334": {
      "fn": "ERC20._transfer",
      "offset": [
        7255,
        7968
      ],
      "op": "POP",
      "path": "0"
    },
    "1335": {
      "op": "POP"
    },
    "1336": {
      "op": "POP"
    },
    "1337": {
      "op": "JUMP"
    },
    "1338": {
      "op": "JUMPDEST"
    },
    "1339": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1341": {
      "fn": "ERC20._transfer",
      "offset": [
        7390,
        7410
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 24,
      "value": "0x1"
    },
    "1343": {
      "branch": 49,
      "fn": "ERC20._transfer",
      "offset": [
        7390,
        7410
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "1345": {
      "fn": "ERC20._transfer",
      "offset": [
        7382,
        7452
      ],
      "op": "SHL",
      "path": "0"
    },
    "1346": {
      "fn": "ERC20._transfer",
      "offset": [
        7382,
        7452
      ],
      "op": "SUB",
      "path": "0"
    },
    "1347": {
      "fn": "ERC20._transfer",
      "offset": [
        7382,
        7452
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1348": {
      "fn": "ERC20._transfer",
      "offset": [
        7382,
        7452
      ],
      "op": "AND",
      "path": "0"
    },
    "1349": {
      "op": "PUSH2",
      "value": "0x560"
    },
    "1352": {
      "op": "JUMPI"
    },
    "1353": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1355": {
      "fn": "ERC20._transfer",
      "offset": [
        7382,
        7452
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1356": {
      "fn": "ERC20._transfer",
      "offset": [
        7382,
        7452
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x461BCD"
    },
    "1360": {
      "fn": "ERC20._transfer",
      "offset": [
        7382,
        7452
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE5"
    },
    "1362": {
      "fn": "ERC20._transfer",
      "offset": [
        7382,
        7452
      ],
      "op": "SHL",
      "path": "0"
    },
    "1363": {
      "fn": "ERC20._transfer",
      "offset": [
        7382,
        7452
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1364": {
      "fn": "ERC20._transfer",
      "offset": [
        7382,
        7452
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1365": {
      "fn": "ERC20._transfer",
      "offset": [
        7382,
        7452
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1367": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7382,
        7452
      ],
      "op": "ADD",
      "path": "0"
    },
    "1368": {
      "fn": "ERC20._transfer",
      "offset": [
        7382,
        7452
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x304"
    },
    "1371": {
      "op": "SWAP1"
    },
    "1372": {
      "op": "PUSH2",
      "value": "0xAFC"
    },
    "1375": {
      "op": "JUMP"
    },
    "1376": {
      "op": "JUMPDEST"
    },
    "1377": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1379": {
      "fn": "ERC20._transfer",
      "offset": [
        7470,
        7493
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 25,
      "value": "0x1"
    },
    "1381": {
      "branch": 50,
      "fn": "ERC20._transfer",
      "offset": [
        7470,
        7493
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "1383": {
      "fn": "ERC20._transfer",
      "offset": [
        7462,
        7533
      ],
      "op": "SHL",
      "path": "0"
    },
    "1384": {
      "fn": "ERC20._transfer",
      "offset": [
        7462,
        7533
      ],
      "op": "SUB",
      "path": "0"
    },
    "1385": {
      "fn": "ERC20._transfer",
      "offset": [
        7462,
        7533
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1386": {
      "fn": "ERC20._transfer",
      "offset": [
        7462,
        7533
      ],
      "op": "AND",
      "path": "0"
    },
    "1387": {
      "op": "PUSH2",
      "value": "0x586"
    },
    "1390": {
      "op": "JUMPI"
    },
    "1391": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1393": {
      "fn": "ERC20._transfer",
      "offset": [
        7462,
        7533
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1394": {
      "fn": "ERC20._transfer",
      "offset": [
        7462,
        7533
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x461BCD"
    },
    "1398": {
      "fn": "ERC20._transfer",
      "offset": [
        7462,
        7533
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE5"
    },
    "1400": {
      "fn": "ERC20._transfer",
      "offset": [
        7462,
        7533
      ],
      "op": "SHL",
      "path": "0"
    },
    "1401": {
      "fn": "ERC20._transfer",
      "offset": [
        7462,
        7533
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1402": {
      "fn": "ERC20._transfer",
      "offset": [
        7462,
        7533
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1403": {
      "fn": "ERC20._transfer",
      "offset": [
        7462,
        7533
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1405": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7462,
        7533
      ],
      "op": "ADD",
      "path": "0"
    },
    "1406": {
      "fn": "ERC20._transfer",
      "offset": [
        7462,
        7533
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x304"
    },
    "1409": {
      "fn": "ERC20._transfer",
      "offset": [
        7544,
        7591
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 26
    },
    "1410": {
      "fn": "ERC20._transfer",
      "offset": [
        7565,
        7571
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x966"
    },
    "1413": {
      "fn": "ERC20._transfer",
      "offset": [
        7573,
        7582
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1414": {
      "fn": "ERC20._transfer",
      "offset": [
        7584,
        7590
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1415": {
      "fn": "ERC20._transfer",
      "offset": [
        7544,
        7564
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x591"
    },
    "1418": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7544,
        7591
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1419": {
      "fn": "ERC20._transfer",
      "offset": [
        7544,
        7591
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1420": {
      "op": "DUP4"
    },
    "1421": {
      "op": "PUSH2",
      "value": "0x751"
    },
    "1424": {
      "op": "JUMP"
    },
    "1425": {
      "op": "JUMPDEST"
    },
    "1426": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1428": {
      "fn": "ERC20._transfer",
      "offset": [
        7626,
        7643
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1430": {
      "fn": "ERC20._transfer",
      "offset": [
        7626,
        7643
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "1432": {
      "fn": "ERC20._transfer",
      "offset": [
        7602,
        7623
      ],
      "op": "SHL",
      "path": "0"
    },
    "1433": {
      "fn": "ERC20._transfer",
      "offset": [
        7626,
        7643
      ],
      "op": "SUB",
      "path": "0"
    },
    "1434": {
      "fn": "ERC20._transfer",
      "offset": [
        7626,
        7643
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1435": {
      "fn": "ERC20._transfer",
      "offset": [
        7626,
        7643
      ],
      "op": "AND",
      "path": "0"
    },
    "1436": {
      "fn": "ERC20._transfer",
      "offset": [
        7626,
        7643
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1438": {
      "fn": "ERC20._transfer",
      "offset": [
        7626,
        7643
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1439": {
      "fn": "ERC20._transfer",
      "offset": [
        7626,
        7643
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1440": {
      "fn": "ERC20._transfer",
      "offset": [
        7626,
        7643
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1441": {
      "fn": "ERC20._transfer",
      "offset": [
        7626,
        7643
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1443": {
      "fn": "ERC20._transfer",
      "offset": [
        7626,
        7643
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1444": {
      "fn": "ERC20._transfer",
      "offset": [
        7626,
        7643
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1445": {
      "fn": "ERC20._transfer",
      "offset": [
        7626,
        7643
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1446": {
      "fn": "ERC20._transfer",
      "offset": [
        7661,
        7684
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 27,
      "value": "0x40"
    },
    "1448": {
      "fn": "ERC20._transfer",
      "offset": [
        7661,
        7684
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1449": {
      "fn": "ERC20._transfer",
      "offset": [
        7661,
        7684
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1450": {
      "branch": 51,
      "fn": "ERC20._transfer",
      "offset": [
        7661,
        7684
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1451": {
      "fn": "ERC20._transfer",
      "offset": [
        7653,
        7727
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1452": {
      "fn": "ERC20._transfer",
      "offset": [
        7653,
        7727
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1453": {
      "fn": "ERC20._transfer",
      "offset": [
        7653,
        7727
      ],
      "op": "LT",
      "path": "0"
    },
    "1454": {
      "fn": "ERC20._transfer",
      "offset": [
        7653,
        7727
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1455": {
      "op": "PUSH2",
      "value": "0x5CA"
    },
    "1458": {
      "op": "JUMPI"
    },
    "1459": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1461": {
      "fn": "ERC20._transfer",
      "offset": [
        7653,
        7727
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1462": {
      "fn": "ERC20._transfer",
      "offset": [
        7653,
        7727
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x461BCD"
    },
    "1466": {
      "fn": "ERC20._transfer",
      "offset": [
        7653,
        7727
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE5"
    },
    "1468": {
      "fn": "ERC20._transfer",
      "offset": [
        7653,
        7727
      ],
      "op": "SHL",
      "path": "0"
    },
    "1469": {
      "fn": "ERC20._transfer",
      "offset": [
        7653,
        7727
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1470": {
      "fn": "ERC20._transfer",
      "offset": [
        7653,
        7727
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1471": {
      "fn": "ERC20._transfer",
      "offset": [
        7653,
        7727
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1473": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7653,
        7727
      ],
      "op": "ADD",
      "path": "0"
    },
    "1474": {
      "fn": "ERC20._transfer",
      "offset": [
        7653,
        7727
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x304"
    },
    "1477": {
      "op": "SWAP1"
    },
    "1478": {
      "op": "PUSH2",
      "value": "0xA2D"
    },
    "1481": {
      "op": "JUMP"
    },
    "1482": {
      "op": "JUMPDEST"
    },
    "1483": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1485": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7778
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 28,
      "value": "0x1"
    },
    "1487": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7778
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "1489": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7778
      ],
      "op": "SHL",
      "path": "0"
    },
    "1490": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7770
      ],
      "op": "SUB",
      "path": "0"
    },
    "1491": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7778
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1492": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7778
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1493": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7778
      ],
      "op": "AND",
      "path": "0"
    },
    "1494": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7778
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1496": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7778
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1497": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7778
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1498": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7778
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1499": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7778
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1501": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7778
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1502": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7778
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1503": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7778
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1504": {
      "fn": "ERC20._transfer",
      "offset": [
        7781,
        7803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1506": {
      "fn": "ERC20._transfer",
      "offset": [
        7781,
        7803
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1507": {
      "fn": "ERC20._transfer",
      "offset": [
        7781,
        7803
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1508": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7803
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1509": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7803
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1510": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7843
      ],
      "op": "DUP6",
      "path": "0",
      "statement": 29
    },
    "1511": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7843
      ],
      "op": "SUB",
      "path": "0"
    },
    "1512": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7843
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1513": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7843
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1514": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7843
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1515": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7843
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1516": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7843
      ],
      "op": "AND",
      "path": "0"
    },
    "1517": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7843
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1518": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7853
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1519": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7853
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1520": {
      "fn": "ERC20._transfer",
      "offset": [
        7781,
        7803
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1521": {
      "fn": "ERC20._transfer",
      "offset": [
        7781,
        7803
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1522": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7770
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1523": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7853
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1524": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7853
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1525": {
      "fn": "ERC20._transfer",
      "offset": [
        7781,
        7803
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1526": {
      "fn": "ERC20._transfer",
      "offset": [
        7781,
        7803
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1527": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7853
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x601"
    },
    "1530": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7823,
        7853
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1531": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7853
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1532": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7853
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1533": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7853
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC18"
    },
    "1536": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7853
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1537": {
      "op": "JUMPDEST"
    },
    "1538": {
      "op": "SWAP3"
    },
    "1539": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "POP",
      "path": "0",
      "statement": 30
    },
    "1540": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "POP",
      "path": "0"
    },
    "1541": {
      "op": "DUP2"
    },
    "1542": {
      "op": "SWAP1"
    },
    "1543": {
      "op": "SSTORE"
    },
    "1544": {
      "op": "POP"
    },
    "1545": {
      "op": "DUP3"
    },
    "1546": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1548": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1550": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "1552": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "SHL",
      "path": "0"
    },
    "1553": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "SUB",
      "path": "0"
    },
    "1554": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "AND",
      "path": "0"
    },
    "1555": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1556": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1558": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1560": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "1562": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "SHL",
      "path": "0"
    },
    "1563": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "SUB",
      "path": "0"
    },
    "1564": {
      "fn": "ERC20._transfer",
      "offset": [
        7897,
        7903
      ],
      "op": "AND",
      "path": "0"
    },
    "1565": {
      "fn": "ERC20._transfer",
      "offset": [
        7897,
        7903
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "1598": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1599": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7869,
        7904
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1601": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1602": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x64B"
    },
    "1605": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1606": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1607": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC01"
    },
    "1610": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1611": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1612": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1614": {
      "fn": "ERC20._transfer",
      "offset": [
        7915,
        7961
      ],
      "op": "MLOAD",
      "path": "0",
      "statement": 31
    },
    "1615": {
      "fn": "ERC20._transfer",
      "offset": [
        7935,
        7941
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1616": {
      "fn": "ERC20._transfer",
      "offset": [
        7943,
        7952
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1617": {
      "fn": "ERC20._transfer",
      "offset": [
        7954,
        7960
      ],
      "op": "SUB",
      "path": "0"
    },
    "1618": {
      "fn": "ERC20._transfer",
      "offset": [
        7915,
        7934
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1619": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7915,
        7961
      ],
      "op": "LOG3",
      "path": "0"
    },
    "1620": {
      "fn": "ERC20._transfer",
      "offset": [
        7915,
        7961
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x65E"
    },
    "1623": {
      "fn": "ERC20._transfer",
      "offset": [
        7255,
        7968
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1624": {
      "fn": "ERC20._transfer",
      "offset": [
        7255,
        7968
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1625": {
      "fn": "ERC20._transfer",
      "offset": [
        7255,
        7968
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1626": {
      "fn": "ERC20._transfer",
      "offset": [
        7255,
        7968
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x751"
    },
    "1629": {
      "fn": "ERC20._transfer",
      "jump": "o",
      "offset": [
        7255,
        7968
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1630": {
      "fn": "ERC20._burn",
      "offset": [
        8953,
        9529
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1631": {
      "op": "POP"
    },
    "1632": {
      "op": "POP"
    },
    "1633": {
      "op": "POP"
    },
    "1634": {
      "op": "POP"
    },
    "1635": {
      "op": "JUMP"
    },
    "1636": {
      "fn": "ERC20._burn",
      "offset": [
        9036,
        9057
      ],
      "op": "JUMPDEST",
      "path": "0",
      "statement": 32
    },
    "1637": {
      "branch": 52,
      "fn": "ERC20._burn",
      "offset": [
        9036,
        9057
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1639": {
      "fn": "ERC20._burn",
      "offset": [
        9028,
        9095
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1641": {
      "fn": "ERC20._burn",
      "offset": [
        9028,
        9095
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "1643": {
      "fn": "ERC20._burn",
      "offset": [
        9028,
        9095
      ],
      "op": "SHL",
      "path": "0"
    },
    "1644": {
      "fn": "ERC20._burn",
      "offset": [
        9028,
        9095
      ],
      "op": "SUB",
      "path": "0"
    },
    "1645": {
      "op": "DUP3"
    },
    "1646": {
      "op": "AND"
    },
    "1647": {
      "op": "PUSH2",
      "value": "0x68A"
    },
    "1650": {
      "branch": 52,
      "fn": "ERC20._burn",
      "offset": [
        9028,
        9095
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1651": {
      "fn": "ERC20._burn",
      "offset": [
        9028,
        9095
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1653": {
      "fn": "ERC20._burn",
      "offset": [
        9028,
        9095
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1654": {
      "fn": "ERC20._burn",
      "offset": [
        9028,
        9095
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x461BCD"
    },
    "1658": {
      "fn": "ERC20._burn",
      "offset": [
        9028,
        9095
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE5"
    },
    "1660": {
      "fn": "ERC20._burn",
      "offset": [
        9028,
        9095
      ],
      "op": "SHL",
      "path": "0"
    },
    "1661": {
      "fn": "ERC20._burn",
      "offset": [
        9028,
        9095
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1662": {
      "fn": "ERC20._burn",
      "jump": "i",
      "offset": [
        9028,
        9095
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1663": {
      "fn": "ERC20._burn",
      "offset": [
        9028,
        9095
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1665": {
      "fn": "ERC20._burn",
      "offset": [
        9106,
        9155
      ],
      "op": "ADD",
      "path": "0",
      "statement": 33
    },
    "1666": {
      "fn": "ERC20._burn",
      "offset": [
        9127,
        9134
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x304"
    },
    "1669": {
      "fn": "ERC20._burn",
      "offset": [
        9144,
        9145
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1670": {
      "fn": "ERC20._burn",
      "offset": [
        9148,
        9154
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xABB"
    },
    "1673": {
      "fn": "ERC20._burn",
      "offset": [
        9106,
        9126
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1674": {
      "fn": "ERC20._burn",
      "jump": "i",
      "offset": [
        9106,
        9155
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1675": {
      "fn": "ERC20._burn",
      "offset": [
        9106,
        9155
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x696"
    },
    "1678": {
      "op": "DUP3"
    },
    "1679": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1681": {
      "op": "DUP4"
    },
    "1682": {
      "op": "PUSH2",
      "value": "0x751"
    },
    "1685": {
      "op": "JUMP"
    },
    "1686": {
      "fn": "ERC20._burn",
      "offset": [
        9191,
        9209
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1687": {
      "fn": "ERC20._burn",
      "offset": [
        9191,
        9209
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1689": {
      "fn": "ERC20._burn",
      "offset": [
        9166,
        9188
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1691": {
      "fn": "ERC20._burn",
      "offset": [
        9191,
        9209
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "1693": {
      "fn": "ERC20._burn",
      "offset": [
        9191,
        9209
      ],
      "op": "SHL",
      "path": "0"
    },
    "1694": {
      "fn": "ERC20._burn",
      "offset": [
        9191,
        9209
      ],
      "op": "SUB",
      "path": "0"
    },
    "1695": {
      "fn": "ERC20._burn",
      "offset": [
        9191,
        9209
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1696": {
      "fn": "ERC20._burn",
      "offset": [
        9191,
        9209
      ],
      "op": "AND",
      "path": "0"
    },
    "1697": {
      "fn": "ERC20._burn",
      "offset": [
        9191,
        9209
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1699": {
      "fn": "ERC20._burn",
      "offset": [
        9191,
        9209
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1700": {
      "fn": "ERC20._burn",
      "offset": [
        9191,
        9209
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1701": {
      "fn": "ERC20._burn",
      "offset": [
        9191,
        9209
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1702": {
      "fn": "ERC20._burn",
      "offset": [
        9191,
        9209
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1704": {
      "fn": "ERC20._burn",
      "offset": [
        9191,
        9209
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1705": {
      "fn": "ERC20._burn",
      "offset": [
        9227,
        9251
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 34
    },
    "1706": {
      "fn": "ERC20._burn",
      "offset": [
        9227,
        9251
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1707": {
      "fn": "ERC20._burn",
      "offset": [
        9227,
        9251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1709": {
      "branch": 53,
      "fn": "ERC20._burn",
      "offset": [
        9227,
        9251
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1710": {
      "fn": "ERC20._burn",
      "offset": [
        9219,
        9290
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1711": {
      "fn": "ERC20._burn",
      "offset": [
        9219,
        9290
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1712": {
      "fn": "ERC20._burn",
      "offset": [
        9219,
        9290
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1713": {
      "fn": "ERC20._burn",
      "offset": [
        9219,
        9290
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1714": {
      "op": "LT"
    },
    "1715": {
      "op": "ISZERO"
    },
    "1716": {
      "op": "PUSH2",
      "value": "0x6CF"
    },
    "1719": {
      "branch": 53,
      "fn": "ERC20._burn",
      "offset": [
        9219,
        9290
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1720": {
      "fn": "ERC20._burn",
      "offset": [
        9219,
        9290
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1722": {
      "fn": "ERC20._burn",
      "offset": [
        9219,
        9290
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1723": {
      "fn": "ERC20._burn",
      "offset": [
        9219,
        9290
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x461BCD"
    },
    "1727": {
      "fn": "ERC20._burn",
      "offset": [
        9219,
        9290
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE5"
    },
    "1729": {
      "fn": "ERC20._burn",
      "offset": [
        9219,
        9290
      ],
      "op": "SHL",
      "path": "0"
    },
    "1730": {
      "fn": "ERC20._burn",
      "offset": [
        9219,
        9290
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1731": {
      "fn": "ERC20._burn",
      "jump": "i",
      "offset": [
        9219,
        9290
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1732": {
      "fn": "ERC20._burn",
      "offset": [
        9219,
        9290
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1734": {
      "op": "ADD"
    },
    "1735": {
      "op": "PUSH2",
      "value": "0x304"
    },
    "1738": {
      "op": "SWAP1"
    },
    "1739": {
      "op": "PUSH2",
      "value": "0x9A9"
    },
    "1742": {
      "op": "JUMP"
    },
    "1743": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9342
      ],
      "op": "JUMPDEST",
      "path": "0",
      "statement": 35
    },
    "1744": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9342
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1746": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9333
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1748": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9342
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "1750": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9342
      ],
      "op": "SHL",
      "path": "0"
    },
    "1751": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9342
      ],
      "op": "SUB",
      "path": "0"
    },
    "1752": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9342
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1753": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9342
      ],
      "op": "AND",
      "path": "0"
    },
    "1754": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9342
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1756": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9342
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1757": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9342
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1758": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9342
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1759": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9342
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1761": {
      "fn": "ERC20._burn",
      "offset": [
        9345,
        9368
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1762": {
      "fn": "ERC20._burn",
      "offset": [
        9345,
        9368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1763": {
      "fn": "ERC20._burn",
      "offset": [
        9345,
        9368
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1764": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9368
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1766": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9368
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1767": {
      "fn": "ERC20._burn",
      "offset": [
        9388,
        9400
      ],
      "op": "KECCAK256",
      "path": "0",
      "statement": 36
    },
    "1768": {
      "fn": "ERC20._burn",
      "offset": [
        9388,
        9410
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1769": {
      "fn": "ERC20._burn",
      "offset": [
        9388,
        9410
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1770": {
      "fn": "ERC20._burn",
      "offset": [
        9345,
        9368
      ],
      "op": "SUB",
      "path": "0"
    },
    "1771": {
      "fn": "ERC20._burn",
      "offset": [
        9345,
        9368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1772": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9333
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1773": {
      "fn": "ERC20._burn",
      "offset": [
        9388,
        9410
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1775": {
      "fn": "ERC20._burn",
      "offset": [
        9388,
        9410
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1776": {
      "fn": "ERC20._burn",
      "offset": [
        9345,
        9368
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1777": {
      "fn": "ERC20._burn",
      "offset": [
        9345,
        9368
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1778": {
      "fn": "ERC20._burn",
      "offset": [
        9388,
        9410
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1779": {
      "fn": "ERC20._burn",
      "jump": "i",
      "offset": [
        9388,
        9410
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1780": {
      "fn": "ERC20._burn",
      "offset": [
        9388,
        9410
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6FE"
    },
    "1783": {
      "fn": "ERC20._burn",
      "offset": [
        9388,
        9410
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1784": {
      "fn": "ERC20._burn",
      "offset": [
        9388,
        9410
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1785": {
      "fn": "ERC20._burn",
      "offset": [
        9388,
        9410
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1786": {
      "op": "PUSH2",
      "value": "0xC30"
    },
    "1789": {
      "op": "JUMP"
    },
    "1790": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "JUMPDEST",
      "path": "0",
      "statement": 37
    },
    "1791": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1792": {
      "fn": "ERC20._burn",
      "offset": [
        9452,
        9453
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1793": {
      "fn": "ERC20._burn",
      "offset": [
        9452,
        9453
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1794": {
      "op": "POP"
    },
    "1795": {
      "op": "POP"
    },
    "1796": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1798": {
      "op": "MLOAD"
    },
    "1799": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1801": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1802": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1804": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1806": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "1808": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "SHL",
      "path": "0"
    },
    "1809": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "SUB",
      "path": "0"
    },
    "1810": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1811": {
      "fn": "ERC20._burn",
      "offset": [
        9456,
        9462
      ],
      "op": "AND",
      "path": "0"
    },
    "1812": {
      "fn": "ERC20._burn",
      "offset": [
        9456,
        9462
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1813": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "1846": {
      "fn": "ERC20._burn",
      "jump": "i",
      "offset": [
        9426,
        9463
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1847": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x741"
    },
    "1850": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1851": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1852": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1853": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC01"
    },
    "1856": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1857": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1858": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1860": {
      "fn": "ERC20._burn",
      "offset": [
        9474,
        9522
      ],
      "op": "MLOAD",
      "path": "0",
      "statement": 38
    },
    "1861": {
      "fn": "ERC20._burn",
      "offset": [
        9494,
        9501
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1862": {
      "fn": "ERC20._burn",
      "offset": [
        9511,
        9512
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1863": {
      "fn": "ERC20._burn",
      "offset": [
        9515,
        9521
      ],
      "op": "SUB",
      "path": "0"
    },
    "1864": {
      "fn": "ERC20._burn",
      "offset": [
        9474,
        9522
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1865": {
      "fn": "ERC20._burn",
      "offset": [
        8953,
        9529
      ],
      "op": "LOG3",
      "path": "0"
    },
    "1866": {
      "fn": "ERC20._burn",
      "offset": [
        8953,
        9529
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x751"
    },
    "1869": {
      "fn": "ERC20._burn",
      "offset": [
        8953,
        9529
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1870": {
      "fn": "ERC20._burn",
      "jump": "o",
      "offset": [
        8953,
        9529
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1872": {
      "fn": "ERC20._mint",
      "offset": [
        8244,
        8633
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1873": {
      "op": "JUMPDEST"
    },
    "1874": {
      "op": "POP"
    },
    "1875": {
      "op": "POP"
    },
    "1876": {
      "op": "POP"
    },
    "1877": {
      "op": "JUMP"
    },
    "1878": {
      "fn": "ERC20._mint",
      "offset": [
        8327,
        8348
      ],
      "op": "JUMPDEST",
      "path": "0",
      "statement": 39
    },
    "1879": {
      "branch": 54,
      "fn": "ERC20._mint",
      "offset": [
        8327,
        8348
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1881": {
      "fn": "ERC20._mint",
      "offset": [
        8319,
        8384
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1883": {
      "fn": "ERC20._mint",
      "offset": [
        8319,
        8384
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "1885": {
      "fn": "ERC20._mint",
      "offset": [
        8319,
        8384
      ],
      "op": "SHL",
      "path": "0"
    },
    "1886": {
      "fn": "ERC20._mint",
      "offset": [
        8319,
        8384
      ],
      "op": "SUB",
      "path": "0"
    },
    "1887": {
      "op": "DUP3"
    },
    "1888": {
      "op": "AND"
    },
    "1889": {
      "op": "PUSH2",
      "value": "0x77C"
    },
    "1892": {
      "branch": 54,
      "fn": "ERC20._mint",
      "offset": [
        8319,
        8384
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1893": {
      "fn": "ERC20._mint",
      "offset": [
        8319,
        8384
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1895": {
      "fn": "ERC20._mint",
      "offset": [
        8319,
        8384
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1896": {
      "fn": "ERC20._mint",
      "offset": [
        8319,
        8384
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x461BCD"
    },
    "1900": {
      "fn": "ERC20._mint",
      "offset": [
        8319,
        8384
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE5"
    },
    "1902": {
      "fn": "ERC20._mint",
      "offset": [
        8319,
        8384
      ],
      "op": "SHL",
      "path": "0"
    },
    "1903": {
      "fn": "ERC20._mint",
      "offset": [
        8319,
        8384
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1904": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8319,
        8384
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1905": {
      "fn": "ERC20._mint",
      "offset": [
        8319,
        8384
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1907": {
      "fn": "ERC20._mint",
      "offset": [
        8395,
        8444
      ],
      "op": "ADD",
      "path": "0",
      "statement": 40
    },
    "1908": {
      "fn": "ERC20._mint",
      "offset": [
        8424,
        8425
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x304"
    },
    "1911": {
      "fn": "ERC20._mint",
      "offset": [
        8428,
        8435
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1912": {
      "fn": "ERC20._mint",
      "offset": [
        8437,
        8443
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBCA"
    },
    "1915": {
      "fn": "ERC20._mint",
      "offset": [
        8395,
        8415
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1916": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8395,
        8444
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1917": {
      "fn": "ERC20._mint",
      "offset": [
        8395,
        8444
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x788"
    },
    "1920": {
      "fn": "ERC20._mint",
      "offset": [
        8471,
        8477
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 41,
      "value": "0x0"
    },
    "1922": {
      "fn": "ERC20._mint",
      "offset": [
        8455,
        8467
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1923": {
      "fn": "ERC20._mint",
      "offset": [
        8455,
        8467
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1924": {
      "fn": "ERC20._mint",
      "offset": [
        8455,
        8477
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x751"
    },
    "1927": {
      "fn": "ERC20._mint",
      "offset": [
        8455,
        8477
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1928": {
      "fn": "ERC20._mint",
      "offset": [
        8455,
        8477
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1929": {
      "fn": "ERC20._mint",
      "offset": [
        8455,
        8477
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1930": {
      "fn": "ERC20._mint",
      "offset": [
        8455,
        8477
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1932": {
      "fn": "ERC20._mint",
      "offset": [
        8455,
        8477
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1934": {
      "fn": "ERC20._mint",
      "offset": [
        8455,
        8477
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1935": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8455,
        8477
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1936": {
      "fn": "ERC20._mint",
      "offset": [
        8455,
        8477
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1937": {
      "fn": "ERC20._mint",
      "offset": [
        8455,
        8477
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x79A"
    },
    "1940": {
      "fn": "ERC20._mint",
      "offset": [
        8455,
        8477
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1941": {
      "fn": "ERC20._mint",
      "offset": [
        8455,
        8477
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1942": {
      "op": "PUSH2",
      "value": "0xC18"
    },
    "1945": {
      "op": "JUMP"
    },
    "1946": {
      "op": "JUMPDEST"
    },
    "1947": {
      "op": "SWAP1"
    },
    "1948": {
      "op": "SWAP2"
    },
    "1949": {
      "op": "SSTORE"
    },
    "1950": {
      "op": "POP"
    },
    "1951": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8505
      ],
      "op": "POP",
      "path": "0",
      "statement": 42
    },
    "1952": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8505
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1954": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8496
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1956": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8505
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "1958": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8505
      ],
      "op": "SHL",
      "path": "0"
    },
    "1959": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8505
      ],
      "op": "SUB",
      "path": "0"
    },
    "1960": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8505
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1961": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8505
      ],
      "op": "AND",
      "path": "0"
    },
    "1962": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8505
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1964": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8505
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1965": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8505
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1966": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8505
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1967": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8505
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1969": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8515
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1970": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8515
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1971": {
      "fn": "ERC20._mint",
      "offset": [
        8509,
        8515
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1972": {
      "fn": "ERC20._mint",
      "offset": [
        8509,
        8515
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1974": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8496
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1975": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8515
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1976": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8515
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1977": {
      "fn": "ERC20._mint",
      "offset": [
        8509,
        8515
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1978": {
      "fn": "ERC20._mint",
      "offset": [
        8509,
        8515
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1979": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8515
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1980": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8487,
        8515
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1981": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8515
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7C7"
    },
    "1984": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8515
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1985": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8515
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1986": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8515
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1987": {
      "op": "PUSH2",
      "value": "0xC18"
    },
    "1990": {
      "op": "JUMP"
    },
    "1991": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "JUMPDEST",
      "path": "0",
      "statement": 43
    },
    "1992": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1993": {
      "op": "SWAP2"
    },
    "1994": {
      "op": "SSTORE"
    },
    "1995": {
      "op": "POP"
    },
    "1996": {
      "op": "POP"
    },
    "1997": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1999": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2000": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2002": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2004": {
      "fn": "ERC20._mint",
      "offset": [
        8547,
        8548
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "2006": {
      "fn": "ERC20._mint",
      "offset": [
        8547,
        8548
      ],
      "op": "SHL",
      "path": "0"
    },
    "2007": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "SUB",
      "path": "0"
    },
    "2008": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2009": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "AND",
      "path": "0"
    },
    "2010": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2011": {
      "fn": "ERC20._mint",
      "offset": [
        8560,
        8566
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2013": {
      "fn": "ERC20._mint",
      "offset": [
        8560,
        8566
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2014": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "2047": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8530,
        8567
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2048": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x80A"
    },
    "2051": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2052": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2053": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2054": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC01"
    },
    "2057": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2058": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2059": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2061": {
      "fn": "ERC20._mint",
      "offset": [
        8578,
        8626
      ],
      "op": "MLOAD",
      "path": "0",
      "statement": 44
    },
    "2062": {
      "fn": "ERC20._mint",
      "offset": [
        8606,
        8607
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2063": {
      "fn": "ERC20._mint",
      "offset": [
        8610,
        8617
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2064": {
      "fn": "ERC20._mint",
      "offset": [
        8619,
        8625
      ],
      "op": "SUB",
      "path": "0"
    },
    "2065": {
      "fn": "ERC20._mint",
      "offset": [
        8578,
        8597
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2066": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8578,
        8626
      ],
      "op": "LOG3",
      "path": "0"
    },
    "2067": {
      "fn": "ERC20._mint",
      "offset": [
        8578,
        8626
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x81E"
    },
    "2070": {
      "fn": "ERC20._mint",
      "offset": [
        8244,
        8633
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2072": {
      "fn": "ERC20._mint",
      "offset": [
        8244,
        8633
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2073": {
      "fn": "ERC20._mint",
      "jump": "o",
      "offset": [
        8244,
        8633
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2074": {
      "op": "PUSH2",
      "value": "0x751"
    },
    "2077": {
      "op": "JUMP"
    },
    "2078": {
      "op": "JUMPDEST"
    },
    "2079": {
      "op": "POP"
    },
    "2080": {
      "op": "POP"
    },
    "2081": {
      "op": "JUMP"
    },
    "2082": {
      "op": "JUMPDEST"
    },
    "2083": {
      "op": "DUP1"
    },
    "2084": {
      "op": "CALLDATALOAD"
    },
    "2085": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2087": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2089": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2091": {
      "op": "SHL"
    },
    "2092": {
      "op": "SUB"
    },
    "2093": {
      "op": "DUP2"
    },
    "2094": {
      "op": "AND"
    },
    "2095": {
      "op": "DUP2"
    },
    "2096": {
      "op": "EQ"
    },
    "2097": {
      "op": "PUSH2",
      "value": "0x3AC"
    },
    "2100": {
      "op": "JUMPI"
    },
    "2101": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2103": {
      "op": "DUP1"
    },
    "2104": {
      "op": "REVERT"
    },
    "2105": {
      "op": "JUMPDEST"
    },
    "2106": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2108": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2110": {
      "op": "DUP3"
    },
    "2111": {
      "op": "DUP5"
    },
    "2112": {
      "op": "SUB"
    },
    "2113": {
      "op": "SLT"
    },
    "2114": {
      "op": "ISZERO"
    },
    "2115": {
      "op": "PUSH2",
      "value": "0x84A"
    },
    "2118": {
      "op": "JUMPI"
    },
    "2119": {
      "op": "DUP1"
    },
    "2120": {
      "jump": "i",
      "op": "DUP2"
    },
    "2121": {
      "op": "REVERT"
    },
    "2122": {
      "op": "JUMPDEST"
    },
    "2123": {
      "op": "PUSH2",
      "value": "0x853"
    },
    "2126": {
      "op": "DUP3"
    },
    "2127": {
      "op": "PUSH2",
      "value": "0x822"
    },
    "2130": {
      "op": "JUMP"
    },
    "2131": {
      "jump": "o",
      "op": "JUMPDEST"
    },
    "2132": {
      "op": "SWAP4"
    },
    "2133": {
      "op": "SWAP3"
    },
    "2134": {
      "op": "POP"
    },
    "2135": {
      "op": "POP"
    },
    "2136": {
      "op": "POP"
    },
    "2137": {
      "op": "JUMP"
    },
    "2138": {
      "op": "JUMPDEST"
    },
    "2139": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2141": {
      "op": "DUP1"
    },
    "2142": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2144": {
      "op": "DUP4"
    },
    "2145": {
      "op": "DUP6"
    },
    "2146": {
      "op": "SUB"
    },
    "2147": {
      "op": "SLT"
    },
    "2148": {
      "op": "ISZERO"
    },
    "2149": {
      "op": "PUSH2",
      "value": "0x86C"
    },
    "2152": {
      "op": "JUMPI"
    },
    "2153": {
      "op": "DUP1"
    },
    "2154": {
      "jump": "i",
      "op": "DUP2"
    },
    "2155": {
      "op": "REVERT"
    },
    "2156": {
      "op": "JUMPDEST"
    },
    "2157": {
      "op": "PUSH2",
      "value": "0x875"
    },
    "2160": {
      "op": "DUP4"
    },
    "2161": {
      "op": "PUSH2",
      "value": "0x822"
    },
    "2164": {
      "op": "JUMP"
    },
    "2165": {
      "op": "JUMPDEST"
    },
    "2166": {
      "op": "SWAP2"
    },
    "2167": {
      "jump": "i",
      "op": "POP"
    },
    "2168": {
      "op": "PUSH2",
      "value": "0x883"
    },
    "2171": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2173": {
      "op": "DUP5"
    },
    "2174": {
      "op": "ADD"
    },
    "2175": {
      "op": "PUSH2",
      "value": "0x822"
    },
    "2178": {
      "op": "JUMP"
    },
    "2179": {
      "op": "JUMPDEST"
    },
    "2180": {
      "op": "SWAP1"
    },
    "2181": {
      "jump": "o",
      "op": "POP"
    },
    "2182": {
      "op": "SWAP3"
    },
    "2183": {
      "op": "POP"
    },
    "2184": {
      "op": "SWAP3"
    },
    "2185": {
      "op": "SWAP1"
    },
    "2186": {
      "op": "POP"
    },
    "2187": {
      "op": "JUMP"
    },
    "2188": {
      "op": "JUMPDEST"
    },
    "2189": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2191": {
      "op": "DUP1"
    },
    "2192": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2194": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2196": {
      "op": "DUP5"
    },
    "2197": {
      "op": "DUP7"
    },
    "2198": {
      "op": "SUB"
    },
    "2199": {
      "op": "SLT"
    },
    "2200": {
      "op": "ISZERO"
    },
    "2201": {
      "op": "PUSH2",
      "value": "0x8A0"
    },
    "2204": {
      "op": "JUMPI"
    },
    "2205": {
      "op": "DUP1"
    },
    "2206": {
      "jump": "i",
      "op": "DUP2"
    },
    "2207": {
      "op": "REVERT"
    },
    "2208": {
      "op": "JUMPDEST"
    },
    "2209": {
      "op": "PUSH2",
      "value": "0x8A9"
    },
    "2212": {
      "op": "DUP5"
    },
    "2213": {
      "op": "PUSH2",
      "value": "0x822"
    },
    "2216": {
      "op": "JUMP"
    },
    "2217": {
      "op": "JUMPDEST"
    },
    "2218": {
      "op": "SWAP3"
    },
    "2219": {
      "jump": "i",
      "op": "POP"
    },
    "2220": {
      "op": "PUSH2",
      "value": "0x8B7"
    },
    "2223": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2225": {
      "op": "DUP6"
    },
    "2226": {
      "op": "ADD"
    },
    "2227": {
      "op": "PUSH2",
      "value": "0x822"
    },
    "2230": {
      "op": "JUMP"
    },
    "2231": {
      "op": "JUMPDEST"
    },
    "2232": {
      "op": "SWAP2"
    },
    "2233": {
      "op": "POP"
    },
    "2234": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2236": {
      "op": "DUP5"
    },
    "2237": {
      "op": "ADD"
    },
    "2238": {
      "op": "CALLDATALOAD"
    },
    "2239": {
      "op": "SWAP1"
    },
    "2240": {
      "jump": "o",
      "op": "POP"
    },
    "2241": {
      "op": "SWAP3"
    },
    "2242": {
      "op": "POP"
    },
    "2243": {
      "op": "SWAP3"
    },
    "2244": {
      "op": "POP"
    },
    "2245": {
      "op": "SWAP3"
    },
    "2246": {
      "op": "JUMP"
    },
    "2247": {
      "op": "JUMPDEST"
    },
    "2248": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2250": {
      "op": "DUP1"
    },
    "2251": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2253": {
      "op": "DUP4"
    },
    "2254": {
      "op": "DUP6"
    },
    "2255": {
      "op": "SUB"
    },
    "2256": {
      "op": "SLT"
    },
    "2257": {
      "op": "ISZERO"
    },
    "2258": {
      "op": "PUSH2",
      "value": "0x8D9"
    },
    "2261": {
      "op": "JUMPI"
    },
    "2262": {
      "op": "DUP2"
    },
    "2263": {
      "jump": "i",
      "op": "DUP3"
    },
    "2264": {
      "op": "REVERT"
    },
    "2265": {
      "op": "JUMPDEST"
    },
    "2266": {
      "op": "PUSH2",
      "value": "0x8E2"
    },
    "2269": {
      "op": "DUP4"
    },
    "2270": {
      "op": "PUSH2",
      "value": "0x822"
    },
    "2273": {
      "op": "JUMP"
    },
    "2274": {
      "op": "JUMPDEST"
    },
    "2275": {
      "op": "SWAP5"
    },
    "2276": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2278": {
      "op": "SWAP4"
    },
    "2279": {
      "op": "SWAP1"
    },
    "2280": {
      "op": "SWAP4"
    },
    "2281": {
      "jump": "o",
      "op": "ADD"
    },
    "2282": {
      "op": "CALLDATALOAD"
    },
    "2283": {
      "op": "SWAP4"
    },
    "2284": {
      "op": "POP"
    },
    "2285": {
      "op": "POP"
    },
    "2286": {
      "op": "POP"
    },
    "2287": {
      "op": "JUMP"
    },
    "2288": {
      "op": "JUMPDEST"
    },
    "2289": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2291": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2293": {
      "op": "DUP3"
    },
    "2294": {
      "op": "DUP5"
    },
    "2295": {
      "op": "SUB"
    },
    "2296": {
      "op": "SLT"
    },
    "2297": {
      "op": "ISZERO"
    },
    "2298": {
      "op": "PUSH2",
      "value": "0x901"
    },
    "2301": {
      "op": "JUMPI"
    },
    "2302": {
      "op": "DUP1"
    },
    "2303": {
      "op": "DUP2"
    },
    "2304": {
      "op": "REVERT"
    },
    "2305": {
      "jump": "o",
      "op": "JUMPDEST"
    },
    "2306": {
      "op": "POP"
    },
    "2307": {
      "op": "CALLDATALOAD"
    },
    "2308": {
      "op": "SWAP2"
    },
    "2309": {
      "op": "SWAP1"
    },
    "2310": {
      "op": "POP"
    },
    "2311": {
      "op": "JUMP"
    },
    "2312": {
      "op": "JUMPDEST"
    },
    "2313": {
      "op": "SWAP1"
    },
    "2314": {
      "op": "ISZERO"
    },
    "2315": {
      "jump": "o",
      "op": "ISZERO"
    },
    "2316": {
      "op": "DUP2"
    },
    "2317": {
      "op": "MSTORE"
    },
    "2318": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2320": {
      "op": "ADD"
    },
    "2321": {
      "op": "SWAP1"
    },
    "2322": {
      "op": "JUMP"
    },
    "2323": {
      "op": "JUMPDEST"
    },
    "2324": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2326": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2328": {
      "op": "DUP1"
    },
    "2329": {
      "op": "DUP4"
    },
    "2330": {
      "op": "MSTORE"
    },
    "2331": {
      "op": "DUP4"
    },
    "2332": {
      "op": "MLOAD"
    },
    "2333": {
      "op": "DUP1"
    },
    "2334": {
      "op": "DUP3"
    },
    "2335": {
      "op": "DUP6"
    },
    "2336": {
      "op": "ADD"
    },
    "2337": {
      "op": "MSTORE"
    },
    "2338": {
      "op": "DUP3"
    },
    "2339": {
      "op": "JUMPDEST"
    },
    "2340": {
      "op": "DUP2"
    },
    "2341": {
      "op": "DUP2"
    },
    "2342": {
      "op": "LT"
    },
    "2343": {
      "op": "ISZERO"
    },
    "2344": {
      "op": "PUSH2",
      "value": "0x93F"
    },
    "2347": {
      "op": "JUMPI"
    },
    "2348": {
      "op": "DUP6"
    },
    "2349": {
      "op": "DUP2"
    },
    "2350": {
      "op": "ADD"
    },
    "2351": {
      "op": "DUP4"
    },
    "2352": {
      "op": "ADD"
    },
    "2353": {
      "op": "MLOAD"
    },
    "2354": {
      "op": "DUP6"
    },
    "2355": {
      "op": "DUP3"
    },
    "2356": {
      "op": "ADD"
    },
    "2357": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2359": {
      "op": "ADD"
    },
    "2360": {
      "op": "MSTORE"
    },
    "2361": {
      "op": "DUP3"
    },
    "2362": {
      "op": "ADD"
    },
    "2363": {
      "op": "PUSH2",
      "value": "0x923"
    },
    "2366": {
      "op": "JUMP"
    },
    "2367": {
      "op": "JUMPDEST"
    },
    "2368": {
      "op": "DUP2"
    },
    "2369": {
      "op": "DUP2"
    },
    "2370": {
      "op": "GT"
    },
    "2371": {
      "op": "ISZERO"
    },
    "2372": {
      "op": "PUSH2",
      "value": "0x950"
    },
    "2375": {
      "op": "JUMPI"
    },
    "2376": {
      "op": "DUP4"
    },
    "2377": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2379": {
      "op": "DUP4"
    },
    "2380": {
      "op": "DUP8"
    },
    "2381": {
      "op": "ADD"
    },
    "2382": {
      "op": "ADD"
    },
    "2383": {
      "op": "MSTORE"
    },
    "2384": {
      "op": "JUMPDEST"
    },
    "2385": {
      "op": "POP"
    },
    "2386": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2388": {
      "op": "ADD"
    },
    "2389": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2391": {
      "op": "NOT"
    },
    "2392": {
      "op": "AND"
    },
    "2393": {
      "op": "SWAP3"
    },
    "2394": {
      "op": "SWAP1"
    },
    "2395": {
      "op": "SWAP3"
    },
    "2396": {
      "op": "ADD"
    },
    "2397": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2399": {
      "jump": "o",
      "op": "ADD"
    },
    "2400": {
      "op": "SWAP4"
    },
    "2401": {
      "op": "SWAP3"
    },
    "2402": {
      "op": "POP"
    },
    "2403": {
      "op": "POP"
    },
    "2404": {
      "op": "POP"
    },
    "2405": {
      "op": "JUMP"
    },
    "2406": {
      "op": "JUMPDEST"
    },
    "2407": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2409": {
      "op": "DUP1"
    },
    "2410": {
      "op": "DUP3"
    },
    "2411": {
      "op": "MSTORE"
    },
    "2412": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "2414": {
      "op": "SWAP1"
    },
    "2415": {
      "op": "DUP3"
    },
    "2416": {
      "op": "ADD"
    },
    "2417": {
      "op": "MSTORE"
    },
    "2418": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220746F20746865207A65726F2061646472"
    },
    "2451": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2453": {
      "op": "DUP3"
    },
    "2454": {
      "op": "ADD"
    },
    "2455": {
      "op": "MSTORE"
    },
    "2456": {
      "op": "PUSH3",
      "value": "0x657373"
    },
    "2460": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "2462": {
      "op": "SHL"
    },
    "2463": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2465": {
      "jump": "o",
      "op": "DUP3"
    },
    "2466": {
      "op": "ADD"
    },
    "2467": {
      "op": "MSTORE"
    },
    "2468": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2470": {
      "op": "ADD"
    },
    "2471": {
      "op": "SWAP1"
    },
    "2472": {
      "op": "JUMP"
    },
    "2473": {
      "op": "JUMPDEST"
    },
    "2474": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2476": {
      "op": "DUP1"
    },
    "2477": {
      "op": "DUP3"
    },
    "2478": {
      "op": "MSTORE"
    },
    "2479": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "2481": {
      "op": "SWAP1"
    },
    "2482": {
      "op": "DUP3"
    },
    "2483": {
      "op": "ADD"
    },
    "2484": {
      "op": "MSTORE"
    },
    "2485": {
      "op": "PUSH32",
      "value": "0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E"
    },
    "2518": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2520": {
      "op": "DUP3"
    },
    "2521": {
      "op": "ADD"
    },
    "2522": {
      "op": "MSTORE"
    },
    "2523": {
      "op": "PUSH2",
      "value": "0x6365"
    },
    "2526": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "2528": {
      "op": "SHL"
    },
    "2529": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2531": {
      "jump": "o",
      "op": "DUP3"
    },
    "2532": {
      "op": "ADD"
    },
    "2533": {
      "op": "MSTORE"
    },
    "2534": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2536": {
      "op": "ADD"
    },
    "2537": {
      "op": "SWAP1"
    },
    "2538": {
      "op": "JUMP"
    },
    "2539": {
      "op": "JUMPDEST"
    },
    "2540": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2542": {
      "op": "DUP1"
    },
    "2543": {
      "op": "DUP3"
    },
    "2544": {
      "op": "MSTORE"
    },
    "2545": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "2547": {
      "op": "SWAP1"
    },
    "2548": {
      "op": "DUP3"
    },
    "2549": {
      "op": "ADD"
    },
    "2550": {
      "op": "MSTORE"
    },
    "2551": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F766520746F20746865207A65726F206164647265"
    },
    "2584": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2586": {
      "op": "DUP3"
    },
    "2587": {
      "op": "ADD"
    },
    "2588": {
      "op": "MSTORE"
    },
    "2589": {
      "op": "PUSH2",
      "value": "0x7373"
    },
    "2592": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "2594": {
      "op": "SHL"
    },
    "2595": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2597": {
      "jump": "o",
      "op": "DUP3"
    },
    "2598": {
      "op": "ADD"
    },
    "2599": {
      "op": "MSTORE"
    },
    "2600": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2602": {
      "op": "ADD"
    },
    "2603": {
      "op": "SWAP1"
    },
    "2604": {
      "op": "JUMP"
    },
    "2605": {
      "op": "JUMPDEST"
    },
    "2606": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2608": {
      "op": "DUP1"
    },
    "2609": {
      "op": "DUP3"
    },
    "2610": {
      "op": "MSTORE"
    },
    "2611": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "2613": {
      "op": "SWAP1"
    },
    "2614": {
      "op": "DUP3"
    },
    "2615": {
      "op": "ADD"
    },
    "2616": {
      "op": "MSTORE"
    },
    "2617": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732062"
    },
    "2650": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2652": {
      "op": "DUP3"
    },
    "2653": {
      "op": "ADD"
    },
    "2654": {
      "op": "MSTORE"
    },
    "2655": {
      "op": "PUSH6",
      "value": "0x616C616E6365"
    },
    "2662": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "2664": {
      "op": "SHL"
    },
    "2665": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2667": {
      "jump": "o",
      "op": "DUP3"
    },
    "2668": {
      "op": "ADD"
    },
    "2669": {
      "op": "MSTORE"
    },
    "2670": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2672": {
      "op": "ADD"
    },
    "2673": {
      "op": "SWAP1"
    },
    "2674": {
      "op": "JUMP"
    },
    "2675": {
      "op": "JUMPDEST"
    },
    "2676": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2678": {
      "op": "DUP1"
    },
    "2679": {
      "op": "DUP3"
    },
    "2680": {
      "op": "MSTORE"
    },
    "2681": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "2683": {
      "op": "SWAP1"
    },
    "2684": {
      "op": "DUP3"
    },
    "2685": {
      "op": "ADD"
    },
    "2686": {
      "op": "MSTORE"
    },
    "2687": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732061"
    },
    "2720": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2722": {
      "op": "DUP3"
    },
    "2723": {
      "op": "ADD"
    },
    "2724": {
      "op": "MSTORE"
    },
    "2725": {
      "op": "PUSH8",
      "value": "0x6C6C6F77616E6365"
    },
    "2734": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "2736": {
      "op": "SHL"
    },
    "2737": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2739": {
      "jump": "o",
      "op": "DUP3"
    },
    "2740": {
      "op": "ADD"
    },
    "2741": {
      "op": "MSTORE"
    },
    "2742": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2744": {
      "op": "ADD"
    },
    "2745": {
      "op": "SWAP1"
    },
    "2746": {
      "op": "JUMP"
    },
    "2747": {
      "op": "JUMPDEST"
    },
    "2748": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2750": {
      "op": "DUP1"
    },
    "2751": {
      "op": "DUP3"
    },
    "2752": {
      "op": "MSTORE"
    },
    "2753": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "2755": {
      "op": "SWAP1"
    },
    "2756": {
      "op": "DUP3"
    },
    "2757": {
      "op": "ADD"
    },
    "2758": {
      "op": "MSTORE"
    },
    "2759": {
      "op": "PUSH32",
      "value": "0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573"
    },
    "2792": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2794": {
      "op": "DUP3"
    },
    "2795": {
      "op": "ADD"
    },
    "2796": {
      "op": "MSTORE"
    },
    "2797": {
      "op": "PUSH1",
      "value": "0x73"
    },
    "2799": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "2801": {
      "op": "SHL"
    },
    "2802": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2804": {
      "jump": "o",
      "op": "DUP3"
    },
    "2805": {
      "op": "ADD"
    },
    "2806": {
      "op": "MSTORE"
    },
    "2807": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2809": {
      "op": "ADD"
    },
    "2810": {
      "op": "SWAP1"
    },
    "2811": {
      "op": "JUMP"
    },
    "2812": {
      "op": "JUMPDEST"
    },
    "2813": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2815": {
      "op": "DUP1"
    },
    "2816": {
      "op": "DUP3"
    },
    "2817": {
      "op": "MSTORE"
    },
    "2818": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "2820": {
      "op": "SWAP1"
    },
    "2821": {
      "op": "DUP3"
    },
    "2822": {
      "op": "ADD"
    },
    "2823": {
      "op": "MSTORE"
    },
    "2824": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E736665722066726F6D20746865207A65726F206164"
    },
    "2857": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2859": {
      "op": "DUP3"
    },
    "2860": {
      "op": "ADD"
    },
    "2861": {
      "op": "MSTORE"
    },
    "2862": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "2868": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "2870": {
      "op": "SHL"
    },
    "2871": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2873": {
      "jump": "o",
      "op": "DUP3"
    },
    "2874": {
      "op": "ADD"
    },
    "2875": {
      "op": "MSTORE"
    },
    "2876": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2878": {
      "op": "ADD"
    },
    "2879": {
      "op": "SWAP1"
    },
    "2880": {
      "op": "JUMP"
    },
    "2881": {
      "op": "JUMPDEST"
    },
    "2882": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2884": {
      "op": "DUP1"
    },
    "2885": {
      "op": "DUP3"
    },
    "2886": {
      "op": "MSTORE"
    },
    "2887": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2889": {
      "op": "SWAP1"
    },
    "2890": {
      "op": "DUP3"
    },
    "2891": {
      "op": "ADD"
    },
    "2892": {
      "op": "MSTORE"
    },
    "2893": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
    },
    "2926": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2928": {
      "op": "DUP3"
    },
    "2929": {
      "op": "ADD"
    },
    "2930": {
      "op": "MSTORE"
    },
    "2931": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "2936": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2938": {
      "op": "SHL"
    },
    "2939": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2941": {
      "jump": "o",
      "op": "DUP3"
    },
    "2942": {
      "op": "ADD"
    },
    "2943": {
      "op": "MSTORE"
    },
    "2944": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2946": {
      "op": "ADD"
    },
    "2947": {
      "op": "SWAP1"
    },
    "2948": {
      "op": "JUMP"
    },
    "2949": {
      "op": "JUMPDEST"
    },
    "2950": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2952": {
      "op": "DUP1"
    },
    "2953": {
      "op": "DUP3"
    },
    "2954": {
      "op": "MSTORE"
    },
    "2955": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "2957": {
      "op": "SWAP1"
    },
    "2958": {
      "op": "DUP3"
    },
    "2959": {
      "op": "ADD"
    },
    "2960": {
      "op": "MSTORE"
    },
    "2961": {
      "op": "PUSH32",
      "value": "0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
    },
    "2994": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2996": {
      "op": "DUP3"
    },
    "2997": {
      "op": "ADD"
    },
    "2998": {
      "op": "MSTORE"
    },
    "2999": {
      "op": "PUSH5",
      "value": "0x207A65726F"
    },
    "3005": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "3007": {
      "op": "SHL"
    },
    "3008": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3010": {
      "jump": "o",
      "op": "DUP3"
    },
    "3011": {
      "op": "ADD"
    },
    "3012": {
      "op": "MSTORE"
    },
    "3013": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3015": {
      "op": "ADD"
    },
    "3016": {
      "op": "SWAP1"
    },
    "3017": {
      "op": "JUMP"
    },
    "3018": {
      "op": "JUMPDEST"
    },
    "3019": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3021": {
      "op": "DUP1"
    },
    "3022": {
      "op": "DUP3"
    },
    "3023": {
      "op": "MSTORE"
    },
    "3024": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3026": {
      "op": "SWAP1"
    },
    "3027": {
      "op": "DUP3"
    },
    "3028": {
      "op": "ADD"
    },
    "3029": {
      "op": "MSTORE"
    },
    "3030": {
      "op": "PUSH32",
      "value": "0x45524332303A206D696E7420746F20746865207A65726F206164647265737300"
    },
    "3063": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3065": {
      "jump": "o",
      "op": "DUP3"
    },
    "3066": {
      "op": "ADD"
    },
    "3067": {
      "op": "MSTORE"
    },
    "3068": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3070": {
      "op": "ADD"
    },
    "3071": {
      "op": "SWAP1"
    },
    "3072": {
      "op": "JUMP"
    },
    "3073": {
      "op": "JUMPDEST"
    },
    "3074": {
      "jump": "o",
      "op": "SWAP1"
    },
    "3075": {
      "op": "DUP2"
    },
    "3076": {
      "op": "MSTORE"
    },
    "3077": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3079": {
      "op": "ADD"
    },
    "3080": {
      "op": "SWAP1"
    },
    "3081": {
      "op": "JUMP"
    },
    "3082": {
      "op": "JUMPDEST"
    },
    "3083": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3085": {
      "op": "SWAP2"
    },
    "3086": {
      "op": "SWAP1"
    },
    "3087": {
      "op": "SWAP2"
    },
    "3088": {
      "jump": "o",
      "op": "AND"
    },
    "3089": {
      "op": "DUP2"
    },
    "3090": {
      "op": "MSTORE"
    },
    "3091": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3093": {
      "op": "ADD"
    },
    "3094": {
      "op": "SWAP1"
    },
    "3095": {
      "op": "JUMP"
    },
    "3096": {
      "op": "JUMPDEST"
    },
    "3097": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3099": {
      "op": "DUP3"
    },
    "3100": {
      "op": "NOT"
    },
    "3101": {
      "op": "DUP3"
    },
    "3102": {
      "jump": "i",
      "op": "GT"
    },
    "3103": {
      "op": "ISZERO"
    },
    "3104": {
      "op": "PUSH2",
      "value": "0xC2B"
    },
    "3107": {
      "op": "JUMPI"
    },
    "3108": {
      "op": "PUSH2",
      "value": "0xC2B"
    },
    "3111": {
      "jump": "o",
      "op": "PUSH2",
      "value": "0xC82"
    },
    "3114": {
      "op": "JUMP"
    },
    "3115": {
      "op": "JUMPDEST"
    },
    "3116": {
      "op": "POP"
    },
    "3117": {
      "op": "ADD"
    },
    "3118": {
      "op": "SWAP1"
    },
    "3119": {
      "op": "JUMP"
    },
    "3120": {
      "op": "JUMPDEST"
    },
    "3121": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3123": {
      "op": "DUP3"
    },
    "3124": {
      "op": "DUP3"
    },
    "3125": {
      "jump": "i",
      "op": "LT"
    },
    "3126": {
      "op": "ISZERO"
    },
    "3127": {
      "op": "PUSH2",
      "value": "0xC42"
    },
    "3130": {
      "op": "JUMPI"
    },
    "3131": {
      "op": "PUSH2",
      "value": "0xC42"
    },
    "3134": {
      "jump": "o",
      "op": "PUSH2",
      "value": "0xC82"
    },
    "3137": {
      "op": "JUMP"
    },
    "3138": {
      "op": "JUMPDEST"
    },
    "3139": {
      "op": "POP"
    },
    "3140": {
      "op": "SUB"
    },
    "3141": {
      "op": "SWAP1"
    },
    "3142": {
      "op": "JUMP"
    },
    "3143": {
      "op": "JUMPDEST"
    },
    "3144": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3146": {
      "op": "DUP2"
    },
    "3147": {
      "op": "DIV"
    },
    "3148": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3150": {
      "op": "DUP3"
    },
    "3151": {
      "op": "AND"
    },
    "3152": {
      "op": "DUP1"
    },
    "3153": {
      "op": "PUSH2",
      "value": "0xC5B"
    },
    "3156": {
      "op": "JUMPI"
    },
    "3157": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "3159": {
      "op": "DUP3"
    },
    "3160": {
      "op": "AND"
    },
    "3161": {
      "op": "SWAP2"
    },
    "3162": {
      "op": "POP"
    },
    "3163": {
      "op": "JUMPDEST"
    },
    "3164": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3166": {
      "op": "DUP3"
    },
    "3167": {
      "op": "LT"
    },
    "3168": {
      "op": "DUP2"
    },
    "3169": {
      "op": "EQ"
    },
    "3170": {
      "op": "ISZERO"
    },
    "3171": {
      "op": "PUSH2",
      "value": "0xC7C"
    },
    "3174": {
      "op": "JUMPI"
    },
    "3175": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3180": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3182": {
      "op": "SHL"
    },
    "3183": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3185": {
      "op": "MSTORE"
    },
    "3186": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "3188": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3190": {
      "op": "MSTORE"
    },
    "3191": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3193": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3195": {
      "jump": "o",
      "op": "REVERT"
    },
    "3196": {
      "op": "JUMPDEST"
    },
    "3197": {
      "op": "POP"
    },
    "3198": {
      "op": "SWAP2"
    },
    "3199": {
      "op": "SWAP1"
    },
    "3200": {
      "op": "POP"
    },
    "3201": {
      "op": "JUMP"
    },
    "3202": {
      "op": "JUMPDEST"
    },
    "3203": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3208": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3210": {
      "op": "SHL"
    },
    "3211": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3213": {
      "op": "MSTORE"
    },
    "3214": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "3216": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3218": {
      "op": "MSTORE"
    },
    "3219": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3221": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3223": {
      "op": "REVERT"
    }
  },
  "sha1": "ef8400ab034f36d3923b0347fe9c8cd78244a9e0",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport { ERC20 } from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\n\n\ninterface IERC20 {\n    function transfer(address recipient, uint256 amount) external returns (bool);\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n    function approve(address spender, uint256 amount) external returns (bool);\n}\n\ncontract BTCUP is ERC20 {\n    constructor() ERC20(\"Bitcoin Up\", \"BTCUP\") {\n      \n    }\n\n    function mint(uint256 quantity) public {\n        _mint(tx.origin, quantity);\n    }\n\n    function burn(uint256 quantity) public {\n        _burn(tx.origin, quantity);\n    }\n\n    function decimals() public view override returns (uint8) {\n        return 6;\n    }\n}\n\n\ncontract BTCDOWN is ERC20 {\n    constructor() ERC20(\"Bitcoin Down\", \"BTCDOWN\") {\n    }\n\n    function mint(uint256 quantity) public {\n        _mint(tx.origin, quantity);\n    }\n\n    function burn(uint256 quantity) public {\n        _burn(tx.origin, quantity);\n    }\n\n    function decimals() public view override returns (uint8) {\n        return 6;\n    }\n}\n\n\ncontract LeveragedTrading{\n    using SafeMath for uint256;\n\n    bool public poolIsInitiated = false;\n\n    uint256 public priceBtcUp = 10 ** 6;\n    uint256 public priceBtcDown = 10 ** 6;        // 6 decimals\n\n    uint256 public collateralBtcUp = 0;          //6 decimals\n    uint256 public collateralBtcDown = 0;\n\n    uint256 public amountBtcUp = 0;           // 6 decimals\n    uint256 public amountBtcDown = 0;         // 6 decimals\n\n    uint256 public lastBtcPrice = 0;       // 8 decimals, chainlink conventions\n\n    address addressUsdc = 0xb7a4F3E9097C08dA09517b5aB877F7a917224ede;  // <- Kovan  //0xeb8f08a975Ab53E34D8a0330E0D34de942C95926;\n    address addressBtcUSDFeed =  0x6135b13325bfC4B00278B4abC5e20bbce2D6580e; // <- Kovan          // 0xECe365B379E1dD183B20fc5f022230C044d51404;\n\n\n    BTCUP btcUp = new BTCUP();\n    BTCDOWN btcDown = new BTCDOWN();\n\n\n    function initiatePool(uint256 amountLeveragedTokens) public {\n        require(!poolIsInitiated, \"The pool was already initiated.\");\n\n        issueBtcUp(amountLeveragedTokens);\n        issueBtcDown(amountLeveragedTokens);\n\n        poolIsInitiated = true;\n    }\n\n\n\n    function issueBtcUp(uint256 amountLeveragedTokens) public {\n        rebalanceLeveragedTokens();\n        btcUp.mint(amountLeveragedTokens);\n\n        IERC20 usdc = IERC20(addressUsdc);\n        priceBtcUp = getBtcUpPrice();\n\n        uint256 amountUsdc = amountLeveragedTokens.mul(priceBtcUp).div(10 ** 6);\n\n        require(usdc.transferFrom(msg.sender, address(this), amountUsdc), \"You don't have enough USDC\");\n\n        amountBtcUp = amountBtcUp.add(amountLeveragedTokens);\n        collateralBtcUp = collateralBtcUp.add(amountUsdc);\n    }\n\n\n\n    function issueBtcDown(uint256 amountLeveragedTokens) public {\n        rebalanceLeveragedTokens();\n        btcDown.mint(amountLeveragedTokens);\n\n        IERC20 usdc = IERC20(addressUsdc);\n        priceBtcDown = getBtcDownPrice();\n        uint256 amountUsdc = amountLeveragedTokens.mul(priceBtcDown).div(10 ** 6);\n\n        require(usdc.transferFrom(msg.sender, address(this), amountUsdc), \"You don't have enough USDC\");\n\n        amountBtcDown = amountBtcDown.add(amountLeveragedTokens);\n        collateralBtcDown = collateralBtcDown.add(amountUsdc);\n    }\n\n\n\n    function redeemBtcUp(uint256 amountLeveragedTokens) public {\n        rebalanceLeveragedTokens();\n        btcUp.burn(amountLeveragedTokens);\n\n        IERC20 usdc = IERC20(addressUsdc);\n        priceBtcUp = getBtcUpPrice();\n\n        uint256 amountUsdc = amountLeveragedTokens.mul(priceBtcUp).div(10 ** 6);\n        require(usdc.transfer(msg.sender, amountUsdc), \"Not enough usdc available\");\n\n        amountBtcUp = amountBtcUp.sub(amountLeveragedTokens);\n        collateralBtcUp = collateralBtcUp.sub(amountUsdc);\n    }\n\n\n\n    function redeemBtcDown(uint256 amountLeveragedTokens) public {\n        rebalanceLeveragedTokens();\n        btcDown.burn(amountLeveragedTokens);\n\n        IERC20 usdc = IERC20(addressUsdc);\n        priceBtcDown = getBtcDownPrice();\n    \n        uint256 amountUsdc = amountLeveragedTokens.mul(priceBtcDown).div(10 ** 6);\n        require(usdc.transfer(msg.sender,  amountUsdc), \"Not enough usdc available\");\n\n        amountBtcDown = amountBtcDown.sub(amountLeveragedTokens);\n        collateralBtcDown = collateralBtcDown.sub(amountUsdc);\n\n    }\n\n\n\n    function rebalanceLeveragedTokens() public {\n        uint256 btcPrice = getBtcPrice();\n        if ((collateralBtcUp > 0) && (collateralBtcDown > 0)) {\n            uint256 rebalanceAmount = getRebalanceAmount(btcPrice);\n            if (getSign(btcPrice) > 0) {\n                collateralBtcUp = collateralBtcUp.add(rebalanceAmount);\n                collateralBtcDown = collateralBtcDown.sub(rebalanceAmount);\n            }\n\n            else {\n                collateralBtcUp = collateralBtcUp.sub(rebalanceAmount);\n                collateralBtcDown = collateralBtcDown.add(rebalanceAmount);\n            }\n\n        }\n\n        lastBtcPrice = btcPrice;\n    }\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    function getSign(uint256 btcPrice) internal view returns (int256){\n        if (btcPrice > lastBtcPrice) {\n            return 1;\n        }\n        else {\n            return -1;\n        }\n    }\n\n \n    function getRebalanceAmount(uint256 priceBtc) internal view returns (uint256){\n        uint256 priceDiff = getPriceDiff(priceBtc);\n\n        return min(collateralBtcUp, collateralBtcDown).mul(L(priceDiff)).div(10 ** 6);\n    }\n\n\n// getBtcUpPrice() 6 decimals\n    function getBtcUpPrice() public view returns (uint256) {\n        return amountBtcUp == 0 ?  priceBtcUp : collateralBtcUp.mul(10 ** 6).div(amountBtcUp);\n    }\n\n\n// getBtcDownPrice() 6 decimals\n    function getBtcDownPrice() public view returns (uint256) {//6 decimals\n        return amountBtcDown == 0 ?  priceBtcDown : collateralBtcDown.mul(10 ** 6).div(amountBtcDown);\n    }\n\n\n// get the price of our asset with 8 decimals\n    function getBtcPrice() public view returns (uint256) {\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(addressBtcUSDFeed);\n        (,int256 answer,,,) = priceFeed.latestRoundData();\n\n         return uint256(answer);             // we call chainlink oracle to get the price of the asset\n         \n    }\n\n    \n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a <= b ? a : b;\n    }\n\n\n    function L(uint256 x) internal pure returns (uint256) {            //6  decimals\n\n        uint256 denom = 9 * (x ** 2 / 10 ** 6)  + 3 * x + 10 ** 6;\n        uint256 num = 10 ** 12;\n\n        return 10 ** 6 - num / denom;\n    } \n\n\n    function getPriceDiff(uint256 btcPrice) internal view returns (uint256) {     //6 decimals\n        if (btcPrice > lastBtcPrice) {\n            return btcPrice.mul(10 ** 6).div(lastBtcPrice).sub(10 ** 6);\n        }\n\n        else {\n            return lastBtcPrice.mul(10 ** 6).div(btcPrice).sub(10 ** 6);\n        }\n\n    }\n\n\n    function getBtcupBalance() public view returns(uint256) {\n        return btcUp.balanceOf(msg.sender);\n    }\n\n\n    function getBtcdownBalance() public view returns(uint256) {\n        return btcDown.balanceOf(msg.sender);\n    }\n\n\n}",
  "sourceMap": "906:352:6:-:0;;;938:54;;;;;;;;;-1:-1:-1;1896:113:0;;;;;;;;;;;-1:-1:-1;;;1896:113:0;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1896:113:0;;;;1962:13;;1896:113;;;1962:13;;:5;;:13;:::i;:::-;-1:-1:-1;1985:17:0;;;;:7;;:17;;;;;:::i;:::-;;1896:113;;906:352:6;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;906:352:6;;;-1:-1:-1;906:352:6;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:380:7;99:1;89:12;;146:1;136:12;;;157:2;;211:4;203:6;199:17;189:27;;157:2;264;256:6;253:14;233:18;230:38;227:2;;;310:10;305:3;301:20;298:1;291:31;345:4;342:1;335:15;373:4;370:1;363:15;227:2;;69:325;;;:::o;:::-;906:352:6;;;;;;",
  "sourcePath": "contracts/LeveragedTrading.sol",
  "type": "contract"
}