{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_parentAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "quantity",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "quantity",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "1": "/home/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/ERC20.sol",
    "2": "/home/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/IERC20.sol",
    "3": "/home/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/extensions/ERC20Burnable.sol",
    "4": "/home/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/extensions/IERC20Metadata.sol",
    "5": "/home/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/Context.sol",
    "8": "contracts/LeveragedTrading.sol"
  },
  "ast": {
    "absolutePath": "contracts/LeveragedTrading.sol",
    "exportedSymbols": {
      "AggregatorV3Interface": [
        1914
      ],
      "BTCDOWN": [
        178
      ],
      "BTCUP": [
        108
      ],
      "Context": [
        1935
      ],
      "ERC20": [
        1494
      ],
      "ERC20Burnable": [
        1556
      ],
      "IERC20": [
        38
      ],
      "LeveragedTrading": [
        844
      ],
      "Ownable": [
        948
      ],
      "SafeMath": [
        1868
      ]
    },
    "id": 845,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:8"
      },
      {
        "absolutePath": "/home/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 845,
        "sourceUnit": 1495,
        "src": "57:69:8",
        "symbolAliases": [
          {
            "foreign": {
              "id": 2,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "66:5:8",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        "file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 845,
        "sourceUnit": 1557,
        "src": "127:96:8",
        "symbolAliases": [
          {
            "foreign": {
              "id": 4,
              "name": "ERC20Burnable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "136:13:8",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/alex/.brownie/packages/smartcontractkit/chainlink@1.3.0/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "id": 6,
        "nodeType": "ImportDirective",
        "scope": 845,
        "sourceUnit": 1915,
        "src": "224:76:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 7,
        "nodeType": "ImportDirective",
        "scope": 845,
        "sourceUnit": 1869,
        "src": "301:57:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/alex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 8,
        "nodeType": "ImportDirective",
        "scope": 845,
        "sourceUnit": 949,
        "src": "359:52:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 38,
        "linearizedBaseContracts": [
          38
        ],
        "name": "IERC20",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "a9059cbb",
            "id": 17,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 17,
                  "src": "455:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "455:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 17,
                  "src": "474:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "474:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "454:35:8"
            },
            "returnParameters": {
              "id": 16,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 17,
                  "src": "508:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 14,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "508:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "507:6:8"
            },
            "scope": 38,
            "src": "437:77:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "23b872dd",
            "id": 28,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 28,
                  "src": "541:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "541:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 28,
                  "src": "557:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "557:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 28,
                  "src": "576:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "576:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "540:51:8"
            },
            "returnParameters": {
              "id": 27,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 28,
                  "src": "610:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 25,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "610:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "609:6:8"
            },
            "scope": 38,
            "src": "519:97:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "095ea7b3",
            "id": 37,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 33,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 37,
                  "src": "638:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 29,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "638:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 37,
                  "src": "655:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "655:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "637:33:8"
            },
            "returnParameters": {
              "id": 36,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 37,
                  "src": "689:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 34,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "689:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "688:6:8"
            },
            "scope": 38,
            "src": "621:74:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 845,
        "src": "414:283:8"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 39,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1494,
              "src": "719:5:8"
            },
            "id": 40,
            "nodeType": "InheritanceSpecifier",
            "src": "719:5:8"
          },
          {
            "baseName": {
              "id": 41,
              "name": "ERC20Burnable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1556,
              "src": "726:13:8"
            },
            "id": 42,
            "nodeType": "InheritanceSpecifier",
            "src": "726:13:8"
          }
        ],
        "contractDependencies": [
          1494,
          1556,
          1935,
          2013,
          2038
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 108,
        "linearizedBaseContracts": [
          108,
          1556,
          1494,
          2038,
          2013,
          1935
        ],
        "name": "BTCUP",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 44,
            "mutability": "mutable",
            "name": "parentAddress",
            "nodeType": "VariableDeclaration",
            "scope": 108,
            "src": "746:21:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 43,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "746:7:8",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 57,
              "nodeType": "Block",
              "src": "839:47:8",
              "statements": [
                {
                  "expression": {
                    "id": 55,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 53,
                      "name": "parentAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "849:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 54,
                      "name": "_parentAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "865:14:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "849:30:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 56,
                  "nodeType": "ExpressionStatement",
                  "src": "849:30:8"
                }
              ]
            },
            "id": 58,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "426974636f696e205570",
                    "id": 49,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "816:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_9cbc1d0721872492c3eae100dd6a7dad3b4b199dc4e72a46010b2b1c98a11964",
                      "typeString": "literal_string \"Bitcoin Up\""
                    },
                    "value": "Bitcoin Up"
                  },
                  {
                    "hexValue": "4254435550",
                    "id": 50,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "830:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_f92903022a172a42cae03bdc1621474c2ab6bc2b8980d8251e05283c61f8c975",
                      "typeString": "literal_string \"BTCUP\""
                    },
                    "value": "BTCUP"
                  }
                ],
                "id": 51,
                "modifierName": {
                  "id": 48,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1494,
                  "src": "810:5:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "810:28:8"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 47,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46,
                  "mutability": "mutable",
                  "name": "_parentAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 58,
                  "src": "786:22:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "786:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "785:24:8"
            },
            "returnParameters": {
              "id": 52,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "839:0:8"
            },
            "scope": 108,
            "src": "774:112:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 71,
              "nodeType": "Block",
              "src": "942:43:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 66,
                          "name": "tx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -26,
                          "src": "958:2:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_transaction",
                            "typeString": "tx"
                          }
                        },
                        "id": 67,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "origin",
                        "nodeType": "MemberAccess",
                        "src": "958:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 68,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60,
                        "src": "969:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 65,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1354,
                      "src": "952:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 69,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "952:26:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 70,
                  "nodeType": "ExpressionStatement",
                  "src": "952:26:8"
                }
              ]
            },
            "functionSelector": "a0712d68",
            "id": 72,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 63,
                "modifierName": {
                  "id": 62,
                  "name": "onlyParent",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 107,
                  "src": "931:10:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "931:10:8"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 61,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nodeType": "VariableDeclaration",
                  "scope": 72,
                  "src": "906:16:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "906:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "905:18:8"
            },
            "returnParameters": {
              "id": 64,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "942:0:8"
            },
            "scope": 108,
            "src": "892:93:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1516
            ],
            "body": {
              "id": 86,
              "nodeType": "Block",
              "src": "1050:46:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 81,
                          "name": "tx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -26,
                          "src": "1069:2:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_transaction",
                            "typeString": "tx"
                          }
                        },
                        "id": 82,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "origin",
                        "nodeType": "MemberAccess",
                        "src": "1069:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 83,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74,
                        "src": "1080:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 80,
                      "name": "burnFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1555,
                      "src": "1060:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1060:29:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85,
                  "nodeType": "ExpressionStatement",
                  "src": "1060:29:8"
                }
              ]
            },
            "functionSelector": "42966c68",
            "id": 87,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 78,
                "modifierName": {
                  "id": 77,
                  "name": "onlyParent",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 107,
                  "src": "1039:10:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "1039:10:8"
              }
            ],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 76,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1030:8:8"
            },
            "parameters": {
              "id": 75,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "1005:16:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1005:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1004:18:8"
            },
            "returnParameters": {
              "id": 79,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1050:0:8"
            },
            "scope": 108,
            "src": "991:105:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1023
            ],
            "body": {
              "id": 95,
              "nodeType": "Block",
              "src": "1159:25:8",
              "statements": [
                {
                  "expression": {
                    "hexValue": "36",
                    "id": 93,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1176:1:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_6_by_1",
                      "typeString": "int_const 6"
                    },
                    "value": "6"
                  },
                  "functionReturnParameters": 92,
                  "id": 94,
                  "nodeType": "Return",
                  "src": "1169:8:8"
                }
              ]
            },
            "functionSelector": "313ce567",
            "id": 96,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 89,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1134:8:8"
            },
            "parameters": {
              "id": 88,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1119:2:8"
            },
            "returnParameters": {
              "id": 92,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 96,
                  "src": "1152:5:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 90,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1152:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1151:7:8"
            },
            "scope": 108,
            "src": "1102:82:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 106,
              "nodeType": "Block",
              "src": "1210:64:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 99,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1228:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1228:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 101,
                          "name": "parentAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "1242:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1228:27:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 98,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1220:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1220:36:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 104,
                  "nodeType": "ExpressionStatement",
                  "src": "1220:36:8"
                },
                {
                  "id": 105,
                  "nodeType": "PlaceholderStatement",
                  "src": "1266:1:8"
                }
              ]
            },
            "id": 107,
            "name": "onlyParent",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 97,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1210:0:8"
            },
            "src": "1190:84:8",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 845,
        "src": "700:576:8"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 109,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1494,
              "src": "1298:5:8"
            },
            "id": 110,
            "nodeType": "InheritanceSpecifier",
            "src": "1298:5:8"
          },
          {
            "baseName": {
              "id": 111,
              "name": "ERC20Burnable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1556,
              "src": "1305:13:8"
            },
            "id": 112,
            "nodeType": "InheritanceSpecifier",
            "src": "1305:13:8"
          }
        ],
        "contractDependencies": [
          1494,
          1556,
          1935,
          2013,
          2038
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 178,
        "linearizedBaseContracts": [
          178,
          1556,
          1494,
          2038,
          2013,
          1935
        ],
        "name": "BTCDOWN",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 114,
            "mutability": "mutable",
            "name": "parentAddress",
            "nodeType": "VariableDeclaration",
            "scope": 178,
            "src": "1325:21:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 113,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1325:7:8",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 127,
              "nodeType": "Block",
              "src": "1422:47:8",
              "statements": [
                {
                  "expression": {
                    "id": 125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 123,
                      "name": "parentAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 114,
                      "src": "1432:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 124,
                      "name": "_parentAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 116,
                      "src": "1448:14:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1432:30:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 126,
                  "nodeType": "ExpressionStatement",
                  "src": "1432:30:8"
                }
              ]
            },
            "id": 128,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "426974636f696e20446f776e",
                    "id": 119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1395:14:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_165fe89d7acd7320260d3007f731660e2a452d2e9dbef2c2e44ee15c6b8bc1ec",
                      "typeString": "literal_string \"Bitcoin Down\""
                    },
                    "value": "Bitcoin Down"
                  },
                  {
                    "hexValue": "425443444f574e",
                    "id": 120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1411:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_72f3d7098f717fcc170dbb6c7dad0b9049f1ed825e03177180edf7a0240d28f2",
                      "typeString": "literal_string \"BTCDOWN\""
                    },
                    "value": "BTCDOWN"
                  }
                ],
                "id": 121,
                "modifierName": {
                  "id": 118,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1494,
                  "src": "1389:5:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "1389:32:8"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 116,
                  "mutability": "mutable",
                  "name": "_parentAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 128,
                  "src": "1365:22:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 115,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1365:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1364:24:8"
            },
            "returnParameters": {
              "id": 122,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1422:0:8"
            },
            "scope": 178,
            "src": "1353:116:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 141,
              "nodeType": "Block",
              "src": "1525:43:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 136,
                          "name": "tx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -26,
                          "src": "1541:2:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_transaction",
                            "typeString": "tx"
                          }
                        },
                        "id": 137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "origin",
                        "nodeType": "MemberAccess",
                        "src": "1541:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 138,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 130,
                        "src": "1552:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 135,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1354,
                      "src": "1535:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1535:26:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 140,
                  "nodeType": "ExpressionStatement",
                  "src": "1535:26:8"
                }
              ]
            },
            "functionSelector": "a0712d68",
            "id": 142,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 133,
                "modifierName": {
                  "id": 132,
                  "name": "onlyParent",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 177,
                  "src": "1514:10:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "1514:10:8"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 131,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 130,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nodeType": "VariableDeclaration",
                  "scope": 142,
                  "src": "1489:16:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 129,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1489:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1488:18:8"
            },
            "returnParameters": {
              "id": 134,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1525:0:8"
            },
            "scope": 178,
            "src": "1475:93:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1516
            ],
            "body": {
              "id": 156,
              "nodeType": "Block",
              "src": "1633:46:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 151,
                          "name": "tx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -26,
                          "src": "1652:2:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_transaction",
                            "typeString": "tx"
                          }
                        },
                        "id": 152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "origin",
                        "nodeType": "MemberAccess",
                        "src": "1652:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 153,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 144,
                        "src": "1663:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 150,
                      "name": "burnFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1555,
                      "src": "1643:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1643:29:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 155,
                  "nodeType": "ExpressionStatement",
                  "src": "1643:29:8"
                }
              ]
            },
            "functionSelector": "42966c68",
            "id": 157,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 148,
                "modifierName": {
                  "id": 147,
                  "name": "onlyParent",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 177,
                  "src": "1622:10:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "1622:10:8"
              }
            ],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 146,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1613:8:8"
            },
            "parameters": {
              "id": 145,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 144,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nodeType": "VariableDeclaration",
                  "scope": 157,
                  "src": "1588:16:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 143,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1588:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1587:18:8"
            },
            "returnParameters": {
              "id": 149,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1633:0:8"
            },
            "scope": 178,
            "src": "1574:105:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1023
            ],
            "body": {
              "id": 165,
              "nodeType": "Block",
              "src": "1742:25:8",
              "statements": [
                {
                  "expression": {
                    "hexValue": "36",
                    "id": 163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1759:1:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_6_by_1",
                      "typeString": "int_const 6"
                    },
                    "value": "6"
                  },
                  "functionReturnParameters": 162,
                  "id": 164,
                  "nodeType": "Return",
                  "src": "1752:8:8"
                }
              ]
            },
            "functionSelector": "313ce567",
            "id": 166,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 159,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1717:8:8"
            },
            "parameters": {
              "id": 158,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1702:2:8"
            },
            "returnParameters": {
              "id": 162,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 161,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 166,
                  "src": "1735:5:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 160,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1735:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1734:7:8"
            },
            "scope": 178,
            "src": "1685:82:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 176,
              "nodeType": "Block",
              "src": "1793:64:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 169,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1811:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 170,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1811:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 171,
                          "name": "parentAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 114,
                          "src": "1825:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1811:27:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 168,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1803:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1803:36:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 174,
                  "nodeType": "ExpressionStatement",
                  "src": "1803:36:8"
                },
                {
                  "id": 175,
                  "nodeType": "PlaceholderStatement",
                  "src": "1849:1:8"
                }
              ]
            },
            "id": 177,
            "name": "onlyParent",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 167,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1793:0:8"
            },
            "src": "1773:84:8",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 845,
        "src": "1278:581:8"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 179,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 948,
              "src": "1890:7:8"
            },
            "id": 180,
            "nodeType": "InheritanceSpecifier",
            "src": "1890:7:8"
          }
        ],
        "contractDependencies": [
          108,
          178,
          948,
          1935
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 844,
        "linearizedBaseContracts": [
          844,
          948,
          1935
        ],
        "name": "LeveragedTrading",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 183,
            "libraryName": {
              "id": 181,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1868,
              "src": "1910:8:8"
            },
            "nodeType": "UsingForDirective",
            "src": "1904:27:8",
            "typeName": {
              "id": 182,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1923:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "f0156e8a",
            "id": 188,
            "mutability": "mutable",
            "name": "priceBtcUp",
            "nodeType": "VariableDeclaration",
            "scope": 844,
            "src": "1937:35:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 184,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1937:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_1000000_by_1",
                "typeString": "int_const 1000000"
              },
              "id": 187,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "3130",
                "id": 185,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1965:2:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10_by_1",
                  "typeString": "int_const 10"
                },
                "value": "10"
              },
              "nodeType": "BinaryOperation",
              "operator": "**",
              "rightExpression": {
                "hexValue": "36",
                "id": 186,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1971:1:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_6_by_1",
                  "typeString": "int_const 6"
                },
                "value": "6"
              },
              "src": "1965:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000_by_1",
                "typeString": "int_const 1000000"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0c3e5343",
            "id": 193,
            "mutability": "mutable",
            "name": "priceBtcDown",
            "nodeType": "VariableDeclaration",
            "scope": 844,
            "src": "1978:37:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 189,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1978:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_1000000_by_1",
                "typeString": "int_const 1000000"
              },
              "id": 192,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "3130",
                "id": 190,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2008:2:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10_by_1",
                  "typeString": "int_const 10"
                },
                "value": "10"
              },
              "nodeType": "BinaryOperation",
              "operator": "**",
              "rightExpression": {
                "hexValue": "36",
                "id": 191,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2014:1:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_6_by_1",
                  "typeString": "int_const 6"
                },
                "value": "6"
              },
              "src": "2008:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000_by_1",
                "typeString": "int_const 1000000"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "dde7be2c",
            "id": 196,
            "mutability": "mutable",
            "name": "collateralBtcUp",
            "nodeType": "VariableDeclaration",
            "scope": 844,
            "src": "2043:34:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 194,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2043:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 195,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2076:1:8",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "14d7c6d2",
            "id": 199,
            "mutability": "mutable",
            "name": "collateralBtcDown",
            "nodeType": "VariableDeclaration",
            "scope": 844,
            "src": "2105:36:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 197,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2105:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 198,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2140:1:8",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0034b9cc",
            "id": 202,
            "mutability": "mutable",
            "name": "amountBtcUp",
            "nodeType": "VariableDeclaration",
            "scope": 844,
            "src": "2148:30:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 200,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2148:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 201,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2177:1:8",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b75cbe0b",
            "id": 205,
            "mutability": "mutable",
            "name": "amountBtcDown",
            "nodeType": "VariableDeclaration",
            "scope": 844,
            "src": "2208:32:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 203,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2208:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 204,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2239:1:8",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f4352c57",
            "id": 208,
            "mutability": "mutable",
            "name": "lastBtcPrice",
            "nodeType": "VariableDeclaration",
            "scope": 844,
            "src": "2269:31:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 206,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2269:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 207,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2299:1:8",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3074fff7",
            "id": 211,
            "mutability": "mutable",
            "name": "poolIsInitiated",
            "nodeType": "VariableDeclaration",
            "scope": 844,
            "src": "2350:35:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 209,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "2350:4:8",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 210,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2380:5:8",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 214,
            "mutability": "mutable",
            "name": "addressUsdc",
            "nodeType": "VariableDeclaration",
            "scope": 844,
            "src": "2392:64:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 212,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2392:7:8",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307862376134463345393039374330386441303935313762356142383737463761393137323234656465",
              "id": 213,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2414:42:8",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xb7a4F3E9097C08dA09517b5aB877F7a917224ede"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 217,
            "mutability": "mutable",
            "name": "addressBtcUSDFeed",
            "nodeType": "VariableDeclaration",
            "scope": 844,
            "src": "2522:71:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 215,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2522:7:8",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307836313335623133333235626643344230303237384234616243356532306262636532443635383065",
              "id": 216,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2551:42:8",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x6135b13325bfC4B00278B4abC5e20bbce2D6580e"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 220,
            "mutability": "mutable",
            "name": "btcUp",
            "nodeType": "VariableDeclaration",
            "scope": 844,
            "src": "2668:11:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_BTCUP_$108",
              "typeString": "contract BTCUP"
            },
            "typeName": {
              "id": 219,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 218,
                "name": "BTCUP",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 108,
                "src": "2668:5:8"
              },
              "referencedDeclaration": 108,
              "src": "2668:5:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BTCUP_$108",
                "typeString": "contract BTCUP"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 223,
            "mutability": "mutable",
            "name": "btcDown",
            "nodeType": "VariableDeclaration",
            "scope": 844,
            "src": "2685:15:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_BTCDOWN_$178",
              "typeString": "contract BTCDOWN"
            },
            "typeName": {
              "id": 222,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 221,
                "name": "BTCDOWN",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 178,
                "src": "2685:7:8"
              },
              "referencedDeclaration": 178,
              "src": "2685:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BTCDOWN_$178",
                "typeString": "contract BTCDOWN"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 276,
              "nodeType": "Block",
              "src": "2766:280:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2784:16:8",
                        "subExpression": {
                          "id": 231,
                          "name": "poolIsInitiated",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 211,
                          "src": "2785:15:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520706f6f6c2077617320616c726561647920696e697469617465642e",
                        "id": 233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2802:33:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_580e872a0bf3ae438081ad6284342a647742aae71fdfc53b8a10245734a22e81",
                          "typeString": "literal_string \"The pool was already initiated.\""
                        },
                        "value": "The pool was already initiated."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_580e872a0bf3ae438081ad6284342a647742aae71fdfc53b8a10245734a22e81",
                          "typeString": "literal_string \"The pool was already initiated.\""
                        }
                      ],
                      "id": 230,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2776:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2776:60:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 235,
                  "nodeType": "ExpressionStatement",
                  "src": "2776:60:8"
                },
                {
                  "expression": {
                    "id": 245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 236,
                      "name": "btcUp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 220,
                      "src": "2847:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BTCUP_$108",
                        "typeString": "contract BTCUP"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 242,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "2873:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LeveragedTrading_$844",
                                "typeString": "contract LeveragedTrading"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_LeveragedTrading_$844",
                                "typeString": "contract LeveragedTrading"
                              }
                            ],
                            "id": 241,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2865:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 240,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2865:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2865:13:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2855:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_BTCUP_$108_$",
                          "typeString": "function (address) returns (contract BTCUP)"
                        },
                        "typeName": {
                          "id": 238,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 237,
                            "name": "BTCUP",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 108,
                            "src": "2859:5:8"
                          },
                          "referencedDeclaration": 108,
                          "src": "2859:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BTCUP_$108",
                            "typeString": "contract BTCUP"
                          }
                        }
                      },
                      "id": 244,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2855:24:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BTCUP_$108",
                        "typeString": "contract BTCUP"
                      }
                    },
                    "src": "2847:32:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BTCUP_$108",
                      "typeString": "contract BTCUP"
                    }
                  },
                  "id": 246,
                  "nodeType": "ExpressionStatement",
                  "src": "2847:32:8"
                },
                {
                  "expression": {
                    "id": 256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 247,
                      "name": "btcDown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 223,
                      "src": "2889:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BTCDOWN_$178",
                        "typeString": "contract BTCDOWN"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 253,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "2919:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LeveragedTrading_$844",
                                "typeString": "contract LeveragedTrading"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_LeveragedTrading_$844",
                                "typeString": "contract LeveragedTrading"
                              }
                            ],
                            "id": 252,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2911:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 251,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2911:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2911:13:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2899:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_BTCDOWN_$178_$",
                          "typeString": "function (address) returns (contract BTCDOWN)"
                        },
                        "typeName": {
                          "id": 249,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 248,
                            "name": "BTCDOWN",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 178,
                            "src": "2903:7:8"
                          },
                          "referencedDeclaration": 178,
                          "src": "2903:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BTCDOWN_$178",
                            "typeString": "contract BTCDOWN"
                          }
                        }
                      },
                      "id": 255,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2899:26:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BTCDOWN_$178",
                        "typeString": "contract BTCDOWN"
                      }
                    },
                    "src": "2889:36:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BTCDOWN_$178",
                      "typeString": "contract BTCDOWN"
                    }
                  },
                  "id": 257,
                  "nodeType": "ExpressionStatement",
                  "src": "2889:36:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "32",
                            "id": 261,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2962:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            }
                          ],
                          "expression": {
                            "id": 259,
                            "name": "amountUsdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 225,
                            "src": "2947:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 260,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1777,
                          "src": "2947:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 262,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2947:17:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 258,
                      "name": "issueBtcUp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 344,
                      "src": "2936:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2936:29:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 264,
                  "nodeType": "ExpressionStatement",
                  "src": "2936:29:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "32",
                            "id": 268,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3003:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            }
                          ],
                          "expression": {
                            "id": 266,
                            "name": "amountUsdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 225,
                            "src": "2988:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 267,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1777,
                          "src": "2988:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2988:17:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 265,
                      "name": "issueBtcDown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 411,
                      "src": "2975:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2975:31:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 271,
                  "nodeType": "ExpressionStatement",
                  "src": "2975:31:8"
                },
                {
                  "expression": {
                    "id": 274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 272,
                      "name": "poolIsInitiated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 211,
                      "src": "3017:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 273,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3035:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3017:22:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 275,
                  "nodeType": "ExpressionStatement",
                  "src": "3017:22:8"
                }
              ]
            },
            "functionSelector": "9b3075a1",
            "id": 277,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 228,
                "modifierName": {
                  "id": 227,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 891,
                  "src": "2756:9:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "2756:9:8"
              }
            ],
            "name": "initiatePool",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 226,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 225,
                  "mutability": "mutable",
                  "name": "amountUsdc",
                  "nodeType": "VariableDeclaration",
                  "scope": 277,
                  "src": "2729:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 224,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2729:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2728:20:8"
            },
            "returnParameters": {
              "id": 229,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2766:0:8"
            },
            "scope": 844,
            "src": "2707:339:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 343,
              "nodeType": "Block",
              "src": "3099:486:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 282,
                      "name": "rebalanceLeveragedTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 601,
                      "src": "3109:24:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3109:26:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 284,
                  "nodeType": "ExpressionStatement",
                  "src": "3109:26:8"
                },
                {
                  "expression": {
                    "id": 288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 285,
                      "name": "priceBtcUp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 188,
                      "src": "3154:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 286,
                        "name": "getBtcUpPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 670,
                        "src": "3167:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 287,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3167:15:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3154:28:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 289,
                  "nodeType": "ExpressionStatement",
                  "src": "3154:28:8"
                },
                {
                  "assignments": [
                    291
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 291,
                      "mutability": "mutable",
                      "name": "amountLeveragedTokens",
                      "nodeType": "VariableDeclaration",
                      "scope": 343,
                      "src": "3192:29:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 290,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3192:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 301,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 299,
                        "name": "priceBtcUp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 188,
                        "src": "3252:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_1000000_by_1",
                              "typeString": "int_const 1000000"
                            },
                            "id": 296,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 294,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3239:2:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "hexValue": "36",
                              "id": 295,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3245:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_6_by_1",
                                "typeString": "int_const 6"
                              },
                              "value": "6"
                            },
                            "src": "3239:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000_by_1",
                              "typeString": "int_const 1000000"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1000000_by_1",
                              "typeString": "int_const 1000000"
                            }
                          ],
                          "expression": {
                            "id": 292,
                            "name": "amountUsdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 279,
                            "src": "3224:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 293,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1762,
                          "src": "3224:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3224:23:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 298,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1777,
                      "src": "3224:27:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3224:39:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3192:71:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 305,
                        "name": "amountLeveragedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 291,
                        "src": "3285:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 302,
                        "name": "btcUp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 220,
                        "src": "3274:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BTCUP_$108",
                          "typeString": "contract BTCUP"
                        }
                      },
                      "id": 304,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72,
                      "src": "3274:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3274:33:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 307,
                  "nodeType": "ExpressionStatement",
                  "src": "3274:33:8"
                },
                {
                  "expression": {
                    "id": 313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 308,
                      "name": "amountBtcUp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 202,
                      "src": "3317:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 311,
                          "name": "amountLeveragedTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 291,
                          "src": "3347:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 309,
                          "name": "amountBtcUp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 202,
                          "src": "3331:11:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 310,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1732,
                        "src": "3331:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 312,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3331:38:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3317:52:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 314,
                  "nodeType": "ExpressionStatement",
                  "src": "3317:52:8"
                },
                {
                  "expression": {
                    "id": 320,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 315,
                      "name": "collateralBtcUp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 196,
                      "src": "3379:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 318,
                          "name": "amountUsdc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 279,
                          "src": "3417:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 316,
                          "name": "collateralBtcUp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 196,
                          "src": "3397:15:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1732,
                        "src": "3397:19:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 319,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3397:31:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3379:49:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 321,
                  "nodeType": "ExpressionStatement",
                  "src": "3379:49:8"
                },
                {
                  "assignments": [
                    324
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 324,
                      "mutability": "mutable",
                      "name": "usdc",
                      "nodeType": "VariableDeclaration",
                      "scope": 343,
                      "src": "3439:11:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$38",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 323,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 322,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 38,
                          "src": "3439:6:8"
                        },
                        "referencedDeclaration": 38,
                        "src": "3439:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$38",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 328,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 326,
                        "name": "addressUsdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 214,
                        "src": "3460:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 325,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "3453:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$38_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3453:19:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$38",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3439:33:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 332,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3508:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 333,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3508:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 336,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "3528:4:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LeveragedTrading_$844",
                                  "typeString": "contract LeveragedTrading"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LeveragedTrading_$844",
                                  "typeString": "contract LeveragedTrading"
                                }
                              ],
                              "id": 335,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3520:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 334,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3520:7:8",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 337,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3520:13:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 338,
                            "name": "amountUsdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 279,
                            "src": "3535:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 330,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 324,
                            "src": "3490:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$38",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28,
                          "src": "3490:17:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3490:56:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520646f6e2774206861766520656e6f75676820555344432e",
                        "id": 340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3548:29:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fa81e2605579e88471722381a01380eff7db3c869a8b4d6c5142c052f717215d",
                          "typeString": "literal_string \"You don't have enough USDC.\""
                        },
                        "value": "You don't have enough USDC."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fa81e2605579e88471722381a01380eff7db3c869a8b4d6c5142c052f717215d",
                          "typeString": "literal_string \"You don't have enough USDC.\""
                        }
                      ],
                      "id": 329,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3482:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3482:96:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 342,
                  "nodeType": "ExpressionStatement",
                  "src": "3482:96:8"
                }
              ]
            },
            "functionSelector": "f530c04a",
            "id": 344,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "issueBtcUp",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 280,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 279,
                  "mutability": "mutable",
                  "name": "amountUsdc",
                  "nodeType": "VariableDeclaration",
                  "scope": 344,
                  "src": "3072:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 278,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3072:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3071:20:8"
            },
            "returnParameters": {
              "id": 281,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3099:0:8"
            },
            "scope": 844,
            "src": "3052:533:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 410,
              "nodeType": "Block",
              "src": "3640:502:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 349,
                      "name": "rebalanceLeveragedTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 601,
                      "src": "3650:24:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3650:26:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 351,
                  "nodeType": "ExpressionStatement",
                  "src": "3650:26:8"
                },
                {
                  "expression": {
                    "id": 355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 352,
                      "name": "priceBtcDown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 193,
                      "src": "3695:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 353,
                        "name": "getBtcDownPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 691,
                        "src": "3710:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 354,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3710:17:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3695:32:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 356,
                  "nodeType": "ExpressionStatement",
                  "src": "3695:32:8"
                },
                {
                  "assignments": [
                    358
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 358,
                      "mutability": "mutable",
                      "name": "amountLeveragedTokens",
                      "nodeType": "VariableDeclaration",
                      "scope": 410,
                      "src": "3737:29:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 357,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3737:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 368,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 366,
                        "name": "priceBtcDown",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 193,
                        "src": "3797:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_1000000_by_1",
                              "typeString": "int_const 1000000"
                            },
                            "id": 363,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 361,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3784:2:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "hexValue": "36",
                              "id": 362,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3790:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_6_by_1",
                                "typeString": "int_const 6"
                              },
                              "value": "6"
                            },
                            "src": "3784:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000_by_1",
                              "typeString": "int_const 1000000"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1000000_by_1",
                              "typeString": "int_const 1000000"
                            }
                          ],
                          "expression": {
                            "id": 359,
                            "name": "amountUsdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 346,
                            "src": "3769:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1762,
                          "src": "3769:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3769:23:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 365,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1777,
                      "src": "3769:27:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3769:41:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3737:73:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 372,
                        "name": "amountLeveragedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 358,
                        "src": "3834:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 369,
                        "name": "btcDown",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 223,
                        "src": "3821:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BTCDOWN_$178",
                          "typeString": "contract BTCDOWN"
                        }
                      },
                      "id": 371,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 142,
                      "src": "3821:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3821:35:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 374,
                  "nodeType": "ExpressionStatement",
                  "src": "3821:35:8"
                },
                {
                  "expression": {
                    "id": 380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 375,
                      "name": "amountBtcDown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 205,
                      "src": "3866:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 378,
                          "name": "amountLeveragedTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 358,
                          "src": "3900:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 376,
                          "name": "amountBtcDown",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 205,
                          "src": "3882:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1732,
                        "src": "3882:17:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 379,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3882:40:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3866:56:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 381,
                  "nodeType": "ExpressionStatement",
                  "src": "3866:56:8"
                },
                {
                  "expression": {
                    "id": 387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 382,
                      "name": "collateralBtcDown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 199,
                      "src": "3932:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 385,
                          "name": "amountUsdc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 346,
                          "src": "3974:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 383,
                          "name": "collateralBtcDown",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 199,
                          "src": "3952:17:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 384,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1732,
                        "src": "3952:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 386,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3952:33:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3932:53:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 388,
                  "nodeType": "ExpressionStatement",
                  "src": "3932:53:8"
                },
                {
                  "assignments": [
                    391
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 391,
                      "mutability": "mutable",
                      "name": "usdc",
                      "nodeType": "VariableDeclaration",
                      "scope": 410,
                      "src": "3996:11:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$38",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 390,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 389,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 38,
                          "src": "3996:6:8"
                        },
                        "referencedDeclaration": 38,
                        "src": "3996:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$38",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 395,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 393,
                        "name": "addressUsdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 214,
                        "src": "4017:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 392,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "4010:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$38_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4010:19:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$38",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3996:33:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 399,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4065:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 400,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4065:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 403,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "4085:4:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LeveragedTrading_$844",
                                  "typeString": "contract LeveragedTrading"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LeveragedTrading_$844",
                                  "typeString": "contract LeveragedTrading"
                                }
                              ],
                              "id": 402,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4077:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 401,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4077:7:8",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 404,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4077:13:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 405,
                            "name": "amountUsdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 346,
                            "src": "4092:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 397,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 391,
                            "src": "4047:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$38",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28,
                          "src": "4047:17:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4047:56:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520646f6e2774206861766520656e6f75676820555344432e",
                        "id": 407,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4105:29:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fa81e2605579e88471722381a01380eff7db3c869a8b4d6c5142c052f717215d",
                          "typeString": "literal_string \"You don't have enough USDC.\""
                        },
                        "value": "You don't have enough USDC."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fa81e2605579e88471722381a01380eff7db3c869a8b4d6c5142c052f717215d",
                          "typeString": "literal_string \"You don't have enough USDC.\""
                        }
                      ],
                      "id": 396,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4039:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4039:96:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 409,
                  "nodeType": "ExpressionStatement",
                  "src": "4039:96:8"
                }
              ]
            },
            "functionSelector": "c46d4f09",
            "id": 411,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "issueBtcDown",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 347,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 346,
                  "mutability": "mutable",
                  "name": "amountUsdc",
                  "nodeType": "VariableDeclaration",
                  "scope": 411,
                  "src": "3613:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 345,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3613:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3612:20:8"
            },
            "returnParameters": {
              "id": 348,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3640:0:8"
            },
            "scope": 844,
            "src": "3591:551:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 472,
              "nodeType": "Block",
              "src": "4207:427:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 416,
                      "name": "rebalanceLeveragedTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 601,
                      "src": "4217:24:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4217:26:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 418,
                  "nodeType": "ExpressionStatement",
                  "src": "4217:26:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 422,
                        "name": "amountLeveragedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 413,
                        "src": "4264:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 419,
                        "name": "btcUp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 220,
                        "src": "4253:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BTCUP_$108",
                          "typeString": "contract BTCUP"
                        }
                      },
                      "id": 421,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 87,
                      "src": "4253:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4253:33:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 424,
                  "nodeType": "ExpressionStatement",
                  "src": "4253:33:8"
                },
                {
                  "expression": {
                    "id": 428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 425,
                      "name": "priceBtcUp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 188,
                      "src": "4297:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 426,
                        "name": "getBtcUpPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 670,
                        "src": "4310:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 427,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4310:15:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4297:28:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 429,
                  "nodeType": "ExpressionStatement",
                  "src": "4297:28:8"
                },
                {
                  "assignments": [
                    431
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 431,
                      "mutability": "mutable",
                      "name": "amountUsdc",
                      "nodeType": "VariableDeclaration",
                      "scope": 472,
                      "src": "4335:18:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 430,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4335:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 441,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        },
                        "id": 439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3130",
                          "id": 437,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4398:2:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "hexValue": "36",
                          "id": 438,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4404:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_6_by_1",
                            "typeString": "int_const 6"
                          },
                          "value": "6"
                        },
                        "src": "4398:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 434,
                            "name": "priceBtcUp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 188,
                            "src": "4382:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 432,
                            "name": "amountLeveragedTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 413,
                            "src": "4356:21:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 433,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1762,
                          "src": "4356:25:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4356:37:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 436,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1777,
                      "src": "4356:41:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4356:50:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4335:71:8"
                },
                {
                  "expression": {
                    "id": 447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 442,
                      "name": "amountBtcUp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 202,
                      "src": "4417:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 445,
                          "name": "amountLeveragedTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 413,
                          "src": "4447:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 443,
                          "name": "amountBtcUp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 202,
                          "src": "4431:11:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 444,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1747,
                        "src": "4431:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 446,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4431:38:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4417:52:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 448,
                  "nodeType": "ExpressionStatement",
                  "src": "4417:52:8"
                },
                {
                  "expression": {
                    "id": 454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 449,
                      "name": "collateralBtcUp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 196,
                      "src": "4479:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 452,
                          "name": "amountUsdc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 431,
                          "src": "4517:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 450,
                          "name": "collateralBtcUp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 196,
                          "src": "4497:15:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1747,
                        "src": "4497:19:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 453,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4497:31:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4479:49:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 455,
                  "nodeType": "ExpressionStatement",
                  "src": "4479:49:8"
                },
                {
                  "assignments": [
                    458
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 458,
                      "mutability": "mutable",
                      "name": "usdc",
                      "nodeType": "VariableDeclaration",
                      "scope": 472,
                      "src": "4539:11:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$38",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 457,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 456,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 38,
                          "src": "4539:6:8"
                        },
                        "referencedDeclaration": 38,
                        "src": "4539:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$38",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 462,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 460,
                        "name": "addressUsdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 214,
                        "src": "4560:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 459,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "4553:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$38_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4553:19:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$38",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4539:33:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 466,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4603:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 467,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4603:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 468,
                            "name": "amountUsdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 431,
                            "src": "4615:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 464,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 458,
                            "src": "4589:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$38",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 465,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17,
                          "src": "4589:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 469,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4589:37:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 463,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "4582:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 470,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4582:45:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 471,
                  "nodeType": "ExpressionStatement",
                  "src": "4582:45:8"
                }
              ]
            },
            "functionSelector": "d1ee539d",
            "id": 473,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redeemBtcUp",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 414,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 413,
                  "mutability": "mutable",
                  "name": "amountLeveragedTokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 473,
                  "src": "4169:29:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 412,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4169:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4168:31:8"
            },
            "returnParameters": {
              "id": 415,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4207:0:8"
            },
            "scope": 844,
            "src": "4148:486:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 534,
              "nodeType": "Block",
              "src": "4701:452:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 478,
                      "name": "rebalanceLeveragedTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 601,
                      "src": "4711:24:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4711:26:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 480,
                  "nodeType": "ExpressionStatement",
                  "src": "4711:26:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 484,
                        "name": "amountLeveragedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 475,
                        "src": "4760:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 481,
                        "name": "btcDown",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 223,
                        "src": "4747:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BTCDOWN_$178",
                          "typeString": "contract BTCDOWN"
                        }
                      },
                      "id": 483,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 157,
                      "src": "4747:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4747:35:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 486,
                  "nodeType": "ExpressionStatement",
                  "src": "4747:35:8"
                },
                {
                  "expression": {
                    "id": 490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 487,
                      "name": "priceBtcDown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 193,
                      "src": "4793:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 488,
                        "name": "getBtcDownPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 691,
                        "src": "4808:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 489,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4808:17:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4793:32:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 491,
                  "nodeType": "ExpressionStatement",
                  "src": "4793:32:8"
                },
                {
                  "assignments": [
                    493
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 493,
                      "mutability": "mutable",
                      "name": "amountUsdc",
                      "nodeType": "VariableDeclaration",
                      "scope": 534,
                      "src": "4835:18:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 492,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4835:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 503,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        },
                        "id": 501,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3130",
                          "id": 499,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4900:2:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "hexValue": "36",
                          "id": 500,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4906:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_6_by_1",
                            "typeString": "int_const 6"
                          },
                          "value": "6"
                        },
                        "src": "4900:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 496,
                            "name": "priceBtcDown",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 193,
                            "src": "4882:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 494,
                            "name": "amountLeveragedTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 475,
                            "src": "4856:21:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1762,
                          "src": "4856:25:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4856:39:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 498,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1777,
                      "src": "4856:43:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 502,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4856:52:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4835:73:8"
                },
                {
                  "expression": {
                    "id": 509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 504,
                      "name": "amountBtcDown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 205,
                      "src": "4927:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 507,
                          "name": "amountLeveragedTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 475,
                          "src": "4961:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 505,
                          "name": "amountBtcDown",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 205,
                          "src": "4943:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1747,
                        "src": "4943:17:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 508,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4943:40:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4927:56:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 510,
                  "nodeType": "ExpressionStatement",
                  "src": "4927:56:8"
                },
                {
                  "expression": {
                    "id": 516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 511,
                      "name": "collateralBtcDown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 199,
                      "src": "4993:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 514,
                          "name": "amountUsdc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 493,
                          "src": "5035:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 512,
                          "name": "collateralBtcDown",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 199,
                          "src": "5013:17:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 513,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1747,
                        "src": "5013:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 515,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5013:33:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4993:53:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 517,
                  "nodeType": "ExpressionStatement",
                  "src": "4993:53:8"
                },
                {
                  "assignments": [
                    520
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 520,
                      "mutability": "mutable",
                      "name": "usdc",
                      "nodeType": "VariableDeclaration",
                      "scope": 534,
                      "src": "5057:11:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$38",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 519,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 518,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 38,
                          "src": "5057:6:8"
                        },
                        "referencedDeclaration": 38,
                        "src": "5057:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$38",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 524,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 522,
                        "name": "addressUsdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 214,
                        "src": "5078:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 521,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "5071:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$38_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5071:19:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$38",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5057:33:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 528,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5121:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 529,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5121:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 530,
                            "name": "amountUsdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 493,
                            "src": "5134:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 526,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 520,
                            "src": "5107:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$38",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 527,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17,
                          "src": "5107:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 531,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5107:38:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 525,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "5100:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 532,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5100:46:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 533,
                  "nodeType": "ExpressionStatement",
                  "src": "5100:46:8"
                }
              ]
            },
            "functionSelector": "a14274e8",
            "id": 535,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redeemBtcDown",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 476,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 475,
                  "mutability": "mutable",
                  "name": "amountLeveragedTokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 535,
                  "src": "4663:29:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 474,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4663:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4662:31:8"
            },
            "returnParameters": {
              "id": 477,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4701:0:8"
            },
            "scope": 844,
            "src": "4640:513:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 600,
              "nodeType": "Block",
              "src": "5202:611:8",
              "statements": [
                {
                  "assignments": [
                    539
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 539,
                      "mutability": "mutable",
                      "name": "btcPrice",
                      "nodeType": "VariableDeclaration",
                      "scope": 600,
                      "src": "5212:16:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 538,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5212:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 542,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 540,
                      "name": "getBtcPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 715,
                      "src": "5231:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5231:13:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5212:32:8"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 545,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 543,
                            "name": "collateralBtcUp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 196,
                            "src": "5259:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 544,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5277:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5259:19:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 546,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "5258:21:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 549,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 547,
                            "name": "collateralBtcDown",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 199,
                            "src": "5284:17:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 548,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5304:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5284:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 550,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "5283:23:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5258:48:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 595,
                  "nodeType": "IfStatement",
                  "src": "5254:519:8",
                  "trueBody": {
                    "id": 594,
                    "nodeType": "Block",
                    "src": "5308:465:8",
                    "statements": [
                      {
                        "assignments": [
                          553
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 553,
                            "mutability": "mutable",
                            "name": "rebalanceAmount",
                            "nodeType": "VariableDeclaration",
                            "scope": 594,
                            "src": "5322:23:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 552,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5322:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 557,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 555,
                              "name": "btcPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 539,
                              "src": "5367:8:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 554,
                            "name": "getRebalanceAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 649,
                            "src": "5348:18:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view returns (uint256)"
                            }
                          },
                          "id": 556,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5348:28:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5322:54:8"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          },
                          "id": 562,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 559,
                                "name": "btcPrice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 539,
                                "src": "5402:8:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 558,
                              "name": "getSign",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 620,
                              "src": "5394:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_int256_$",
                                "typeString": "function (uint256) view returns (int256)"
                              }
                            },
                            "id": 560,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5394:17:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 561,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5414:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5394:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 592,
                          "nodeType": "Block",
                          "src": "5599:163:8",
                          "statements": [
                            {
                              "expression": {
                                "id": 583,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 578,
                                  "name": "collateralBtcUp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 196,
                                  "src": "5617:15:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 581,
                                      "name": "rebalanceAmount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 553,
                                      "src": "5655:15:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 579,
                                      "name": "collateralBtcUp",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 196,
                                      "src": "5635:15:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 580,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sub",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1747,
                                    "src": "5635:19:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 582,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5635:36:8",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5617:54:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 584,
                              "nodeType": "ExpressionStatement",
                              "src": "5617:54:8"
                            },
                            {
                              "expression": {
                                "id": 590,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 585,
                                  "name": "collateralBtcDown",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 199,
                                  "src": "5689:17:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 588,
                                      "name": "rebalanceAmount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 553,
                                      "src": "5731:15:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 586,
                                      "name": "collateralBtcDown",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 199,
                                      "src": "5709:17:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 587,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "add",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1732,
                                    "src": "5709:21:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 589,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5709:38:8",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5689:58:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 591,
                              "nodeType": "ExpressionStatement",
                              "src": "5689:58:8"
                            }
                          ]
                        },
                        "id": 593,
                        "nodeType": "IfStatement",
                        "src": "5390:372:8",
                        "trueBody": {
                          "id": 577,
                          "nodeType": "Block",
                          "src": "5417:163:8",
                          "statements": [
                            {
                              "expression": {
                                "id": 568,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 563,
                                  "name": "collateralBtcUp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 196,
                                  "src": "5435:15:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 566,
                                      "name": "rebalanceAmount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 553,
                                      "src": "5473:15:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 564,
                                      "name": "collateralBtcUp",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 196,
                                      "src": "5453:15:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 565,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "add",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1732,
                                    "src": "5453:19:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 567,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5453:36:8",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5435:54:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 569,
                              "nodeType": "ExpressionStatement",
                              "src": "5435:54:8"
                            },
                            {
                              "expression": {
                                "id": 575,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 570,
                                  "name": "collateralBtcDown",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 199,
                                  "src": "5507:17:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 573,
                                      "name": "rebalanceAmount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 553,
                                      "src": "5549:15:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 571,
                                      "name": "collateralBtcDown",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 199,
                                      "src": "5527:17:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 572,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sub",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1747,
                                    "src": "5527:21:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 574,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5527:38:8",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5507:58:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 576,
                              "nodeType": "ExpressionStatement",
                              "src": "5507:58:8"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 596,
                      "name": "lastBtcPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 208,
                      "src": "5783:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 597,
                      "name": "btcPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 539,
                      "src": "5798:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5783:23:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 599,
                  "nodeType": "ExpressionStatement",
                  "src": "5783:23:8"
                }
              ]
            },
            "functionSelector": "6e5d6615",
            "id": 601,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "rebalanceLeveragedTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 536,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5192:2:8"
            },
            "returnParameters": {
              "id": 537,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5202:0:8"
            },
            "scope": 844,
            "src": "5159:654:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 619,
              "nodeType": "Block",
              "src": "6056:126:8",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 608,
                      "name": "btcPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 603,
                      "src": "6070:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 609,
                      "name": "lastBtcPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 208,
                      "src": "6081:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6070:23:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 617,
                    "nodeType": "Block",
                    "src": "6142:34:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 615,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "-",
                          "prefix": true,
                          "src": "6163:2:8",
                          "subExpression": {
                            "hexValue": "31",
                            "id": 614,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6164:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_minus_1_by_1",
                            "typeString": "int_const -1"
                          }
                        },
                        "functionReturnParameters": 607,
                        "id": 616,
                        "nodeType": "Return",
                        "src": "6156:9:8"
                      }
                    ]
                  },
                  "id": 618,
                  "nodeType": "IfStatement",
                  "src": "6066:110:8",
                  "trueBody": {
                    "id": 613,
                    "nodeType": "Block",
                    "src": "6095:33:8",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "31",
                          "id": 611,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6116:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "functionReturnParameters": 607,
                        "id": 612,
                        "nodeType": "Return",
                        "src": "6109:8:8"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 620,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSign",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 604,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 603,
                  "mutability": "mutable",
                  "name": "btcPrice",
                  "nodeType": "VariableDeclaration",
                  "scope": 620,
                  "src": "6007:16:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 602,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6007:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6006:18:8"
            },
            "returnParameters": {
              "id": 607,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 606,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 620,
                  "src": "6048:6:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 605,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6048:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6047:8:8"
            },
            "scope": 844,
            "src": "5990:192:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 648,
              "nodeType": "Block",
              "src": "6267:147:8",
              "statements": [
                {
                  "assignments": [
                    628
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 628,
                      "mutability": "mutable",
                      "name": "priceDiff",
                      "nodeType": "VariableDeclaration",
                      "scope": 648,
                      "src": "6277:17:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 627,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6277:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 632,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 630,
                        "name": "priceBtc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 622,
                        "src": "6310:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 629,
                      "name": "getPriceDiff",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 819,
                      "src": "6297:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6297:22:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6277:42:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        },
                        "id": 645,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3130",
                          "id": 643,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6399:2:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "hexValue": "36",
                          "id": 644,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6405:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_6_by_1",
                            "typeString": "int_const 6"
                          },
                          "value": "6"
                        },
                        "src": "6399:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 639,
                                "name": "priceDiff",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 628,
                                "src": "6383:9:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 638,
                              "name": "L",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 775,
                              "src": "6381:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256) pure returns (uint256)"
                              }
                            },
                            "id": 640,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6381:12:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 634,
                                "name": "collateralBtcUp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 196,
                                "src": "6341:15:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 635,
                                "name": "collateralBtcDown",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 199,
                                "src": "6358:17:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 633,
                              "name": "min",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 732,
                              "src": "6337:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 636,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6337:39:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 637,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1762,
                          "src": "6337:43:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 641,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6337:57:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 642,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1777,
                      "src": "6337:61:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6337:70:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 626,
                  "id": 647,
                  "nodeType": "Return",
                  "src": "6330:77:8"
                }
              ]
            },
            "id": 649,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRebalanceAmount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 623,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 622,
                  "mutability": "mutable",
                  "name": "priceBtc",
                  "nodeType": "VariableDeclaration",
                  "scope": 649,
                  "src": "6217:16:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 621,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6217:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6216:18:8"
            },
            "returnParameters": {
              "id": 626,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 625,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 649,
                  "src": "6258:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 624,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6258:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6257:9:8"
            },
            "scope": 844,
            "src": "6189:225:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 669,
              "nodeType": "Block",
              "src": "6505:102:8",
              "statements": [
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 656,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 654,
                        "name": "amountBtcUp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 202,
                        "src": "6522:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 655,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6537:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "6522:16:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "arguments": [
                        {
                          "id": 665,
                          "name": "amountBtcUp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 202,
                          "src": "6588:11:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              },
                              "id": 662,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 660,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6575:2:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "36",
                                "id": 661,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6581:1:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_6_by_1",
                                  "typeString": "int_const 6"
                                },
                                "value": "6"
                              },
                              "src": "6575:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              }
                            ],
                            "expression": {
                              "id": 658,
                              "name": "collateralBtcUp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 196,
                              "src": "6555:15:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 659,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1762,
                            "src": "6555:19:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 663,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6555:28:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 664,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1777,
                        "src": "6555:32:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 666,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6555:45:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "6522:78:8",
                    "trueExpression": {
                      "id": 657,
                      "name": "priceBtcUp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 188,
                      "src": "6542:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 653,
                  "id": 668,
                  "nodeType": "Return",
                  "src": "6515:85:8"
                }
              ]
            },
            "functionSelector": "f06847d6",
            "id": 670,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBtcUpPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 650,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6472:2:8"
            },
            "returnParameters": {
              "id": 653,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 652,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 670,
                  "src": "6496:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 651,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6496:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6495:9:8"
            },
            "scope": 844,
            "src": "6450:157:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 690,
              "nodeType": "Block",
              "src": "6702:122:8",
              "statements": [
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 677,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 675,
                        "name": "amountBtcDown",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 205,
                        "src": "6731:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 676,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6748:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "6731:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "arguments": [
                        {
                          "id": 686,
                          "name": "amountBtcDown",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 205,
                          "src": "6803:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              },
                              "id": 683,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 681,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6790:2:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "36",
                                "id": 682,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6796:1:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_6_by_1",
                                  "typeString": "int_const 6"
                                },
                                "value": "6"
                              },
                              "src": "6790:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              }
                            ],
                            "expression": {
                              "id": 679,
                              "name": "collateralBtcDown",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 199,
                              "src": "6768:17:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 680,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1762,
                            "src": "6768:21:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 684,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6768:30:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 685,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1777,
                        "src": "6768:34:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 687,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6768:49:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "6731:86:8",
                    "trueExpression": {
                      "id": 678,
                      "name": "priceBtcDown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 193,
                      "src": "6753:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 674,
                  "id": 689,
                  "nodeType": "Return",
                  "src": "6724:93:8"
                }
              ]
            },
            "functionSelector": "81c2b29b",
            "id": 691,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBtcDownPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 671,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6669:2:8"
            },
            "returnParameters": {
              "id": 674,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 673,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 691,
                  "src": "6693:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 672,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6693:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6692:9:8"
            },
            "scope": 844,
            "src": "6645:179:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 714,
              "nodeType": "Block",
              "src": "6929:264:8",
              "statements": [
                {
                  "assignments": [
                    698
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 698,
                      "mutability": "mutable",
                      "name": "priceFeed",
                      "nodeType": "VariableDeclaration",
                      "scope": 714,
                      "src": "6939:31:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$1914",
                        "typeString": "contract AggregatorV3Interface"
                      },
                      "typeName": {
                        "id": 697,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 696,
                          "name": "AggregatorV3Interface",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1914,
                          "src": "6939:21:8"
                        },
                        "referencedDeclaration": 1914,
                        "src": "6939:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$1914",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 702,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 700,
                        "name": "addressBtcUSDFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 217,
                        "src": "6995:17:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 699,
                      "name": "AggregatorV3Interface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1914,
                      "src": "6973:21:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$1914_$",
                        "typeString": "type(contract AggregatorV3Interface)"
                      }
                    },
                    "id": 701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6973:40:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$1914",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6939:74:8"
                },
                {
                  "assignments": [
                    null,
                    704,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 704,
                      "mutability": "mutable",
                      "name": "answer",
                      "nodeType": "VariableDeclaration",
                      "scope": 714,
                      "src": "7025:13:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 703,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7025:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null
                  ],
                  "id": 708,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 705,
                        "name": "priceFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 698,
                        "src": "7045:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$1914",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 706,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1913,
                      "src": "7045:25:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7045:27:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7023:49:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 711,
                        "name": "answer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 704,
                        "src": "7099:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 710,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "7091:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 709,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7091:7:8",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7091:15:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 695,
                  "id": 713,
                  "nodeType": "Return",
                  "src": "7084:22:8"
                }
              ]
            },
            "functionSelector": "3a3610bc",
            "id": 715,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBtcPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 692,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6896:2:8"
            },
            "returnParameters": {
              "id": 695,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 694,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 715,
                  "src": "6920:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 693,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6920:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6919:9:8"
            },
            "scope": 844,
            "src": "6876:317:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 731,
              "nodeType": "Block",
              "src": "7270:38:8",
              "statements": [
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 726,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 724,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 717,
                        "src": "7287:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<=",
                      "rightExpression": {
                        "id": 725,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 719,
                        "src": "7292:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "7287:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 728,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 719,
                      "src": "7300:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "7287:14:8",
                    "trueExpression": {
                      "id": 727,
                      "name": "a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 717,
                      "src": "7296:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 723,
                  "id": 730,
                  "nodeType": "Return",
                  "src": "7280:21:8"
                }
              ]
            },
            "id": 732,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "min",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 720,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 717,
                  "mutability": "mutable",
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 732,
                  "src": "7216:9:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 716,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7216:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 719,
                  "mutability": "mutable",
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 732,
                  "src": "7227:9:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 718,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7227:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7215:22:8"
            },
            "returnParameters": {
              "id": 723,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 722,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 732,
                  "src": "7261:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 721,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7261:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7260:9:8"
            },
            "scope": 844,
            "src": "7203:105:8",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 774,
              "nodeType": "Block",
              "src": "7368:171:8",
              "statements": [
                {
                  "assignments": [
                    740
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 740,
                      "mutability": "mutable",
                      "name": "denom",
                      "nodeType": "VariableDeclaration",
                      "scope": 774,
                      "src": "7404:13:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 739,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7404:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 759,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 754,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 750,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "39",
                          "id": 741,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7420:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_9_by_1",
                            "typeString": "int_const 9"
                          },
                          "value": "9"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 748,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 744,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 742,
                                  "name": "x",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 734,
                                  "src": "7425:1:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "hexValue": "32",
                                  "id": 743,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7430:1:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "src": "7425:6:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_rational_1000000_by_1",
                                  "typeString": "int_const 1000000"
                                },
                                "id": 747,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "3130",
                                  "id": 745,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7434:2:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10_by_1",
                                    "typeString": "int_const 10"
                                  },
                                  "value": "10"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "hexValue": "36",
                                  "id": 746,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7440:1:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_6_by_1",
                                    "typeString": "int_const 6"
                                  },
                                  "value": "6"
                                },
                                "src": "7434:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000_by_1",
                                  "typeString": "int_const 1000000"
                                }
                              },
                              "src": "7425:16:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 749,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "7424:18:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7420:22:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "33",
                          "id": 751,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7446:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "id": 752,
                          "name": "x",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 734,
                          "src": "7450:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7446:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "7420:31:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_rational_1000000_by_1",
                        "typeString": "int_const 1000000"
                      },
                      "id": 757,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3130",
                        "id": 755,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7454:2:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "hexValue": "36",
                        "id": 756,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7460:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        },
                        "value": "6"
                      },
                      "src": "7454:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000_by_1",
                        "typeString": "int_const 1000000"
                      }
                    },
                    "src": "7420:41:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7404:57:8"
                },
                {
                  "assignments": [
                    761
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 761,
                      "mutability": "mutable",
                      "name": "num",
                      "nodeType": "VariableDeclaration",
                      "scope": 774,
                      "src": "7471:11:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 760,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7471:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 765,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_rational_1000000000000_by_1",
                      "typeString": "int_const 1000000000000"
                    },
                    "id": 764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3130",
                      "id": 762,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7485:2:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "hexValue": "3132",
                      "id": 763,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7491:2:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_12_by_1",
                        "typeString": "int_const 12"
                      },
                      "value": "12"
                    },
                    "src": "7485:8:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000000_by_1",
                      "typeString": "int_const 1000000000000"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7471:22:8"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_rational_1000000_by_1",
                        "typeString": "int_const 1000000"
                      },
                      "id": 768,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3130",
                        "id": 766,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7511:2:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "hexValue": "36",
                        "id": 767,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7517:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        },
                        "value": "6"
                      },
                      "src": "7511:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000_by_1",
                        "typeString": "int_const 1000000"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 771,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 769,
                        "name": "num",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 761,
                        "src": "7521:3:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "id": 770,
                        "name": "denom",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 740,
                        "src": "7527:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "7521:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7511:21:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 738,
                  "id": 773,
                  "nodeType": "Return",
                  "src": "7504:28:8"
                }
              ]
            },
            "id": 775,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "L",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 735,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 734,
                  "mutability": "mutable",
                  "name": "x",
                  "nodeType": "VariableDeclaration",
                  "scope": 775,
                  "src": "7325:9:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 733,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7325:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7324:11:8"
            },
            "returnParameters": {
              "id": 738,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 737,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 775,
                  "src": "7359:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 736,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7359:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7358:9:8"
            },
            "scope": 844,
            "src": "7314:225:8",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 818,
              "nodeType": "Block",
              "src": "7617:246:8",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 784,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 782,
                      "name": "btcPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 777,
                      "src": "7648:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 783,
                      "name": "lastBtcPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 208,
                      "src": "7659:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7648:23:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 816,
                    "nodeType": "Block",
                    "src": "7772:84:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              },
                              "id": 813,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 811,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7837:2:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "36",
                                "id": 812,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7843:1:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_6_by_1",
                                  "typeString": "int_const 6"
                                },
                                "value": "6"
                              },
                              "src": "7837:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 808,
                                  "name": "btcPrice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 777,
                                  "src": "7823:8:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_rational_1000000_by_1",
                                        "typeString": "int_const 1000000"
                                      },
                                      "id": 805,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "hexValue": "3130",
                                        "id": 803,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7810:2:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_10_by_1",
                                          "typeString": "int_const 10"
                                        },
                                        "value": "10"
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "**",
                                      "rightExpression": {
                                        "hexValue": "36",
                                        "id": 804,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7816:1:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_6_by_1",
                                          "typeString": "int_const 6"
                                        },
                                        "value": "6"
                                      },
                                      "src": "7810:7:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1000000_by_1",
                                        "typeString": "int_const 1000000"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_1000000_by_1",
                                        "typeString": "int_const 1000000"
                                      }
                                    ],
                                    "expression": {
                                      "id": 801,
                                      "name": "lastBtcPrice",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 208,
                                      "src": "7793:12:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 802,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1762,
                                    "src": "7793:16:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 806,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7793:25:8",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 807,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1777,
                                "src": "7793:29:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 809,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7793:39:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 810,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1747,
                            "src": "7793:43:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 814,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7793:52:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 781,
                        "id": 815,
                        "nodeType": "Return",
                        "src": "7786:59:8"
                      }
                    ]
                  },
                  "id": 817,
                  "nodeType": "IfStatement",
                  "src": "7644:212:8",
                  "trueBody": {
                    "id": 800,
                    "nodeType": "Block",
                    "src": "7673:84:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              },
                              "id": 797,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 795,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7738:2:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "36",
                                "id": 796,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7744:1:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_6_by_1",
                                  "typeString": "int_const 6"
                                },
                                "value": "6"
                              },
                              "src": "7738:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 792,
                                  "name": "lastBtcPrice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 208,
                                  "src": "7720:12:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_rational_1000000_by_1",
                                        "typeString": "int_const 1000000"
                                      },
                                      "id": 789,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "hexValue": "3130",
                                        "id": 787,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7707:2:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_10_by_1",
                                          "typeString": "int_const 10"
                                        },
                                        "value": "10"
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "**",
                                      "rightExpression": {
                                        "hexValue": "36",
                                        "id": 788,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7713:1:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_6_by_1",
                                          "typeString": "int_const 6"
                                        },
                                        "value": "6"
                                      },
                                      "src": "7707:7:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1000000_by_1",
                                        "typeString": "int_const 1000000"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_1000000_by_1",
                                        "typeString": "int_const 1000000"
                                      }
                                    ],
                                    "expression": {
                                      "id": 785,
                                      "name": "btcPrice",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 777,
                                      "src": "7694:8:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 786,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1762,
                                    "src": "7694:12:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 790,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7694:21:8",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 791,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1777,
                                "src": "7694:25:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 793,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7694:39:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 794,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1747,
                            "src": "7694:43:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 798,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7694:52:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 781,
                        "id": 799,
                        "nodeType": "Return",
                        "src": "7687:59:8"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 819,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPriceDiff",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 778,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 777,
                  "mutability": "mutable",
                  "name": "btcPrice",
                  "nodeType": "VariableDeclaration",
                  "scope": 819,
                  "src": "7567:16:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 776,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7567:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7566:18:8"
            },
            "returnParameters": {
              "id": 781,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 780,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 819,
                  "src": "7608:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 779,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7608:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7607:9:8"
            },
            "scope": 844,
            "src": "7545:318:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 830,
              "nodeType": "Block",
              "src": "7925:51:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 826,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7958:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 827,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7958:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 824,
                        "name": "btcUp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 220,
                        "src": "7942:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BTCUP_$108",
                          "typeString": "contract BTCUP"
                        }
                      },
                      "id": 825,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1047,
                      "src": "7942:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7942:27:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 823,
                  "id": 829,
                  "nodeType": "Return",
                  "src": "7935:34:8"
                }
              ]
            },
            "functionSelector": "157d0129",
            "id": 831,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBtcupBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 820,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7893:2:8"
            },
            "returnParameters": {
              "id": 823,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 822,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 831,
                  "src": "7916:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 821,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7916:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7915:9:8"
            },
            "scope": 844,
            "src": "7869:107:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 842,
              "nodeType": "Block",
              "src": "8040:53:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 838,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8075:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 839,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8075:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 836,
                        "name": "btcDown",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 223,
                        "src": "8057:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BTCDOWN_$178",
                          "typeString": "contract BTCDOWN"
                        }
                      },
                      "id": 837,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1047,
                      "src": "8057:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 840,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8057:29:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 835,
                  "id": 841,
                  "nodeType": "Return",
                  "src": "8050:36:8"
                }
              ]
            },
            "functionSelector": "c7e3b124",
            "id": 843,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBtcdownBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 832,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8008:2:8"
            },
            "returnParameters": {
              "id": 835,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 834,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 843,
                  "src": "8031:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 833,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8031:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8030:9:8"
            },
            "scope": 844,
            "src": "7982:111:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 845,
        "src": "1861:6235:8"
      }
    ],
    "src": "32:8066:8"
  },
  "bytecode": "",
  "bytecodeSha1": "11d5b083e07ef311b36a7f2aec2356a5693a43e6",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.0+commit.c7dfd78e"
  },
  "contractName": "BTCDOWN",
  "coverageMap": {
    "branches": {
      "1": {
        "ERC20._approve": {
          "50": [
            10083,
            10102,
            true
          ],
          "51": [
            10161,
            10182,
            true
          ]
        },
        "ERC20._burn": {
          "55": [
            9036,
            9057,
            true
          ],
          "56": [
            9227,
            9251,
            true
          ]
        },
        "ERC20._mint": {
          "57": [
            8327,
            8348,
            true
          ]
        },
        "ERC20._transfer": {
          "52": [
            7390,
            7410,
            true
          ],
          "53": [
            7470,
            7493,
            true
          ],
          "54": [
            7661,
            7684,
            true
          ]
        },
        "ERC20.decreaseAllowance": {
          "49": [
            6564,
            6599,
            true
          ]
        },
        "ERC20.transferFrom": {
          "48": [
            5081,
            5107,
            true
          ]
        }
      },
      "2": {},
      "3": {},
      "4": {},
      "5": {},
      "8": {}
    },
    "statements": {
      "1": {
        "ERC20._approve": {
          "23": [
            10075,
            10143
          ],
          "24": [
            10153,
            10221
          ],
          "25": [
            10232,
            10268
          ],
          "26": [
            10278,
            10315
          ]
        },
        "ERC20._burn": {
          "35": [
            9028,
            9095
          ],
          "36": [
            9106,
            9155
          ],
          "37": [
            9219,
            9290
          ],
          "38": [
            9324,
            9368
          ],
          "39": [
            9388,
            9410
          ],
          "40": [
            9421,
            9463
          ],
          "41": [
            9474,
            9522
          ]
        },
        "ERC20._mint": {
          "42": [
            8319,
            8384
          ],
          "43": [
            8395,
            8444
          ],
          "44": [
            8455,
            8477
          ],
          "45": [
            8487,
            8515
          ],
          "46": [
            8525,
            8567
          ],
          "47": [
            8578,
            8626
          ]
        },
        "ERC20._transfer": {
          "27": [
            7382,
            7452
          ],
          "28": [
            7462,
            7533
          ],
          "29": [
            7544,
            7591
          ],
          "30": [
            7653,
            7727
          ],
          "31": [
            7761,
            7803
          ],
          "32": [
            7823,
            7853
          ],
          "33": [
            7864,
            7904
          ],
          "34": [
            7915,
            7961
          ]
        },
        "ERC20.allowance": {
          "21": [
            3992,
            4026
          ]
        },
        "ERC20.approve": {
          "1": [
            4270,
            4309
          ],
          "2": [
            4319,
            4330
          ]
        },
        "ERC20.balanceOf": {
          "11": [
            3419,
            3444
          ]
        },
        "ERC20.decreaseAllowance": {
          "17": [
            6556,
            6641
          ],
          "18": [
            6675,
            6742
          ],
          "19": [
            6763,
            6774
          ]
        },
        "ERC20.increaseAllowance": {
          "9": [
            5781,
            5861
          ]
        },
        "ERC20.name": {
          "0": [
            2153,
            2165
          ]
        },
        "ERC20.symbol": {
          "15": [
            2366,
            2380
          ]
        },
        "ERC20.totalSupply": {
          "3": [
            3242,
            3261
          ]
        },
        "ERC20.transfer": {
          "20": [
            3756,
            3798
          ]
        },
        "ERC20.transferFrom": {
          "4": [
            4956,
            4992
          ],
          "5": [
            5073,
            5152
          ],
          "6": [
            5186,
            5243
          ],
          "7": [
            5264,
            5275
          ]
        }
      },
      "2": {},
      "3": {
        "ERC20Burnable.burnFrom": {
          "12": [
            1027,
            1102
          ],
          "13": [
            1136,
            1194
          ],
          "14": [
            1214,
            1236
          ]
        }
      },
      "4": {},
      "5": {
        "Context._msgSender": {
          "22": [
            658,
            675
          ]
        }
      },
      "8": {
        "BTCDOWN.burn": {
          "10": [
            1643,
            1672
          ]
        },
        "BTCDOWN.decimals": {
          "8": [
            1752,
            1760
          ]
        },
        "BTCDOWN.mint": {
          "16": [
            1535,
            1561
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.2.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/ERC20",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/ERC20Burnable",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/IERC20Metadata"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c578063a0712d6811610066578063a0712d68146101c0578063a457c2d7146101d3578063a9059cbb146101e6578063dd62ed3e146101f9576100ea565b806370a082311461019257806379cc6790146101a557806395d89b41146101b8576100ea565b806323b872dd116100c857806323b872dd14610142578063313ce56714610155578063395093511461016a57806342966c681461017d576100ea565b806306fdde03146100ef578063095ea7b31461010d57806318160ddd1461012d575b600080fd5b6100f761020c565b60405161010491906109c1565b60405180910390f35b61012061011b366004610975565b61029e565b60405161010491906109b6565b6101356102bb565b6040516101049190610cf3565b61012061015036600461093a565b6102c1565b61015d61035a565b6040516101049190610cfc565b610120610178366004610975565b61035f565b61019061018b36600461099e565b6103b3565b005b6101356101a03660046108e7565b6103d7565b6101906101b3366004610975565b6103f6565b6100f7610449565b6101906101ce36600461099e565b610458565b6101206101e1366004610975565b610479565b6101206101f4366004610975565b6104f2565b610135610207366004610908565b610506565b60606003805461021b90610d39565b80601f016020809104026020016040519081016040528092919081815260200182805461024790610d39565b80156102945780601f1061026957610100808354040283529160200191610294565b820191906000526020600020905b81548152906001019060200180831161027757829003601f168201915b5050505050905090565b60006102b26102ab610531565b8484610535565b50600192915050565b60025490565b60006102ce8484846105e9565b6001600160a01b0384166000908152600160205260408120816102ef610531565b6001600160a01b03166001600160a01b031681526020019081526020016000205490508281101561033b5760405162461bcd60e51b815260040161033290610b21565b60405180910390fd5b61034f85610347610531565b858403610535565b506001949350505050565b600690565b60006102b261036c610531565b84846001600061037a610531565b6001600160a01b03908116825260208083019390935260409182016000908120918b16815292529020546103ae9190610d0a565b610535565b6005546001600160a01b031633146103ca57600080fd5b6103d432826103f6565b50565b6001600160a01b0381166000908152602081905260409020545b919050565b600061040483610207610531565b9050818110156104265760405162461bcd60e51b815260040161033290610b69565b61043a83610432610531565b848403610535565b6104448383610713565b505050565b60606004805461021b90610d39565b6005546001600160a01b0316331461046f57600080fd5b6103d43282610804565b60008060016000610488610531565b6001600160a01b03908116825260208083019390935260409182016000908120918816815292529020549050828110156104d45760405162461bcd60e51b815260040161033290610c77565b6104e86104df610531565b85858403610535565b5060019392505050565b60006102b26104ff610531565b84846105e9565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b03831661055b5760405162461bcd60e51b815260040161033290610c33565b6001600160a01b0382166105815760405162461bcd60e51b815260040161033290610a99565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906105dc908590610cf3565b60405180910390a3505050565b6001600160a01b03831661060f5760405162461bcd60e51b815260040161033290610bee565b6001600160a01b0382166106355760405162461bcd60e51b815260040161033290610a14565b610640838383610444565b6001600160a01b038316600090815260208190526040902054818110156106795760405162461bcd60e51b815260040161033290610adb565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106b0908490610d0a565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106fa9190610cf3565b60405180910390a361070d848484610444565b50505050565b6001600160a01b0382166107395760405162461bcd60e51b815260040161033290610bad565b61074582600083610444565b6001600160a01b0382166000908152602081905260409020548181101561077e5760405162461bcd60e51b815260040161033290610a57565b6001600160a01b03831660009081526020819052604081208383039055600280548492906107ad908490610d22565b90915550506040516000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906107f0908690610cf3565b60405180910390a361044483600084610444565b6001600160a01b03821661082a5760405162461bcd60e51b815260040161033290610cbc565b61083660008383610444565b80600260008282546108489190610d0a565b90915550506001600160a01b03821660009081526020819052604081208054839290610875908490610d0a565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906108b8908590610cf3565b60405180910390a36108cc60008383610444565b5050565b80356001600160a01b03811681146103f157600080fd5b6000602082840312156108f8578081fd5b610901826108d0565b9392505050565b6000806040838503121561091a578081fd5b610923836108d0565b9150610931602084016108d0565b90509250929050565b60008060006060848603121561094e578081fd5b610957846108d0565b9250610965602085016108d0565b9150604084013590509250925092565b60008060408385031215610987578182fd5b610990836108d0565b946020939093013593505050565b6000602082840312156109af578081fd5b5035919050565b901515815260200190565b6000602080835283518082850152825b818110156109ed578581018301518582016040015282016109d1565b818111156109fe5783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526022908201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604082015261636560f01b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b60208082526028908201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616040820152676c6c6f77616e636560c01b606082015260800190565b60208082526024908201527f45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77604082015263616e636560e01b606082015260800190565b60208082526021908201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736040820152607360f81b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604082015264207a65726f60d81b606082015260800190565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b60ff91909116815260200190565b60008219821115610d1d57610d1d610d74565b500190565b600082821015610d3457610d34610d74565b500390565b600281046001821680610d4d57607f821691505b60208210811415610d6e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea26469706673582212200bcd36483a3d381351e2db2f6d138901be114a822bdef4aa84e392c074fd0d6364736f6c63430008000033",
  "deployedSourceMap": "1278:581:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:98:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4171:166;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3162:106::-;;;:::i;:::-;;;;;;;:::i;4804:478::-;;;;;;:::i;:::-;;:::i;1685:82:8:-;;;:::i;:::-;;;;;;;:::i;5677:212:1:-;;;;;;:::i;:::-;;:::i;1574:105:8:-;;;;;;:::i;:::-;;:::i;:::-;;3326:125:1;;;;;;:::i;:::-;;:::i;882:361:3:-;;;;;;:::i;:::-;;:::i;2285:102:1:-;;;:::i;1475:93:8:-;;;;;;:::i;:::-;;:::i;6376:405:1:-;;;;;;:::i;:::-;;:::i;3654:172::-;;;;;;:::i;:::-;;:::i;3884:149::-;;;;;;:::i;:::-;;:::i;2074:98::-;2128:13;2160:5;2153:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:98;:::o;4171:166::-;4254:4;4270:39;4279:12;:10;:12::i;:::-;4293:7;4302:6;4270:8;:39::i;:::-;-1:-1:-1;4326:4:1;4171:166;;;;:::o;3162:106::-;3249:12;;3162:106;:::o;4804:478::-;4940:4;4956:36;4966:6;4974:9;4985:6;4956:9;:36::i;:::-;-1:-1:-1;;;;;5030:19:1;;5003:24;5030:19;;;-1:-1:-1;5030:19:1;;;;;5003:24;5050:12;:10;:12::i;:::-;-1:-1:-1;;;;;5030:33:1;;;;;;;;;;;;-1:-1:-1;5030:33:1;;;-1:-1:-1;5081:26:1;;;;5073:79;;;;-1:-1:-1;;;5073:79:1;;;;;;;:::i;:::-;;;;;;;;;5186:57;5195:6;5203:12;:10;:12::i;:::-;5236:6;5217:16;:25;5186:8;:57::i;:::-;-1:-1:-1;5271:4:1;;4804:478;-1:-1:-1;;;;4804:478:1:o;1685:82:8:-;1759:1;1685:82;:::o;5677:212:1:-;5765:4;5781:80;5790:12;:10;:12::i;:::-;5804:7;5850:10;5813:11;:25;5825:12;:10;:12::i;:::-;-1:-1:-1;;;;;5813:25:1;;;;;;;;;;;;;;;;;-1:-1:-1;5813:25:1;;;:34;;;;;;;;;;:47;;;;:::i;:::-;5781:8;:80::i;1574:105:8:-;1825:13;;-1:-1:-1;;;;;1825:13:8;1811:10;:27;1803:36;;;;;;1643:29:::1;1652:9;1663:8;1643;:29::i;:::-;1574:105:::0;:::o;3326:125:1:-;-1:-1:-1;;;;;3426:18:1;;3400:7;3426:18;;;;;;;;;;;3326:125;;;;:::o;882:361:3:-;958:24;985:32;995:7;1004:12;:10;:12::i;985:32::-;958:59;;1055:6;1035:16;:26;;1027:75;;;;-1:-1:-1;;;1027:75:3;;;;;;;:::i;:::-;1136:58;1145:7;1154:12;:10;:12::i;:::-;1187:6;1168:16;:25;1136:8;:58::i;:::-;1214:22;1220:7;1229:6;1214:5;:22::i;:::-;882:361;;;:::o;2285:102:1:-;2341:13;2373:7;2366:14;;;;;:::i;1475:93:8:-;1825:13;;-1:-1:-1;;;;;1825:13:8;1811:10;:27;1803:36;;;;;;1535:26:::1;1541:9;1552:8;1535:5;:26::i;6376:405:1:-:0;6469:4;6485:24;6512:11;:25;6524:12;:10;:12::i;:::-;-1:-1:-1;;;;;6512:25:1;;;;;;;;;;;;;;;;;-1:-1:-1;6512:25:1;;;:34;;;;;;;;;;;-1:-1:-1;6564:35:1;;;;6556:85;;;;-1:-1:-1;;;6556:85:1;;;;;;;:::i;:::-;6675:67;6684:12;:10;:12::i;:::-;6698:7;6726:15;6707:16;:34;6675:8;:67::i;:::-;-1:-1:-1;6770:4:1;;6376:405;-1:-1:-1;;;6376:405:1:o;3654:172::-;3740:4;3756:42;3766:12;:10;:12::i;:::-;3780:9;3791:6;3756:9;:42::i;3884:149::-;-1:-1:-1;;;;;3999:18:1;;;3973:7;3999:18;;;-1:-1:-1;3999:18:1;;;;;;;;:27;;;;;;;;;;;;;3884:149::o;586:96:5:-;665:10;586:96;:::o;9952:370:1:-;-1:-1:-1;;;;;10083:19:1;;10075:68;;;;-1:-1:-1;;;10075:68:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;10161:21:1;;10153:68;;;;-1:-1:-1;;;10153:68:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;10232:18:1;;;;;;;-1:-1:-1;10232:18:1;;;;;;;;:27;;;;;;;;;;;;;;:36;;;10283:32;;;;;10232:36;;10283:32;:::i;:::-;;;;;;;;9952:370;;;:::o;7255:713::-;-1:-1:-1;;;;;7390:20:1;;7382:70;;;;-1:-1:-1;;;7382:70:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;7470:23:1;;7462:71;;;;-1:-1:-1;;;7462:71:1;;;;;;;:::i;:::-;7544:47;7565:6;7573:9;7584:6;7544:20;:47::i;:::-;-1:-1:-1;;;;;7626:17:1;;7602:21;7626:17;;;;;;;;;;;7661:23;;;;7653:74;;;;-1:-1:-1;;;7653:74:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;7761:17:1;;;:9;:17;;;;;;;;;;;7781:22;;;7761:42;;7823:20;;;;;;;;:30;;7781:22;;7761:9;7823:30;;7781:22;;7823:30;:::i;:::-;;;;-1:-1:-1;;7869:35:1;;-1:-1:-1;;;;;7869:35:1;;;;;;;;;;;;7897:6;;7869:35;:::i;:::-;;;;;;;;7915:46;7935:6;7943:9;7954:6;7915:19;:46::i;:::-;7255:713;;;;:::o;8953:576::-;-1:-1:-1;;;;;9036:21:1;;9028:67;;;;-1:-1:-1;;;9028:67:1;;;;;;;:::i;:::-;9106:49;9127:7;9144:1;9148:6;9106:20;:49::i;:::-;-1:-1:-1;;;;;9191:18:1;;9166:22;9191:18;;;;;;;;;;;9227:24;;;;9219:71;;;;-1:-1:-1;;;9219:71:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;9324:18:1;;:9;:18;;;;;;;;;;9345:23;;;9324:44;;9388:12;:22;;9345:23;;9324:9;9388:22;;9345:23;;9388:22;:::i;:::-;;;;-1:-1:-1;;9426:37:1;;9452:1;;-1:-1:-1;;;;;9426:37:1;;;;;;;9456:6;;9426:37;:::i;:::-;;;;;;;;9474:48;9494:7;9511:1;9515:6;9474:19;:48::i;8244:389::-;-1:-1:-1;;;;;8327:21:1;;8319:65;;;;-1:-1:-1;;;8319:65:1;;;;;;;:::i;:::-;8395:49;8424:1;8428:7;8437:6;8395:20;:49::i;:::-;8471:6;8455:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8487:18:1;;:9;:18;;;;;;;;;;:28;;8509:6;;8487:9;:28;;8509:6;;8487:28;:::i;:::-;;;;-1:-1:-1;;8530:37:1;;-1:-1:-1;;;;;8530:37:1;;;8547:1;;8530:37;;;;8560:6;;8530:37;:::i;:::-;;;;;;;;8578:48;8606:1;8610:7;8619:6;8578:19;:48::i;:::-;8244:389;;:::o;14:175:9:-;84:20;;-1:-1:-1;;;;;133:31:9;;123:42;;113:2;;179:1;176;169:12;194:198;;306:2;294:9;285:7;281:23;277:32;274:2;;;327:6;319;312:22;274:2;355:31;376:9;355:31;:::i;:::-;345:41;264:128;-1:-1:-1;;;264:128:9:o;397:274::-;;;526:2;514:9;505:7;501:23;497:32;494:2;;;547:6;539;532:22;494:2;575:31;596:9;575:31;:::i;:::-;565:41;;625:40;661:2;650:9;646:18;625:40;:::i;:::-;615:50;;484:187;;;;;:::o;676:342::-;;;;822:2;810:9;801:7;797:23;793:32;790:2;;;843:6;835;828:22;790:2;871:31;892:9;871:31;:::i;:::-;861:41;;921:40;957:2;946:9;942:18;921:40;:::i;:::-;911:50;;1008:2;997:9;993:18;980:32;970:42;;780:238;;;;;:::o;1023:266::-;;;1152:2;1140:9;1131:7;1127:23;1123:32;1120:2;;;1173:6;1165;1158:22;1120:2;1201:31;1222:9;1201:31;:::i;:::-;1191:41;1279:2;1264:18;;;;1251:32;;-1:-1:-1;;;1110:179:9:o;1294:190::-;;1406:2;1394:9;1385:7;1381:23;1377:32;1374:2;;;1427:6;1419;1412:22;1374:2;-1:-1:-1;1455:23:9;;1364:120;-1:-1:-1;1364:120:9:o;1489:187::-;1654:14;;1647:22;1629:41;;1617:2;1602:18;;1584:92::o;1681:603::-;;1822:2;1851;1840:9;1833:21;1883:6;1877:13;1926:6;1921:2;1910:9;1906:18;1899:34;1951:4;1964:140;1978:6;1975:1;1972:13;1964:140;;;2073:14;;;2069:23;;2063:30;2039:17;;;2058:2;2035:26;2028:66;1993:10;;1964:140;;;2122:6;2119:1;2116:13;2113:2;;;2192:4;2187:2;2178:6;2167:9;2163:22;2159:31;2152:45;2113:2;-1:-1:-1;2268:2:9;2247:15;-1:-1:-1;;2243:29:9;2228:45;;;;2275:2;2224:54;;1802:482;-1:-1:-1;;;1802:482:9:o;2289:399::-;2491:2;2473:21;;;2530:2;2510:18;;;2503:30;2569:34;2564:2;2549:18;;2542:62;-1:-1:-1;;;2635:2:9;2620:18;;2613:33;2678:3;2663:19;;2463:225::o;2693:398::-;2895:2;2877:21;;;2934:2;2914:18;;;2907:30;2973:34;2968:2;2953:18;;2946:62;-1:-1:-1;;;3039:2:9;3024:18;;3017:32;3081:3;3066:19;;2867:224::o;3096:398::-;3298:2;3280:21;;;3337:2;3317:18;;;3310:30;3376:34;3371:2;3356:18;;3349:62;-1:-1:-1;;;3442:2:9;3427:18;;3420:32;3484:3;3469:19;;3270:224::o;3499:402::-;3701:2;3683:21;;;3740:2;3720:18;;;3713:30;3779:34;3774:2;3759:18;;3752:62;-1:-1:-1;;;3845:2:9;3830:18;;3823:36;3891:3;3876:19;;3673:228::o;3906:404::-;4108:2;4090:21;;;4147:2;4127:18;;;4120:30;4186:34;4181:2;4166:18;;4159:62;-1:-1:-1;;;4252:2:9;4237:18;;4230:38;4300:3;4285:19;;4080:230::o;4315:400::-;4517:2;4499:21;;;4556:2;4536:18;;;4529:30;4595:34;4590:2;4575:18;;4568:62;-1:-1:-1;;;4661:2:9;4646:18;;4639:34;4705:3;4690:19;;4489:226::o;4720:397::-;4922:2;4904:21;;;4961:2;4941:18;;;4934:30;5000:34;4995:2;4980:18;;4973:62;-1:-1:-1;;;5066:2:9;5051:18;;5044:31;5107:3;5092:19;;4894:223::o;5122:401::-;5324:2;5306:21;;;5363:2;5343:18;;;5336:30;5402:34;5397:2;5382:18;;5375:62;-1:-1:-1;;;5468:2:9;5453:18;;5446:35;5513:3;5498:19;;5296:227::o;5528:400::-;5730:2;5712:21;;;5769:2;5749:18;;;5742:30;5808:34;5803:2;5788:18;;5781:62;-1:-1:-1;;;5874:2:9;5859:18;;5852:34;5918:3;5903:19;;5702:226::o;5933:401::-;6135:2;6117:21;;;6174:2;6154:18;;;6147:30;6213:34;6208:2;6193:18;;6186:62;-1:-1:-1;;;6279:2:9;6264:18;;6257:35;6324:3;6309:19;;6107:227::o;6339:355::-;6541:2;6523:21;;;6580:2;6560:18;;;6553:30;6619:33;6614:2;6599:18;;6592:61;6685:2;6670:18;;6513:181::o;6699:177::-;6845:25;;;6833:2;6818:18;;6800:76::o;6881:184::-;7053:4;7041:17;;;;7023:36;;7011:2;6996:18;;6978:87::o;7070:128::-;;7141:1;7137:6;7134:1;7131:13;7128:2;;;7147:18;;:::i;:::-;-1:-1:-1;7183:9:9;;7118:80::o;7203:125::-;;7271:1;7268;7265:8;7262:2;;;7276:18;;:::i;:::-;-1:-1:-1;7313:9:9;;7252:76::o;7333:380::-;7418:1;7408:12;;7465:1;7455:12;;;7476:2;;7530:4;7522:6;7518:17;7508:27;;7476:2;7583;7575:6;7572:14;7552:18;7549:38;7546:2;;;7629:10;7624:3;7620:20;7617:1;7610:31;7664:4;7661:1;7654:15;7692:4;7689:1;7682:15;7546:2;;7388:325;;;:::o;7718:127::-;7779:10;7774:3;7770:20;7767:1;7760:31;7810:4;7807:1;7800:15;7834:4;7831:1;7824:15",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "burnFrom(address,uint256)": {
        "details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "offset": [
    1278,
    1859
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA0712D68 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1F9 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1B8 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x17D JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x12D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF7 PUSH2 0x20C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x9C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x120 PUSH2 0x11B CALLDATASIZE PUSH1 0x4 PUSH2 0x975 JUMP JUMPDEST PUSH2 0x29E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x9B6 JUMP JUMPDEST PUSH2 0x135 PUSH2 0x2BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0xCF3 JUMP JUMPDEST PUSH2 0x120 PUSH2 0x150 CALLDATASIZE PUSH1 0x4 PUSH2 0x93A JUMP JUMPDEST PUSH2 0x2C1 JUMP JUMPDEST PUSH2 0x15D PUSH2 0x35A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0xCFC JUMP JUMPDEST PUSH2 0x120 PUSH2 0x178 CALLDATASIZE PUSH1 0x4 PUSH2 0x975 JUMP JUMPDEST PUSH2 0x35F JUMP JUMPDEST PUSH2 0x190 PUSH2 0x18B CALLDATASIZE PUSH1 0x4 PUSH2 0x99E JUMP JUMPDEST PUSH2 0x3B3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x135 PUSH2 0x1A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x8E7 JUMP JUMPDEST PUSH2 0x3D7 JUMP JUMPDEST PUSH2 0x190 PUSH2 0x1B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x975 JUMP JUMPDEST PUSH2 0x3F6 JUMP JUMPDEST PUSH2 0xF7 PUSH2 0x449 JUMP JUMPDEST PUSH2 0x190 PUSH2 0x1CE CALLDATASIZE PUSH1 0x4 PUSH2 0x99E JUMP JUMPDEST PUSH2 0x458 JUMP JUMPDEST PUSH2 0x120 PUSH2 0x1E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x975 JUMP JUMPDEST PUSH2 0x479 JUMP JUMPDEST PUSH2 0x120 PUSH2 0x1F4 CALLDATASIZE PUSH1 0x4 PUSH2 0x975 JUMP JUMPDEST PUSH2 0x4F2 JUMP JUMPDEST PUSH2 0x135 PUSH2 0x207 CALLDATASIZE PUSH1 0x4 PUSH2 0x908 JUMP JUMPDEST PUSH2 0x506 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x21B SWAP1 PUSH2 0xD39 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x247 SWAP1 PUSH2 0xD39 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x294 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x269 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x294 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x277 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B2 PUSH2 0x2AB PUSH2 0x531 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x535 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CE DUP5 DUP5 DUP5 PUSH2 0x5E9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 PUSH2 0x2EF PUSH2 0x531 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x33B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x34F DUP6 PUSH2 0x347 PUSH2 0x531 JUMP JUMPDEST DUP6 DUP5 SUB PUSH2 0x535 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B2 PUSH2 0x36C PUSH2 0x531 JUMP JUMPDEST DUP5 DUP5 PUSH1 0x1 PUSH1 0x0 PUSH2 0x37A PUSH2 0x531 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP12 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x3AE SWAP2 SWAP1 PUSH2 0xD0A JUMP JUMPDEST PUSH2 0x535 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3D4 ORIGIN DUP3 PUSH2 0x3F6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x404 DUP4 PUSH2 0x207 PUSH2 0x531 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x426 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0xB69 JUMP JUMPDEST PUSH2 0x43A DUP4 PUSH2 0x432 PUSH2 0x531 JUMP JUMPDEST DUP5 DUP5 SUB PUSH2 0x535 JUMP JUMPDEST PUSH2 0x444 DUP4 DUP4 PUSH2 0x713 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x21B SWAP1 PUSH2 0xD39 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x46F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3D4 ORIGIN DUP3 PUSH2 0x804 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x488 PUSH2 0x531 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP9 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x4D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0xC77 JUMP JUMPDEST PUSH2 0x4E8 PUSH2 0x4DF PUSH2 0x531 JUMP JUMPDEST DUP6 DUP6 DUP5 SUB PUSH2 0x535 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B2 PUSH2 0x4FF PUSH2 0x531 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x5E9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0xC33 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x581 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0xA99 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x5DC SWAP1 DUP6 SWAP1 PUSH2 0xCF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x60F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0xBEE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x635 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0xA14 JUMP JUMPDEST PUSH2 0x640 DUP4 DUP4 DUP4 PUSH2 0x444 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x679 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0xADB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6B0 SWAP1 DUP5 SWAP1 PUSH2 0xD0A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6FA SWAP2 SWAP1 PUSH2 0xCF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x70D DUP5 DUP5 DUP5 PUSH2 0x444 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x739 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0xBAD JUMP JUMPDEST PUSH2 0x745 DUP3 PUSH1 0x0 DUP4 PUSH2 0x444 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x77E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0xA57 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 DUP4 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x7AD SWAP1 DUP5 SWAP1 PUSH2 0xD22 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x7F0 SWAP1 DUP7 SWAP1 PUSH2 0xCF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x444 DUP4 PUSH1 0x0 DUP5 PUSH2 0x444 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x82A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0xCBC JUMP JUMPDEST PUSH2 0x836 PUSH1 0x0 DUP4 DUP4 PUSH2 0x444 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x848 SWAP2 SWAP1 PUSH2 0xD0A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x875 SWAP1 DUP5 SWAP1 PUSH2 0xD0A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x8B8 SWAP1 DUP6 SWAP1 PUSH2 0xCF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x8CC PUSH1 0x0 DUP4 DUP4 PUSH2 0x444 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8F8 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x901 DUP3 PUSH2 0x8D0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x91A JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x923 DUP4 PUSH2 0x8D0 JUMP JUMPDEST SWAP2 POP PUSH2 0x931 PUSH1 0x20 DUP5 ADD PUSH2 0x8D0 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x94E JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x957 DUP5 PUSH2 0x8D0 JUMP JUMPDEST SWAP3 POP PUSH2 0x965 PUSH1 0x20 DUP6 ADD PUSH2 0x8D0 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x987 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x990 DUP4 PUSH2 0x8D0 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9AF JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x9ED JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x9D1 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x9FE JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E74206578636565647320616C6C6F77 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x616E6365 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xD1D JUMPI PUSH2 0xD1D PUSH2 0xD74 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xD34 JUMPI PUSH2 0xD34 PUSH2 0xD74 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xD4D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xD6E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SIGNEXTEND 0xCD CALLDATASIZE 0x48 GASPRICE RETURNDATASIZE CODESIZE SGT MLOAD 0xE2 0xDB 0x2F PUSH14 0x138901BE114A822BDEF4AA84E392 0xC0 PUSH21 0xFD0D6364736F6C6343000800003300000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        1278,
        1859
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "6": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "DUP1",
      "path": "8"
    },
    "7": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "8": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "12": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "DUP1",
      "path": "8"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "REVERT",
      "path": "8"
    },
    "16": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "17": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "POP",
      "path": "8"
    },
    "18": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "21": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "LT",
      "path": "8"
    },
    "22": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xEA"
    },
    "25": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "26": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "CALLDATALOAD",
      "path": "8"
    },
    "29": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "SHR",
      "path": "8"
    },
    "32": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "DUP1",
      "path": "8"
    },
    "33": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x70A08231"
    },
    "38": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "GT",
      "path": "8"
    },
    "39": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x8C"
    },
    "42": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "43": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "DUP1",
      "path": "8"
    },
    "44": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xA0712D68"
    },
    "49": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "GT",
      "path": "8"
    },
    "50": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x66"
    },
    "53": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "54": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "DUP1",
      "path": "8"
    },
    "55": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xA0712D68"
    },
    "60": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "EQ",
      "path": "8"
    },
    "61": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1C0"
    },
    "64": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "65": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "DUP1",
      "path": "8"
    },
    "66": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xA457C2D7"
    },
    "71": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "EQ",
      "path": "8"
    },
    "72": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1D3"
    },
    "75": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "76": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "DUP1",
      "path": "8"
    },
    "77": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xA9059CBB"
    },
    "82": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "EQ",
      "path": "8"
    },
    "83": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1E6"
    },
    "86": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "87": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "DUP1",
      "path": "8"
    },
    "88": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xDD62ED3E"
    },
    "93": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "EQ",
      "path": "8"
    },
    "94": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1F9"
    },
    "97": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "98": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xEA"
    },
    "101": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "JUMP",
      "path": "8"
    },
    "102": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "103": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "DUP1",
      "path": "8"
    },
    "104": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x70A08231"
    },
    "109": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "EQ",
      "path": "8"
    },
    "110": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x192"
    },
    "113": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "114": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "DUP1",
      "path": "8"
    },
    "115": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x79CC6790"
    },
    "120": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "EQ",
      "path": "8"
    },
    "121": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1A5"
    },
    "124": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "125": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "DUP1",
      "path": "8"
    },
    "126": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x95D89B41"
    },
    "131": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "EQ",
      "path": "8"
    },
    "132": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1B8"
    },
    "135": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "136": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xEA"
    },
    "139": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "JUMP",
      "path": "8"
    },
    "140": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "141": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "DUP1",
      "path": "8"
    },
    "142": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x23B872DD"
    },
    "147": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "GT",
      "path": "8"
    },
    "148": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xC8"
    },
    "151": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "152": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "DUP1",
      "path": "8"
    },
    "153": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x23B872DD"
    },
    "158": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "EQ",
      "path": "8"
    },
    "159": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x142"
    },
    "162": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "163": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "DUP1",
      "path": "8"
    },
    "164": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x313CE567"
    },
    "169": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "EQ",
      "path": "8"
    },
    "170": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x155"
    },
    "173": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "174": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "DUP1",
      "path": "8"
    },
    "175": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x39509351"
    },
    "180": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "EQ",
      "path": "8"
    },
    "181": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x16A"
    },
    "184": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "185": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "DUP1",
      "path": "8"
    },
    "186": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x42966C68"
    },
    "191": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "EQ",
      "path": "8"
    },
    "192": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x17D"
    },
    "195": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "196": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xEA"
    },
    "199": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "JUMP",
      "path": "8"
    },
    "200": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "201": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "DUP1",
      "path": "8"
    },
    "202": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x6FDDE03"
    },
    "207": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "EQ",
      "path": "8"
    },
    "208": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xEF"
    },
    "211": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "212": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "DUP1",
      "path": "8"
    },
    "213": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x95EA7B3"
    },
    "218": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "EQ",
      "path": "8"
    },
    "219": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x10D"
    },
    "222": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "223": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "DUP1",
      "path": "8"
    },
    "224": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x18160DDD"
    },
    "229": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "EQ",
      "path": "8"
    },
    "230": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x12D"
    },
    "233": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "234": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "235": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "237": {
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "DUP1",
      "path": "8"
    },
    "238": {
      "first_revert": true,
      "fn": null,
      "offset": [
        1278,
        1859
      ],
      "op": "REVERT",
      "path": "8"
    },
    "239": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "240": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF7"
    },
    "243": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x20C"
    },
    "246": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2074,
        2172
      ],
      "op": "JUMP",
      "path": "1"
    },
    "247": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "248": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "250": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "251": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x104"
    },
    "254": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "255": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "256": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9C1"
    },
    "259": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2074,
        2172
      ],
      "op": "JUMP",
      "path": "1"
    },
    "260": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "261": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "263": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "264": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "DUP1",
      "path": "1"
    },
    "265": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "266": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "SUB",
      "path": "1"
    },
    "267": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "268": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "RETURN",
      "path": "1"
    },
    "269": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "270": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x120"
    },
    "273": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x11B"
    },
    "276": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "277": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "279": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x975"
    },
    "282": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4171,
        4337
      ],
      "op": "JUMP",
      "path": "1"
    },
    "283": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "284": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x29E"
    },
    "287": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4171,
        4337
      ],
      "op": "JUMP",
      "path": "1"
    },
    "288": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "289": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "291": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "292": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x104"
    },
    "295": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "296": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "297": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9B6"
    },
    "300": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4171,
        4337
      ],
      "op": "JUMP",
      "path": "1"
    },
    "301": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3162,
        3268
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "302": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3162,
        3268
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x135"
    },
    "305": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3162,
        3268
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2BB"
    },
    "308": {
      "fn": "ERC20.totalSupply",
      "jump": "i",
      "offset": [
        3162,
        3268
      ],
      "op": "JUMP",
      "path": "1"
    },
    "309": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3162,
        3268
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "310": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3162,
        3268
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "312": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3162,
        3268
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "313": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3162,
        3268
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x104"
    },
    "316": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3162,
        3268
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "317": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3162,
        3268
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "318": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3162,
        3268
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCF3"
    },
    "321": {
      "fn": "ERC20.totalSupply",
      "jump": "i",
      "offset": [
        3162,
        3268
      ],
      "op": "JUMP",
      "path": "1"
    },
    "322": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4804,
        5282
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "323": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4804,
        5282
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x120"
    },
    "326": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4804,
        5282
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x150"
    },
    "329": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4804,
        5282
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "330": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4804,
        5282
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "332": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4804,
        5282
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x93A"
    },
    "335": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        4804,
        5282
      ],
      "op": "JUMP",
      "path": "1"
    },
    "336": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4804,
        5282
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "337": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4804,
        5282
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2C1"
    },
    "340": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        4804,
        5282
      ],
      "op": "JUMP",
      "path": "1"
    },
    "341": {
      "fn": "BTCDOWN.decimals",
      "offset": [
        1685,
        1767
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "342": {
      "fn": "BTCDOWN.decimals",
      "offset": [
        1685,
        1767
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x15D"
    },
    "345": {
      "fn": "BTCDOWN.decimals",
      "offset": [
        1685,
        1767
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x35A"
    },
    "348": {
      "fn": "BTCDOWN.decimals",
      "jump": "i",
      "offset": [
        1685,
        1767
      ],
      "op": "JUMP",
      "path": "8"
    },
    "349": {
      "fn": "BTCDOWN.decimals",
      "offset": [
        1685,
        1767
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "350": {
      "fn": "BTCDOWN.decimals",
      "offset": [
        1685,
        1767
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "352": {
      "fn": "BTCDOWN.decimals",
      "offset": [
        1685,
        1767
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "353": {
      "fn": "BTCDOWN.decimals",
      "offset": [
        1685,
        1767
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x104"
    },
    "356": {
      "fn": "BTCDOWN.decimals",
      "offset": [
        1685,
        1767
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "357": {
      "fn": "BTCDOWN.decimals",
      "offset": [
        1685,
        1767
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "358": {
      "fn": "BTCDOWN.decimals",
      "offset": [
        1685,
        1767
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xCFC"
    },
    "361": {
      "fn": "BTCDOWN.decimals",
      "jump": "i",
      "offset": [
        1685,
        1767
      ],
      "op": "JUMP",
      "path": "8"
    },
    "362": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5677,
        5889
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "363": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5677,
        5889
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x120"
    },
    "366": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5677,
        5889
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x178"
    },
    "369": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5677,
        5889
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "370": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5677,
        5889
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "372": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5677,
        5889
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x975"
    },
    "375": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5677,
        5889
      ],
      "op": "JUMP",
      "path": "1"
    },
    "376": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5677,
        5889
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "377": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5677,
        5889
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x35F"
    },
    "380": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5677,
        5889
      ],
      "op": "JUMP",
      "path": "1"
    },
    "381": {
      "fn": "BTCDOWN.burn",
      "offset": [
        1574,
        1679
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "382": {
      "fn": "BTCDOWN.burn",
      "offset": [
        1574,
        1679
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x190"
    },
    "385": {
      "fn": "BTCDOWN.burn",
      "offset": [
        1574,
        1679
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x18B"
    },
    "388": {
      "fn": "BTCDOWN.burn",
      "offset": [
        1574,
        1679
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "389": {
      "fn": "BTCDOWN.burn",
      "offset": [
        1574,
        1679
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "391": {
      "fn": "BTCDOWN.burn",
      "offset": [
        1574,
        1679
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x99E"
    },
    "394": {
      "fn": "BTCDOWN.burn",
      "jump": "i",
      "offset": [
        1574,
        1679
      ],
      "op": "JUMP",
      "path": "8"
    },
    "395": {
      "fn": "BTCDOWN.burn",
      "offset": [
        1574,
        1679
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "396": {
      "fn": "BTCDOWN.burn",
      "offset": [
        1574,
        1679
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3B3"
    },
    "399": {
      "fn": "BTCDOWN.burn",
      "jump": "i",
      "offset": [
        1574,
        1679
      ],
      "op": "JUMP",
      "path": "8"
    },
    "400": {
      "fn": "BTCDOWN.burn",
      "offset": [
        1574,
        1679
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "401": {
      "fn": "BTCDOWN.burn",
      "offset": [
        1574,
        1679
      ],
      "op": "STOP",
      "path": "8"
    },
    "402": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3326,
        3451
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "403": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3326,
        3451
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x135"
    },
    "406": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3326,
        3451
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A0"
    },
    "409": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3326,
        3451
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "410": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3326,
        3451
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "412": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3326,
        3451
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8E7"
    },
    "415": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        3326,
        3451
      ],
      "op": "JUMP",
      "path": "1"
    },
    "416": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3326,
        3451
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "417": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3326,
        3451
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3D7"
    },
    "420": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        3326,
        3451
      ],
      "op": "JUMP",
      "path": "1"
    },
    "421": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        882,
        1243
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "422": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        882,
        1243
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x190"
    },
    "425": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        882,
        1243
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B3"
    },
    "428": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        882,
        1243
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "429": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        882,
        1243
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "431": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        882,
        1243
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x975"
    },
    "434": {
      "fn": "ERC20Burnable.burnFrom",
      "jump": "i",
      "offset": [
        882,
        1243
      ],
      "op": "JUMP",
      "path": "3"
    },
    "435": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        882,
        1243
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "436": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        882,
        1243
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3F6"
    },
    "439": {
      "fn": "ERC20Burnable.burnFrom",
      "jump": "i",
      "offset": [
        882,
        1243
      ],
      "op": "JUMP",
      "path": "3"
    },
    "440": {
      "fn": "ERC20.symbol",
      "offset": [
        2285,
        2387
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "441": {
      "fn": "ERC20.symbol",
      "offset": [
        2285,
        2387
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF7"
    },
    "444": {
      "fn": "ERC20.symbol",
      "offset": [
        2285,
        2387
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x449"
    },
    "447": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2285,
        2387
      ],
      "op": "JUMP",
      "path": "1"
    },
    "448": {
      "fn": "BTCDOWN.mint",
      "offset": [
        1475,
        1568
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "449": {
      "fn": "BTCDOWN.mint",
      "offset": [
        1475,
        1568
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x190"
    },
    "452": {
      "fn": "BTCDOWN.mint",
      "offset": [
        1475,
        1568
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1CE"
    },
    "455": {
      "fn": "BTCDOWN.mint",
      "offset": [
        1475,
        1568
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "456": {
      "fn": "BTCDOWN.mint",
      "offset": [
        1475,
        1568
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "458": {
      "fn": "BTCDOWN.mint",
      "offset": [
        1475,
        1568
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x99E"
    },
    "461": {
      "fn": "BTCDOWN.mint",
      "jump": "i",
      "offset": [
        1475,
        1568
      ],
      "op": "JUMP",
      "path": "8"
    },
    "462": {
      "fn": "BTCDOWN.mint",
      "offset": [
        1475,
        1568
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "463": {
      "fn": "BTCDOWN.mint",
      "offset": [
        1475,
        1568
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x458"
    },
    "466": {
      "fn": "BTCDOWN.mint",
      "jump": "i",
      "offset": [
        1475,
        1568
      ],
      "op": "JUMP",
      "path": "8"
    },
    "467": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6376,
        6781
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "468": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6376,
        6781
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x120"
    },
    "471": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6376,
        6781
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1E1"
    },
    "474": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6376,
        6781
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "475": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6376,
        6781
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "477": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6376,
        6781
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x975"
    },
    "480": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6376,
        6781
      ],
      "op": "JUMP",
      "path": "1"
    },
    "481": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6376,
        6781
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "482": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6376,
        6781
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x479"
    },
    "485": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6376,
        6781
      ],
      "op": "JUMP",
      "path": "1"
    },
    "486": {
      "fn": "ERC20.transfer",
      "offset": [
        3654,
        3826
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "487": {
      "fn": "ERC20.transfer",
      "offset": [
        3654,
        3826
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x120"
    },
    "490": {
      "fn": "ERC20.transfer",
      "offset": [
        3654,
        3826
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1F4"
    },
    "493": {
      "fn": "ERC20.transfer",
      "offset": [
        3654,
        3826
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "494": {
      "fn": "ERC20.transfer",
      "offset": [
        3654,
        3826
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "496": {
      "fn": "ERC20.transfer",
      "offset": [
        3654,
        3826
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x975"
    },
    "499": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3654,
        3826
      ],
      "op": "JUMP",
      "path": "1"
    },
    "500": {
      "fn": "ERC20.transfer",
      "offset": [
        3654,
        3826
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "501": {
      "fn": "ERC20.transfer",
      "offset": [
        3654,
        3826
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4F2"
    },
    "504": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3654,
        3826
      ],
      "op": "JUMP",
      "path": "1"
    },
    "505": {
      "fn": "ERC20.allowance",
      "offset": [
        3884,
        4033
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "506": {
      "fn": "ERC20.allowance",
      "offset": [
        3884,
        4033
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x135"
    },
    "509": {
      "fn": "ERC20.allowance",
      "offset": [
        3884,
        4033
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x207"
    },
    "512": {
      "fn": "ERC20.allowance",
      "offset": [
        3884,
        4033
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "513": {
      "fn": "ERC20.allowance",
      "offset": [
        3884,
        4033
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "515": {
      "fn": "ERC20.allowance",
      "offset": [
        3884,
        4033
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x908"
    },
    "518": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        3884,
        4033
      ],
      "op": "JUMP",
      "path": "1"
    },
    "519": {
      "fn": "ERC20.allowance",
      "offset": [
        3884,
        4033
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "520": {
      "fn": "ERC20.allowance",
      "offset": [
        3884,
        4033
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x506"
    },
    "523": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        3884,
        4033
      ],
      "op": "JUMP",
      "path": "1"
    },
    "524": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "525": {
      "fn": "ERC20.name",
      "offset": [
        2128,
        2141
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "527": {
      "fn": "ERC20.name",
      "offset": [
        2160,
        2165
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 0,
      "value": "0x3"
    },
    "529": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP1",
      "path": "1"
    },
    "530": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "531": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x21B"
    },
    "534": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "535": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD39"
    },
    "538": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2153,
        2165
      ],
      "op": "JUMP",
      "path": "1"
    },
    "539": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "540": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP1",
      "path": "1"
    },
    "541": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "543": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "ADD",
      "path": "1"
    },
    "544": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "546": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP1",
      "path": "1"
    },
    "547": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "548": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DIV",
      "path": "1"
    },
    "549": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "MUL",
      "path": "1"
    },
    "550": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "552": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "ADD",
      "path": "1"
    },
    "553": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "555": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "556": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "557": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP2",
      "path": "1"
    },
    "558": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "ADD",
      "path": "1"
    },
    "559": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "561": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "562": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP1",
      "path": "1"
    },
    "563": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "564": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "565": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "566": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP2",
      "path": "1"
    },
    "567": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP2",
      "path": "1"
    },
    "568": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "569": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "571": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "ADD",
      "path": "1"
    },
    "572": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP3",
      "path": "1"
    },
    "573": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP1",
      "path": "1"
    },
    "574": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "575": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x247"
    },
    "578": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "579": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD39"
    },
    "582": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2153,
        2165
      ],
      "op": "JUMP",
      "path": "1"
    },
    "583": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "584": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP1",
      "path": "1"
    },
    "585": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "586": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x294"
    },
    "589": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "590": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP1",
      "path": "1"
    },
    "591": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "593": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "LT",
      "path": "1"
    },
    "594": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x269"
    },
    "597": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "598": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "601": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP1",
      "path": "1"
    },
    "602": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP4",
      "path": "1"
    },
    "603": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "604": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DIV",
      "path": "1"
    },
    "605": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "MUL",
      "path": "1"
    },
    "606": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP4",
      "path": "1"
    },
    "607": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "608": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "609": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "611": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "ADD",
      "path": "1"
    },
    "612": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "613": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x294"
    },
    "616": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "JUMP",
      "path": "1"
    },
    "617": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "618": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP3",
      "path": "1"
    },
    "619": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "ADD",
      "path": "1"
    },
    "620": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "621": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "622": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "624": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "625": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "627": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "629": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "630": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "631": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "632": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP2",
      "path": "1"
    },
    "633": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "634": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP2",
      "path": "1"
    },
    "635": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "636": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "637": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "639": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "ADD",
      "path": "1"
    },
    "640": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "641": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "643": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "ADD",
      "path": "1"
    },
    "644": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP1",
      "path": "1"
    },
    "645": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP4",
      "path": "1"
    },
    "646": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "GT",
      "path": "1"
    },
    "647": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x277"
    },
    "650": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "651": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP3",
      "path": "1"
    },
    "652": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "653": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SUB",
      "path": "1"
    },
    "654": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "656": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "AND",
      "path": "1"
    },
    "657": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP3",
      "path": "1"
    },
    "658": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "ADD",
      "path": "1"
    },
    "659": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "660": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "661": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "POP",
      "path": "1"
    },
    "662": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "POP",
      "path": "1"
    },
    "663": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "POP",
      "path": "1"
    },
    "664": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "POP",
      "path": "1"
    },
    "665": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "POP",
      "path": "1"
    },
    "666": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "667": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "POP",
      "path": "1"
    },
    "668": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "669": {
      "fn": "ERC20.name",
      "jump": "o",
      "offset": [
        2074,
        2172
      ],
      "op": "JUMP",
      "path": "1"
    },
    "670": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "671": {
      "fn": "ERC20.approve",
      "offset": [
        4254,
        4258
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "673": {
      "fn": "ERC20.approve",
      "offset": [
        4270,
        4309
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 1,
      "value": "0x2B2"
    },
    "676": {
      "fn": "ERC20.approve",
      "offset": [
        4279,
        4291
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2AB"
    },
    "679": {
      "fn": "ERC20.approve",
      "offset": [
        4279,
        4289
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x531"
    },
    "682": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4279,
        4291
      ],
      "op": "JUMP",
      "path": "1"
    },
    "683": {
      "fn": "ERC20.approve",
      "offset": [
        4279,
        4291
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "684": {
      "fn": "ERC20.approve",
      "offset": [
        4293,
        4300
      ],
      "op": "DUP5",
      "path": "1"
    },
    "685": {
      "fn": "ERC20.approve",
      "offset": [
        4302,
        4308
      ],
      "op": "DUP5",
      "path": "1"
    },
    "686": {
      "fn": "ERC20.approve",
      "offset": [
        4270,
        4278
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x535"
    },
    "689": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4270,
        4309
      ],
      "op": "JUMP",
      "path": "1"
    },
    "690": {
      "fn": "ERC20.approve",
      "offset": [
        4270,
        4309
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "691": {
      "op": "POP"
    },
    "692": {
      "fn": "ERC20.approve",
      "offset": [
        4326,
        4330
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 2,
      "value": "0x1"
    },
    "694": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "695": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "696": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "POP",
      "path": "1"
    },
    "697": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "POP",
      "path": "1"
    },
    "698": {
      "fn": "ERC20.approve",
      "jump": "o",
      "offset": [
        4171,
        4337
      ],
      "op": "JUMP",
      "path": "1"
    },
    "699": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3162,
        3268
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "700": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3249,
        3261
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 3,
      "value": "0x2"
    },
    "702": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3249,
        3261
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "703": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3162,
        3268
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "704": {
      "fn": "ERC20.totalSupply",
      "jump": "o",
      "offset": [
        3162,
        3268
      ],
      "op": "JUMP",
      "path": "1"
    },
    "705": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4804,
        5282
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "706": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4940,
        4944
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "708": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4956,
        4992
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 4,
      "value": "0x2CE"
    },
    "711": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4966,
        4972
      ],
      "op": "DUP5",
      "path": "1"
    },
    "712": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4974,
        4983
      ],
      "op": "DUP5",
      "path": "1"
    },
    "713": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4985,
        4991
      ],
      "op": "DUP5",
      "path": "1"
    },
    "714": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4956,
        4965
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5E9"
    },
    "717": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        4956,
        4992
      ],
      "op": "JUMP",
      "path": "1"
    },
    "718": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4956,
        4992
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "719": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "721": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "723": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "725": {
      "op": "SHL"
    },
    "726": {
      "op": "SUB"
    },
    "727": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5049
      ],
      "op": "DUP5",
      "path": "1"
    },
    "728": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5049
      ],
      "op": "AND",
      "path": "1"
    },
    "729": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5003,
        5027
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "731": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5049
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "732": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5049
      ],
      "op": "DUP2",
      "path": "1"
    },
    "733": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5049
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "734": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "736": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5049
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "738": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5049
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "739": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5049
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "741": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5049
      ],
      "op": "DUP2",
      "path": "1"
    },
    "742": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5049
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "743": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5003,
        5027
      ],
      "op": "DUP2",
      "path": "1"
    },
    "744": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5050,
        5062
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2EF"
    },
    "747": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5050,
        5060
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x531"
    },
    "750": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5050,
        5062
      ],
      "op": "JUMP",
      "path": "1"
    },
    "751": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5050,
        5062
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "752": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "754": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "756": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "758": {
      "op": "SHL"
    },
    "759": {
      "op": "SUB"
    },
    "760": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5063
      ],
      "op": "AND",
      "path": "1"
    },
    "761": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5063
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "763": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5063
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "765": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5063
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "767": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5063
      ],
      "op": "SHL",
      "path": "1"
    },
    "768": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5063
      ],
      "op": "SUB",
      "path": "1"
    },
    "769": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5063
      ],
      "op": "AND",
      "path": "1"
    },
    "770": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5063
      ],
      "op": "DUP2",
      "path": "1"
    },
    "771": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5063
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "772": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5063
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "774": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5063
      ],
      "op": "ADD",
      "path": "1"
    },
    "775": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5063
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "776": {
      "op": "DUP2"
    },
    "777": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5063
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "778": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5063
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "780": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5063
      ],
      "op": "ADD",
      "path": "1"
    },
    "781": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "783": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5081,
        5107
      ],
      "op": "KECCAK256",
      "path": "1",
      "statement": 5
    },
    "784": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5081,
        5107
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "785": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5081,
        5107
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "786": {
      "branch": 48,
      "fn": "ERC20.transferFrom",
      "offset": [
        5081,
        5107
      ],
      "op": "POP",
      "path": "1"
    },
    "787": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "DUP3",
      "path": "1"
    },
    "788": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "DUP2",
      "path": "1"
    },
    "789": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "LT",
      "path": "1"
    },
    "790": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "791": {
      "op": "PUSH2",
      "value": "0x33B"
    },
    "794": {
      "op": "JUMPI"
    },
    "795": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "797": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "798": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x461BCD"
    },
    "802": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE5"
    },
    "804": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "SHL",
      "path": "1"
    },
    "805": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "DUP2",
      "path": "1"
    },
    "806": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "807": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "809": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5073,
        5152
      ],
      "op": "ADD",
      "path": "1"
    },
    "810": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x332"
    },
    "813": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "814": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB21"
    },
    "817": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "JUMP",
      "path": "1"
    },
    "818": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "819": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "821": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "822": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "DUP1",
      "path": "1"
    },
    "823": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "824": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5186,
        5243
      ],
      "op": "SUB",
      "path": "1",
      "statement": 6
    },
    "825": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5195,
        5201
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "826": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5203,
        5215
      ],
      "op": "REVERT",
      "path": "1"
    },
    "827": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5203,
        5213
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "828": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5203,
        5215
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x34F"
    },
    "831": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5203,
        5215
      ],
      "op": "DUP6",
      "path": "1"
    },
    "832": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5236,
        5242
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x347"
    },
    "835": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5217,
        5233
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x531"
    },
    "838": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5217,
        5242
      ],
      "op": "JUMP",
      "path": "1"
    },
    "839": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5186,
        5194
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "840": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5186,
        5243
      ],
      "op": "DUP6",
      "path": "1"
    },
    "841": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5186,
        5243
      ],
      "op": "DUP5",
      "path": "1"
    },
    "842": {
      "op": "SUB"
    },
    "843": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5271,
        5275
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 7,
      "value": "0x535"
    },
    "846": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5271,
        5275
      ],
      "op": "JUMP",
      "path": "1"
    },
    "847": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4804,
        5282
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "848": {
      "op": "POP"
    },
    "849": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "851": {
      "op": "SWAP5"
    },
    "852": {
      "op": "SWAP4"
    },
    "853": {
      "fn": "ERC20.transferFrom",
      "jump": "o",
      "offset": [
        4804,
        5282
      ],
      "op": "POP",
      "path": "1"
    },
    "854": {
      "fn": "BTCDOWN.decimals",
      "offset": [
        1685,
        1767
      ],
      "op": "POP",
      "path": "8"
    },
    "855": {
      "fn": "BTCDOWN.decimals",
      "offset": [
        1759,
        1760
      ],
      "op": "POP",
      "path": "8",
      "statement": 8
    },
    "856": {
      "fn": "BTCDOWN.decimals",
      "offset": [
        1685,
        1767
      ],
      "op": "POP",
      "path": "8"
    },
    "857": {
      "fn": "BTCDOWN.decimals",
      "jump": "o",
      "offset": [
        1685,
        1767
      ],
      "op": "JUMP",
      "path": "8"
    },
    "858": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5677,
        5889
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "859": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5765,
        5769
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x6"
    },
    "861": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5781,
        5861
      ],
      "op": "SWAP1",
      "path": "1",
      "statement": 9
    },
    "862": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5790,
        5802
      ],
      "op": "JUMP",
      "path": "1"
    },
    "863": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5790,
        5800
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "864": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5790,
        5802
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "866": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5790,
        5802
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2B2"
    },
    "869": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5804,
        5811
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x36C"
    },
    "872": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5850,
        5860
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x531"
    },
    "875": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5824
      ],
      "op": "JUMP",
      "path": "1"
    },
    "876": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "877": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5825,
        5837
      ],
      "op": "DUP5",
      "path": "1"
    },
    "878": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5825,
        5835
      ],
      "op": "DUP5",
      "path": "1"
    },
    "879": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5825,
        5837
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "881": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5825,
        5837
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "883": {
      "op": "PUSH2",
      "value": "0x37A"
    },
    "886": {
      "op": "PUSH2",
      "value": "0x531"
    },
    "889": {
      "op": "JUMP"
    },
    "890": {
      "op": "JUMPDEST"
    },
    "891": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "893": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "895": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "897": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "SHL",
      "path": "1"
    },
    "898": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "SUB",
      "path": "1"
    },
    "899": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "900": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "DUP2",
      "path": "1"
    },
    "901": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "AND",
      "path": "1"
    },
    "902": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "DUP3",
      "path": "1"
    },
    "903": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "904": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "906": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "DUP1",
      "path": "1"
    },
    "907": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "DUP4",
      "path": "1"
    },
    "908": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "ADD",
      "path": "1"
    },
    "909": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "910": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "911": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "912": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "913": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "915": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "916": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "DUP3",
      "path": "1"
    },
    "917": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "ADD",
      "path": "1"
    },
    "918": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5847
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "920": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5847
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "921": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5847
      ],
      "op": "DUP2",
      "path": "1"
    },
    "922": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5847
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "923": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5847
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "924": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5847
      ],
      "op": "DUP12",
      "path": "1"
    },
    "925": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5847
      ],
      "op": "AND",
      "path": "1"
    },
    "926": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5847
      ],
      "op": "DUP2",
      "path": "1"
    },
    "927": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5847
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "928": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5847
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "929": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5860
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "930": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5860
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "931": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5860
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "932": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5860
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "933": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5813,
        5860
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3AE"
    },
    "936": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5860
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "937": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5781,
        5789
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "938": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5781,
        5861
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD0A"
    },
    "941": {
      "fn": "BTCDOWN.burn",
      "offset": [
        1574,
        1679
      ],
      "op": "JUMP",
      "path": "8"
    },
    "942": {
      "offset": [
        1825,
        1838
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "943": {
      "fn": "BTCDOWN.burn",
      "offset": [
        1825,
        1838
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x535"
    },
    "946": {
      "op": "JUMP"
    },
    "947": {
      "op": "JUMPDEST"
    },
    "948": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "950": {
      "op": "SLOAD"
    },
    "951": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "953": {
      "offset": [
        1825,
        1838
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "955": {
      "offset": [
        1811,
        1821
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xA0"
    },
    "957": {
      "offset": [
        1811,
        1838
      ],
      "op": "SHL",
      "path": "8"
    },
    "958": {
      "offset": [
        1803,
        1839
      ],
      "op": "SUB",
      "path": "8"
    },
    "959": {
      "fn": "BTCDOWN.burn",
      "offset": [
        1803,
        1839
      ],
      "op": "AND",
      "path": "8"
    },
    "960": {
      "fn": "BTCDOWN.burn",
      "offset": [
        1803,
        1839
      ],
      "op": "CALLER",
      "path": "8"
    },
    "961": {
      "fn": "BTCDOWN.burn",
      "offset": [
        1803,
        1839
      ],
      "op": "EQ",
      "path": "8"
    },
    "962": {
      "fn": "BTCDOWN.burn",
      "offset": [
        1803,
        1839
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3CA"
    },
    "965": {
      "offset": [
        1803,
        1839
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "966": {
      "fn": "BTCDOWN.burn",
      "offset": [
        1643,
        1672
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 10,
      "value": "0x0"
    },
    "968": {
      "fn": "BTCDOWN.burn",
      "offset": [
        1652,
        1661
      ],
      "op": "DUP1",
      "path": "8"
    },
    "969": {
      "fn": "BTCDOWN.burn",
      "offset": [
        1663,
        1671
      ],
      "op": "REVERT",
      "path": "8"
    },
    "970": {
      "fn": "BTCDOWN.burn",
      "offset": [
        1643,
        1651
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "971": {
      "fn": "BTCDOWN.burn",
      "jump": "i",
      "offset": [
        1643,
        1672
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3D4"
    },
    "974": {
      "fn": "BTCDOWN.burn",
      "offset": [
        1643,
        1672
      ],
      "op": "ORIGIN",
      "path": "8"
    },
    "975": {
      "fn": "BTCDOWN.burn",
      "offset": [
        1574,
        1679
      ],
      "op": "DUP3",
      "path": "8"
    },
    "976": {
      "fn": "BTCDOWN.burn",
      "jump": "o",
      "offset": [
        1574,
        1679
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3F6"
    },
    "979": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3326,
        3451
      ],
      "op": "JUMP",
      "path": "1"
    },
    "980": {
      "op": "JUMPDEST"
    },
    "981": {
      "op": "POP"
    },
    "982": {
      "op": "JUMP"
    },
    "983": {
      "op": "JUMPDEST"
    },
    "984": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "986": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 11,
      "value": "0x1"
    },
    "988": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "990": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3400,
        3407
      ],
      "op": "SHL",
      "path": "1"
    },
    "991": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "SUB",
      "path": "1"
    },
    "992": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "DUP2",
      "path": "1"
    },
    "993": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "AND",
      "path": "1"
    },
    "994": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "996": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "997": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "DUP2",
      "path": "1"
    },
    "998": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "999": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1001": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1002": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1003": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1004": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3326,
        3451
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1006": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3326,
        3451
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1007": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3326,
        3451
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1008": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3326,
        3451
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1009": {
      "fn": "ERC20.balanceOf",
      "jump": "o",
      "offset": [
        3326,
        3451
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1010": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        882,
        1243
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1011": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        958,
        982
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1012": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        985,
        1017
      ],
      "op": "POP",
      "path": "3"
    },
    "1013": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        995,
        1002
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1014": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        1004,
        1016
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1015": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        1004,
        1014
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1017": {
      "fn": "ERC20Burnable.burnFrom",
      "jump": "i",
      "offset": [
        1004,
        1016
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x404"
    },
    "1020": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        985,
        1017
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1021": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        958,
        1017
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x207"
    },
    "1024": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        958,
        1017
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x531"
    },
    "1027": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        1055,
        1061
      ],
      "op": "JUMP",
      "path": "3",
      "statement": 12
    },
    "1028": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        1035,
        1051
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1029": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        1035,
        1061
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1030": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        1035,
        1061
      ],
      "op": "POP",
      "path": "3"
    },
    "1031": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        1027,
        1102
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1032": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        1027,
        1102
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1033": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        1027,
        1102
      ],
      "op": "LT",
      "path": "3"
    },
    "1034": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        1027,
        1102
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1035": {
      "op": "PUSH2",
      "value": "0x426"
    },
    "1038": {
      "op": "JUMPI"
    },
    "1039": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1041": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        1027,
        1102
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1042": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        1027,
        1102
      ],
      "op": "PUSH3",
      "path": "3",
      "value": "0x461BCD"
    },
    "1046": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        1027,
        1102
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE5"
    },
    "1048": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        1027,
        1102
      ],
      "op": "SHL",
      "path": "3"
    },
    "1049": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        1027,
        1102
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1050": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        1027,
        1102
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1051": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        1027,
        1102
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1053": {
      "fn": "ERC20Burnable.burnFrom",
      "jump": "i",
      "offset": [
        1027,
        1102
      ],
      "op": "ADD",
      "path": "3"
    },
    "1054": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        1027,
        1102
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x332"
    },
    "1057": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        1136,
        1194
      ],
      "op": "SWAP1",
      "path": "3",
      "statement": 13
    },
    "1058": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        1145,
        1152
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB69"
    },
    "1061": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        1154,
        1166
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1062": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        1154,
        1164
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1063": {
      "fn": "ERC20Burnable.burnFrom",
      "jump": "i",
      "offset": [
        1154,
        1166
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x43A"
    },
    "1066": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        1154,
        1166
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1067": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        1187,
        1193
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x432"
    },
    "1070": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        1168,
        1184
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x531"
    },
    "1073": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        1168,
        1193
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1074": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        1136,
        1144
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1075": {
      "fn": "ERC20Burnable.burnFrom",
      "jump": "i",
      "offset": [
        1136,
        1194
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1076": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        1136,
        1194
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1077": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        1214,
        1236
      ],
      "op": "SUB",
      "path": "3",
      "statement": 14
    },
    "1078": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        1220,
        1227
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x535"
    },
    "1081": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        1229,
        1235
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1082": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        1214,
        1219
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1083": {
      "fn": "ERC20Burnable.burnFrom",
      "jump": "i",
      "offset": [
        1214,
        1236
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x444"
    },
    "1086": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        1214,
        1236
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1087": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        882,
        1243
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1088": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        882,
        1243
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x713"
    },
    "1091": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        882,
        1243
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1092": {
      "fn": "ERC20Burnable.burnFrom",
      "jump": "o",
      "offset": [
        882,
        1243
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1093": {
      "fn": "ERC20.symbol",
      "offset": [
        2285,
        2387
      ],
      "op": "POP",
      "path": "1"
    },
    "1094": {
      "fn": "ERC20.symbol",
      "offset": [
        2341,
        2354
      ],
      "op": "POP",
      "path": "1"
    },
    "1095": {
      "fn": "ERC20.symbol",
      "offset": [
        2373,
        2380
      ],
      "op": "POP",
      "path": "1",
      "statement": 15
    },
    "1096": {
      "fn": "ERC20.symbol",
      "offset": [
        2366,
        2380
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1097": {
      "fn": "ERC20.symbol",
      "offset": [
        2366,
        2380
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1098": {
      "fn": "ERC20.symbol",
      "offset": [
        2366,
        2380
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "1100": {
      "fn": "ERC20.symbol",
      "offset": [
        2366,
        2380
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1102": {
      "fn": "ERC20.symbol",
      "offset": [
        2366,
        2380
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1103": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2366,
        2380
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1104": {
      "fn": "BTCDOWN.mint",
      "offset": [
        1475,
        1568
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x21B"
    },
    "1107": {
      "offset": [
        1825,
        1838
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1108": {
      "fn": "BTCDOWN.mint",
      "offset": [
        1825,
        1838
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xD39"
    },
    "1111": {
      "op": "JUMP"
    },
    "1112": {
      "op": "JUMPDEST"
    },
    "1113": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "1115": {
      "op": "SLOAD"
    },
    "1116": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1118": {
      "offset": [
        1825,
        1838
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "1120": {
      "offset": [
        1811,
        1821
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xA0"
    },
    "1122": {
      "offset": [
        1811,
        1838
      ],
      "op": "SHL",
      "path": "8"
    },
    "1123": {
      "offset": [
        1803,
        1839
      ],
      "op": "SUB",
      "path": "8"
    },
    "1124": {
      "fn": "BTCDOWN.mint",
      "offset": [
        1803,
        1839
      ],
      "op": "AND",
      "path": "8"
    },
    "1125": {
      "fn": "BTCDOWN.mint",
      "offset": [
        1803,
        1839
      ],
      "op": "CALLER",
      "path": "8"
    },
    "1126": {
      "fn": "BTCDOWN.mint",
      "offset": [
        1803,
        1839
      ],
      "op": "EQ",
      "path": "8"
    },
    "1127": {
      "fn": "BTCDOWN.mint",
      "offset": [
        1803,
        1839
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x46F"
    },
    "1130": {
      "offset": [
        1803,
        1839
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1131": {
      "fn": "BTCDOWN.mint",
      "offset": [
        1535,
        1561
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 16,
      "value": "0x0"
    },
    "1133": {
      "fn": "BTCDOWN.mint",
      "offset": [
        1541,
        1550
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1134": {
      "fn": "BTCDOWN.mint",
      "offset": [
        1552,
        1560
      ],
      "op": "REVERT",
      "path": "8"
    },
    "1135": {
      "fn": "BTCDOWN.mint",
      "offset": [
        1535,
        1540
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1136": {
      "fn": "BTCDOWN.mint",
      "jump": "i",
      "offset": [
        1535,
        1561
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3D4"
    },
    "1139": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6376,
        6781
      ],
      "op": "ORIGIN",
      "path": "1"
    },
    "1140": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6469,
        6473
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1141": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6485,
        6509
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x804"
    },
    "1144": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6523
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1145": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1146": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6524,
        6536
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1148": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6524,
        6534
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1149": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6524,
        6536
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1151": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6524,
        6536
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1153": {
      "op": "PUSH2",
      "value": "0x488"
    },
    "1156": {
      "op": "PUSH2",
      "value": "0x531"
    },
    "1159": {
      "op": "JUMP"
    },
    "1160": {
      "op": "JUMPDEST"
    },
    "1161": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1163": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1165": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "1167": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "SHL",
      "path": "1"
    },
    "1168": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "SUB",
      "path": "1"
    },
    "1169": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1170": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1171": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "AND",
      "path": "1"
    },
    "1172": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1173": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1174": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1176": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1177": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1178": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "ADD",
      "path": "1"
    },
    "1179": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1180": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1181": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1182": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1183": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1185": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1186": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1187": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "ADD",
      "path": "1"
    },
    "1188": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6546
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1190": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6546
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1191": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6546
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1192": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6546
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1193": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6546
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1194": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6546
      ],
      "op": "DUP9",
      "path": "1"
    },
    "1195": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6546
      ],
      "op": "AND",
      "path": "1"
    },
    "1196": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6546
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1197": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6546
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1198": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6546
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1199": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6546
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1200": {
      "op": "SWAP1"
    },
    "1201": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6564,
        6599
      ],
      "op": "KECCAK256",
      "path": "1",
      "statement": 17
    },
    "1202": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6564,
        6599
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1203": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6564,
        6599
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1204": {
      "branch": 49,
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6564,
        6599
      ],
      "op": "POP",
      "path": "1"
    },
    "1205": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6556,
        6641
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1206": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6556,
        6641
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1207": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6556,
        6641
      ],
      "op": "LT",
      "path": "1"
    },
    "1208": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6556,
        6641
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1209": {
      "op": "PUSH2",
      "value": "0x4D4"
    },
    "1212": {
      "op": "JUMPI"
    },
    "1213": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1215": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6556,
        6641
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1216": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6556,
        6641
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x461BCD"
    },
    "1220": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6556,
        6641
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE5"
    },
    "1222": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6556,
        6641
      ],
      "op": "SHL",
      "path": "1"
    },
    "1223": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6556,
        6641
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1224": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6556,
        6641
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1225": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6556,
        6641
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1227": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6556,
        6641
      ],
      "op": "ADD",
      "path": "1"
    },
    "1228": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6556,
        6641
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x332"
    },
    "1231": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6675,
        6742
      ],
      "op": "SWAP1",
      "path": "1",
      "statement": 18
    },
    "1232": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6684,
        6696
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC77"
    },
    "1235": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6684,
        6694
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1236": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6684,
        6696
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1237": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6684,
        6696
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4E8"
    },
    "1240": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6698,
        6705
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4DF"
    },
    "1243": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6726,
        6741
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x531"
    },
    "1246": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6707,
        6723
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1247": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6707,
        6741
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1248": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6675,
        6683
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1249": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6675,
        6742
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1250": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6675,
        6742
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1251": {
      "op": "SUB"
    },
    "1252": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6774
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 19,
      "value": "0x535"
    },
    "1255": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6774
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1256": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6376,
        6781
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1257": {
      "op": "POP"
    },
    "1258": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1260": {
      "op": "SWAP4"
    },
    "1261": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "o",
      "offset": [
        6376,
        6781
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1262": {
      "fn": "ERC20.transfer",
      "offset": [
        3654,
        3826
      ],
      "op": "POP",
      "path": "1"
    },
    "1263": {
      "fn": "ERC20.transfer",
      "offset": [
        3740,
        3744
      ],
      "op": "POP",
      "path": "1"
    },
    "1264": {
      "fn": "ERC20.transfer",
      "offset": [
        3756,
        3798
      ],
      "op": "POP",
      "path": "1",
      "statement": 20
    },
    "1265": {
      "fn": "ERC20.transfer",
      "offset": [
        3766,
        3778
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1266": {
      "fn": "ERC20.transfer",
      "offset": [
        3766,
        3776
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1267": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3766,
        3778
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1269": {
      "fn": "ERC20.transfer",
      "offset": [
        3766,
        3778
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2B2"
    },
    "1272": {
      "fn": "ERC20.transfer",
      "offset": [
        3780,
        3789
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4FF"
    },
    "1275": {
      "fn": "ERC20.transfer",
      "offset": [
        3791,
        3797
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x531"
    },
    "1278": {
      "fn": "ERC20.transfer",
      "offset": [
        3756,
        3765
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1279": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3756,
        3798
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1280": {
      "fn": "ERC20.allowance",
      "offset": [
        3884,
        4033
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1281": {
      "op": "DUP5"
    },
    "1282": {
      "op": "PUSH2",
      "value": "0x5E9"
    },
    "1285": {
      "op": "JUMP"
    },
    "1286": {
      "op": "JUMPDEST"
    },
    "1287": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1289": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4017
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 21,
      "value": "0x1"
    },
    "1291": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4017
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "1293": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4017
      ],
      "op": "SHL",
      "path": "1"
    },
    "1294": {
      "fn": "ERC20.allowance",
      "offset": [
        3973,
        3980
      ],
      "op": "SUB",
      "path": "1"
    },
    "1295": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4017
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1296": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4017
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1297": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4017
      ],
      "op": "AND",
      "path": "1"
    },
    "1298": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1300": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4017
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1301": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4017
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1302": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4017
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1303": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4017
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1305": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4017
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1307": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4017
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1308": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4017
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1309": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4017
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1310": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4026
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1312": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4026
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1313": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4026
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1314": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4026
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1315": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4026
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1316": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4026
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1317": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4026
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "1318": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4026
      ],
      "op": "AND",
      "path": "1"
    },
    "1319": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4026
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1320": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4026
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1321": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4026
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1322": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4026
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1323": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4026
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1324": {
      "fn": "ERC20.allowance",
      "jump": "o",
      "offset": [
        3884,
        4033
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1325": {
      "fn": "Context._msgSender",
      "offset": [
        586,
        682
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1326": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "SLOAD",
      "path": "5",
      "statement": 22
    },
    "1327": {
      "fn": "Context._msgSender",
      "offset": [
        586,
        682
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1328": {
      "fn": "Context._msgSender",
      "jump": "o",
      "offset": [
        586,
        682
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1329": {
      "fn": "ERC20._approve",
      "offset": [
        9952,
        10322
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1330": {
      "op": "CALLER"
    },
    "1331": {
      "op": "SWAP1"
    },
    "1332": {
      "op": "JUMP"
    },
    "1333": {
      "op": "JUMPDEST"
    },
    "1334": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1336": {
      "fn": "ERC20._approve",
      "offset": [
        10083,
        10102
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 23,
      "value": "0x1"
    },
    "1338": {
      "branch": 50,
      "fn": "ERC20._approve",
      "offset": [
        10083,
        10102
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "1340": {
      "fn": "ERC20._approve",
      "offset": [
        10075,
        10143
      ],
      "op": "SHL",
      "path": "1"
    },
    "1341": {
      "fn": "ERC20._approve",
      "offset": [
        10075,
        10143
      ],
      "op": "SUB",
      "path": "1"
    },
    "1342": {
      "fn": "ERC20._approve",
      "offset": [
        10075,
        10143
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1343": {
      "fn": "ERC20._approve",
      "offset": [
        10075,
        10143
      ],
      "op": "AND",
      "path": "1"
    },
    "1344": {
      "op": "PUSH2",
      "value": "0x55B"
    },
    "1347": {
      "op": "JUMPI"
    },
    "1348": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1350": {
      "fn": "ERC20._approve",
      "offset": [
        10075,
        10143
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1351": {
      "fn": "ERC20._approve",
      "offset": [
        10075,
        10143
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x461BCD"
    },
    "1355": {
      "fn": "ERC20._approve",
      "offset": [
        10075,
        10143
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE5"
    },
    "1357": {
      "fn": "ERC20._approve",
      "offset": [
        10075,
        10143
      ],
      "op": "SHL",
      "path": "1"
    },
    "1358": {
      "fn": "ERC20._approve",
      "offset": [
        10075,
        10143
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1359": {
      "fn": "ERC20._approve",
      "offset": [
        10075,
        10143
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1360": {
      "fn": "ERC20._approve",
      "offset": [
        10075,
        10143
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1362": {
      "fn": "ERC20._approve",
      "jump": "i",
      "offset": [
        10075,
        10143
      ],
      "op": "ADD",
      "path": "1"
    },
    "1363": {
      "fn": "ERC20._approve",
      "offset": [
        10075,
        10143
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x332"
    },
    "1366": {
      "op": "SWAP1"
    },
    "1367": {
      "op": "PUSH2",
      "value": "0xC33"
    },
    "1370": {
      "op": "JUMP"
    },
    "1371": {
      "op": "JUMPDEST"
    },
    "1372": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1374": {
      "fn": "ERC20._approve",
      "offset": [
        10161,
        10182
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 24,
      "value": "0x1"
    },
    "1376": {
      "branch": 51,
      "fn": "ERC20._approve",
      "offset": [
        10161,
        10182
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "1378": {
      "fn": "ERC20._approve",
      "offset": [
        10153,
        10221
      ],
      "op": "SHL",
      "path": "1"
    },
    "1379": {
      "fn": "ERC20._approve",
      "offset": [
        10153,
        10221
      ],
      "op": "SUB",
      "path": "1"
    },
    "1380": {
      "fn": "ERC20._approve",
      "offset": [
        10153,
        10221
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1381": {
      "fn": "ERC20._approve",
      "offset": [
        10153,
        10221
      ],
      "op": "AND",
      "path": "1"
    },
    "1382": {
      "op": "PUSH2",
      "value": "0x581"
    },
    "1385": {
      "op": "JUMPI"
    },
    "1386": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1388": {
      "fn": "ERC20._approve",
      "offset": [
        10153,
        10221
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1389": {
      "fn": "ERC20._approve",
      "offset": [
        10153,
        10221
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x461BCD"
    },
    "1393": {
      "fn": "ERC20._approve",
      "offset": [
        10153,
        10221
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE5"
    },
    "1395": {
      "fn": "ERC20._approve",
      "offset": [
        10153,
        10221
      ],
      "op": "SHL",
      "path": "1"
    },
    "1396": {
      "fn": "ERC20._approve",
      "offset": [
        10153,
        10221
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1397": {
      "fn": "ERC20._approve",
      "offset": [
        10153,
        10221
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1398": {
      "fn": "ERC20._approve",
      "offset": [
        10153,
        10221
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1400": {
      "fn": "ERC20._approve",
      "jump": "i",
      "offset": [
        10153,
        10221
      ],
      "op": "ADD",
      "path": "1"
    },
    "1401": {
      "fn": "ERC20._approve",
      "offset": [
        10153,
        10221
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x332"
    },
    "1404": {
      "op": "SWAP1"
    },
    "1405": {
      "op": "PUSH2",
      "value": "0xA99"
    },
    "1408": {
      "op": "JUMP"
    },
    "1409": {
      "op": "JUMPDEST"
    },
    "1410": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1412": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 25,
      "value": "0x1"
    },
    "1414": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "1416": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "SHL",
      "path": "1"
    },
    "1417": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "SUB",
      "path": "1"
    },
    "1418": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1419": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1420": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "AND",
      "path": "1"
    },
    "1421": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1423": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1424": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1425": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1426": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1428": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1430": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1431": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1432": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1433": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10259
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1435": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10259
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1436": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10259
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1437": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10259
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1438": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10259
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "1439": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10259
      ],
      "op": "DUP8",
      "path": "1"
    },
    "1440": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10259
      ],
      "op": "AND",
      "path": "1"
    },
    "1441": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10259
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1442": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10259
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1443": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10259
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1444": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10259
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "1445": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10259
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1446": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10259
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1447": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10259
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1448": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10268
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1449": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10268
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1450": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10268
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1451": {
      "fn": "ERC20._approve",
      "offset": [
        10283,
        10315
      ],
      "op": "KECCAK256",
      "path": "1",
      "statement": 26
    },
    "1452": {
      "fn": "ERC20._approve",
      "offset": [
        10283,
        10315
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1453": {
      "fn": "ERC20._approve",
      "offset": [
        10283,
        10315
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1454": {
      "fn": "ERC20._approve",
      "offset": [
        10283,
        10315
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1455": {
      "fn": "ERC20._approve",
      "offset": [
        10283,
        10315
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1456": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10268
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "1489": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10268
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1490": {
      "fn": "ERC20._approve",
      "offset": [
        10283,
        10315
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5DC"
    },
    "1493": {
      "fn": "ERC20._approve",
      "jump": "i",
      "offset": [
        10283,
        10315
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1494": {
      "fn": "ERC20._approve",
      "offset": [
        10283,
        10315
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1495": {
      "fn": "ERC20._approve",
      "offset": [
        10283,
        10315
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1496": {
      "fn": "ERC20._approve",
      "offset": [
        10283,
        10315
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCF3"
    },
    "1499": {
      "fn": "ERC20._approve",
      "offset": [
        10283,
        10315
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1500": {
      "fn": "ERC20._approve",
      "offset": [
        10283,
        10315
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1501": {
      "fn": "ERC20._approve",
      "offset": [
        10283,
        10315
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1503": {
      "fn": "ERC20._approve",
      "offset": [
        10283,
        10315
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1504": {
      "fn": "ERC20._approve",
      "offset": [
        10283,
        10315
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1505": {
      "fn": "ERC20._approve",
      "offset": [
        9952,
        10322
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1506": {
      "fn": "ERC20._approve",
      "offset": [
        9952,
        10322
      ],
      "op": "SUB",
      "path": "1"
    },
    "1507": {
      "fn": "ERC20._approve",
      "offset": [
        9952,
        10322
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1508": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [
        9952,
        10322
      ],
      "op": "LOG3",
      "path": "1"
    },
    "1509": {
      "fn": "ERC20._transfer",
      "offset": [
        7255,
        7968
      ],
      "op": "POP",
      "path": "1"
    },
    "1510": {
      "op": "POP"
    },
    "1511": {
      "op": "POP"
    },
    "1512": {
      "op": "JUMP"
    },
    "1513": {
      "op": "JUMPDEST"
    },
    "1514": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1516": {
      "fn": "ERC20._transfer",
      "offset": [
        7390,
        7410
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 27,
      "value": "0x1"
    },
    "1518": {
      "branch": 52,
      "fn": "ERC20._transfer",
      "offset": [
        7390,
        7410
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "1520": {
      "fn": "ERC20._transfer",
      "offset": [
        7382,
        7452
      ],
      "op": "SHL",
      "path": "1"
    },
    "1521": {
      "fn": "ERC20._transfer",
      "offset": [
        7382,
        7452
      ],
      "op": "SUB",
      "path": "1"
    },
    "1522": {
      "fn": "ERC20._transfer",
      "offset": [
        7382,
        7452
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1523": {
      "fn": "ERC20._transfer",
      "offset": [
        7382,
        7452
      ],
      "op": "AND",
      "path": "1"
    },
    "1524": {
      "op": "PUSH2",
      "value": "0x60F"
    },
    "1527": {
      "op": "JUMPI"
    },
    "1528": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1530": {
      "fn": "ERC20._transfer",
      "offset": [
        7382,
        7452
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1531": {
      "fn": "ERC20._transfer",
      "offset": [
        7382,
        7452
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x461BCD"
    },
    "1535": {
      "fn": "ERC20._transfer",
      "offset": [
        7382,
        7452
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE5"
    },
    "1537": {
      "fn": "ERC20._transfer",
      "offset": [
        7382,
        7452
      ],
      "op": "SHL",
      "path": "1"
    },
    "1538": {
      "fn": "ERC20._transfer",
      "offset": [
        7382,
        7452
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1539": {
      "fn": "ERC20._transfer",
      "offset": [
        7382,
        7452
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1540": {
      "fn": "ERC20._transfer",
      "offset": [
        7382,
        7452
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1542": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7382,
        7452
      ],
      "op": "ADD",
      "path": "1"
    },
    "1543": {
      "fn": "ERC20._transfer",
      "offset": [
        7382,
        7452
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x332"
    },
    "1546": {
      "op": "SWAP1"
    },
    "1547": {
      "op": "PUSH2",
      "value": "0xBEE"
    },
    "1550": {
      "op": "JUMP"
    },
    "1551": {
      "op": "JUMPDEST"
    },
    "1552": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1554": {
      "fn": "ERC20._transfer",
      "offset": [
        7470,
        7493
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 28,
      "value": "0x1"
    },
    "1556": {
      "branch": 53,
      "fn": "ERC20._transfer",
      "offset": [
        7470,
        7493
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "1558": {
      "fn": "ERC20._transfer",
      "offset": [
        7462,
        7533
      ],
      "op": "SHL",
      "path": "1"
    },
    "1559": {
      "fn": "ERC20._transfer",
      "offset": [
        7462,
        7533
      ],
      "op": "SUB",
      "path": "1"
    },
    "1560": {
      "fn": "ERC20._transfer",
      "offset": [
        7462,
        7533
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1561": {
      "fn": "ERC20._transfer",
      "offset": [
        7462,
        7533
      ],
      "op": "AND",
      "path": "1"
    },
    "1562": {
      "op": "PUSH2",
      "value": "0x635"
    },
    "1565": {
      "op": "JUMPI"
    },
    "1566": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1568": {
      "fn": "ERC20._transfer",
      "offset": [
        7462,
        7533
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1569": {
      "fn": "ERC20._transfer",
      "offset": [
        7462,
        7533
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x461BCD"
    },
    "1573": {
      "fn": "ERC20._transfer",
      "offset": [
        7462,
        7533
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE5"
    },
    "1575": {
      "fn": "ERC20._transfer",
      "offset": [
        7462,
        7533
      ],
      "op": "SHL",
      "path": "1"
    },
    "1576": {
      "fn": "ERC20._transfer",
      "offset": [
        7462,
        7533
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1577": {
      "fn": "ERC20._transfer",
      "offset": [
        7462,
        7533
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1578": {
      "fn": "ERC20._transfer",
      "offset": [
        7462,
        7533
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1580": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7462,
        7533
      ],
      "op": "ADD",
      "path": "1"
    },
    "1581": {
      "fn": "ERC20._transfer",
      "offset": [
        7462,
        7533
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x332"
    },
    "1584": {
      "fn": "ERC20._transfer",
      "offset": [
        7544,
        7591
      ],
      "op": "SWAP1",
      "path": "1",
      "statement": 29
    },
    "1585": {
      "fn": "ERC20._transfer",
      "offset": [
        7565,
        7571
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA14"
    },
    "1588": {
      "fn": "ERC20._transfer",
      "offset": [
        7573,
        7582
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1589": {
      "fn": "ERC20._transfer",
      "offset": [
        7584,
        7590
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1590": {
      "fn": "ERC20._transfer",
      "offset": [
        7544,
        7564
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x640"
    },
    "1593": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7544,
        7591
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1594": {
      "fn": "ERC20._transfer",
      "offset": [
        7544,
        7591
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1595": {
      "op": "DUP4"
    },
    "1596": {
      "op": "PUSH2",
      "value": "0x444"
    },
    "1599": {
      "op": "JUMP"
    },
    "1600": {
      "op": "JUMPDEST"
    },
    "1601": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1603": {
      "fn": "ERC20._transfer",
      "offset": [
        7626,
        7643
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1605": {
      "fn": "ERC20._transfer",
      "offset": [
        7626,
        7643
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "1607": {
      "fn": "ERC20._transfer",
      "offset": [
        7602,
        7623
      ],
      "op": "SHL",
      "path": "1"
    },
    "1608": {
      "fn": "ERC20._transfer",
      "offset": [
        7626,
        7643
      ],
      "op": "SUB",
      "path": "1"
    },
    "1609": {
      "fn": "ERC20._transfer",
      "offset": [
        7626,
        7643
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1610": {
      "fn": "ERC20._transfer",
      "offset": [
        7626,
        7643
      ],
      "op": "AND",
      "path": "1"
    },
    "1611": {
      "fn": "ERC20._transfer",
      "offset": [
        7626,
        7643
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1613": {
      "fn": "ERC20._transfer",
      "offset": [
        7626,
        7643
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1614": {
      "fn": "ERC20._transfer",
      "offset": [
        7626,
        7643
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1615": {
      "fn": "ERC20._transfer",
      "offset": [
        7626,
        7643
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1616": {
      "fn": "ERC20._transfer",
      "offset": [
        7626,
        7643
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1618": {
      "fn": "ERC20._transfer",
      "offset": [
        7626,
        7643
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1619": {
      "fn": "ERC20._transfer",
      "offset": [
        7626,
        7643
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1620": {
      "fn": "ERC20._transfer",
      "offset": [
        7626,
        7643
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1621": {
      "fn": "ERC20._transfer",
      "offset": [
        7661,
        7684
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 30,
      "value": "0x40"
    },
    "1623": {
      "fn": "ERC20._transfer",
      "offset": [
        7661,
        7684
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1624": {
      "fn": "ERC20._transfer",
      "offset": [
        7661,
        7684
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1625": {
      "branch": 54,
      "fn": "ERC20._transfer",
      "offset": [
        7661,
        7684
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1626": {
      "fn": "ERC20._transfer",
      "offset": [
        7653,
        7727
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1627": {
      "fn": "ERC20._transfer",
      "offset": [
        7653,
        7727
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1628": {
      "fn": "ERC20._transfer",
      "offset": [
        7653,
        7727
      ],
      "op": "LT",
      "path": "1"
    },
    "1629": {
      "fn": "ERC20._transfer",
      "offset": [
        7653,
        7727
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1630": {
      "op": "PUSH2",
      "value": "0x679"
    },
    "1633": {
      "op": "JUMPI"
    },
    "1634": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1636": {
      "fn": "ERC20._transfer",
      "offset": [
        7653,
        7727
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1637": {
      "fn": "ERC20._transfer",
      "offset": [
        7653,
        7727
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x461BCD"
    },
    "1641": {
      "fn": "ERC20._transfer",
      "offset": [
        7653,
        7727
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE5"
    },
    "1643": {
      "fn": "ERC20._transfer",
      "offset": [
        7653,
        7727
      ],
      "op": "SHL",
      "path": "1"
    },
    "1644": {
      "fn": "ERC20._transfer",
      "offset": [
        7653,
        7727
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1645": {
      "fn": "ERC20._transfer",
      "offset": [
        7653,
        7727
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1646": {
      "fn": "ERC20._transfer",
      "offset": [
        7653,
        7727
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1648": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7653,
        7727
      ],
      "op": "ADD",
      "path": "1"
    },
    "1649": {
      "fn": "ERC20._transfer",
      "offset": [
        7653,
        7727
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x332"
    },
    "1652": {
      "op": "SWAP1"
    },
    "1653": {
      "op": "PUSH2",
      "value": "0xADB"
    },
    "1656": {
      "op": "JUMP"
    },
    "1657": {
      "op": "JUMPDEST"
    },
    "1658": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1660": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7778
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 31,
      "value": "0x1"
    },
    "1662": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7778
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "1664": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7778
      ],
      "op": "SHL",
      "path": "1"
    },
    "1665": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7770
      ],
      "op": "SUB",
      "path": "1"
    },
    "1666": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7778
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1667": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7778
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1668": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7778
      ],
      "op": "AND",
      "path": "1"
    },
    "1669": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7778
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1671": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7778
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1672": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7778
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1673": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7778
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1674": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7778
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1676": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7778
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1677": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7778
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1678": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7778
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1679": {
      "fn": "ERC20._transfer",
      "offset": [
        7781,
        7803
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1681": {
      "fn": "ERC20._transfer",
      "offset": [
        7781,
        7803
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1682": {
      "fn": "ERC20._transfer",
      "offset": [
        7781,
        7803
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1683": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7803
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1684": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7803
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1685": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7843
      ],
      "op": "DUP6",
      "path": "1",
      "statement": 32
    },
    "1686": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7843
      ],
      "op": "SUB",
      "path": "1"
    },
    "1687": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7843
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1688": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7843
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1689": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7843
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1690": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7843
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1691": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7843
      ],
      "op": "AND",
      "path": "1"
    },
    "1692": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7843
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1693": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7853
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1694": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7853
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1695": {
      "fn": "ERC20._transfer",
      "offset": [
        7781,
        7803
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1696": {
      "fn": "ERC20._transfer",
      "offset": [
        7781,
        7803
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1697": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7770
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1698": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7853
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1699": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7853
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1700": {
      "fn": "ERC20._transfer",
      "offset": [
        7781,
        7803
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1701": {
      "fn": "ERC20._transfer",
      "offset": [
        7781,
        7803
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1702": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7853
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6B0"
    },
    "1705": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7823,
        7853
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1706": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7853
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1707": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7853
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1708": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7853
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD0A"
    },
    "1711": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7853
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1712": {
      "op": "JUMPDEST"
    },
    "1713": {
      "op": "SWAP3"
    },
    "1714": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "POP",
      "path": "1",
      "statement": 33
    },
    "1715": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "POP",
      "path": "1"
    },
    "1716": {
      "op": "DUP2"
    },
    "1717": {
      "op": "SWAP1"
    },
    "1718": {
      "op": "SSTORE"
    },
    "1719": {
      "op": "POP"
    },
    "1720": {
      "op": "DUP3"
    },
    "1721": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1723": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1725": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "1727": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "SHL",
      "path": "1"
    },
    "1728": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "SUB",
      "path": "1"
    },
    "1729": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "AND",
      "path": "1"
    },
    "1730": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1731": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1733": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1735": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "1737": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "SHL",
      "path": "1"
    },
    "1738": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "SUB",
      "path": "1"
    },
    "1739": {
      "fn": "ERC20._transfer",
      "offset": [
        7897,
        7903
      ],
      "op": "AND",
      "path": "1"
    },
    "1740": {
      "fn": "ERC20._transfer",
      "offset": [
        7897,
        7903
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "1773": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1774": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7869,
        7904
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1776": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1777": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6FA"
    },
    "1780": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1781": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1782": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCF3"
    },
    "1785": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1786": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1787": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1789": {
      "fn": "ERC20._transfer",
      "offset": [
        7915,
        7961
      ],
      "op": "MLOAD",
      "path": "1",
      "statement": 34
    },
    "1790": {
      "fn": "ERC20._transfer",
      "offset": [
        7935,
        7941
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1791": {
      "fn": "ERC20._transfer",
      "offset": [
        7943,
        7952
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1792": {
      "fn": "ERC20._transfer",
      "offset": [
        7954,
        7960
      ],
      "op": "SUB",
      "path": "1"
    },
    "1793": {
      "fn": "ERC20._transfer",
      "offset": [
        7915,
        7934
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1794": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7915,
        7961
      ],
      "op": "LOG3",
      "path": "1"
    },
    "1795": {
      "fn": "ERC20._transfer",
      "offset": [
        7915,
        7961
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x70D"
    },
    "1798": {
      "fn": "ERC20._transfer",
      "offset": [
        7255,
        7968
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1799": {
      "fn": "ERC20._transfer",
      "offset": [
        7255,
        7968
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1800": {
      "fn": "ERC20._transfer",
      "offset": [
        7255,
        7968
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1801": {
      "fn": "ERC20._transfer",
      "offset": [
        7255,
        7968
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x444"
    },
    "1804": {
      "fn": "ERC20._transfer",
      "jump": "o",
      "offset": [
        7255,
        7968
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1805": {
      "fn": "ERC20._burn",
      "offset": [
        8953,
        9529
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1806": {
      "op": "POP"
    },
    "1807": {
      "op": "POP"
    },
    "1808": {
      "op": "POP"
    },
    "1809": {
      "op": "POP"
    },
    "1810": {
      "op": "JUMP"
    },
    "1811": {
      "fn": "ERC20._burn",
      "offset": [
        9036,
        9057
      ],
      "op": "JUMPDEST",
      "path": "1",
      "statement": 35
    },
    "1812": {
      "branch": 55,
      "fn": "ERC20._burn",
      "offset": [
        9036,
        9057
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1814": {
      "fn": "ERC20._burn",
      "offset": [
        9028,
        9095
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1816": {
      "fn": "ERC20._burn",
      "offset": [
        9028,
        9095
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "1818": {
      "fn": "ERC20._burn",
      "offset": [
        9028,
        9095
      ],
      "op": "SHL",
      "path": "1"
    },
    "1819": {
      "fn": "ERC20._burn",
      "offset": [
        9028,
        9095
      ],
      "op": "SUB",
      "path": "1"
    },
    "1820": {
      "op": "DUP3"
    },
    "1821": {
      "op": "AND"
    },
    "1822": {
      "op": "PUSH2",
      "value": "0x739"
    },
    "1825": {
      "branch": 55,
      "fn": "ERC20._burn",
      "offset": [
        9028,
        9095
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1826": {
      "fn": "ERC20._burn",
      "offset": [
        9028,
        9095
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1828": {
      "fn": "ERC20._burn",
      "offset": [
        9028,
        9095
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1829": {
      "fn": "ERC20._burn",
      "offset": [
        9028,
        9095
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x461BCD"
    },
    "1833": {
      "fn": "ERC20._burn",
      "offset": [
        9028,
        9095
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE5"
    },
    "1835": {
      "fn": "ERC20._burn",
      "offset": [
        9028,
        9095
      ],
      "op": "SHL",
      "path": "1"
    },
    "1836": {
      "fn": "ERC20._burn",
      "offset": [
        9028,
        9095
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1837": {
      "fn": "ERC20._burn",
      "jump": "i",
      "offset": [
        9028,
        9095
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1838": {
      "fn": "ERC20._burn",
      "offset": [
        9028,
        9095
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1840": {
      "fn": "ERC20._burn",
      "offset": [
        9106,
        9155
      ],
      "op": "ADD",
      "path": "1",
      "statement": 36
    },
    "1841": {
      "fn": "ERC20._burn",
      "offset": [
        9127,
        9134
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x332"
    },
    "1844": {
      "fn": "ERC20._burn",
      "offset": [
        9144,
        9145
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1845": {
      "fn": "ERC20._burn",
      "offset": [
        9148,
        9154
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBAD"
    },
    "1848": {
      "fn": "ERC20._burn",
      "offset": [
        9106,
        9126
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1849": {
      "fn": "ERC20._burn",
      "jump": "i",
      "offset": [
        9106,
        9155
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1850": {
      "fn": "ERC20._burn",
      "offset": [
        9106,
        9155
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x745"
    },
    "1853": {
      "op": "DUP3"
    },
    "1854": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1856": {
      "op": "DUP4"
    },
    "1857": {
      "op": "PUSH2",
      "value": "0x444"
    },
    "1860": {
      "op": "JUMP"
    },
    "1861": {
      "fn": "ERC20._burn",
      "offset": [
        9191,
        9209
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1862": {
      "fn": "ERC20._burn",
      "offset": [
        9191,
        9209
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1864": {
      "fn": "ERC20._burn",
      "offset": [
        9166,
        9188
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1866": {
      "fn": "ERC20._burn",
      "offset": [
        9191,
        9209
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "1868": {
      "fn": "ERC20._burn",
      "offset": [
        9191,
        9209
      ],
      "op": "SHL",
      "path": "1"
    },
    "1869": {
      "fn": "ERC20._burn",
      "offset": [
        9191,
        9209
      ],
      "op": "SUB",
      "path": "1"
    },
    "1870": {
      "fn": "ERC20._burn",
      "offset": [
        9191,
        9209
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1871": {
      "fn": "ERC20._burn",
      "offset": [
        9191,
        9209
      ],
      "op": "AND",
      "path": "1"
    },
    "1872": {
      "fn": "ERC20._burn",
      "offset": [
        9191,
        9209
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1874": {
      "fn": "ERC20._burn",
      "offset": [
        9191,
        9209
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1875": {
      "fn": "ERC20._burn",
      "offset": [
        9191,
        9209
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1876": {
      "fn": "ERC20._burn",
      "offset": [
        9191,
        9209
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1877": {
      "fn": "ERC20._burn",
      "offset": [
        9191,
        9209
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1879": {
      "fn": "ERC20._burn",
      "offset": [
        9191,
        9209
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1880": {
      "fn": "ERC20._burn",
      "offset": [
        9227,
        9251
      ],
      "op": "SWAP1",
      "path": "1",
      "statement": 37
    },
    "1881": {
      "fn": "ERC20._burn",
      "offset": [
        9227,
        9251
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1882": {
      "fn": "ERC20._burn",
      "offset": [
        9227,
        9251
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1884": {
      "branch": 56,
      "fn": "ERC20._burn",
      "offset": [
        9227,
        9251
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1885": {
      "fn": "ERC20._burn",
      "offset": [
        9219,
        9290
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1886": {
      "fn": "ERC20._burn",
      "offset": [
        9219,
        9290
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1887": {
      "fn": "ERC20._burn",
      "offset": [
        9219,
        9290
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1888": {
      "fn": "ERC20._burn",
      "offset": [
        9219,
        9290
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1889": {
      "op": "LT"
    },
    "1890": {
      "op": "ISZERO"
    },
    "1891": {
      "op": "PUSH2",
      "value": "0x77E"
    },
    "1894": {
      "branch": 56,
      "fn": "ERC20._burn",
      "offset": [
        9219,
        9290
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1895": {
      "fn": "ERC20._burn",
      "offset": [
        9219,
        9290
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1897": {
      "fn": "ERC20._burn",
      "offset": [
        9219,
        9290
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1898": {
      "fn": "ERC20._burn",
      "offset": [
        9219,
        9290
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x461BCD"
    },
    "1902": {
      "fn": "ERC20._burn",
      "offset": [
        9219,
        9290
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE5"
    },
    "1904": {
      "fn": "ERC20._burn",
      "offset": [
        9219,
        9290
      ],
      "op": "SHL",
      "path": "1"
    },
    "1905": {
      "fn": "ERC20._burn",
      "offset": [
        9219,
        9290
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1906": {
      "fn": "ERC20._burn",
      "jump": "i",
      "offset": [
        9219,
        9290
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1907": {
      "fn": "ERC20._burn",
      "offset": [
        9219,
        9290
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1909": {
      "op": "ADD"
    },
    "1910": {
      "op": "PUSH2",
      "value": "0x332"
    },
    "1913": {
      "op": "SWAP1"
    },
    "1914": {
      "op": "PUSH2",
      "value": "0xA57"
    },
    "1917": {
      "op": "JUMP"
    },
    "1918": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9342
      ],
      "op": "JUMPDEST",
      "path": "1",
      "statement": 38
    },
    "1919": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9342
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1921": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9333
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1923": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9342
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "1925": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9342
      ],
      "op": "SHL",
      "path": "1"
    },
    "1926": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9342
      ],
      "op": "SUB",
      "path": "1"
    },
    "1927": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9342
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1928": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9342
      ],
      "op": "AND",
      "path": "1"
    },
    "1929": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9342
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1931": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9342
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1932": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9342
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1933": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9342
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1934": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9342
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1936": {
      "fn": "ERC20._burn",
      "offset": [
        9345,
        9368
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1937": {
      "fn": "ERC20._burn",
      "offset": [
        9345,
        9368
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1938": {
      "fn": "ERC20._burn",
      "offset": [
        9345,
        9368
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1939": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9368
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1941": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9368
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1942": {
      "fn": "ERC20._burn",
      "offset": [
        9388,
        9400
      ],
      "op": "KECCAK256",
      "path": "1",
      "statement": 39
    },
    "1943": {
      "fn": "ERC20._burn",
      "offset": [
        9388,
        9410
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1944": {
      "fn": "ERC20._burn",
      "offset": [
        9388,
        9410
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1945": {
      "fn": "ERC20._burn",
      "offset": [
        9345,
        9368
      ],
      "op": "SUB",
      "path": "1"
    },
    "1946": {
      "fn": "ERC20._burn",
      "offset": [
        9345,
        9368
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1947": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9333
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1948": {
      "fn": "ERC20._burn",
      "offset": [
        9388,
        9410
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "1950": {
      "fn": "ERC20._burn",
      "offset": [
        9388,
        9410
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1951": {
      "fn": "ERC20._burn",
      "offset": [
        9345,
        9368
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1952": {
      "fn": "ERC20._burn",
      "offset": [
        9345,
        9368
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1953": {
      "fn": "ERC20._burn",
      "offset": [
        9388,
        9410
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1954": {
      "fn": "ERC20._burn",
      "jump": "i",
      "offset": [
        9388,
        9410
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1955": {
      "fn": "ERC20._burn",
      "offset": [
        9388,
        9410
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7AD"
    },
    "1958": {
      "fn": "ERC20._burn",
      "offset": [
        9388,
        9410
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1959": {
      "fn": "ERC20._burn",
      "offset": [
        9388,
        9410
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1960": {
      "fn": "ERC20._burn",
      "offset": [
        9388,
        9410
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1961": {
      "op": "PUSH2",
      "value": "0xD22"
    },
    "1964": {
      "op": "JUMP"
    },
    "1965": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "JUMPDEST",
      "path": "1",
      "statement": 40
    },
    "1966": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1967": {
      "fn": "ERC20._burn",
      "offset": [
        9452,
        9453
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1968": {
      "fn": "ERC20._burn",
      "offset": [
        9452,
        9453
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1969": {
      "op": "POP"
    },
    "1970": {
      "op": "POP"
    },
    "1971": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1973": {
      "op": "MLOAD"
    },
    "1974": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1976": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1977": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1979": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1981": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "1983": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "SHL",
      "path": "1"
    },
    "1984": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "SUB",
      "path": "1"
    },
    "1985": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1986": {
      "fn": "ERC20._burn",
      "offset": [
        9456,
        9462
      ],
      "op": "AND",
      "path": "1"
    },
    "1987": {
      "fn": "ERC20._burn",
      "offset": [
        9456,
        9462
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1988": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "2021": {
      "fn": "ERC20._burn",
      "jump": "i",
      "offset": [
        9426,
        9463
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2022": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7F0"
    },
    "2025": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2026": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "DUP7",
      "path": "1"
    },
    "2027": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2028": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCF3"
    },
    "2031": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2032": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2033": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2035": {
      "fn": "ERC20._burn",
      "offset": [
        9474,
        9522
      ],
      "op": "MLOAD",
      "path": "1",
      "statement": 41
    },
    "2036": {
      "fn": "ERC20._burn",
      "offset": [
        9494,
        9501
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2037": {
      "fn": "ERC20._burn",
      "offset": [
        9511,
        9512
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2038": {
      "fn": "ERC20._burn",
      "offset": [
        9515,
        9521
      ],
      "op": "SUB",
      "path": "1"
    },
    "2039": {
      "fn": "ERC20._burn",
      "offset": [
        9474,
        9493
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2040": {
      "fn": "ERC20._burn",
      "jump": "i",
      "offset": [
        9474,
        9522
      ],
      "op": "LOG3",
      "path": "1"
    },
    "2041": {
      "fn": "ERC20._mint",
      "offset": [
        8244,
        8633
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x444"
    },
    "2044": {
      "op": "DUP4"
    },
    "2045": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2047": {
      "op": "DUP5"
    },
    "2048": {
      "op": "PUSH2",
      "value": "0x444"
    },
    "2051": {
      "op": "JUMP"
    },
    "2052": {
      "fn": "ERC20._mint",
      "offset": [
        8327,
        8348
      ],
      "op": "JUMPDEST",
      "path": "1",
      "statement": 42
    },
    "2053": {
      "branch": 57,
      "fn": "ERC20._mint",
      "offset": [
        8327,
        8348
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2055": {
      "fn": "ERC20._mint",
      "offset": [
        8319,
        8384
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2057": {
      "fn": "ERC20._mint",
      "offset": [
        8319,
        8384
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "2059": {
      "fn": "ERC20._mint",
      "offset": [
        8319,
        8384
      ],
      "op": "SHL",
      "path": "1"
    },
    "2060": {
      "fn": "ERC20._mint",
      "offset": [
        8319,
        8384
      ],
      "op": "SUB",
      "path": "1"
    },
    "2061": {
      "op": "DUP3"
    },
    "2062": {
      "op": "AND"
    },
    "2063": {
      "op": "PUSH2",
      "value": "0x82A"
    },
    "2066": {
      "branch": 57,
      "fn": "ERC20._mint",
      "offset": [
        8319,
        8384
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2067": {
      "fn": "ERC20._mint",
      "offset": [
        8319,
        8384
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2069": {
      "fn": "ERC20._mint",
      "offset": [
        8319,
        8384
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2070": {
      "fn": "ERC20._mint",
      "offset": [
        8319,
        8384
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x461BCD"
    },
    "2074": {
      "fn": "ERC20._mint",
      "offset": [
        8319,
        8384
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE5"
    },
    "2076": {
      "fn": "ERC20._mint",
      "offset": [
        8319,
        8384
      ],
      "op": "SHL",
      "path": "1"
    },
    "2077": {
      "fn": "ERC20._mint",
      "offset": [
        8319,
        8384
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2078": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8319,
        8384
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2079": {
      "fn": "ERC20._mint",
      "offset": [
        8319,
        8384
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2081": {
      "fn": "ERC20._mint",
      "offset": [
        8395,
        8444
      ],
      "op": "ADD",
      "path": "1",
      "statement": 43
    },
    "2082": {
      "fn": "ERC20._mint",
      "offset": [
        8424,
        8425
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x332"
    },
    "2085": {
      "fn": "ERC20._mint",
      "offset": [
        8428,
        8435
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2086": {
      "fn": "ERC20._mint",
      "offset": [
        8437,
        8443
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCBC"
    },
    "2089": {
      "fn": "ERC20._mint",
      "offset": [
        8395,
        8415
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2090": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8395,
        8444
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2091": {
      "fn": "ERC20._mint",
      "offset": [
        8395,
        8444
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x836"
    },
    "2094": {
      "fn": "ERC20._mint",
      "offset": [
        8471,
        8477
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 44,
      "value": "0x0"
    },
    "2096": {
      "fn": "ERC20._mint",
      "offset": [
        8455,
        8467
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2097": {
      "fn": "ERC20._mint",
      "offset": [
        8455,
        8467
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2098": {
      "fn": "ERC20._mint",
      "offset": [
        8455,
        8477
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x444"
    },
    "2101": {
      "fn": "ERC20._mint",
      "offset": [
        8455,
        8477
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2102": {
      "fn": "ERC20._mint",
      "offset": [
        8455,
        8477
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2103": {
      "fn": "ERC20._mint",
      "offset": [
        8455,
        8477
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2104": {
      "fn": "ERC20._mint",
      "offset": [
        8455,
        8477
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "2106": {
      "fn": "ERC20._mint",
      "offset": [
        8455,
        8477
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2108": {
      "fn": "ERC20._mint",
      "offset": [
        8455,
        8477
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2109": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8455,
        8477
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2110": {
      "fn": "ERC20._mint",
      "offset": [
        8455,
        8477
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2111": {
      "fn": "ERC20._mint",
      "offset": [
        8455,
        8477
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x848"
    },
    "2114": {
      "fn": "ERC20._mint",
      "offset": [
        8455,
        8477
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2115": {
      "fn": "ERC20._mint",
      "offset": [
        8455,
        8477
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2116": {
      "op": "PUSH2",
      "value": "0xD0A"
    },
    "2119": {
      "op": "JUMP"
    },
    "2120": {
      "op": "JUMPDEST"
    },
    "2121": {
      "op": "SWAP1"
    },
    "2122": {
      "op": "SWAP2"
    },
    "2123": {
      "op": "SSTORE"
    },
    "2124": {
      "op": "POP"
    },
    "2125": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8505
      ],
      "op": "POP",
      "path": "1",
      "statement": 45
    },
    "2126": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8505
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2128": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8496
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2130": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8505
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "2132": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8505
      ],
      "op": "SHL",
      "path": "1"
    },
    "2133": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8505
      ],
      "op": "SUB",
      "path": "1"
    },
    "2134": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8505
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2135": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8505
      ],
      "op": "AND",
      "path": "1"
    },
    "2136": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8505
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2138": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8505
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2139": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8505
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2140": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8505
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2141": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8505
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2143": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8515
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2144": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8515
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2145": {
      "fn": "ERC20._mint",
      "offset": [
        8509,
        8515
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2146": {
      "fn": "ERC20._mint",
      "offset": [
        8509,
        8515
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2148": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8496
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2149": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8515
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2150": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8515
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2151": {
      "fn": "ERC20._mint",
      "offset": [
        8509,
        8515
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2152": {
      "fn": "ERC20._mint",
      "offset": [
        8509,
        8515
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2153": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8515
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2154": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8487,
        8515
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2155": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8515
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x875"
    },
    "2158": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8515
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2159": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8515
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2160": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8515
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2161": {
      "op": "PUSH2",
      "value": "0xD0A"
    },
    "2164": {
      "op": "JUMP"
    },
    "2165": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "JUMPDEST",
      "path": "1",
      "statement": 46
    },
    "2166": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2167": {
      "op": "SWAP2"
    },
    "2168": {
      "op": "SSTORE"
    },
    "2169": {
      "op": "POP"
    },
    "2170": {
      "op": "POP"
    },
    "2171": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2173": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2174": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2176": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2178": {
      "fn": "ERC20._mint",
      "offset": [
        8547,
        8548
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "2180": {
      "fn": "ERC20._mint",
      "offset": [
        8547,
        8548
      ],
      "op": "SHL",
      "path": "1"
    },
    "2181": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "SUB",
      "path": "1"
    },
    "2182": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2183": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "AND",
      "path": "1"
    },
    "2184": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2185": {
      "fn": "ERC20._mint",
      "offset": [
        8560,
        8566
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2187": {
      "fn": "ERC20._mint",
      "offset": [
        8560,
        8566
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2188": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "2221": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8530,
        8567
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2222": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8B8"
    },
    "2225": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2226": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2227": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2228": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCF3"
    },
    "2231": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2232": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2233": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2235": {
      "fn": "ERC20._mint",
      "offset": [
        8578,
        8626
      ],
      "op": "MLOAD",
      "path": "1",
      "statement": 47
    },
    "2236": {
      "fn": "ERC20._mint",
      "offset": [
        8606,
        8607
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2237": {
      "fn": "ERC20._mint",
      "offset": [
        8610,
        8617
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2238": {
      "fn": "ERC20._mint",
      "offset": [
        8619,
        8625
      ],
      "op": "SUB",
      "path": "1"
    },
    "2239": {
      "fn": "ERC20._mint",
      "offset": [
        8578,
        8597
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2240": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8578,
        8626
      ],
      "op": "LOG3",
      "path": "1"
    },
    "2241": {
      "fn": "ERC20._mint",
      "offset": [
        8578,
        8626
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8CC"
    },
    "2244": {
      "fn": "ERC20._mint",
      "offset": [
        8244,
        8633
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2246": {
      "fn": "ERC20._mint",
      "offset": [
        8244,
        8633
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2247": {
      "fn": "ERC20._mint",
      "jump": "o",
      "offset": [
        8244,
        8633
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2248": {
      "op": "PUSH2",
      "value": "0x444"
    },
    "2251": {
      "op": "JUMP"
    },
    "2252": {
      "op": "JUMPDEST"
    },
    "2253": {
      "op": "POP"
    },
    "2254": {
      "op": "POP"
    },
    "2255": {
      "op": "JUMP"
    },
    "2256": {
      "op": "JUMPDEST"
    },
    "2257": {
      "op": "DUP1"
    },
    "2258": {
      "op": "CALLDATALOAD"
    },
    "2259": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2261": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2263": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2265": {
      "op": "SHL"
    },
    "2266": {
      "op": "SUB"
    },
    "2267": {
      "op": "DUP2"
    },
    "2268": {
      "op": "AND"
    },
    "2269": {
      "op": "DUP2"
    },
    "2270": {
      "op": "EQ"
    },
    "2271": {
      "op": "PUSH2",
      "value": "0x3F1"
    },
    "2274": {
      "op": "JUMPI"
    },
    "2275": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2277": {
      "op": "DUP1"
    },
    "2278": {
      "op": "REVERT"
    },
    "2279": {
      "op": "JUMPDEST"
    },
    "2280": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2282": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2284": {
      "op": "DUP3"
    },
    "2285": {
      "op": "DUP5"
    },
    "2286": {
      "op": "SUB"
    },
    "2287": {
      "op": "SLT"
    },
    "2288": {
      "op": "ISZERO"
    },
    "2289": {
      "op": "PUSH2",
      "value": "0x8F8"
    },
    "2292": {
      "op": "JUMPI"
    },
    "2293": {
      "op": "DUP1"
    },
    "2294": {
      "jump": "i",
      "op": "DUP2"
    },
    "2295": {
      "op": "REVERT"
    },
    "2296": {
      "op": "JUMPDEST"
    },
    "2297": {
      "op": "PUSH2",
      "value": "0x901"
    },
    "2300": {
      "op": "DUP3"
    },
    "2301": {
      "op": "PUSH2",
      "value": "0x8D0"
    },
    "2304": {
      "op": "JUMP"
    },
    "2305": {
      "jump": "o",
      "op": "JUMPDEST"
    },
    "2306": {
      "op": "SWAP4"
    },
    "2307": {
      "op": "SWAP3"
    },
    "2308": {
      "op": "POP"
    },
    "2309": {
      "op": "POP"
    },
    "2310": {
      "op": "POP"
    },
    "2311": {
      "op": "JUMP"
    },
    "2312": {
      "op": "JUMPDEST"
    },
    "2313": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2315": {
      "op": "DUP1"
    },
    "2316": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2318": {
      "op": "DUP4"
    },
    "2319": {
      "op": "DUP6"
    },
    "2320": {
      "op": "SUB"
    },
    "2321": {
      "op": "SLT"
    },
    "2322": {
      "op": "ISZERO"
    },
    "2323": {
      "op": "PUSH2",
      "value": "0x91A"
    },
    "2326": {
      "op": "JUMPI"
    },
    "2327": {
      "op": "DUP1"
    },
    "2328": {
      "jump": "i",
      "op": "DUP2"
    },
    "2329": {
      "op": "REVERT"
    },
    "2330": {
      "op": "JUMPDEST"
    },
    "2331": {
      "op": "PUSH2",
      "value": "0x923"
    },
    "2334": {
      "op": "DUP4"
    },
    "2335": {
      "op": "PUSH2",
      "value": "0x8D0"
    },
    "2338": {
      "op": "JUMP"
    },
    "2339": {
      "op": "JUMPDEST"
    },
    "2340": {
      "op": "SWAP2"
    },
    "2341": {
      "jump": "i",
      "op": "POP"
    },
    "2342": {
      "op": "PUSH2",
      "value": "0x931"
    },
    "2345": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2347": {
      "op": "DUP5"
    },
    "2348": {
      "op": "ADD"
    },
    "2349": {
      "op": "PUSH2",
      "value": "0x8D0"
    },
    "2352": {
      "op": "JUMP"
    },
    "2353": {
      "op": "JUMPDEST"
    },
    "2354": {
      "op": "SWAP1"
    },
    "2355": {
      "jump": "o",
      "op": "POP"
    },
    "2356": {
      "op": "SWAP3"
    },
    "2357": {
      "op": "POP"
    },
    "2358": {
      "op": "SWAP3"
    },
    "2359": {
      "op": "SWAP1"
    },
    "2360": {
      "op": "POP"
    },
    "2361": {
      "op": "JUMP"
    },
    "2362": {
      "op": "JUMPDEST"
    },
    "2363": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2365": {
      "op": "DUP1"
    },
    "2366": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2368": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2370": {
      "op": "DUP5"
    },
    "2371": {
      "op": "DUP7"
    },
    "2372": {
      "op": "SUB"
    },
    "2373": {
      "op": "SLT"
    },
    "2374": {
      "op": "ISZERO"
    },
    "2375": {
      "op": "PUSH2",
      "value": "0x94E"
    },
    "2378": {
      "op": "JUMPI"
    },
    "2379": {
      "op": "DUP1"
    },
    "2380": {
      "jump": "i",
      "op": "DUP2"
    },
    "2381": {
      "op": "REVERT"
    },
    "2382": {
      "op": "JUMPDEST"
    },
    "2383": {
      "op": "PUSH2",
      "value": "0x957"
    },
    "2386": {
      "op": "DUP5"
    },
    "2387": {
      "op": "PUSH2",
      "value": "0x8D0"
    },
    "2390": {
      "op": "JUMP"
    },
    "2391": {
      "op": "JUMPDEST"
    },
    "2392": {
      "op": "SWAP3"
    },
    "2393": {
      "jump": "i",
      "op": "POP"
    },
    "2394": {
      "op": "PUSH2",
      "value": "0x965"
    },
    "2397": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2399": {
      "op": "DUP6"
    },
    "2400": {
      "op": "ADD"
    },
    "2401": {
      "op": "PUSH2",
      "value": "0x8D0"
    },
    "2404": {
      "op": "JUMP"
    },
    "2405": {
      "op": "JUMPDEST"
    },
    "2406": {
      "op": "SWAP2"
    },
    "2407": {
      "op": "POP"
    },
    "2408": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2410": {
      "op": "DUP5"
    },
    "2411": {
      "op": "ADD"
    },
    "2412": {
      "op": "CALLDATALOAD"
    },
    "2413": {
      "op": "SWAP1"
    },
    "2414": {
      "jump": "o",
      "op": "POP"
    },
    "2415": {
      "op": "SWAP3"
    },
    "2416": {
      "op": "POP"
    },
    "2417": {
      "op": "SWAP3"
    },
    "2418": {
      "op": "POP"
    },
    "2419": {
      "op": "SWAP3"
    },
    "2420": {
      "op": "JUMP"
    },
    "2421": {
      "op": "JUMPDEST"
    },
    "2422": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2424": {
      "op": "DUP1"
    },
    "2425": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2427": {
      "op": "DUP4"
    },
    "2428": {
      "op": "DUP6"
    },
    "2429": {
      "op": "SUB"
    },
    "2430": {
      "op": "SLT"
    },
    "2431": {
      "op": "ISZERO"
    },
    "2432": {
      "op": "PUSH2",
      "value": "0x987"
    },
    "2435": {
      "op": "JUMPI"
    },
    "2436": {
      "op": "DUP2"
    },
    "2437": {
      "jump": "i",
      "op": "DUP3"
    },
    "2438": {
      "op": "REVERT"
    },
    "2439": {
      "op": "JUMPDEST"
    },
    "2440": {
      "op": "PUSH2",
      "value": "0x990"
    },
    "2443": {
      "op": "DUP4"
    },
    "2444": {
      "op": "PUSH2",
      "value": "0x8D0"
    },
    "2447": {
      "op": "JUMP"
    },
    "2448": {
      "op": "JUMPDEST"
    },
    "2449": {
      "op": "SWAP5"
    },
    "2450": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2452": {
      "op": "SWAP4"
    },
    "2453": {
      "op": "SWAP1"
    },
    "2454": {
      "op": "SWAP4"
    },
    "2455": {
      "jump": "o",
      "op": "ADD"
    },
    "2456": {
      "op": "CALLDATALOAD"
    },
    "2457": {
      "op": "SWAP4"
    },
    "2458": {
      "op": "POP"
    },
    "2459": {
      "op": "POP"
    },
    "2460": {
      "op": "POP"
    },
    "2461": {
      "op": "JUMP"
    },
    "2462": {
      "op": "JUMPDEST"
    },
    "2463": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2465": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2467": {
      "op": "DUP3"
    },
    "2468": {
      "op": "DUP5"
    },
    "2469": {
      "op": "SUB"
    },
    "2470": {
      "op": "SLT"
    },
    "2471": {
      "op": "ISZERO"
    },
    "2472": {
      "op": "PUSH2",
      "value": "0x9AF"
    },
    "2475": {
      "op": "JUMPI"
    },
    "2476": {
      "op": "DUP1"
    },
    "2477": {
      "op": "DUP2"
    },
    "2478": {
      "op": "REVERT"
    },
    "2479": {
      "jump": "o",
      "op": "JUMPDEST"
    },
    "2480": {
      "op": "POP"
    },
    "2481": {
      "op": "CALLDATALOAD"
    },
    "2482": {
      "op": "SWAP2"
    },
    "2483": {
      "op": "SWAP1"
    },
    "2484": {
      "op": "POP"
    },
    "2485": {
      "op": "JUMP"
    },
    "2486": {
      "op": "JUMPDEST"
    },
    "2487": {
      "op": "SWAP1"
    },
    "2488": {
      "op": "ISZERO"
    },
    "2489": {
      "jump": "o",
      "op": "ISZERO"
    },
    "2490": {
      "op": "DUP2"
    },
    "2491": {
      "op": "MSTORE"
    },
    "2492": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2494": {
      "op": "ADD"
    },
    "2495": {
      "op": "SWAP1"
    },
    "2496": {
      "op": "JUMP"
    },
    "2497": {
      "op": "JUMPDEST"
    },
    "2498": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2500": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2502": {
      "op": "DUP1"
    },
    "2503": {
      "op": "DUP4"
    },
    "2504": {
      "op": "MSTORE"
    },
    "2505": {
      "op": "DUP4"
    },
    "2506": {
      "op": "MLOAD"
    },
    "2507": {
      "op": "DUP1"
    },
    "2508": {
      "op": "DUP3"
    },
    "2509": {
      "op": "DUP6"
    },
    "2510": {
      "op": "ADD"
    },
    "2511": {
      "op": "MSTORE"
    },
    "2512": {
      "op": "DUP3"
    },
    "2513": {
      "op": "JUMPDEST"
    },
    "2514": {
      "op": "DUP2"
    },
    "2515": {
      "op": "DUP2"
    },
    "2516": {
      "op": "LT"
    },
    "2517": {
      "op": "ISZERO"
    },
    "2518": {
      "op": "PUSH2",
      "value": "0x9ED"
    },
    "2521": {
      "op": "JUMPI"
    },
    "2522": {
      "op": "DUP6"
    },
    "2523": {
      "op": "DUP2"
    },
    "2524": {
      "op": "ADD"
    },
    "2525": {
      "op": "DUP4"
    },
    "2526": {
      "op": "ADD"
    },
    "2527": {
      "op": "MLOAD"
    },
    "2528": {
      "op": "DUP6"
    },
    "2529": {
      "op": "DUP3"
    },
    "2530": {
      "op": "ADD"
    },
    "2531": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2533": {
      "op": "ADD"
    },
    "2534": {
      "op": "MSTORE"
    },
    "2535": {
      "op": "DUP3"
    },
    "2536": {
      "op": "ADD"
    },
    "2537": {
      "op": "PUSH2",
      "value": "0x9D1"
    },
    "2540": {
      "op": "JUMP"
    },
    "2541": {
      "op": "JUMPDEST"
    },
    "2542": {
      "op": "DUP2"
    },
    "2543": {
      "op": "DUP2"
    },
    "2544": {
      "op": "GT"
    },
    "2545": {
      "op": "ISZERO"
    },
    "2546": {
      "op": "PUSH2",
      "value": "0x9FE"
    },
    "2549": {
      "op": "JUMPI"
    },
    "2550": {
      "op": "DUP4"
    },
    "2551": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2553": {
      "op": "DUP4"
    },
    "2554": {
      "op": "DUP8"
    },
    "2555": {
      "op": "ADD"
    },
    "2556": {
      "op": "ADD"
    },
    "2557": {
      "op": "MSTORE"
    },
    "2558": {
      "op": "JUMPDEST"
    },
    "2559": {
      "op": "POP"
    },
    "2560": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2562": {
      "op": "ADD"
    },
    "2563": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2565": {
      "op": "NOT"
    },
    "2566": {
      "op": "AND"
    },
    "2567": {
      "op": "SWAP3"
    },
    "2568": {
      "op": "SWAP1"
    },
    "2569": {
      "op": "SWAP3"
    },
    "2570": {
      "op": "ADD"
    },
    "2571": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2573": {
      "jump": "o",
      "op": "ADD"
    },
    "2574": {
      "op": "SWAP4"
    },
    "2575": {
      "op": "SWAP3"
    },
    "2576": {
      "op": "POP"
    },
    "2577": {
      "op": "POP"
    },
    "2578": {
      "op": "POP"
    },
    "2579": {
      "op": "JUMP"
    },
    "2580": {
      "op": "JUMPDEST"
    },
    "2581": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2583": {
      "op": "DUP1"
    },
    "2584": {
      "op": "DUP3"
    },
    "2585": {
      "op": "MSTORE"
    },
    "2586": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "2588": {
      "op": "SWAP1"
    },
    "2589": {
      "op": "DUP3"
    },
    "2590": {
      "op": "ADD"
    },
    "2591": {
      "op": "MSTORE"
    },
    "2592": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220746F20746865207A65726F2061646472"
    },
    "2625": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2627": {
      "op": "DUP3"
    },
    "2628": {
      "op": "ADD"
    },
    "2629": {
      "op": "MSTORE"
    },
    "2630": {
      "op": "PUSH3",
      "value": "0x657373"
    },
    "2634": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "2636": {
      "op": "SHL"
    },
    "2637": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2639": {
      "jump": "o",
      "op": "DUP3"
    },
    "2640": {
      "op": "ADD"
    },
    "2641": {
      "op": "MSTORE"
    },
    "2642": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2644": {
      "op": "ADD"
    },
    "2645": {
      "op": "SWAP1"
    },
    "2646": {
      "op": "JUMP"
    },
    "2647": {
      "op": "JUMPDEST"
    },
    "2648": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2650": {
      "op": "DUP1"
    },
    "2651": {
      "op": "DUP3"
    },
    "2652": {
      "op": "MSTORE"
    },
    "2653": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "2655": {
      "op": "SWAP1"
    },
    "2656": {
      "op": "DUP3"
    },
    "2657": {
      "op": "ADD"
    },
    "2658": {
      "op": "MSTORE"
    },
    "2659": {
      "op": "PUSH32",
      "value": "0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E"
    },
    "2692": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2694": {
      "op": "DUP3"
    },
    "2695": {
      "op": "ADD"
    },
    "2696": {
      "op": "MSTORE"
    },
    "2697": {
      "op": "PUSH2",
      "value": "0x6365"
    },
    "2700": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "2702": {
      "op": "SHL"
    },
    "2703": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2705": {
      "jump": "o",
      "op": "DUP3"
    },
    "2706": {
      "op": "ADD"
    },
    "2707": {
      "op": "MSTORE"
    },
    "2708": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2710": {
      "op": "ADD"
    },
    "2711": {
      "op": "SWAP1"
    },
    "2712": {
      "op": "JUMP"
    },
    "2713": {
      "op": "JUMPDEST"
    },
    "2714": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2716": {
      "op": "DUP1"
    },
    "2717": {
      "op": "DUP3"
    },
    "2718": {
      "op": "MSTORE"
    },
    "2719": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "2721": {
      "op": "SWAP1"
    },
    "2722": {
      "op": "DUP3"
    },
    "2723": {
      "op": "ADD"
    },
    "2724": {
      "op": "MSTORE"
    },
    "2725": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F766520746F20746865207A65726F206164647265"
    },
    "2758": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2760": {
      "op": "DUP3"
    },
    "2761": {
      "op": "ADD"
    },
    "2762": {
      "op": "MSTORE"
    },
    "2763": {
      "op": "PUSH2",
      "value": "0x7373"
    },
    "2766": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "2768": {
      "op": "SHL"
    },
    "2769": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2771": {
      "jump": "o",
      "op": "DUP3"
    },
    "2772": {
      "op": "ADD"
    },
    "2773": {
      "op": "MSTORE"
    },
    "2774": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2776": {
      "op": "ADD"
    },
    "2777": {
      "op": "SWAP1"
    },
    "2778": {
      "op": "JUMP"
    },
    "2779": {
      "op": "JUMPDEST"
    },
    "2780": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2782": {
      "op": "DUP1"
    },
    "2783": {
      "op": "DUP3"
    },
    "2784": {
      "op": "MSTORE"
    },
    "2785": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "2787": {
      "op": "SWAP1"
    },
    "2788": {
      "op": "DUP3"
    },
    "2789": {
      "op": "ADD"
    },
    "2790": {
      "op": "MSTORE"
    },
    "2791": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732062"
    },
    "2824": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2826": {
      "op": "DUP3"
    },
    "2827": {
      "op": "ADD"
    },
    "2828": {
      "op": "MSTORE"
    },
    "2829": {
      "op": "PUSH6",
      "value": "0x616C616E6365"
    },
    "2836": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "2838": {
      "op": "SHL"
    },
    "2839": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2841": {
      "jump": "o",
      "op": "DUP3"
    },
    "2842": {
      "op": "ADD"
    },
    "2843": {
      "op": "MSTORE"
    },
    "2844": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2846": {
      "op": "ADD"
    },
    "2847": {
      "op": "SWAP1"
    },
    "2848": {
      "op": "JUMP"
    },
    "2849": {
      "op": "JUMPDEST"
    },
    "2850": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2852": {
      "op": "DUP1"
    },
    "2853": {
      "op": "DUP3"
    },
    "2854": {
      "op": "MSTORE"
    },
    "2855": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "2857": {
      "op": "SWAP1"
    },
    "2858": {
      "op": "DUP3"
    },
    "2859": {
      "op": "ADD"
    },
    "2860": {
      "op": "MSTORE"
    },
    "2861": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732061"
    },
    "2894": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2896": {
      "op": "DUP3"
    },
    "2897": {
      "op": "ADD"
    },
    "2898": {
      "op": "MSTORE"
    },
    "2899": {
      "op": "PUSH8",
      "value": "0x6C6C6F77616E6365"
    },
    "2908": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "2910": {
      "op": "SHL"
    },
    "2911": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2913": {
      "jump": "o",
      "op": "DUP3"
    },
    "2914": {
      "op": "ADD"
    },
    "2915": {
      "op": "MSTORE"
    },
    "2916": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2918": {
      "op": "ADD"
    },
    "2919": {
      "op": "SWAP1"
    },
    "2920": {
      "op": "JUMP"
    },
    "2921": {
      "op": "JUMPDEST"
    },
    "2922": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2924": {
      "op": "DUP1"
    },
    "2925": {
      "op": "DUP3"
    },
    "2926": {
      "op": "MSTORE"
    },
    "2927": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2929": {
      "op": "SWAP1"
    },
    "2930": {
      "op": "DUP3"
    },
    "2931": {
      "op": "ADD"
    },
    "2932": {
      "op": "MSTORE"
    },
    "2933": {
      "op": "PUSH32",
      "value": "0x45524332303A206275726E20616D6F756E74206578636565647320616C6C6F77"
    },
    "2966": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2968": {
      "op": "DUP3"
    },
    "2969": {
      "op": "ADD"
    },
    "2970": {
      "op": "MSTORE"
    },
    "2971": {
      "op": "PUSH4",
      "value": "0x616E6365"
    },
    "2976": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2978": {
      "op": "SHL"
    },
    "2979": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2981": {
      "jump": "o",
      "op": "DUP3"
    },
    "2982": {
      "op": "ADD"
    },
    "2983": {
      "op": "MSTORE"
    },
    "2984": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2986": {
      "op": "ADD"
    },
    "2987": {
      "op": "SWAP1"
    },
    "2988": {
      "op": "JUMP"
    },
    "2989": {
      "op": "JUMPDEST"
    },
    "2990": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2992": {
      "op": "DUP1"
    },
    "2993": {
      "op": "DUP3"
    },
    "2994": {
      "op": "MSTORE"
    },
    "2995": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "2997": {
      "op": "SWAP1"
    },
    "2998": {
      "op": "DUP3"
    },
    "2999": {
      "op": "ADD"
    },
    "3000": {
      "op": "MSTORE"
    },
    "3001": {
      "op": "PUSH32",
      "value": "0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573"
    },
    "3034": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3036": {
      "op": "DUP3"
    },
    "3037": {
      "op": "ADD"
    },
    "3038": {
      "op": "MSTORE"
    },
    "3039": {
      "op": "PUSH1",
      "value": "0x73"
    },
    "3041": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "3043": {
      "op": "SHL"
    },
    "3044": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3046": {
      "jump": "o",
      "op": "DUP3"
    },
    "3047": {
      "op": "ADD"
    },
    "3048": {
      "op": "MSTORE"
    },
    "3049": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3051": {
      "op": "ADD"
    },
    "3052": {
      "op": "SWAP1"
    },
    "3053": {
      "op": "JUMP"
    },
    "3054": {
      "op": "JUMPDEST"
    },
    "3055": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3057": {
      "op": "DUP1"
    },
    "3058": {
      "op": "DUP3"
    },
    "3059": {
      "op": "MSTORE"
    },
    "3060": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "3062": {
      "op": "SWAP1"
    },
    "3063": {
      "op": "DUP3"
    },
    "3064": {
      "op": "ADD"
    },
    "3065": {
      "op": "MSTORE"
    },
    "3066": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E736665722066726F6D20746865207A65726F206164"
    },
    "3099": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3101": {
      "op": "DUP3"
    },
    "3102": {
      "op": "ADD"
    },
    "3103": {
      "op": "MSTORE"
    },
    "3104": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "3110": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "3112": {
      "op": "SHL"
    },
    "3113": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3115": {
      "jump": "o",
      "op": "DUP3"
    },
    "3116": {
      "op": "ADD"
    },
    "3117": {
      "op": "MSTORE"
    },
    "3118": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3120": {
      "op": "ADD"
    },
    "3121": {
      "op": "SWAP1"
    },
    "3122": {
      "op": "JUMP"
    },
    "3123": {
      "op": "JUMPDEST"
    },
    "3124": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3126": {
      "op": "DUP1"
    },
    "3127": {
      "op": "DUP3"
    },
    "3128": {
      "op": "MSTORE"
    },
    "3129": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3131": {
      "op": "SWAP1"
    },
    "3132": {
      "op": "DUP3"
    },
    "3133": {
      "op": "ADD"
    },
    "3134": {
      "op": "MSTORE"
    },
    "3135": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
    },
    "3168": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3170": {
      "op": "DUP3"
    },
    "3171": {
      "op": "ADD"
    },
    "3172": {
      "op": "MSTORE"
    },
    "3173": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "3178": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3180": {
      "op": "SHL"
    },
    "3181": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3183": {
      "jump": "o",
      "op": "DUP3"
    },
    "3184": {
      "op": "ADD"
    },
    "3185": {
      "op": "MSTORE"
    },
    "3186": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3188": {
      "op": "ADD"
    },
    "3189": {
      "op": "SWAP1"
    },
    "3190": {
      "op": "JUMP"
    },
    "3191": {
      "op": "JUMPDEST"
    },
    "3192": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3194": {
      "op": "DUP1"
    },
    "3195": {
      "op": "DUP3"
    },
    "3196": {
      "op": "MSTORE"
    },
    "3197": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "3199": {
      "op": "SWAP1"
    },
    "3200": {
      "op": "DUP3"
    },
    "3201": {
      "op": "ADD"
    },
    "3202": {
      "op": "MSTORE"
    },
    "3203": {
      "op": "PUSH32",
      "value": "0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
    },
    "3236": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3238": {
      "op": "DUP3"
    },
    "3239": {
      "op": "ADD"
    },
    "3240": {
      "op": "MSTORE"
    },
    "3241": {
      "op": "PUSH5",
      "value": "0x207A65726F"
    },
    "3247": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "3249": {
      "op": "SHL"
    },
    "3250": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3252": {
      "jump": "o",
      "op": "DUP3"
    },
    "3253": {
      "op": "ADD"
    },
    "3254": {
      "op": "MSTORE"
    },
    "3255": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3257": {
      "op": "ADD"
    },
    "3258": {
      "op": "SWAP1"
    },
    "3259": {
      "op": "JUMP"
    },
    "3260": {
      "op": "JUMPDEST"
    },
    "3261": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3263": {
      "op": "DUP1"
    },
    "3264": {
      "op": "DUP3"
    },
    "3265": {
      "op": "MSTORE"
    },
    "3266": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3268": {
      "op": "SWAP1"
    },
    "3269": {
      "op": "DUP3"
    },
    "3270": {
      "op": "ADD"
    },
    "3271": {
      "op": "MSTORE"
    },
    "3272": {
      "op": "PUSH32",
      "value": "0x45524332303A206D696E7420746F20746865207A65726F206164647265737300"
    },
    "3305": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3307": {
      "jump": "o",
      "op": "DUP3"
    },
    "3308": {
      "op": "ADD"
    },
    "3309": {
      "op": "MSTORE"
    },
    "3310": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3312": {
      "op": "ADD"
    },
    "3313": {
      "op": "SWAP1"
    },
    "3314": {
      "op": "JUMP"
    },
    "3315": {
      "op": "JUMPDEST"
    },
    "3316": {
      "jump": "o",
      "op": "SWAP1"
    },
    "3317": {
      "op": "DUP2"
    },
    "3318": {
      "op": "MSTORE"
    },
    "3319": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3321": {
      "op": "ADD"
    },
    "3322": {
      "op": "SWAP1"
    },
    "3323": {
      "op": "JUMP"
    },
    "3324": {
      "op": "JUMPDEST"
    },
    "3325": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3327": {
      "op": "SWAP2"
    },
    "3328": {
      "op": "SWAP1"
    },
    "3329": {
      "op": "SWAP2"
    },
    "3330": {
      "jump": "o",
      "op": "AND"
    },
    "3331": {
      "op": "DUP2"
    },
    "3332": {
      "op": "MSTORE"
    },
    "3333": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3335": {
      "op": "ADD"
    },
    "3336": {
      "op": "SWAP1"
    },
    "3337": {
      "op": "JUMP"
    },
    "3338": {
      "op": "JUMPDEST"
    },
    "3339": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3341": {
      "op": "DUP3"
    },
    "3342": {
      "op": "NOT"
    },
    "3343": {
      "op": "DUP3"
    },
    "3344": {
      "jump": "i",
      "op": "GT"
    },
    "3345": {
      "op": "ISZERO"
    },
    "3346": {
      "op": "PUSH2",
      "value": "0xD1D"
    },
    "3349": {
      "op": "JUMPI"
    },
    "3350": {
      "op": "PUSH2",
      "value": "0xD1D"
    },
    "3353": {
      "jump": "o",
      "op": "PUSH2",
      "value": "0xD74"
    },
    "3356": {
      "op": "JUMP"
    },
    "3357": {
      "op": "JUMPDEST"
    },
    "3358": {
      "op": "POP"
    },
    "3359": {
      "op": "ADD"
    },
    "3360": {
      "op": "SWAP1"
    },
    "3361": {
      "op": "JUMP"
    },
    "3362": {
      "op": "JUMPDEST"
    },
    "3363": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3365": {
      "op": "DUP3"
    },
    "3366": {
      "op": "DUP3"
    },
    "3367": {
      "jump": "i",
      "op": "LT"
    },
    "3368": {
      "op": "ISZERO"
    },
    "3369": {
      "op": "PUSH2",
      "value": "0xD34"
    },
    "3372": {
      "op": "JUMPI"
    },
    "3373": {
      "op": "PUSH2",
      "value": "0xD34"
    },
    "3376": {
      "jump": "o",
      "op": "PUSH2",
      "value": "0xD74"
    },
    "3379": {
      "op": "JUMP"
    },
    "3380": {
      "op": "JUMPDEST"
    },
    "3381": {
      "op": "POP"
    },
    "3382": {
      "op": "SUB"
    },
    "3383": {
      "op": "SWAP1"
    },
    "3384": {
      "op": "JUMP"
    },
    "3385": {
      "op": "JUMPDEST"
    },
    "3386": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3388": {
      "op": "DUP2"
    },
    "3389": {
      "op": "DIV"
    },
    "3390": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3392": {
      "op": "DUP3"
    },
    "3393": {
      "op": "AND"
    },
    "3394": {
      "op": "DUP1"
    },
    "3395": {
      "op": "PUSH2",
      "value": "0xD4D"
    },
    "3398": {
      "op": "JUMPI"
    },
    "3399": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "3401": {
      "op": "DUP3"
    },
    "3402": {
      "op": "AND"
    },
    "3403": {
      "op": "SWAP2"
    },
    "3404": {
      "op": "POP"
    },
    "3405": {
      "op": "JUMPDEST"
    },
    "3406": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3408": {
      "op": "DUP3"
    },
    "3409": {
      "op": "LT"
    },
    "3410": {
      "op": "DUP2"
    },
    "3411": {
      "op": "EQ"
    },
    "3412": {
      "op": "ISZERO"
    },
    "3413": {
      "op": "PUSH2",
      "value": "0xD6E"
    },
    "3416": {
      "op": "JUMPI"
    },
    "3417": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3422": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3424": {
      "op": "SHL"
    },
    "3425": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3427": {
      "op": "MSTORE"
    },
    "3428": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "3430": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3432": {
      "op": "MSTORE"
    },
    "3433": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3435": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3437": {
      "jump": "o",
      "op": "REVERT"
    },
    "3438": {
      "op": "JUMPDEST"
    },
    "3439": {
      "op": "POP"
    },
    "3440": {
      "op": "SWAP2"
    },
    "3441": {
      "op": "SWAP1"
    },
    "3442": {
      "op": "POP"
    },
    "3443": {
      "op": "JUMP"
    },
    "3444": {
      "op": "JUMPDEST"
    },
    "3445": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3450": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3452": {
      "op": "SHL"
    },
    "3453": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3455": {
      "op": "MSTORE"
    },
    "3456": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "3458": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3460": {
      "op": "MSTORE"
    },
    "3461": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3463": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3465": {
      "op": "REVERT"
    }
  },
  "sha1": "b7ec58e9b81b0754a67d4141a766f1f5216c272a",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport  {ERC20} from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport  {ERC20Burnable} from \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n\ninterface IERC20 {\n    function transfer(address recipient, uint256 amount) external returns (bool);\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n    function approve(address spender, uint256 amount) external returns (bool);\n}\n\n\ncontract BTCUP is  ERC20, ERC20Burnable {\n    address parentAddress;\n\n    constructor(address _parentAddress) ERC20(\"Bitcoin Up\", \"BTCUP\") {\n        parentAddress = _parentAddress;\n    }\n\n    function mint(uint256 quantity) public onlyParent {\n        _mint(tx.origin, quantity);\n    }\n\n    function burn(uint256 quantity) public override onlyParent {\n        burnFrom(tx.origin, quantity);\n    }\n\n    function decimals() public view override returns (uint8) {\n        return 6;\n    }\n\n    modifier onlyParent {\n        require(msg.sender == parentAddress);\n        _;\n    }\n}\n\ncontract BTCDOWN is ERC20, ERC20Burnable {\n    address parentAddress;\n\n    constructor(address _parentAddress) ERC20(\"Bitcoin Down\", \"BTCDOWN\") {\n        parentAddress = _parentAddress;\n    }\n\n    function mint(uint256 quantity) public onlyParent {\n        _mint(tx.origin, quantity);\n    }\n\n    function burn(uint256 quantity) public override onlyParent {\n        burnFrom(tx.origin, quantity);\n    }\n\n    function decimals() public view override returns (uint8) {\n        return 6;\n    }\n\n    modifier onlyParent {\n        require(msg.sender == parentAddress);\n        _;\n    }\n}\n\ncontract LeveragedTrading is Ownable {\n    using SafeMath for uint256;\n\n    uint256 public priceBtcUp = 10 ** 6;\n    uint256 public priceBtcDown = 10 ** 6;        // 6 decimals\n\n    uint256 public collateralBtcUp = 0;          //6 decimals\n    uint256 public collateralBtcDown = 0;\n\n    uint256 public amountBtcUp = 0;           // 6 decimals\n    uint256 public amountBtcDown = 0;         // 6 decimals\n\n    uint256 public lastBtcPrice = 0;       // 8 decimals, chainlink conventions\n\n    bool public poolIsInitiated = false;\n\n    address addressUsdc = 0xb7a4F3E9097C08dA09517b5aB877F7a917224ede;  // <- Kovan  //0xeb8f08a975Ab53E34D8a0330E0D34de942C95926;\n    address addressBtcUSDFeed =  0x6135b13325bfC4B00278B4abC5e20bbce2D6580e; // <- Kovan          // 0xECe365B379E1dD183B20fc5f022230C044d51404;\n\n    BTCUP btcUp;\n    BTCDOWN btcDown;\n\n    function initiatePool(uint256 amountUsdc) public onlyOwner {\n        require(!poolIsInitiated, \"The pool was already initiated.\");\n\n        btcUp = new BTCUP(address(this));\n        btcDown = new BTCDOWN(address(this));\n\n        issueBtcUp(amountUsdc.div(2));\n        issueBtcDown(amountUsdc.div(2));\n\n        poolIsInitiated = true;\n    }\n\n    function issueBtcUp(uint256 amountUsdc) public {\n        rebalanceLeveragedTokens();\n        \n        priceBtcUp = getBtcUpPrice();\n        uint256 amountLeveragedTokens = amountUsdc.mul(10 ** 6).div(priceBtcUp);\n\n        btcUp.mint(amountLeveragedTokens);\n        amountBtcUp = amountBtcUp.add(amountLeveragedTokens);\n        collateralBtcUp = collateralBtcUp.add(amountUsdc);\n\n        IERC20 usdc = IERC20(addressUsdc);\n        require(usdc.transferFrom(msg.sender, address(this), amountUsdc), \"You don't have enough USDC.\");\n    }\n\n    function issueBtcDown(uint256 amountUsdc) public {\n        rebalanceLeveragedTokens();\n        \n        priceBtcDown = getBtcDownPrice();\n        uint256 amountLeveragedTokens = amountUsdc.mul(10 ** 6).div(priceBtcDown);\n\n        btcDown.mint(amountLeveragedTokens);\n        amountBtcDown = amountBtcDown.add(amountLeveragedTokens);\n        collateralBtcDown = collateralBtcDown.add(amountUsdc);\n\n        IERC20 usdc = IERC20(addressUsdc);\n        require(usdc.transferFrom(msg.sender, address(this), amountUsdc), \"You don't have enough USDC.\");\n    }\n\n    function redeemBtcUp(uint256 amountLeveragedTokens) public {\n        rebalanceLeveragedTokens();\n        btcUp.burn(amountLeveragedTokens);\n\n        priceBtcUp = getBtcUpPrice();\n        uint256 amountUsdc = amountLeveragedTokens.mul(priceBtcUp).div(10 ** 6);\n\n        amountBtcUp = amountBtcUp.sub(amountLeveragedTokens);\n        collateralBtcUp = collateralBtcUp.sub(amountUsdc);\n\n        IERC20 usdc = IERC20(addressUsdc);\n        assert(usdc.transfer(msg.sender, amountUsdc));\n    }\n\n    function redeemBtcDown(uint256 amountLeveragedTokens) public {\n        rebalanceLeveragedTokens();\n        btcDown.burn(amountLeveragedTokens);\n\n        priceBtcDown = getBtcDownPrice();\n        uint256 amountUsdc = amountLeveragedTokens.mul(priceBtcDown).div(10 ** 6);\n        \n        amountBtcDown = amountBtcDown.sub(amountLeveragedTokens);\n        collateralBtcDown = collateralBtcDown.sub(amountUsdc);\n\n        IERC20 usdc = IERC20(addressUsdc);\n        assert(usdc.transfer(msg.sender,  amountUsdc));\n    }\n\n    function rebalanceLeveragedTokens() public {\n        uint256 btcPrice = getBtcPrice();\n        if ((collateralBtcUp > 0) && (collateralBtcDown > 0)) {\n            uint256 rebalanceAmount = getRebalanceAmount(btcPrice);\n            if (getSign(btcPrice) > 0) {\n                collateralBtcUp = collateralBtcUp.add(rebalanceAmount);\n                collateralBtcDown = collateralBtcDown.sub(rebalanceAmount);\n            }\n\n            else {\n                collateralBtcUp = collateralBtcUp.sub(rebalanceAmount);\n                collateralBtcDown = collateralBtcDown.add(rebalanceAmount);\n            }\n\n        }\n\n        lastBtcPrice = btcPrice;\n    }\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    function getSign(uint256 btcPrice) internal view returns (int256) {\n        if (btcPrice > lastBtcPrice) {\n            return 1;\n        }\n        else {\n            return -1;\n        }\n    }\n \n    function getRebalanceAmount(uint256 priceBtc) internal view returns (uint256) {\n        uint256 priceDiff = getPriceDiff(priceBtc);\n\n        return min(collateralBtcUp, collateralBtcDown).mul(L(priceDiff)).div(10 ** 6);\n    }\n\n// getBtcUpPrice() 6 decimals\n    function getBtcUpPrice() public view returns (uint256) {\n        return amountBtcUp == 0 ?  priceBtcUp : collateralBtcUp.mul(10 ** 6).div(amountBtcUp);\n    }\n\n// getBtcDownPrice() 6 decimals\n    function getBtcDownPrice() public view returns (uint256) {//6 decimals\n        return amountBtcDown == 0 ?  priceBtcDown : collateralBtcDown.mul(10 ** 6).div(amountBtcDown);\n    }\n\n// get the price of our asset with 8 decimals\n    function getBtcPrice() public view returns (uint256) {\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(addressBtcUSDFeed);\n        (,int256 answer,,,) = priceFeed.latestRoundData();\n\n         return uint256(answer);             // we call chainlink oracle to get the price of the asset\n         \n    }\n    \n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a <= b ? a : b;\n    }\n\n    function L(uint256 x) internal pure returns (uint256) {            //6  decimals\n\n        uint256 denom = 9 * (x ** 2 / 10 ** 6)  + 3 * x + 10 ** 6;\n        uint256 num = 10 ** 12;\n\n        return 10 ** 6 - num / denom;\n    }\n\n    function getPriceDiff(uint256 btcPrice) internal view returns (uint256) {     //6 decimals\n        if (btcPrice > lastBtcPrice) {\n            return btcPrice.mul(10 ** 6).div(lastBtcPrice).sub(10 ** 6);\n        }\n\n        else {\n            return lastBtcPrice.mul(10 ** 6).div(btcPrice).sub(10 ** 6);\n        }\n\n    }\n\n    function getBtcupBalance() public view returns(uint256) {\n        return btcUp.balanceOf(msg.sender);\n    }\n\n    function getBtcdownBalance() public view returns(uint256) {\n        return btcDown.balanceOf(msg.sender);\n    }\n\n}\n\n",
  "sourceMap": "1278:581:8:-:0;;;1353:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1896:113:1;;;;;;;;;;;-1:-1:-1;;;1896:113:1;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1896:113:1;;;;1962:13;;1896:113;;;1962:13;;:5;;:13;:::i;:::-;-1:-1:-1;1985:17:1;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;1432:13:8::1;:30:::0;;-1:-1:-1;;;;;;1432:30:8::1;-1:-1:-1::0;;;;;1432:30:8;;;::::1;::::0;;;::::1;::::0;;;-1:-1:-1;1278:581:8;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1278:581:8;;;-1:-1:-1;1278:581:8;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:310:9;;137:2;125:9;116:7;112:23;108:32;105:2;;;158:6;150;143:22;105:2;189:16;;-1:-1:-1;;;;;234:31:9;;224:42;;214:2;;285:6;277;270:22;214:2;313:5;95:229;-1:-1:-1;;;95:229:9:o;329:380::-;414:1;404:12;;461:1;451:12;;;472:2;;526:4;518:6;514:17;504:27;;472:2;579;571:6;568:14;548:18;545:38;542:2;;;625:10;620:3;616:20;613:1;606:31;660:4;657:1;650:15;688:4;685:1;678:15;542:2;;384:325;;;:::o;:::-;1278:581:8;;;;;;",
  "sourcePath": "contracts/LeveragedTrading.sol",
  "type": "contract"
}